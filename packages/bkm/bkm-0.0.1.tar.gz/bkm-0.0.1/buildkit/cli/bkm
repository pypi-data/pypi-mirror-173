#! python
import os
import json
import typer
from loguru import logger
from typing import Optional

from buildkit.pkg.builder import Builder
from buildkit.pkg.runner import Runner

app = typer.Typer()

@app.command()
def build(src_path: Optional[str] = './', manifest: Optional[str] = 'build.json'):
    """
    Build the image from manifest
    """
    src_path = os.path.join(src_path, "build.json")
    logger.info(f"Source Code Path: {src_path}")

    with open(src_path, 'r') as fp:
        config = json.load(fp)

    builder = Builder()
    builder.build(config)

@app.command()
def run(command: str, image_path: Optional[str], manifest: Optional[str] = 'build.json'):
    """
    Run a specific command defined in bkm.json
    """
    if command.strip() == "":
        logger.error("Please provide a command to run")
        return
    src_path="./"
    src_path = os.path.join(src_path, manifest)
    with open(src_path, 'r') as fp:
        config = json.load(fp)
    runner = Runner()
    if image_path is None:
        image_path = "./"
    runner.run_command(config, command=command, image_path=image_path)

@app.command()
def run_pipeline(image_path: Optional[str] = './', webhook: Optional[str] = '', manifest: Optional[str] = 'build.json'):
    """
    Run the pipeline defined in manifest file
    """
    src_path = os.path.abspath(os.path.join(".", manifest))
    logger.info(f"Source Code Path: {src_path}")
    with open(src_path, 'r') as fp:
        config = json.load(fp)
    runner = Runner()
    runner.run_pipeline(config, image_path=image_path, webhook=webhook)

@app.command()
def pull(src_path: Optional[str] = './', manifest: Optional[str] = 'build.json'):
    """
    Pull the image from manifest file
    """
    src_path = os.path.join(src_path, "build.json")
    logger.info(f"Source Code Path: {src_path}")

    with open(src_path, 'r') as fp:
        config = json.load(fp)

    builder = Builder()
    builder.download(config)

if __name__ == "__main__":
    app()
