
---

##
## url https://developer-docs.citrix.com/projects/netscaler-nitro-api/en/12.0/statistics/protocol/protocolhttp/
### Statistics for protocolhttp.
#
- name: protocolhttp
  actions:
    - name: collect elements
      url: /stat/protocolhttp
      var_name: _root

    - name: proceed elements
      metric_prefix: citrixadc_http
      metrics: 
        - name: tot_requests
          help: Total number of HTTP requests received.
          type: counter
          value: "{{ protocolhttp.httptotrequests }}"

        - name: tot_responses
          help: Total number of HTTP responses sent.
          type: counter
          value: "{{ protocolhttp.httptotresponses }}"

        - name: tot_posts
          help: Total number of HTTP requests received with the POST method.
          type: counter
          value: "{{ protocolhttp.httptotposts }}"

        - name: tot_gets
          help: Total number of HTTP requests received with the GET method.
          type: counter
          value: "{{ protocolhttp.httptotgets }}"

        - name: tot_others
          help: Total number of HTTP requests received with methods other than GET and POST.
          type: counter
          value: "{{ protocolhttp.httptotothers }}"

        - name: tot_spdy_streams
          help: Total number of requests received over SPDYv2 and SPDYv3
          type: counter
          value: "{{ protocolhttp.spdytotstreams }}"

        - name: spdy_v2_streams
          help: Total number of requests received over SPDYv2
          type: counter
          value: "{{ protocolhttp.spdyv2totstreams }}"

        - name: spdy_v3_streams
          help: Total number of requests received over SPDYv3
          type: counter
          value: "{{ protocolhttp.spdyv3totstreams }}"

        - name: tot_rx_request_bytes
          help: Total number of bytes of HTTP request data received.
          type: counter
          value: "{{ protocolhttp.httptotrxrequestbytes }}"

        - name: tot_rx_response_bytes
          help: Total number of bytes of HTTP response data received.
          type: counter
          value: "{{ protocolhttp.httptotrxresponsebytes }}"

        - name: tot_tx_request_bytes
          help: Total number of bytes of HTTP request data transmitted.
          type: counter
          value: "{{ protocolhttp.httptottxrequestbytes }}"

        - name: tot_10_requests
          help: Total number of HTTP/1.0 requests received.
          type: counter
          value: "{{ protocolhttp.httptot10requests }}"

        - name: tot_11_requests
          help: Total number of HTTP/1.1 requests received.
          type: counter
          value: "{{ protocolhttp.httptot11requests }}"

        - name: tot_10_responses
          help: Total number of HTTP/1.0 responses sent.
          type: counter
          value: "{{ protocolhttp.httptot10responses }}"

        - name: tot_11_responses
          help: Total number of HTTP/1.1 responses sent.
          type: counter
          value: "{{ protocolhttp.httptot11responses }}"

        - name: tot_chunked_requests
          help: Total number of HTTP requests in which the Transfer-Encoding field of the HTTP header has been set to chunked
          type: counter
          value: "{{ protocolhttp.httptotchunkedrequests }}"

        - name: tot_chunked_responses
          help: Total number of HTTP responses sent in which the Transfer-Encoding field of the HTTP header has been set to chunked.
          type: counter
          value: "{{ protocolhttp.httptotchunkedresponses }}"

        - name: err_tot_noreuse_multipart_responses
          help: Total number of HTTP multi-part responses sent.
          type: counter
          value: "{{ protocolhttp.httperrnoreusemultipart }}"

        - name: err_tot_incomplete_header_packets
          help: Total number of HTTP requests and responses received in which the HTTP header spans more than one packet.
          type: counter
          value: "{{ protocolhttp.httperrincompleteheaders }}"

        - name: err_tot_incomplete_requests
          help: Total number of HTTP requests received in which the header spans more than one packet.
          type: counter
          value: "{{ protocolhttp.httperrincompleterequests }}"

        - name: err_tot_incomplete_responses
          help: Total number of HTTP responses received in which the header spans more than one packet.
          type: counter
          value: "{{ protocolhttp.httperrincompleteresponses }}"

        - name: err_tot_server_responses
          help: Total number of HTTP error responses received.
          type: counter
          value: "{{ protocolhttp.httperrserverbusy }}"

        - name: err_tot_large_body_packets
          help: Total number of requests and responses received with large body.
          type: counter
          value: "{{ protocolhttp.httperrlargecontent }}"

        - name: err_tot_large_chunk_requests
          help: Total number of requests received with large chunk size...
          type: counter
          value: "{{ protocolhttp.httperrlargechunk }}"

        - name: err_tot_large_content_requests
          help: Total number of requests received with large content
          type: counter
          value: "{{ protocolhttp.httperrlargectlen }}"

        - name: requests_rate
          help: Rate (/s) counter for httptotrequests
          type: gauge
          value: "{{ protocolhttp.httprequestsrate }}"

        - name: spdy_streams_rate
          help: Rate (/s) counter for spdytotstreams
          type: gauge
          value: "{{ protocolhttp.spdystreamsrate }}"

        - name: spdy_v2_streams_rate
          help: Rate (/s) counter for spdyv2totstreams
          type: gauge
          value: "{{ protocolhttp.spdyv2streamsrate }}"

        - name: spdy_v3_streams_rate
          help: Rate (/s) counter for spdyv3totstreams
          type: gauge
          value: "{{ protocolhttp.spdyv3streamsrate }}"

        - name: rx_request_bytes_rate
          help: Rate (/s) counter for httptotrxrequestbytes
          type: gauge
          value: "{{ protocolhttp.httprxrequestbytesrate }}"

        - name: rx_response_bytes_rate
          help: Rate (/s) counter for httptotrxresponsebytes
          type: gauge
          value: "{{ protocolhttp.httprxresponsebytesrate }}"

        - name: tot_tx_request_bytes_rate
          help: Rate (/s) counter for httptottxrequestbytes
          type: gauge
          value: "{{ protocolhttp.httptxrequestbytesrate }}"

        - name: responses_rate
          help: Rate (/s) counter for httptotresponses
          type: gauge
          value: "{{ protocolhttp.httpresponsesrate }}"

        - name: posts_rate
          help: Rate (/s) counter for httptotposts
          type: gauge
          value: "{{ protocolhttp.httppostsrate }}"

        - name: gets_rate
          help: Rate (/s) counter for httptotgets
          type: gauge
          value: "{{ protocolhttp.httpgetsrate }}"

        - name: others_rate
          help: Rate (/s) counter for httptotothers
          type: gauge
          value: "{{ protocolhttp.httpothersrate }}"

        - name: chunked_responses_rate
          help: Rate (/s) counter for httptotchunkedresponses
          type: gauge
          value: "{{ protocolhttp.httpchunkedresponsesrate }}"

        - name: chunked_requests_rate
          help: Rate (/s) counter for httptotchunkedrequests
          type: gauge
          value: "{{ protocolhttp.httpchunkedrequestsrate }}"

        - name: 10_requests_rate
          help: Rate (/s) counter for httptot10requests
          type: gauge
          value: "{{ protocolhttp.http10requestsrate }}"

        - name: 11_requests_rate
          help: Rate (/s) counter for httptot11requests
          type: gauge
          value: "{{ protocolhttp.http11requestsrate }}"

        - name: 10_responses_rate
          help: Rate (/s) counter for httptot10responses
          type: gauge
          value: "{{ protocolhttp.http10responsesrate }}"

        - name: 11_responses_rate
          help: Rate (/s) counter for httptot11responses
          type: gauge
          value: "{{ protocolhttp.http11responsesrate }}"

        - name: err_noreuse_multipart_responses_rate
          help: Rate (/s) counter for httperrnoreusemultipart
          type: gauge
          value: "{{ protocolhttp.httperrnoreusemultipartrate }}"

        - name: err_incomplete_requests_rate
          help: Rate (/s) counter for httperrincompleterequests
          type: gauge
          value: "{{ protocolhttp.httperrincompleterequestsrate }}"

        - name: err_incomplete_responses_rate
          help: Rate (/s) counter for httperrincompleteresponses
          type: gauge
          value: "{{ protocolhttp.httperrincompleteresponsesrate }}"

        - name: err_server_responses_rate
          help: Rate (/s) counter for httperrserverbusy
          type: gauge
          value: "{{ protocolhttp.httperrserverbusyrate }}"

...
