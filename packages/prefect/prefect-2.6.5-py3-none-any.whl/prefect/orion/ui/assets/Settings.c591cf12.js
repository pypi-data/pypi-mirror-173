import{d as S,c as A,o,i as _,k as t,w as a,F as C,b0 as w,g as s,b1 as b,b2 as B,b3 as h,b4 as $,b5 as O,ap as f,e as V,r as c,f as F,b6 as M,b7 as R,b8 as r,b9 as j}from"./index.daad7f12.js";const D={class:"settings-block"},E=S({__name:"SettingsCodeBlock",props:{engineSettings:null},setup(i){const e=i,n=A(()=>Object.entries(e.engineSettings));return(u,d)=>(o(),_("div",D,[t(s(B),{multiline:""},{default:a(()=>[(o(!0),_(C,null,w(s(n),(l,p)=>(o(),_("div",{key:p,class:"settings-block--code-line"},b(l[0])+": "+b(l[1]),1))),128))]),_:1})]))}});class L extends $(O){}const v=h(new L);const P=S({__name:"Settings",async setup(i){let e,n;const u=[{text:"Settings"}],d=([e,n]=f(()=>v.getSettings()),e=await e,n(),e),l=([e,n]=f(()=>v.getVersion()),e=await e,n(),e);return V("Settings"),(p,g)=>{const k=c("p-key-value"),m=c("p-label"),y=c("p-layout-default");return o(),F(y,{class:"settings"},{header:a(()=>[t(s(M),{crumbs:u},{actions:a(()=>[t(k,{label:"Version",value:s(l),alternate:""},null,8,["value"])]),_:1})]),default:a(()=>[t(m,{label:"Color Mode",class:"settings__color-mode"},{default:a(()=>[t(s(R),{selected:s(r),"onUpdate:selected":g[0]||(g[0]=x=>j(r)?r.value=x:null)},null,8,["selected"])]),_:1}),t(m,{label:"Orion Settings"},{default:a(()=>[t(E,{class:"settings__code-block","engine-settings":s(d)},null,8,["engine-settings"])]),_:1})]),_:1})}}});export{P as default};
