"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunk_JUPYTERLAB_CORE_OUTPUT"] = globalThis["webpackChunk_JUPYTERLAB_CORE_OUTPUT"] || []).push([["node_modules_jupyterlab_mathjax2-extension_lib_index_js-_e5c91"],{

/***/ "../../node_modules/@jupyterlab/mathjax2-extension/lib/index.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@jupyterlab/mathjax2-extension/lib/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _jupyterlab_coreutils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @jupyterlab/coreutils */ \"webpack/sharing/consume/default/@jupyterlab/coreutils/@jupyterlab/coreutils\");\n/* harmony import */ var _jupyterlab_coreutils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_coreutils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _jupyterlab_mathjax2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jupyterlab/mathjax2 */ \"../../node_modules/@jupyterlab/mathjax2/lib/index.js\");\n/* harmony import */ var _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @jupyterlab/rendermime */ \"webpack/sharing/consume/default/@jupyterlab/rendermime/@jupyterlab/rendermime\");\n/* harmony import */ var _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_1__);\n/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module mathjax2-extension\n */\n\n\n\n/**\n * The MathJax latexTypesetter plugin.\n */\nconst plugin = {\n    id: '@jupyterlab/mathjax2-extension:plugin',\n    autoStart: true,\n    provides: _jupyterlab_rendermime__WEBPACK_IMPORTED_MODULE_1__.ILatexTypesetter,\n    activate: () => {\n        const [urlParam, configParam] = ['fullMathjaxUrl', 'mathjaxConfig'];\n        const url = _jupyterlab_coreutils__WEBPACK_IMPORTED_MODULE_0__.PageConfig.getOption(urlParam);\n        const config = _jupyterlab_coreutils__WEBPACK_IMPORTED_MODULE_0__.PageConfig.getOption(configParam);\n        if (!url) {\n            const message = `${plugin.id} uses '${urlParam}' and '${configParam}' in PageConfig ` +\n                `to operate but '${urlParam}' was not found.`;\n            throw new Error(message);\n        }\n        return new _jupyterlab_mathjax2__WEBPACK_IMPORTED_MODULE_2__.MathJaxTypesetter({ url, config });\n    }\n};\n/**\n * Export the plugin as default.\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (plugin);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/mathjax2-extension/lib/index.js?");

/***/ }),

/***/ "../../node_modules/@jupyterlab/mathjax2/lib/index.js":
/*!************************************************************!*\
  !*** ../../node_modules/@jupyterlab/mathjax2/lib/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MathJaxTypesetter\": () => (/* binding */ MathJaxTypesetter)\n/* harmony export */ });\n/* harmony import */ var _lumino_coreutils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lumino/coreutils */ \"webpack/sharing/consume/default/@lumino/coreutils/@lumino/coreutils\");\n/* harmony import */ var _lumino_coreutils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lumino_coreutils__WEBPACK_IMPORTED_MODULE_0__);\n/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module mathjax2\n */\n\n/**\n * The MathJax Typesetter.\n */\nclass MathJaxTypesetter {\n    /**\n     * Create a new MathJax typesetter.\n     */\n    constructor(options) {\n        this._initPromise = new _lumino_coreutils__WEBPACK_IMPORTED_MODULE_0__.PromiseDelegate();\n        this._initialized = false;\n        this._url = options.url;\n        this._config = options.config;\n    }\n    /**\n     * Typeset the math in a node.\n     *\n     * #### Notes\n     * MathJax schedules the typesetting asynchronously,\n     * but there are not currently any callbacks or Promises\n     * firing when it is done.\n     */\n    typeset(node) {\n        if (!this._initialized) {\n            this._init();\n        }\n        void this._initPromise.promise.then(() => {\n            MathJax.Hub.Queue(['Typeset', MathJax.Hub, node]);\n            try {\n                MathJax.Hub.Queue(['Require', MathJax.Ajax, '[MathJax]/extensions/TeX/AMSmath.js'], () => {\n                    MathJax.InputJax.TeX.resetEquationNumbers();\n                });\n            }\n            catch (e) {\n                console.error('Error queueing resetEquationNumbers:', e);\n            }\n        });\n    }\n    /**\n     * Initialize MathJax.\n     */\n    _init() {\n        const head = document.getElementsByTagName('head')[0];\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = `${this._url}?config=${this._config}&amp;delayStartupUntil=configured`;\n        script.charset = 'utf-8';\n        head.appendChild(script);\n        script.addEventListener('load', () => {\n            this._onLoad();\n        });\n        this._initialized = true;\n    }\n    /**\n     * Handle MathJax loading.\n     */\n    _onLoad() {\n        MathJax.Hub.Config({\n            tex2jax: {\n                inlineMath: [\n                    ['$', '$'],\n                    ['\\\\(', '\\\\)']\n                ],\n                displayMath: [\n                    ['$$', '$$'],\n                    ['\\\\[', '\\\\]']\n                ],\n                processEscapes: true,\n                processEnvironments: true\n            },\n            // Center justify equations in code and markdown cells. Elsewhere\n            // we use CSS to left justify single line equations in code cells.\n            displayAlign: 'center',\n            CommonHTML: {\n                linebreaks: { automatic: true }\n            },\n            'HTML-CSS': {\n                availableFonts: [],\n                imageFont: null,\n                preferredFont: null,\n                webFont: 'STIX-Web',\n                styles: { '.MathJax_Display': { margin: 0 } },\n                linebreaks: { automatic: true }\n            },\n            skipStartupTypeset: true,\n            messageStyle: 'none'\n        });\n        MathJax.Hub.Configured();\n        this._initPromise.resolve(void 0);\n    }\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@jupyterlab/mathjax2/lib/index.js?");

/***/ })

}]);