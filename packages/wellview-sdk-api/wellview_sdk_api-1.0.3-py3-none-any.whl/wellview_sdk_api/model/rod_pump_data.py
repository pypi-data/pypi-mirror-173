# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class RodPumpData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            anchortyp = schemas.StrSchema
            barrellength = schemas.NumberSchema
            barrelmaterial = schemas.StrSchema
            barreltyp = schemas.StrSchema
            gasanchorlength = schemas.NumberSchema
            gasanchorszod = schemas.NumberSchema
            idrecparent = schemas.StrSchema
            lengthlowerext = schemas.NumberSchema
            lengthstrokemax = schemas.NumberSchema
            lengthupperext = schemas.NumberSchema
            plungerlengthnom = schemas.NumberSchema
            plungermaterial = schemas.StrSchema
            plungerodclear = schemas.NumberSchema
            pumptyp = schemas.StrSchema
            seatassydes = schemas.StrSchema
            seatassysz = schemas.NumberSchema
            seatassytyp = schemas.StrSchema
            standvalveballmtl = schemas.StrSchema
            standvalveseatmtl = schemas.StrSchema
            szidbore = schemas.NumberSchema
            travvalvballmtl = schemas.StrSchema
            travvalvseatmtl = schemas.StrSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "anchortyp": anchortyp,
                "barrellength": barrellength,
                "barrelmaterial": barrelmaterial,
                "barreltyp": barreltyp,
                "gasanchorlength": gasanchorlength,
                "gasanchorszod": gasanchorszod,
                "idrecparent": idrecparent,
                "lengthlowerext": lengthlowerext,
                "lengthstrokemax": lengthstrokemax,
                "lengthupperext": lengthupperext,
                "plungerlengthnom": plungerlengthnom,
                "plungermaterial": plungermaterial,
                "plungerodclear": plungerodclear,
                "pumptyp": pumptyp,
                "seatassydes": seatassydes,
                "seatassysz": seatassysz,
                "seatassytyp": seatassytyp,
                "standvalveballmtl": standvalveballmtl,
                "standvalveseatmtl": standvalveseatmtl,
                "szidbore": szidbore,
                "travvalvballmtl": travvalvballmtl,
                "travvalvseatmtl": travvalvseatmtl,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["anchortyp"]) -> MetaOapg.properties.anchortyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["barrellength"]) -> MetaOapg.properties.barrellength: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["barrelmaterial"]) -> MetaOapg.properties.barrelmaterial: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["barreltyp"]) -> MetaOapg.properties.barreltyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gasanchorlength"]) -> MetaOapg.properties.gasanchorlength: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gasanchorszod"]) -> MetaOapg.properties.gasanchorszod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lengthlowerext"]) -> MetaOapg.properties.lengthlowerext: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lengthstrokemax"]) -> MetaOapg.properties.lengthstrokemax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lengthupperext"]) -> MetaOapg.properties.lengthupperext: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["plungerlengthnom"]) -> MetaOapg.properties.plungerlengthnom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["plungermaterial"]) -> MetaOapg.properties.plungermaterial: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["plungerodclear"]) -> MetaOapg.properties.plungerodclear: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pumptyp"]) -> MetaOapg.properties.pumptyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["seatassydes"]) -> MetaOapg.properties.seatassydes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["seatassysz"]) -> MetaOapg.properties.seatassysz: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["seatassytyp"]) -> MetaOapg.properties.seatassytyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["standvalveballmtl"]) -> MetaOapg.properties.standvalveballmtl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["standvalveseatmtl"]) -> MetaOapg.properties.standvalveseatmtl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["szidbore"]) -> MetaOapg.properties.szidbore: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["travvalvballmtl"]) -> MetaOapg.properties.travvalvballmtl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["travvalvseatmtl"]) -> MetaOapg.properties.travvalvseatmtl: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "anchortyp", "barrellength", "barrelmaterial", "barreltyp", "gasanchorlength", "gasanchorszod", "idrecparent", "lengthlowerext", "lengthstrokemax", "lengthupperext", "plungerlengthnom", "plungermaterial", "plungerodclear", "pumptyp", "seatassydes", "seatassysz", "seatassytyp", "standvalveballmtl", "standvalveseatmtl", "szidbore", "travvalvballmtl", "travvalvseatmtl", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["anchortyp"]) -> typing.Union[MetaOapg.properties.anchortyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["barrellength"]) -> typing.Union[MetaOapg.properties.barrellength, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["barrelmaterial"]) -> typing.Union[MetaOapg.properties.barrelmaterial, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["barreltyp"]) -> typing.Union[MetaOapg.properties.barreltyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gasanchorlength"]) -> typing.Union[MetaOapg.properties.gasanchorlength, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gasanchorszod"]) -> typing.Union[MetaOapg.properties.gasanchorszod, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lengthlowerext"]) -> typing.Union[MetaOapg.properties.lengthlowerext, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lengthstrokemax"]) -> typing.Union[MetaOapg.properties.lengthstrokemax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lengthupperext"]) -> typing.Union[MetaOapg.properties.lengthupperext, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["plungerlengthnom"]) -> typing.Union[MetaOapg.properties.plungerlengthnom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["plungermaterial"]) -> typing.Union[MetaOapg.properties.plungermaterial, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["plungerodclear"]) -> typing.Union[MetaOapg.properties.plungerodclear, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pumptyp"]) -> typing.Union[MetaOapg.properties.pumptyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["seatassydes"]) -> typing.Union[MetaOapg.properties.seatassydes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["seatassysz"]) -> typing.Union[MetaOapg.properties.seatassysz, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["seatassytyp"]) -> typing.Union[MetaOapg.properties.seatassytyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["standvalveballmtl"]) -> typing.Union[MetaOapg.properties.standvalveballmtl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["standvalveseatmtl"]) -> typing.Union[MetaOapg.properties.standvalveseatmtl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["szidbore"]) -> typing.Union[MetaOapg.properties.szidbore, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["travvalvballmtl"]) -> typing.Union[MetaOapg.properties.travvalvballmtl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["travvalvseatmtl"]) -> typing.Union[MetaOapg.properties.travvalvseatmtl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "anchortyp", "barrellength", "barrelmaterial", "barreltyp", "gasanchorlength", "gasanchorszod", "idrecparent", "lengthlowerext", "lengthstrokemax", "lengthupperext", "plungerlengthnom", "plungermaterial", "plungerodclear", "pumptyp", "seatassydes", "seatassysz", "seatassytyp", "standvalveballmtl", "standvalveseatmtl", "szidbore", "travvalvballmtl", "travvalvseatmtl", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        anchortyp: typing.Union[MetaOapg.properties.anchortyp, str, schemas.Unset] = schemas.unset,
        barrellength: typing.Union[MetaOapg.properties.barrellength, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        barrelmaterial: typing.Union[MetaOapg.properties.barrelmaterial, str, schemas.Unset] = schemas.unset,
        barreltyp: typing.Union[MetaOapg.properties.barreltyp, str, schemas.Unset] = schemas.unset,
        gasanchorlength: typing.Union[MetaOapg.properties.gasanchorlength, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        gasanchorszod: typing.Union[MetaOapg.properties.gasanchorszod, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        lengthlowerext: typing.Union[MetaOapg.properties.lengthlowerext, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lengthstrokemax: typing.Union[MetaOapg.properties.lengthstrokemax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lengthupperext: typing.Union[MetaOapg.properties.lengthupperext, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        plungerlengthnom: typing.Union[MetaOapg.properties.plungerlengthnom, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        plungermaterial: typing.Union[MetaOapg.properties.plungermaterial, str, schemas.Unset] = schemas.unset,
        plungerodclear: typing.Union[MetaOapg.properties.plungerodclear, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        pumptyp: typing.Union[MetaOapg.properties.pumptyp, str, schemas.Unset] = schemas.unset,
        seatassydes: typing.Union[MetaOapg.properties.seatassydes, str, schemas.Unset] = schemas.unset,
        seatassysz: typing.Union[MetaOapg.properties.seatassysz, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        seatassytyp: typing.Union[MetaOapg.properties.seatassytyp, str, schemas.Unset] = schemas.unset,
        standvalveballmtl: typing.Union[MetaOapg.properties.standvalveballmtl, str, schemas.Unset] = schemas.unset,
        standvalveseatmtl: typing.Union[MetaOapg.properties.standvalveseatmtl, str, schemas.Unset] = schemas.unset,
        szidbore: typing.Union[MetaOapg.properties.szidbore, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        travvalvballmtl: typing.Union[MetaOapg.properties.travvalvballmtl, str, schemas.Unset] = schemas.unset,
        travvalvseatmtl: typing.Union[MetaOapg.properties.travvalvseatmtl, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'RodPumpData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            anchortyp=anchortyp,
            barrellength=barrellength,
            barrelmaterial=barrelmaterial,
            barreltyp=barreltyp,
            gasanchorlength=gasanchorlength,
            gasanchorszod=gasanchorszod,
            idrecparent=idrecparent,
            lengthlowerext=lengthlowerext,
            lengthstrokemax=lengthstrokemax,
            lengthupperext=lengthupperext,
            plungerlengthnom=plungerlengthnom,
            plungermaterial=plungermaterial,
            plungerodclear=plungerodclear,
            pumptyp=pumptyp,
            seatassydes=seatassydes,
            seatassysz=seatassysz,
            seatassytyp=seatassytyp,
            standvalveballmtl=standvalveballmtl,
            standvalveseatmtl=standvalveseatmtl,
            szidbore=szidbore,
            travvalvballmtl=travvalvballmtl,
            travvalvseatmtl=travvalvseatmtl,
            _configuration=_configuration,
            **kwargs,
        )
