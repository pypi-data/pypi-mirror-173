# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class GasShowDataData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            acetyleneavg = schemas.NumberSchema
            acetylenemax = schemas.NumberSchema
            acetylenemin = schemas.NumberSchema
            c1avg = schemas.NumberSchema
            c1max = schemas.NumberSchema
            c1min = schemas.NumberSchema
            c2avg = schemas.NumberSchema
            c2max = schemas.NumberSchema
            c2min = schemas.NumberSchema
            c3avg = schemas.NumberSchema
            c3max = schemas.NumberSchema
            c3min = schemas.NumberSchema
            chromatographcycletime = schemas.NumberSchema
            chromatographgasunit = schemas.StrSchema
            chromatographintrpttime = schemas.NumberSchema
            chromatographtyp = schemas.StrSchema
            co2avg = schemas.NumberSchema
            co2max = schemas.NumberSchema
            co2min = schemas.NumberSchema
            com = schemas.StrSchema
            depthbtm = schemas.NumberSchema
            depthtop = schemas.NumberSchema
            dttmreport = schemas.DateTimeSchema
            dttmsample = schemas.DateTimeSchema
            ec5avg = schemas.NumberSchema
            ec5max = schemas.NumberSchema
            ec5min = schemas.NumberSchema
            gastraptyp = schemas.StrSchema
            h2savg = schemas.NumberSchema
            h2smax = schemas.NumberSchema
            h2smin = schemas.NumberSchema
            ic4avg = schemas.NumberSchema
            ic4max = schemas.NumberSchema
            ic4min = schemas.NumberSchema
            ic5avg = schemas.NumberSchema
            ic5max = schemas.NumberSchema
            ic5min = schemas.NumberSchema
            ic6avg = schemas.NumberSchema
            ic6max = schemas.NumberSchema
            ic6min = schemas.NumberSchema
            iconname = schemas.StrSchema
            idrecparent = schemas.StrSchema
            nc4avg = schemas.NumberSchema
            nc4max = schemas.NumberSchema
            nc4min = schemas.NumberSchema
            nc5avg = schemas.NumberSchema
            nc5max = schemas.NumberSchema
            nc5min = schemas.NumberSchema
            nc6avg = schemas.NumberSchema
            nc6max = schemas.NumberSchema
            nc6min = schemas.NumberSchema
            showtyp = schemas.StrSchema
            totalgasavg = schemas.NumberSchema
            totalgasmax = schemas.NumberSchema
            totalgasmin = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "acetyleneavg": acetyleneavg,
                "acetylenemax": acetylenemax,
                "acetylenemin": acetylenemin,
                "c1avg": c1avg,
                "c1max": c1max,
                "c1min": c1min,
                "c2avg": c2avg,
                "c2max": c2max,
                "c2min": c2min,
                "c3avg": c3avg,
                "c3max": c3max,
                "c3min": c3min,
                "chromatographcycletime": chromatographcycletime,
                "chromatographgasunit": chromatographgasunit,
                "chromatographintrpttime": chromatographintrpttime,
                "chromatographtyp": chromatographtyp,
                "co2avg": co2avg,
                "co2max": co2max,
                "co2min": co2min,
                "com": com,
                "depthbtm": depthbtm,
                "depthtop": depthtop,
                "dttmreport": dttmreport,
                "dttmsample": dttmsample,
                "ec5avg": ec5avg,
                "ec5max": ec5max,
                "ec5min": ec5min,
                "gastraptyp": gastraptyp,
                "h2savg": h2savg,
                "h2smax": h2smax,
                "h2smin": h2smin,
                "ic4avg": ic4avg,
                "ic4max": ic4max,
                "ic4min": ic4min,
                "ic5avg": ic5avg,
                "ic5max": ic5max,
                "ic5min": ic5min,
                "ic6avg": ic6avg,
                "ic6max": ic6max,
                "ic6min": ic6min,
                "iconname": iconname,
                "idrecparent": idrecparent,
                "nc4avg": nc4avg,
                "nc4max": nc4max,
                "nc4min": nc4min,
                "nc5avg": nc5avg,
                "nc5max": nc5max,
                "nc5min": nc5min,
                "nc6avg": nc6avg,
                "nc6max": nc6max,
                "nc6min": nc6min,
                "showtyp": showtyp,
                "totalgasavg": totalgasavg,
                "totalgasmax": totalgasmax,
                "totalgasmin": totalgasmin,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acetyleneavg"]) -> MetaOapg.properties.acetyleneavg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acetylenemax"]) -> MetaOapg.properties.acetylenemax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["acetylenemin"]) -> MetaOapg.properties.acetylenemin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["c1avg"]) -> MetaOapg.properties.c1avg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["c1max"]) -> MetaOapg.properties.c1max: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["c1min"]) -> MetaOapg.properties.c1min: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["c2avg"]) -> MetaOapg.properties.c2avg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["c2max"]) -> MetaOapg.properties.c2max: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["c2min"]) -> MetaOapg.properties.c2min: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["c3avg"]) -> MetaOapg.properties.c3avg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["c3max"]) -> MetaOapg.properties.c3max: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["c3min"]) -> MetaOapg.properties.c3min: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["chromatographcycletime"]) -> MetaOapg.properties.chromatographcycletime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["chromatographgasunit"]) -> MetaOapg.properties.chromatographgasunit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["chromatographintrpttime"]) -> MetaOapg.properties.chromatographintrpttime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["chromatographtyp"]) -> MetaOapg.properties.chromatographtyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["co2avg"]) -> MetaOapg.properties.co2avg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["co2max"]) -> MetaOapg.properties.co2max: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["co2min"]) -> MetaOapg.properties.co2min: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthbtm"]) -> MetaOapg.properties.depthbtm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthtop"]) -> MetaOapg.properties.depthtop: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmreport"]) -> MetaOapg.properties.dttmreport: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmsample"]) -> MetaOapg.properties.dttmsample: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ec5avg"]) -> MetaOapg.properties.ec5avg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ec5max"]) -> MetaOapg.properties.ec5max: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ec5min"]) -> MetaOapg.properties.ec5min: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gastraptyp"]) -> MetaOapg.properties.gastraptyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["h2savg"]) -> MetaOapg.properties.h2savg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["h2smax"]) -> MetaOapg.properties.h2smax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["h2smin"]) -> MetaOapg.properties.h2smin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ic4avg"]) -> MetaOapg.properties.ic4avg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ic4max"]) -> MetaOapg.properties.ic4max: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ic4min"]) -> MetaOapg.properties.ic4min: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ic5avg"]) -> MetaOapg.properties.ic5avg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ic5max"]) -> MetaOapg.properties.ic5max: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ic5min"]) -> MetaOapg.properties.ic5min: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ic6avg"]) -> MetaOapg.properties.ic6avg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ic6max"]) -> MetaOapg.properties.ic6max: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ic6min"]) -> MetaOapg.properties.ic6min: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["iconname"]) -> MetaOapg.properties.iconname: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nc4avg"]) -> MetaOapg.properties.nc4avg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nc4max"]) -> MetaOapg.properties.nc4max: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nc4min"]) -> MetaOapg.properties.nc4min: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nc5avg"]) -> MetaOapg.properties.nc5avg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nc5max"]) -> MetaOapg.properties.nc5max: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nc5min"]) -> MetaOapg.properties.nc5min: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nc6avg"]) -> MetaOapg.properties.nc6avg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nc6max"]) -> MetaOapg.properties.nc6max: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nc6min"]) -> MetaOapg.properties.nc6min: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["showtyp"]) -> MetaOapg.properties.showtyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalgasavg"]) -> MetaOapg.properties.totalgasavg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalgasmax"]) -> MetaOapg.properties.totalgasmax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalgasmin"]) -> MetaOapg.properties.totalgasmin: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "acetyleneavg", "acetylenemax", "acetylenemin", "c1avg", "c1max", "c1min", "c2avg", "c2max", "c2min", "c3avg", "c3max", "c3min", "chromatographcycletime", "chromatographgasunit", "chromatographintrpttime", "chromatographtyp", "co2avg", "co2max", "co2min", "com", "depthbtm", "depthtop", "dttmreport", "dttmsample", "ec5avg", "ec5max", "ec5min", "gastraptyp", "h2savg", "h2smax", "h2smin", "ic4avg", "ic4max", "ic4min", "ic5avg", "ic5max", "ic5min", "ic6avg", "ic6max", "ic6min", "iconname", "idrecparent", "nc4avg", "nc4max", "nc4min", "nc5avg", "nc5max", "nc5min", "nc6avg", "nc6max", "nc6min", "showtyp", "totalgasavg", "totalgasmax", "totalgasmin", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acetyleneavg"]) -> typing.Union[MetaOapg.properties.acetyleneavg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acetylenemax"]) -> typing.Union[MetaOapg.properties.acetylenemax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["acetylenemin"]) -> typing.Union[MetaOapg.properties.acetylenemin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["c1avg"]) -> typing.Union[MetaOapg.properties.c1avg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["c1max"]) -> typing.Union[MetaOapg.properties.c1max, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["c1min"]) -> typing.Union[MetaOapg.properties.c1min, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["c2avg"]) -> typing.Union[MetaOapg.properties.c2avg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["c2max"]) -> typing.Union[MetaOapg.properties.c2max, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["c2min"]) -> typing.Union[MetaOapg.properties.c2min, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["c3avg"]) -> typing.Union[MetaOapg.properties.c3avg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["c3max"]) -> typing.Union[MetaOapg.properties.c3max, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["c3min"]) -> typing.Union[MetaOapg.properties.c3min, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["chromatographcycletime"]) -> typing.Union[MetaOapg.properties.chromatographcycletime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["chromatographgasunit"]) -> typing.Union[MetaOapg.properties.chromatographgasunit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["chromatographintrpttime"]) -> typing.Union[MetaOapg.properties.chromatographintrpttime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["chromatographtyp"]) -> typing.Union[MetaOapg.properties.chromatographtyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["co2avg"]) -> typing.Union[MetaOapg.properties.co2avg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["co2max"]) -> typing.Union[MetaOapg.properties.co2max, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["co2min"]) -> typing.Union[MetaOapg.properties.co2min, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthbtm"]) -> typing.Union[MetaOapg.properties.depthbtm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthtop"]) -> typing.Union[MetaOapg.properties.depthtop, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmreport"]) -> typing.Union[MetaOapg.properties.dttmreport, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmsample"]) -> typing.Union[MetaOapg.properties.dttmsample, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ec5avg"]) -> typing.Union[MetaOapg.properties.ec5avg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ec5max"]) -> typing.Union[MetaOapg.properties.ec5max, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ec5min"]) -> typing.Union[MetaOapg.properties.ec5min, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gastraptyp"]) -> typing.Union[MetaOapg.properties.gastraptyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["h2savg"]) -> typing.Union[MetaOapg.properties.h2savg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["h2smax"]) -> typing.Union[MetaOapg.properties.h2smax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["h2smin"]) -> typing.Union[MetaOapg.properties.h2smin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ic4avg"]) -> typing.Union[MetaOapg.properties.ic4avg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ic4max"]) -> typing.Union[MetaOapg.properties.ic4max, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ic4min"]) -> typing.Union[MetaOapg.properties.ic4min, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ic5avg"]) -> typing.Union[MetaOapg.properties.ic5avg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ic5max"]) -> typing.Union[MetaOapg.properties.ic5max, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ic5min"]) -> typing.Union[MetaOapg.properties.ic5min, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ic6avg"]) -> typing.Union[MetaOapg.properties.ic6avg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ic6max"]) -> typing.Union[MetaOapg.properties.ic6max, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ic6min"]) -> typing.Union[MetaOapg.properties.ic6min, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["iconname"]) -> typing.Union[MetaOapg.properties.iconname, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nc4avg"]) -> typing.Union[MetaOapg.properties.nc4avg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nc4max"]) -> typing.Union[MetaOapg.properties.nc4max, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nc4min"]) -> typing.Union[MetaOapg.properties.nc4min, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nc5avg"]) -> typing.Union[MetaOapg.properties.nc5avg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nc5max"]) -> typing.Union[MetaOapg.properties.nc5max, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nc5min"]) -> typing.Union[MetaOapg.properties.nc5min, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nc6avg"]) -> typing.Union[MetaOapg.properties.nc6avg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nc6max"]) -> typing.Union[MetaOapg.properties.nc6max, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nc6min"]) -> typing.Union[MetaOapg.properties.nc6min, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["showtyp"]) -> typing.Union[MetaOapg.properties.showtyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalgasavg"]) -> typing.Union[MetaOapg.properties.totalgasavg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalgasmax"]) -> typing.Union[MetaOapg.properties.totalgasmax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalgasmin"]) -> typing.Union[MetaOapg.properties.totalgasmin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "acetyleneavg", "acetylenemax", "acetylenemin", "c1avg", "c1max", "c1min", "c2avg", "c2max", "c2min", "c3avg", "c3max", "c3min", "chromatographcycletime", "chromatographgasunit", "chromatographintrpttime", "chromatographtyp", "co2avg", "co2max", "co2min", "com", "depthbtm", "depthtop", "dttmreport", "dttmsample", "ec5avg", "ec5max", "ec5min", "gastraptyp", "h2savg", "h2smax", "h2smin", "ic4avg", "ic4max", "ic4min", "ic5avg", "ic5max", "ic5min", "ic6avg", "ic6max", "ic6min", "iconname", "idrecparent", "nc4avg", "nc4max", "nc4min", "nc5avg", "nc5max", "nc5min", "nc6avg", "nc6max", "nc6min", "showtyp", "totalgasavg", "totalgasmax", "totalgasmin", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        acetyleneavg: typing.Union[MetaOapg.properties.acetyleneavg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        acetylenemax: typing.Union[MetaOapg.properties.acetylenemax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        acetylenemin: typing.Union[MetaOapg.properties.acetylenemin, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        c1avg: typing.Union[MetaOapg.properties.c1avg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        c1max: typing.Union[MetaOapg.properties.c1max, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        c1min: typing.Union[MetaOapg.properties.c1min, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        c2avg: typing.Union[MetaOapg.properties.c2avg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        c2max: typing.Union[MetaOapg.properties.c2max, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        c2min: typing.Union[MetaOapg.properties.c2min, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        c3avg: typing.Union[MetaOapg.properties.c3avg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        c3max: typing.Union[MetaOapg.properties.c3max, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        c3min: typing.Union[MetaOapg.properties.c3min, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        chromatographcycletime: typing.Union[MetaOapg.properties.chromatographcycletime, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        chromatographgasunit: typing.Union[MetaOapg.properties.chromatographgasunit, str, schemas.Unset] = schemas.unset,
        chromatographintrpttime: typing.Union[MetaOapg.properties.chromatographintrpttime, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        chromatographtyp: typing.Union[MetaOapg.properties.chromatographtyp, str, schemas.Unset] = schemas.unset,
        co2avg: typing.Union[MetaOapg.properties.co2avg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        co2max: typing.Union[MetaOapg.properties.co2max, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        co2min: typing.Union[MetaOapg.properties.co2min, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        depthbtm: typing.Union[MetaOapg.properties.depthbtm, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthtop: typing.Union[MetaOapg.properties.depthtop, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        dttmreport: typing.Union[MetaOapg.properties.dttmreport, str, datetime, schemas.Unset] = schemas.unset,
        dttmsample: typing.Union[MetaOapg.properties.dttmsample, str, datetime, schemas.Unset] = schemas.unset,
        ec5avg: typing.Union[MetaOapg.properties.ec5avg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ec5max: typing.Union[MetaOapg.properties.ec5max, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ec5min: typing.Union[MetaOapg.properties.ec5min, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        gastraptyp: typing.Union[MetaOapg.properties.gastraptyp, str, schemas.Unset] = schemas.unset,
        h2savg: typing.Union[MetaOapg.properties.h2savg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        h2smax: typing.Union[MetaOapg.properties.h2smax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        h2smin: typing.Union[MetaOapg.properties.h2smin, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ic4avg: typing.Union[MetaOapg.properties.ic4avg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ic4max: typing.Union[MetaOapg.properties.ic4max, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ic4min: typing.Union[MetaOapg.properties.ic4min, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ic5avg: typing.Union[MetaOapg.properties.ic5avg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ic5max: typing.Union[MetaOapg.properties.ic5max, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ic5min: typing.Union[MetaOapg.properties.ic5min, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ic6avg: typing.Union[MetaOapg.properties.ic6avg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ic6max: typing.Union[MetaOapg.properties.ic6max, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ic6min: typing.Union[MetaOapg.properties.ic6min, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        iconname: typing.Union[MetaOapg.properties.iconname, str, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        nc4avg: typing.Union[MetaOapg.properties.nc4avg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        nc4max: typing.Union[MetaOapg.properties.nc4max, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        nc4min: typing.Union[MetaOapg.properties.nc4min, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        nc5avg: typing.Union[MetaOapg.properties.nc5avg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        nc5max: typing.Union[MetaOapg.properties.nc5max, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        nc5min: typing.Union[MetaOapg.properties.nc5min, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        nc6avg: typing.Union[MetaOapg.properties.nc6avg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        nc6max: typing.Union[MetaOapg.properties.nc6max, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        nc6min: typing.Union[MetaOapg.properties.nc6min, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        showtyp: typing.Union[MetaOapg.properties.showtyp, str, schemas.Unset] = schemas.unset,
        totalgasavg: typing.Union[MetaOapg.properties.totalgasavg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        totalgasmax: typing.Union[MetaOapg.properties.totalgasmax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        totalgasmin: typing.Union[MetaOapg.properties.totalgasmin, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'GasShowDataData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            acetyleneavg=acetyleneavg,
            acetylenemax=acetylenemax,
            acetylenemin=acetylenemin,
            c1avg=c1avg,
            c1max=c1max,
            c1min=c1min,
            c2avg=c2avg,
            c2max=c2max,
            c2min=c2min,
            c3avg=c3avg,
            c3max=c3max,
            c3min=c3min,
            chromatographcycletime=chromatographcycletime,
            chromatographgasunit=chromatographgasunit,
            chromatographintrpttime=chromatographintrpttime,
            chromatographtyp=chromatographtyp,
            co2avg=co2avg,
            co2max=co2max,
            co2min=co2min,
            com=com,
            depthbtm=depthbtm,
            depthtop=depthtop,
            dttmreport=dttmreport,
            dttmsample=dttmsample,
            ec5avg=ec5avg,
            ec5max=ec5max,
            ec5min=ec5min,
            gastraptyp=gastraptyp,
            h2savg=h2savg,
            h2smax=h2smax,
            h2smin=h2smin,
            ic4avg=ic4avg,
            ic4max=ic4max,
            ic4min=ic4min,
            ic5avg=ic5avg,
            ic5max=ic5max,
            ic5min=ic5min,
            ic6avg=ic6avg,
            ic6max=ic6max,
            ic6min=ic6min,
            iconname=iconname,
            idrecparent=idrecparent,
            nc4avg=nc4avg,
            nc4max=nc4max,
            nc4min=nc4min,
            nc5avg=nc5avg,
            nc5max=nc5max,
            nc5min=nc5min,
            nc6avg=nc6avg,
            nc6max=nc6max,
            nc6min=nc6min,
            showtyp=showtyp,
            totalgasavg=totalgasavg,
            totalgasmax=totalgasmax,
            totalgasmin=totalgasmin,
            _configuration=_configuration,
            **kwargs,
        )
