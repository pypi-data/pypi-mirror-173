# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class GasPropertiesData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            com = schemas.StrSchema
            densityc7 = schemas.NumberSchema
            densityc7rel = schemas.NumberSchema
            densitysample = schemas.NumberSchema
            densitysamplerel = schemas.NumberSchema
            h2s = schemas.NumberSchema
            h2smethod = schemas.StrSchema
            idrecparent = schemas.StrSchema
            molecularmassc7 = schemas.NumberSchema
            molecularmasstotalsample = schemas.NumberSchema
            presgrossheatref = schemas.NumberSchema
            prespcacidgasfree = schemas.NumberSchema
            prespcsample = schemas.NumberSchema
            presrefc7 = schemas.NumberSchema
            presreftotalsample = schemas.NumberSchema
            presvapourpentane = schemas.NumberSchema
            temppcacidgasfree = schemas.NumberSchema
            temppcsample = schemas.NumberSchema
            temprefc7 = schemas.NumberSchema
            temprefgrossheat = schemas.NumberSchema
            tempreftotalsample = schemas.NumberSchema
            valmoistacidfreegrossheat = schemas.NumberSchema
            valmoistfreegrossheat = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "com": com,
                "densityc7": densityc7,
                "densityc7rel": densityc7rel,
                "densitysample": densitysample,
                "densitysamplerel": densitysamplerel,
                "h2s": h2s,
                "h2smethod": h2smethod,
                "idrecparent": idrecparent,
                "molecularmassc7": molecularmassc7,
                "molecularmasstotalsample": molecularmasstotalsample,
                "presgrossheatref": presgrossheatref,
                "prespcacidgasfree": prespcacidgasfree,
                "prespcsample": prespcsample,
                "presrefc7": presrefc7,
                "presreftotalsample": presreftotalsample,
                "presvapourpentane": presvapourpentane,
                "temppcacidgasfree": temppcacidgasfree,
                "temppcsample": temppcsample,
                "temprefc7": temprefc7,
                "temprefgrossheat": temprefgrossheat,
                "tempreftotalsample": tempreftotalsample,
                "valmoistacidfreegrossheat": valmoistacidfreegrossheat,
                "valmoistfreegrossheat": valmoistfreegrossheat,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["densityc7"]) -> MetaOapg.properties.densityc7: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["densityc7rel"]) -> MetaOapg.properties.densityc7rel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["densitysample"]) -> MetaOapg.properties.densitysample: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["densitysamplerel"]) -> MetaOapg.properties.densitysamplerel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["h2s"]) -> MetaOapg.properties.h2s: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["h2smethod"]) -> MetaOapg.properties.h2smethod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["molecularmassc7"]) -> MetaOapg.properties.molecularmassc7: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["molecularmasstotalsample"]) -> MetaOapg.properties.molecularmasstotalsample: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presgrossheatref"]) -> MetaOapg.properties.presgrossheatref: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prespcacidgasfree"]) -> MetaOapg.properties.prespcacidgasfree: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prespcsample"]) -> MetaOapg.properties.prespcsample: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presrefc7"]) -> MetaOapg.properties.presrefc7: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presreftotalsample"]) -> MetaOapg.properties.presreftotalsample: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presvapourpentane"]) -> MetaOapg.properties.presvapourpentane: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temppcacidgasfree"]) -> MetaOapg.properties.temppcacidgasfree: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temppcsample"]) -> MetaOapg.properties.temppcsample: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temprefc7"]) -> MetaOapg.properties.temprefc7: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temprefgrossheat"]) -> MetaOapg.properties.temprefgrossheat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tempreftotalsample"]) -> MetaOapg.properties.tempreftotalsample: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["valmoistacidfreegrossheat"]) -> MetaOapg.properties.valmoistacidfreegrossheat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["valmoistfreegrossheat"]) -> MetaOapg.properties.valmoistfreegrossheat: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "com", "densityc7", "densityc7rel", "densitysample", "densitysamplerel", "h2s", "h2smethod", "idrecparent", "molecularmassc7", "molecularmasstotalsample", "presgrossheatref", "prespcacidgasfree", "prespcsample", "presrefc7", "presreftotalsample", "presvapourpentane", "temppcacidgasfree", "temppcsample", "temprefc7", "temprefgrossheat", "tempreftotalsample", "valmoistacidfreegrossheat", "valmoistfreegrossheat", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["densityc7"]) -> typing.Union[MetaOapg.properties.densityc7, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["densityc7rel"]) -> typing.Union[MetaOapg.properties.densityc7rel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["densitysample"]) -> typing.Union[MetaOapg.properties.densitysample, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["densitysamplerel"]) -> typing.Union[MetaOapg.properties.densitysamplerel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["h2s"]) -> typing.Union[MetaOapg.properties.h2s, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["h2smethod"]) -> typing.Union[MetaOapg.properties.h2smethod, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["molecularmassc7"]) -> typing.Union[MetaOapg.properties.molecularmassc7, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["molecularmasstotalsample"]) -> typing.Union[MetaOapg.properties.molecularmasstotalsample, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presgrossheatref"]) -> typing.Union[MetaOapg.properties.presgrossheatref, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prespcacidgasfree"]) -> typing.Union[MetaOapg.properties.prespcacidgasfree, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prespcsample"]) -> typing.Union[MetaOapg.properties.prespcsample, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presrefc7"]) -> typing.Union[MetaOapg.properties.presrefc7, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presreftotalsample"]) -> typing.Union[MetaOapg.properties.presreftotalsample, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presvapourpentane"]) -> typing.Union[MetaOapg.properties.presvapourpentane, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temppcacidgasfree"]) -> typing.Union[MetaOapg.properties.temppcacidgasfree, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temppcsample"]) -> typing.Union[MetaOapg.properties.temppcsample, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temprefc7"]) -> typing.Union[MetaOapg.properties.temprefc7, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temprefgrossheat"]) -> typing.Union[MetaOapg.properties.temprefgrossheat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tempreftotalsample"]) -> typing.Union[MetaOapg.properties.tempreftotalsample, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["valmoistacidfreegrossheat"]) -> typing.Union[MetaOapg.properties.valmoistacidfreegrossheat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["valmoistfreegrossheat"]) -> typing.Union[MetaOapg.properties.valmoistfreegrossheat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "com", "densityc7", "densityc7rel", "densitysample", "densitysamplerel", "h2s", "h2smethod", "idrecparent", "molecularmassc7", "molecularmasstotalsample", "presgrossheatref", "prespcacidgasfree", "prespcsample", "presrefc7", "presreftotalsample", "presvapourpentane", "temppcacidgasfree", "temppcsample", "temprefc7", "temprefgrossheat", "tempreftotalsample", "valmoistacidfreegrossheat", "valmoistfreegrossheat", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        densityc7: typing.Union[MetaOapg.properties.densityc7, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        densityc7rel: typing.Union[MetaOapg.properties.densityc7rel, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        densitysample: typing.Union[MetaOapg.properties.densitysample, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        densitysamplerel: typing.Union[MetaOapg.properties.densitysamplerel, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        h2s: typing.Union[MetaOapg.properties.h2s, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        h2smethod: typing.Union[MetaOapg.properties.h2smethod, str, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        molecularmassc7: typing.Union[MetaOapg.properties.molecularmassc7, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        molecularmasstotalsample: typing.Union[MetaOapg.properties.molecularmasstotalsample, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presgrossheatref: typing.Union[MetaOapg.properties.presgrossheatref, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prespcacidgasfree: typing.Union[MetaOapg.properties.prespcacidgasfree, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prespcsample: typing.Union[MetaOapg.properties.prespcsample, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presrefc7: typing.Union[MetaOapg.properties.presrefc7, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presreftotalsample: typing.Union[MetaOapg.properties.presreftotalsample, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presvapourpentane: typing.Union[MetaOapg.properties.presvapourpentane, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temppcacidgasfree: typing.Union[MetaOapg.properties.temppcacidgasfree, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temppcsample: typing.Union[MetaOapg.properties.temppcsample, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temprefc7: typing.Union[MetaOapg.properties.temprefc7, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temprefgrossheat: typing.Union[MetaOapg.properties.temprefgrossheat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tempreftotalsample: typing.Union[MetaOapg.properties.tempreftotalsample, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        valmoistacidfreegrossheat: typing.Union[MetaOapg.properties.valmoistacidfreegrossheat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        valmoistfreegrossheat: typing.Union[MetaOapg.properties.valmoistfreegrossheat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'GasPropertiesData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            com=com,
            densityc7=densityc7,
            densityc7rel=densityc7rel,
            densitysample=densitysample,
            densitysamplerel=densitysamplerel,
            h2s=h2s,
            h2smethod=h2smethod,
            idrecparent=idrecparent,
            molecularmassc7=molecularmassc7,
            molecularmasstotalsample=molecularmasstotalsample,
            presgrossheatref=presgrossheatref,
            prespcacidgasfree=prespcacidgasfree,
            prespcsample=prespcsample,
            presrefc7=presrefc7,
            presreftotalsample=presreftotalsample,
            presvapourpentane=presvapourpentane,
            temppcacidgasfree=temppcacidgasfree,
            temppcsample=temppcsample,
            temprefc7=temprefc7,
            temprefgrossheat=temprefgrossheat,
            tempreftotalsample=tempreftotalsample,
            valmoistacidfreegrossheat=valmoistacidfreegrossheat,
            valmoistfreegrossheat=valmoistfreegrossheat,
            _configuration=_configuration,
            **kwargs,
        )
