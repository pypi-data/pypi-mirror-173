# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class KickData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            depthend = schemas.NumberSchema
            depthstart = schemas.NumberSchema
            dttmend = schemas.DateTimeSchema
            dttmstart = schemas.DateTimeSchema
            fluiddes = schemas.StrSchema
            idrecparent = schemas.StrSchema
            idrecwellbore = schemas.StrSchema
            inikickheight = schemas.NumberSchema
            kickclass = schemas.StrSchema
            kickindicator = schemas.StrSchema
            killprocedure = schemas.StrSchema
            opsinprog = schemas.StrSchema
            prespump = schemas.NumberSchema
            pressic = schemas.NumberSchema
            pressidp = schemas.NumberSchema
            ratepump = schemas.NumberSchema
            typ1 = schemas.StrSchema
            typ2 = schemas.StrSchema
            volkick = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "depthend": depthend,
                "depthstart": depthstart,
                "dttmend": dttmend,
                "dttmstart": dttmstart,
                "fluiddes": fluiddes,
                "idrecparent": idrecparent,
                "idrecwellbore": idrecwellbore,
                "inikickheight": inikickheight,
                "kickclass": kickclass,
                "kickindicator": kickindicator,
                "killprocedure": killprocedure,
                "opsinprog": opsinprog,
                "prespump": prespump,
                "pressic": pressic,
                "pressidp": pressidp,
                "ratepump": ratepump,
                "typ1": typ1,
                "typ2": typ2,
                "volkick": volkick,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthend"]) -> MetaOapg.properties.depthend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthstart"]) -> MetaOapg.properties.depthstart: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmend"]) -> MetaOapg.properties.dttmend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmstart"]) -> MetaOapg.properties.dttmstart: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fluiddes"]) -> MetaOapg.properties.fluiddes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecwellbore"]) -> MetaOapg.properties.idrecwellbore: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["inikickheight"]) -> MetaOapg.properties.inikickheight: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["kickclass"]) -> MetaOapg.properties.kickclass: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["kickindicator"]) -> MetaOapg.properties.kickindicator: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["killprocedure"]) -> MetaOapg.properties.killprocedure: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["opsinprog"]) -> MetaOapg.properties.opsinprog: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prespump"]) -> MetaOapg.properties.prespump: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pressic"]) -> MetaOapg.properties.pressic: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pressidp"]) -> MetaOapg.properties.pressidp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ratepump"]) -> MetaOapg.properties.ratepump: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["typ1"]) -> MetaOapg.properties.typ1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["typ2"]) -> MetaOapg.properties.typ2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volkick"]) -> MetaOapg.properties.volkick: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "depthend", "depthstart", "dttmend", "dttmstart", "fluiddes", "idrecparent", "idrecwellbore", "inikickheight", "kickclass", "kickindicator", "killprocedure", "opsinprog", "prespump", "pressic", "pressidp", "ratepump", "typ1", "typ2", "volkick", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthend"]) -> typing.Union[MetaOapg.properties.depthend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthstart"]) -> typing.Union[MetaOapg.properties.depthstart, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmend"]) -> typing.Union[MetaOapg.properties.dttmend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmstart"]) -> typing.Union[MetaOapg.properties.dttmstart, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fluiddes"]) -> typing.Union[MetaOapg.properties.fluiddes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecwellbore"]) -> typing.Union[MetaOapg.properties.idrecwellbore, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["inikickheight"]) -> typing.Union[MetaOapg.properties.inikickheight, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["kickclass"]) -> typing.Union[MetaOapg.properties.kickclass, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["kickindicator"]) -> typing.Union[MetaOapg.properties.kickindicator, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["killprocedure"]) -> typing.Union[MetaOapg.properties.killprocedure, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["opsinprog"]) -> typing.Union[MetaOapg.properties.opsinprog, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prespump"]) -> typing.Union[MetaOapg.properties.prespump, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pressic"]) -> typing.Union[MetaOapg.properties.pressic, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pressidp"]) -> typing.Union[MetaOapg.properties.pressidp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ratepump"]) -> typing.Union[MetaOapg.properties.ratepump, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["typ1"]) -> typing.Union[MetaOapg.properties.typ1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["typ2"]) -> typing.Union[MetaOapg.properties.typ2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volkick"]) -> typing.Union[MetaOapg.properties.volkick, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "depthend", "depthstart", "dttmend", "dttmstart", "fluiddes", "idrecparent", "idrecwellbore", "inikickheight", "kickclass", "kickindicator", "killprocedure", "opsinprog", "prespump", "pressic", "pressidp", "ratepump", "typ1", "typ2", "volkick", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        depthend: typing.Union[MetaOapg.properties.depthend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthstart: typing.Union[MetaOapg.properties.depthstart, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        dttmend: typing.Union[MetaOapg.properties.dttmend, str, datetime, schemas.Unset] = schemas.unset,
        dttmstart: typing.Union[MetaOapg.properties.dttmstart, str, datetime, schemas.Unset] = schemas.unset,
        fluiddes: typing.Union[MetaOapg.properties.fluiddes, str, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        idrecwellbore: typing.Union[MetaOapg.properties.idrecwellbore, str, schemas.Unset] = schemas.unset,
        inikickheight: typing.Union[MetaOapg.properties.inikickheight, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        kickclass: typing.Union[MetaOapg.properties.kickclass, str, schemas.Unset] = schemas.unset,
        kickindicator: typing.Union[MetaOapg.properties.kickindicator, str, schemas.Unset] = schemas.unset,
        killprocedure: typing.Union[MetaOapg.properties.killprocedure, str, schemas.Unset] = schemas.unset,
        opsinprog: typing.Union[MetaOapg.properties.opsinprog, str, schemas.Unset] = schemas.unset,
        prespump: typing.Union[MetaOapg.properties.prespump, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        pressic: typing.Union[MetaOapg.properties.pressic, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        pressidp: typing.Union[MetaOapg.properties.pressidp, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ratepump: typing.Union[MetaOapg.properties.ratepump, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        typ1: typing.Union[MetaOapg.properties.typ1, str, schemas.Unset] = schemas.unset,
        typ2: typing.Union[MetaOapg.properties.typ2, str, schemas.Unset] = schemas.unset,
        volkick: typing.Union[MetaOapg.properties.volkick, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'KickData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            depthend=depthend,
            depthstart=depthstart,
            dttmend=dttmend,
            dttmstart=dttmstart,
            fluiddes=fluiddes,
            idrecparent=idrecparent,
            idrecwellbore=idrecwellbore,
            inikickheight=inikickheight,
            kickclass=kickclass,
            kickindicator=kickindicator,
            killprocedure=killprocedure,
            opsinprog=opsinprog,
            prespump=prespump,
            pressic=pressic,
            pressidp=pressidp,
            ratepump=ratepump,
            typ1=typ1,
            typ2=typ2,
            volkick=volkick,
            _configuration=_configuration,
            **kwargs,
        )
