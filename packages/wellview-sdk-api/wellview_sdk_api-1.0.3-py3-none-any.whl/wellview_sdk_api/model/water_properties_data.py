# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class WaterPropertiesData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            com = schemas.StrSchema
            densityrel = schemas.NumberSchema
            h2s = schemas.NumberSchema
            idrecparent = schemas.StrSchema
            ph = schemas.NumberSchema
            refractiveindex = schemas.NumberSchema
            resistivity = schemas.NumberSchema
            salinity = schemas.NumberSchema
            solidstotalevap = schemas.NumberSchema
            solidstotallignition = schemas.NumberSchema
            temprefdensityrel = schemas.NumberSchema
            temprefh2s = schemas.NumberSchema
            temprefph = schemas.NumberSchema
            temprefrefractiveindex = schemas.NumberSchema
            temprefresistivity = schemas.NumberSchema
            temprefsolidstotalevap = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "com": com,
                "densityrel": densityrel,
                "h2s": h2s,
                "idrecparent": idrecparent,
                "ph": ph,
                "refractiveindex": refractiveindex,
                "resistivity": resistivity,
                "salinity": salinity,
                "solidstotalevap": solidstotalevap,
                "solidstotallignition": solidstotallignition,
                "temprefdensityrel": temprefdensityrel,
                "temprefh2s": temprefh2s,
                "temprefph": temprefph,
                "temprefrefractiveindex": temprefrefractiveindex,
                "temprefresistivity": temprefresistivity,
                "temprefsolidstotalevap": temprefsolidstotalevap,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["densityrel"]) -> MetaOapg.properties.densityrel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["h2s"]) -> MetaOapg.properties.h2s: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ph"]) -> MetaOapg.properties.ph: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["refractiveindex"]) -> MetaOapg.properties.refractiveindex: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["resistivity"]) -> MetaOapg.properties.resistivity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["salinity"]) -> MetaOapg.properties.salinity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["solidstotalevap"]) -> MetaOapg.properties.solidstotalevap: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["solidstotallignition"]) -> MetaOapg.properties.solidstotallignition: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temprefdensityrel"]) -> MetaOapg.properties.temprefdensityrel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temprefh2s"]) -> MetaOapg.properties.temprefh2s: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temprefph"]) -> MetaOapg.properties.temprefph: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temprefrefractiveindex"]) -> MetaOapg.properties.temprefrefractiveindex: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temprefresistivity"]) -> MetaOapg.properties.temprefresistivity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temprefsolidstotalevap"]) -> MetaOapg.properties.temprefsolidstotalevap: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "com", "densityrel", "h2s", "idrecparent", "ph", "refractiveindex", "resistivity", "salinity", "solidstotalevap", "solidstotallignition", "temprefdensityrel", "temprefh2s", "temprefph", "temprefrefractiveindex", "temprefresistivity", "temprefsolidstotalevap", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["densityrel"]) -> typing.Union[MetaOapg.properties.densityrel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["h2s"]) -> typing.Union[MetaOapg.properties.h2s, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ph"]) -> typing.Union[MetaOapg.properties.ph, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["refractiveindex"]) -> typing.Union[MetaOapg.properties.refractiveindex, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["resistivity"]) -> typing.Union[MetaOapg.properties.resistivity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["salinity"]) -> typing.Union[MetaOapg.properties.salinity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["solidstotalevap"]) -> typing.Union[MetaOapg.properties.solidstotalevap, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["solidstotallignition"]) -> typing.Union[MetaOapg.properties.solidstotallignition, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temprefdensityrel"]) -> typing.Union[MetaOapg.properties.temprefdensityrel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temprefh2s"]) -> typing.Union[MetaOapg.properties.temprefh2s, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temprefph"]) -> typing.Union[MetaOapg.properties.temprefph, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temprefrefractiveindex"]) -> typing.Union[MetaOapg.properties.temprefrefractiveindex, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temprefresistivity"]) -> typing.Union[MetaOapg.properties.temprefresistivity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temprefsolidstotalevap"]) -> typing.Union[MetaOapg.properties.temprefsolidstotalevap, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "com", "densityrel", "h2s", "idrecparent", "ph", "refractiveindex", "resistivity", "salinity", "solidstotalevap", "solidstotallignition", "temprefdensityrel", "temprefh2s", "temprefph", "temprefrefractiveindex", "temprefresistivity", "temprefsolidstotalevap", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        densityrel: typing.Union[MetaOapg.properties.densityrel, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        h2s: typing.Union[MetaOapg.properties.h2s, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        ph: typing.Union[MetaOapg.properties.ph, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        refractiveindex: typing.Union[MetaOapg.properties.refractiveindex, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        resistivity: typing.Union[MetaOapg.properties.resistivity, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        salinity: typing.Union[MetaOapg.properties.salinity, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        solidstotalevap: typing.Union[MetaOapg.properties.solidstotalevap, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        solidstotallignition: typing.Union[MetaOapg.properties.solidstotallignition, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temprefdensityrel: typing.Union[MetaOapg.properties.temprefdensityrel, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temprefh2s: typing.Union[MetaOapg.properties.temprefh2s, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temprefph: typing.Union[MetaOapg.properties.temprefph, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temprefrefractiveindex: typing.Union[MetaOapg.properties.temprefrefractiveindex, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temprefresistivity: typing.Union[MetaOapg.properties.temprefresistivity, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temprefsolidstotalevap: typing.Union[MetaOapg.properties.temprefsolidstotalevap, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'WaterPropertiesData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            com=com,
            densityrel=densityrel,
            h2s=h2s,
            idrecparent=idrecparent,
            ph=ph,
            refractiveindex=refractiveindex,
            resistivity=resistivity,
            salinity=salinity,
            solidstotalevap=solidstotalevap,
            solidstotallignition=solidstotallignition,
            temprefdensityrel=temprefdensityrel,
            temprefh2s=temprefh2s,
            temprefph=temprefph,
            temprefrefractiveindex=temprefrefractiveindex,
            temprefresistivity=temprefresistivity,
            temprefsolidstotalevap=temprefsolidstotalevap,
            _configuration=_configuration,
            **kwargs,
        )
