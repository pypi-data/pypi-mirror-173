# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class SSSVTestData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            com = schemas.StrSchema
            correctactrqd = schemas.BoolSchema
            dttm = schemas.DateTimeSchema
            idrecitem = schemas.StrSchema
            idrecjob = schemas.StrSchema
            presctrlln = schemas.NumberSchema
            presctrllnbldup = schemas.NumberSchema
            presctrllnbleeddwn = schemas.NumberSchema
            presmaxdiff = schemas.NumberSchema
            prestubingbldup = schemas.NumberSchema
            prestubingbleeddwn = schemas.NumberSchema
            preswhsensortrip = schemas.NumberSchema
            rateleakoff = schemas.NumberSchema
            tmctrllnbldup = schemas.NumberSchema
            tmtubingbldup = schemas.NumberSchema
            volvoid = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "com": com,
                "correctactrqd": correctactrqd,
                "dttm": dttm,
                "idrecitem": idrecitem,
                "idrecjob": idrecjob,
                "presctrlln": presctrlln,
                "presctrllnbldup": presctrllnbldup,
                "presctrllnbleeddwn": presctrllnbleeddwn,
                "presmaxdiff": presmaxdiff,
                "prestubingbldup": prestubingbldup,
                "prestubingbleeddwn": prestubingbleeddwn,
                "preswhsensortrip": preswhsensortrip,
                "rateleakoff": rateleakoff,
                "tmctrllnbldup": tmctrllnbldup,
                "tmtubingbldup": tmtubingbldup,
                "volvoid": volvoid,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["correctactrqd"]) -> MetaOapg.properties.correctactrqd: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttm"]) -> MetaOapg.properties.dttm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecitem"]) -> MetaOapg.properties.idrecitem: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecjob"]) -> MetaOapg.properties.idrecjob: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presctrlln"]) -> MetaOapg.properties.presctrlln: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presctrllnbldup"]) -> MetaOapg.properties.presctrllnbldup: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presctrllnbleeddwn"]) -> MetaOapg.properties.presctrllnbleeddwn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presmaxdiff"]) -> MetaOapg.properties.presmaxdiff: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prestubingbldup"]) -> MetaOapg.properties.prestubingbldup: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prestubingbleeddwn"]) -> MetaOapg.properties.prestubingbleeddwn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["preswhsensortrip"]) -> MetaOapg.properties.preswhsensortrip: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rateleakoff"]) -> MetaOapg.properties.rateleakoff: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tmctrllnbldup"]) -> MetaOapg.properties.tmctrllnbldup: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tmtubingbldup"]) -> MetaOapg.properties.tmtubingbldup: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volvoid"]) -> MetaOapg.properties.volvoid: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "com", "correctactrqd", "dttm", "idrecitem", "idrecjob", "presctrlln", "presctrllnbldup", "presctrllnbleeddwn", "presmaxdiff", "prestubingbldup", "prestubingbleeddwn", "preswhsensortrip", "rateleakoff", "tmctrllnbldup", "tmtubingbldup", "volvoid", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["correctactrqd"]) -> typing.Union[MetaOapg.properties.correctactrqd, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttm"]) -> typing.Union[MetaOapg.properties.dttm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecitem"]) -> typing.Union[MetaOapg.properties.idrecitem, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecjob"]) -> typing.Union[MetaOapg.properties.idrecjob, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presctrlln"]) -> typing.Union[MetaOapg.properties.presctrlln, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presctrllnbldup"]) -> typing.Union[MetaOapg.properties.presctrllnbldup, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presctrllnbleeddwn"]) -> typing.Union[MetaOapg.properties.presctrllnbleeddwn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presmaxdiff"]) -> typing.Union[MetaOapg.properties.presmaxdiff, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prestubingbldup"]) -> typing.Union[MetaOapg.properties.prestubingbldup, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prestubingbleeddwn"]) -> typing.Union[MetaOapg.properties.prestubingbleeddwn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["preswhsensortrip"]) -> typing.Union[MetaOapg.properties.preswhsensortrip, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rateleakoff"]) -> typing.Union[MetaOapg.properties.rateleakoff, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tmctrllnbldup"]) -> typing.Union[MetaOapg.properties.tmctrllnbldup, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tmtubingbldup"]) -> typing.Union[MetaOapg.properties.tmtubingbldup, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volvoid"]) -> typing.Union[MetaOapg.properties.volvoid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "com", "correctactrqd", "dttm", "idrecitem", "idrecjob", "presctrlln", "presctrllnbldup", "presctrllnbleeddwn", "presmaxdiff", "prestubingbldup", "prestubingbleeddwn", "preswhsensortrip", "rateleakoff", "tmctrllnbldup", "tmtubingbldup", "volvoid", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        correctactrqd: typing.Union[MetaOapg.properties.correctactrqd, bool, schemas.Unset] = schemas.unset,
        dttm: typing.Union[MetaOapg.properties.dttm, str, datetime, schemas.Unset] = schemas.unset,
        idrecitem: typing.Union[MetaOapg.properties.idrecitem, str, schemas.Unset] = schemas.unset,
        idrecjob: typing.Union[MetaOapg.properties.idrecjob, str, schemas.Unset] = schemas.unset,
        presctrlln: typing.Union[MetaOapg.properties.presctrlln, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presctrllnbldup: typing.Union[MetaOapg.properties.presctrllnbldup, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presctrllnbleeddwn: typing.Union[MetaOapg.properties.presctrllnbleeddwn, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presmaxdiff: typing.Union[MetaOapg.properties.presmaxdiff, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prestubingbldup: typing.Union[MetaOapg.properties.prestubingbldup, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prestubingbleeddwn: typing.Union[MetaOapg.properties.prestubingbleeddwn, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        preswhsensortrip: typing.Union[MetaOapg.properties.preswhsensortrip, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rateleakoff: typing.Union[MetaOapg.properties.rateleakoff, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tmctrllnbldup: typing.Union[MetaOapg.properties.tmctrllnbldup, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tmtubingbldup: typing.Union[MetaOapg.properties.tmtubingbldup, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volvoid: typing.Union[MetaOapg.properties.volvoid, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SSSVTestData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            com=com,
            correctactrqd=correctactrqd,
            dttm=dttm,
            idrecitem=idrecitem,
            idrecjob=idrecjob,
            presctrlln=presctrlln,
            presctrllnbldup=presctrllnbldup,
            presctrllnbleeddwn=presctrllnbleeddwn,
            presmaxdiff=presmaxdiff,
            prestubingbldup=prestubingbldup,
            prestubingbleeddwn=prestubingbleeddwn,
            preswhsensortrip=preswhsensortrip,
            rateleakoff=rateleakoff,
            tmctrllnbldup=tmctrllnbldup,
            tmtubingbldup=tmtubingbldup,
            volvoid=volvoid,
            _configuration=_configuration,
            **kwargs,
        )
