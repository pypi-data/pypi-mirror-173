# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class CasingStringsData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            centralizers = schemas.StrSchema
            centralizersstandoffavg = schemas.NumberSchema
            centralizersstandoffmin = schemas.NumberSchema
            com = schemas.StrSchema
            contractor = schemas.StrSchema
            depthbtm = schemas.NumberSchema
            depthcutpull = schemas.NumberSchema
            des = schemas.StrSchema
            dttmcutpull = schemas.DateTimeSchema
            dttmonbottom = schemas.DateTimeSchema
            dttmoutofhole = schemas.DateTimeSchema
            dttmpickup = schemas.DateTimeSchema
            dttmpull = schemas.DateTimeSchema
            dttmrun = schemas.DateTimeSchema
            idrecjobpull = schemas.StrSchema
            idrecjobrun = schemas.StrSchema
            idrecwellbore = schemas.StrSchema
            latposition = schemas.StrSchema
            notecutpull = schemas.StrSchema
            operatingpresslimit = schemas.NumberSchema
            proposedcutpull = schemas.BoolSchema
            proposedpull = schemas.BoolSchema
            proposedrun = schemas.BoolSchema
            pullreason = schemas.StrSchema
            pullreasondetail = schemas.StrSchema
            reasoncutpull = schemas.StrSchema
            scratchers = schemas.StrSchema
            stringwtdown = schemas.NumberSchema
            stringwtup = schemas.NumberSchema
            tension = schemas.NumberSchema
            travelequipwt = schemas.NumberSchema
            usertxt1 = schemas.StrSchema
            usertxt2 = schemas.StrSchema
            usertxt3 = schemas.StrSchema
            volumeshoetrack = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "centralizers": centralizers,
                "centralizersstandoffavg": centralizersstandoffavg,
                "centralizersstandoffmin": centralizersstandoffmin,
                "com": com,
                "contractor": contractor,
                "depthbtm": depthbtm,
                "depthcutpull": depthcutpull,
                "des": des,
                "dttmcutpull": dttmcutpull,
                "dttmonbottom": dttmonbottom,
                "dttmoutofhole": dttmoutofhole,
                "dttmpickup": dttmpickup,
                "dttmpull": dttmpull,
                "dttmrun": dttmrun,
                "idrecjobpull": idrecjobpull,
                "idrecjobrun": idrecjobrun,
                "idrecwellbore": idrecwellbore,
                "latposition": latposition,
                "notecutpull": notecutpull,
                "operatingpresslimit": operatingpresslimit,
                "proposedcutpull": proposedcutpull,
                "proposedpull": proposedpull,
                "proposedrun": proposedrun,
                "pullreason": pullreason,
                "pullreasondetail": pullreasondetail,
                "reasoncutpull": reasoncutpull,
                "scratchers": scratchers,
                "stringwtdown": stringwtdown,
                "stringwtup": stringwtup,
                "tension": tension,
                "travelequipwt": travelequipwt,
                "usertxt1": usertxt1,
                "usertxt2": usertxt2,
                "usertxt3": usertxt3,
                "volumeshoetrack": volumeshoetrack,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["centralizers"]) -> MetaOapg.properties.centralizers: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["centralizersstandoffavg"]) -> MetaOapg.properties.centralizersstandoffavg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["centralizersstandoffmin"]) -> MetaOapg.properties.centralizersstandoffmin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contractor"]) -> MetaOapg.properties.contractor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthbtm"]) -> MetaOapg.properties.depthbtm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthcutpull"]) -> MetaOapg.properties.depthcutpull: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["des"]) -> MetaOapg.properties.des: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmcutpull"]) -> MetaOapg.properties.dttmcutpull: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmonbottom"]) -> MetaOapg.properties.dttmonbottom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmoutofhole"]) -> MetaOapg.properties.dttmoutofhole: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmpickup"]) -> MetaOapg.properties.dttmpickup: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmpull"]) -> MetaOapg.properties.dttmpull: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmrun"]) -> MetaOapg.properties.dttmrun: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecjobpull"]) -> MetaOapg.properties.idrecjobpull: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecjobrun"]) -> MetaOapg.properties.idrecjobrun: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecwellbore"]) -> MetaOapg.properties.idrecwellbore: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["latposition"]) -> MetaOapg.properties.latposition: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notecutpull"]) -> MetaOapg.properties.notecutpull: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["operatingpresslimit"]) -> MetaOapg.properties.operatingpresslimit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["proposedcutpull"]) -> MetaOapg.properties.proposedcutpull: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["proposedpull"]) -> MetaOapg.properties.proposedpull: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["proposedrun"]) -> MetaOapg.properties.proposedrun: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pullreason"]) -> MetaOapg.properties.pullreason: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pullreasondetail"]) -> MetaOapg.properties.pullreasondetail: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reasoncutpull"]) -> MetaOapg.properties.reasoncutpull: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["scratchers"]) -> MetaOapg.properties.scratchers: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stringwtdown"]) -> MetaOapg.properties.stringwtdown: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stringwtup"]) -> MetaOapg.properties.stringwtup: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tension"]) -> MetaOapg.properties.tension: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["travelequipwt"]) -> MetaOapg.properties.travelequipwt: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usertxt1"]) -> MetaOapg.properties.usertxt1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usertxt2"]) -> MetaOapg.properties.usertxt2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usertxt3"]) -> MetaOapg.properties.usertxt3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volumeshoetrack"]) -> MetaOapg.properties.volumeshoetrack: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "centralizers", "centralizersstandoffavg", "centralizersstandoffmin", "com", "contractor", "depthbtm", "depthcutpull", "des", "dttmcutpull", "dttmonbottom", "dttmoutofhole", "dttmpickup", "dttmpull", "dttmrun", "idrecjobpull", "idrecjobrun", "idrecwellbore", "latposition", "notecutpull", "operatingpresslimit", "proposedcutpull", "proposedpull", "proposedrun", "pullreason", "pullreasondetail", "reasoncutpull", "scratchers", "stringwtdown", "stringwtup", "tension", "travelequipwt", "usertxt1", "usertxt2", "usertxt3", "volumeshoetrack", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["centralizers"]) -> typing.Union[MetaOapg.properties.centralizers, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["centralizersstandoffavg"]) -> typing.Union[MetaOapg.properties.centralizersstandoffavg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["centralizersstandoffmin"]) -> typing.Union[MetaOapg.properties.centralizersstandoffmin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contractor"]) -> typing.Union[MetaOapg.properties.contractor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthbtm"]) -> typing.Union[MetaOapg.properties.depthbtm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthcutpull"]) -> typing.Union[MetaOapg.properties.depthcutpull, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["des"]) -> typing.Union[MetaOapg.properties.des, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmcutpull"]) -> typing.Union[MetaOapg.properties.dttmcutpull, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmonbottom"]) -> typing.Union[MetaOapg.properties.dttmonbottom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmoutofhole"]) -> typing.Union[MetaOapg.properties.dttmoutofhole, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmpickup"]) -> typing.Union[MetaOapg.properties.dttmpickup, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmpull"]) -> typing.Union[MetaOapg.properties.dttmpull, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmrun"]) -> typing.Union[MetaOapg.properties.dttmrun, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecjobpull"]) -> typing.Union[MetaOapg.properties.idrecjobpull, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecjobrun"]) -> typing.Union[MetaOapg.properties.idrecjobrun, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecwellbore"]) -> typing.Union[MetaOapg.properties.idrecwellbore, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["latposition"]) -> typing.Union[MetaOapg.properties.latposition, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notecutpull"]) -> typing.Union[MetaOapg.properties.notecutpull, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["operatingpresslimit"]) -> typing.Union[MetaOapg.properties.operatingpresslimit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["proposedcutpull"]) -> typing.Union[MetaOapg.properties.proposedcutpull, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["proposedpull"]) -> typing.Union[MetaOapg.properties.proposedpull, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["proposedrun"]) -> typing.Union[MetaOapg.properties.proposedrun, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pullreason"]) -> typing.Union[MetaOapg.properties.pullreason, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pullreasondetail"]) -> typing.Union[MetaOapg.properties.pullreasondetail, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reasoncutpull"]) -> typing.Union[MetaOapg.properties.reasoncutpull, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["scratchers"]) -> typing.Union[MetaOapg.properties.scratchers, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stringwtdown"]) -> typing.Union[MetaOapg.properties.stringwtdown, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stringwtup"]) -> typing.Union[MetaOapg.properties.stringwtup, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tension"]) -> typing.Union[MetaOapg.properties.tension, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["travelequipwt"]) -> typing.Union[MetaOapg.properties.travelequipwt, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usertxt1"]) -> typing.Union[MetaOapg.properties.usertxt1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usertxt2"]) -> typing.Union[MetaOapg.properties.usertxt2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usertxt3"]) -> typing.Union[MetaOapg.properties.usertxt3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volumeshoetrack"]) -> typing.Union[MetaOapg.properties.volumeshoetrack, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "centralizers", "centralizersstandoffavg", "centralizersstandoffmin", "com", "contractor", "depthbtm", "depthcutpull", "des", "dttmcutpull", "dttmonbottom", "dttmoutofhole", "dttmpickup", "dttmpull", "dttmrun", "idrecjobpull", "idrecjobrun", "idrecwellbore", "latposition", "notecutpull", "operatingpresslimit", "proposedcutpull", "proposedpull", "proposedrun", "pullreason", "pullreasondetail", "reasoncutpull", "scratchers", "stringwtdown", "stringwtup", "tension", "travelequipwt", "usertxt1", "usertxt2", "usertxt3", "volumeshoetrack", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        centralizers: typing.Union[MetaOapg.properties.centralizers, str, schemas.Unset] = schemas.unset,
        centralizersstandoffavg: typing.Union[MetaOapg.properties.centralizersstandoffavg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        centralizersstandoffmin: typing.Union[MetaOapg.properties.centralizersstandoffmin, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        contractor: typing.Union[MetaOapg.properties.contractor, str, schemas.Unset] = schemas.unset,
        depthbtm: typing.Union[MetaOapg.properties.depthbtm, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthcutpull: typing.Union[MetaOapg.properties.depthcutpull, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        des: typing.Union[MetaOapg.properties.des, str, schemas.Unset] = schemas.unset,
        dttmcutpull: typing.Union[MetaOapg.properties.dttmcutpull, str, datetime, schemas.Unset] = schemas.unset,
        dttmonbottom: typing.Union[MetaOapg.properties.dttmonbottom, str, datetime, schemas.Unset] = schemas.unset,
        dttmoutofhole: typing.Union[MetaOapg.properties.dttmoutofhole, str, datetime, schemas.Unset] = schemas.unset,
        dttmpickup: typing.Union[MetaOapg.properties.dttmpickup, str, datetime, schemas.Unset] = schemas.unset,
        dttmpull: typing.Union[MetaOapg.properties.dttmpull, str, datetime, schemas.Unset] = schemas.unset,
        dttmrun: typing.Union[MetaOapg.properties.dttmrun, str, datetime, schemas.Unset] = schemas.unset,
        idrecjobpull: typing.Union[MetaOapg.properties.idrecjobpull, str, schemas.Unset] = schemas.unset,
        idrecjobrun: typing.Union[MetaOapg.properties.idrecjobrun, str, schemas.Unset] = schemas.unset,
        idrecwellbore: typing.Union[MetaOapg.properties.idrecwellbore, str, schemas.Unset] = schemas.unset,
        latposition: typing.Union[MetaOapg.properties.latposition, str, schemas.Unset] = schemas.unset,
        notecutpull: typing.Union[MetaOapg.properties.notecutpull, str, schemas.Unset] = schemas.unset,
        operatingpresslimit: typing.Union[MetaOapg.properties.operatingpresslimit, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        proposedcutpull: typing.Union[MetaOapg.properties.proposedcutpull, bool, schemas.Unset] = schemas.unset,
        proposedpull: typing.Union[MetaOapg.properties.proposedpull, bool, schemas.Unset] = schemas.unset,
        proposedrun: typing.Union[MetaOapg.properties.proposedrun, bool, schemas.Unset] = schemas.unset,
        pullreason: typing.Union[MetaOapg.properties.pullreason, str, schemas.Unset] = schemas.unset,
        pullreasondetail: typing.Union[MetaOapg.properties.pullreasondetail, str, schemas.Unset] = schemas.unset,
        reasoncutpull: typing.Union[MetaOapg.properties.reasoncutpull, str, schemas.Unset] = schemas.unset,
        scratchers: typing.Union[MetaOapg.properties.scratchers, str, schemas.Unset] = schemas.unset,
        stringwtdown: typing.Union[MetaOapg.properties.stringwtdown, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        stringwtup: typing.Union[MetaOapg.properties.stringwtup, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tension: typing.Union[MetaOapg.properties.tension, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        travelequipwt: typing.Union[MetaOapg.properties.travelequipwt, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        usertxt1: typing.Union[MetaOapg.properties.usertxt1, str, schemas.Unset] = schemas.unset,
        usertxt2: typing.Union[MetaOapg.properties.usertxt2, str, schemas.Unset] = schemas.unset,
        usertxt3: typing.Union[MetaOapg.properties.usertxt3, str, schemas.Unset] = schemas.unset,
        volumeshoetrack: typing.Union[MetaOapg.properties.volumeshoetrack, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CasingStringsData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            centralizers=centralizers,
            centralizersstandoffavg=centralizersstandoffavg,
            centralizersstandoffmin=centralizersstandoffmin,
            com=com,
            contractor=contractor,
            depthbtm=depthbtm,
            depthcutpull=depthcutpull,
            des=des,
            dttmcutpull=dttmcutpull,
            dttmonbottom=dttmonbottom,
            dttmoutofhole=dttmoutofhole,
            dttmpickup=dttmpickup,
            dttmpull=dttmpull,
            dttmrun=dttmrun,
            idrecjobpull=idrecjobpull,
            idrecjobrun=idrecjobrun,
            idrecwellbore=idrecwellbore,
            latposition=latposition,
            notecutpull=notecutpull,
            operatingpresslimit=operatingpresslimit,
            proposedcutpull=proposedcutpull,
            proposedpull=proposedpull,
            proposedrun=proposedrun,
            pullreason=pullreason,
            pullreasondetail=pullreasondetail,
            reasoncutpull=reasoncutpull,
            scratchers=scratchers,
            stringwtdown=stringwtdown,
            stringwtup=stringwtup,
            tension=tension,
            travelequipwt=travelequipwt,
            usertxt1=usertxt1,
            usertxt2=usertxt2,
            usertxt3=usertxt3,
            volumeshoetrack=volumeshoetrack,
            _configuration=_configuration,
            **kwargs,
        )
