# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class OilPropertiesData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            apigravityafterclean = schemas.NumberSchema
            apigravityasreceived = schemas.NumberSchema
            asphaltene = schemas.NumberSchema
            bsw = schemas.NumberSchema
            color = schemas.StrSchema
            com = schemas.StrSchema
            densityafterclean = schemas.NumberSchema
            densityasreceived = schemas.NumberSchema
            densityreftemp = schemas.NumberSchema
            densityrelafterclean = schemas.NumberSchema
            densityrelasreceived = schemas.NumberSchema
            distillmethod = schemas.StrSchema
            idrecparent = schemas.StrSchema
            presbarometric = schemas.NumberSchema
            presvapour = schemas.NumberSchema
            salt = schemas.NumberSchema
            sulphur = schemas.NumberSchema
            tempboilinit = schemas.NumberSchema
            tempflashpointcc = schemas.NumberSchema
            tempflashpointoc = schemas.NumberSchema
            temppourpoint = schemas.NumberSchema
            temprefapigravity = schemas.NumberSchema
            temprefkerosene = schemas.NumberSchema
            temprefltgasoil = schemas.NumberSchema
            temprefnaptha = schemas.NumberSchema
            temproom = schemas.NumberSchema
            volfracdistillloss = schemas.NumberSchema
            volfrackerosene = schemas.NumberSchema
            volfracltgasoil = schemas.NumberSchema
            volfracnaptha = schemas.NumberSchema
            volfracrecovered = schemas.NumberSchema
            volfracresidue = schemas.NumberSchema
            volfracsediment = schemas.NumberSchema
            volfracwater = schemas.NumberSchema
            waxpercent = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "apigravityafterclean": apigravityafterclean,
                "apigravityasreceived": apigravityasreceived,
                "asphaltene": asphaltene,
                "bsw": bsw,
                "color": color,
                "com": com,
                "densityafterclean": densityafterclean,
                "densityasreceived": densityasreceived,
                "densityreftemp": densityreftemp,
                "densityrelafterclean": densityrelafterclean,
                "densityrelasreceived": densityrelasreceived,
                "distillmethod": distillmethod,
                "idrecparent": idrecparent,
                "presbarometric": presbarometric,
                "presvapour": presvapour,
                "salt": salt,
                "sulphur": sulphur,
                "tempboilinit": tempboilinit,
                "tempflashpointcc": tempflashpointcc,
                "tempflashpointoc": tempflashpointoc,
                "temppourpoint": temppourpoint,
                "temprefapigravity": temprefapigravity,
                "temprefkerosene": temprefkerosene,
                "temprefltgasoil": temprefltgasoil,
                "temprefnaptha": temprefnaptha,
                "temproom": temproom,
                "volfracdistillloss": volfracdistillloss,
                "volfrackerosene": volfrackerosene,
                "volfracltgasoil": volfracltgasoil,
                "volfracnaptha": volfracnaptha,
                "volfracrecovered": volfracrecovered,
                "volfracresidue": volfracresidue,
                "volfracsediment": volfracsediment,
                "volfracwater": volfracwater,
                "waxpercent": waxpercent,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["apigravityafterclean"]) -> MetaOapg.properties.apigravityafterclean: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["apigravityasreceived"]) -> MetaOapg.properties.apigravityasreceived: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["asphaltene"]) -> MetaOapg.properties.asphaltene: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bsw"]) -> MetaOapg.properties.bsw: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["color"]) -> MetaOapg.properties.color: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["densityafterclean"]) -> MetaOapg.properties.densityafterclean: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["densityasreceived"]) -> MetaOapg.properties.densityasreceived: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["densityreftemp"]) -> MetaOapg.properties.densityreftemp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["densityrelafterclean"]) -> MetaOapg.properties.densityrelafterclean: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["densityrelasreceived"]) -> MetaOapg.properties.densityrelasreceived: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["distillmethod"]) -> MetaOapg.properties.distillmethod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presbarometric"]) -> MetaOapg.properties.presbarometric: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presvapour"]) -> MetaOapg.properties.presvapour: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["salt"]) -> MetaOapg.properties.salt: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sulphur"]) -> MetaOapg.properties.sulphur: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tempboilinit"]) -> MetaOapg.properties.tempboilinit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tempflashpointcc"]) -> MetaOapg.properties.tempflashpointcc: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tempflashpointoc"]) -> MetaOapg.properties.tempflashpointoc: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temppourpoint"]) -> MetaOapg.properties.temppourpoint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temprefapigravity"]) -> MetaOapg.properties.temprefapigravity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temprefkerosene"]) -> MetaOapg.properties.temprefkerosene: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temprefltgasoil"]) -> MetaOapg.properties.temprefltgasoil: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temprefnaptha"]) -> MetaOapg.properties.temprefnaptha: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temproom"]) -> MetaOapg.properties.temproom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volfracdistillloss"]) -> MetaOapg.properties.volfracdistillloss: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volfrackerosene"]) -> MetaOapg.properties.volfrackerosene: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volfracltgasoil"]) -> MetaOapg.properties.volfracltgasoil: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volfracnaptha"]) -> MetaOapg.properties.volfracnaptha: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volfracrecovered"]) -> MetaOapg.properties.volfracrecovered: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volfracresidue"]) -> MetaOapg.properties.volfracresidue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volfracsediment"]) -> MetaOapg.properties.volfracsediment: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volfracwater"]) -> MetaOapg.properties.volfracwater: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["waxpercent"]) -> MetaOapg.properties.waxpercent: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "apigravityafterclean", "apigravityasreceived", "asphaltene", "bsw", "color", "com", "densityafterclean", "densityasreceived", "densityreftemp", "densityrelafterclean", "densityrelasreceived", "distillmethod", "idrecparent", "presbarometric", "presvapour", "salt", "sulphur", "tempboilinit", "tempflashpointcc", "tempflashpointoc", "temppourpoint", "temprefapigravity", "temprefkerosene", "temprefltgasoil", "temprefnaptha", "temproom", "volfracdistillloss", "volfrackerosene", "volfracltgasoil", "volfracnaptha", "volfracrecovered", "volfracresidue", "volfracsediment", "volfracwater", "waxpercent", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["apigravityafterclean"]) -> typing.Union[MetaOapg.properties.apigravityafterclean, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["apigravityasreceived"]) -> typing.Union[MetaOapg.properties.apigravityasreceived, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["asphaltene"]) -> typing.Union[MetaOapg.properties.asphaltene, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bsw"]) -> typing.Union[MetaOapg.properties.bsw, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["color"]) -> typing.Union[MetaOapg.properties.color, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["densityafterclean"]) -> typing.Union[MetaOapg.properties.densityafterclean, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["densityasreceived"]) -> typing.Union[MetaOapg.properties.densityasreceived, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["densityreftemp"]) -> typing.Union[MetaOapg.properties.densityreftemp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["densityrelafterclean"]) -> typing.Union[MetaOapg.properties.densityrelafterclean, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["densityrelasreceived"]) -> typing.Union[MetaOapg.properties.densityrelasreceived, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["distillmethod"]) -> typing.Union[MetaOapg.properties.distillmethod, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presbarometric"]) -> typing.Union[MetaOapg.properties.presbarometric, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presvapour"]) -> typing.Union[MetaOapg.properties.presvapour, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["salt"]) -> typing.Union[MetaOapg.properties.salt, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sulphur"]) -> typing.Union[MetaOapg.properties.sulphur, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tempboilinit"]) -> typing.Union[MetaOapg.properties.tempboilinit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tempflashpointcc"]) -> typing.Union[MetaOapg.properties.tempflashpointcc, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tempflashpointoc"]) -> typing.Union[MetaOapg.properties.tempflashpointoc, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temppourpoint"]) -> typing.Union[MetaOapg.properties.temppourpoint, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temprefapigravity"]) -> typing.Union[MetaOapg.properties.temprefapigravity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temprefkerosene"]) -> typing.Union[MetaOapg.properties.temprefkerosene, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temprefltgasoil"]) -> typing.Union[MetaOapg.properties.temprefltgasoil, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temprefnaptha"]) -> typing.Union[MetaOapg.properties.temprefnaptha, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temproom"]) -> typing.Union[MetaOapg.properties.temproom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volfracdistillloss"]) -> typing.Union[MetaOapg.properties.volfracdistillloss, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volfrackerosene"]) -> typing.Union[MetaOapg.properties.volfrackerosene, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volfracltgasoil"]) -> typing.Union[MetaOapg.properties.volfracltgasoil, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volfracnaptha"]) -> typing.Union[MetaOapg.properties.volfracnaptha, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volfracrecovered"]) -> typing.Union[MetaOapg.properties.volfracrecovered, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volfracresidue"]) -> typing.Union[MetaOapg.properties.volfracresidue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volfracsediment"]) -> typing.Union[MetaOapg.properties.volfracsediment, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volfracwater"]) -> typing.Union[MetaOapg.properties.volfracwater, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["waxpercent"]) -> typing.Union[MetaOapg.properties.waxpercent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "apigravityafterclean", "apigravityasreceived", "asphaltene", "bsw", "color", "com", "densityafterclean", "densityasreceived", "densityreftemp", "densityrelafterclean", "densityrelasreceived", "distillmethod", "idrecparent", "presbarometric", "presvapour", "salt", "sulphur", "tempboilinit", "tempflashpointcc", "tempflashpointoc", "temppourpoint", "temprefapigravity", "temprefkerosene", "temprefltgasoil", "temprefnaptha", "temproom", "volfracdistillloss", "volfrackerosene", "volfracltgasoil", "volfracnaptha", "volfracrecovered", "volfracresidue", "volfracsediment", "volfracwater", "waxpercent", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        apigravityafterclean: typing.Union[MetaOapg.properties.apigravityafterclean, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        apigravityasreceived: typing.Union[MetaOapg.properties.apigravityasreceived, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        asphaltene: typing.Union[MetaOapg.properties.asphaltene, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        bsw: typing.Union[MetaOapg.properties.bsw, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        color: typing.Union[MetaOapg.properties.color, str, schemas.Unset] = schemas.unset,
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        densityafterclean: typing.Union[MetaOapg.properties.densityafterclean, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        densityasreceived: typing.Union[MetaOapg.properties.densityasreceived, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        densityreftemp: typing.Union[MetaOapg.properties.densityreftemp, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        densityrelafterclean: typing.Union[MetaOapg.properties.densityrelafterclean, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        densityrelasreceived: typing.Union[MetaOapg.properties.densityrelasreceived, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        distillmethod: typing.Union[MetaOapg.properties.distillmethod, str, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        presbarometric: typing.Union[MetaOapg.properties.presbarometric, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presvapour: typing.Union[MetaOapg.properties.presvapour, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        salt: typing.Union[MetaOapg.properties.salt, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        sulphur: typing.Union[MetaOapg.properties.sulphur, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tempboilinit: typing.Union[MetaOapg.properties.tempboilinit, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tempflashpointcc: typing.Union[MetaOapg.properties.tempflashpointcc, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tempflashpointoc: typing.Union[MetaOapg.properties.tempflashpointoc, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temppourpoint: typing.Union[MetaOapg.properties.temppourpoint, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temprefapigravity: typing.Union[MetaOapg.properties.temprefapigravity, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temprefkerosene: typing.Union[MetaOapg.properties.temprefkerosene, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temprefltgasoil: typing.Union[MetaOapg.properties.temprefltgasoil, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temprefnaptha: typing.Union[MetaOapg.properties.temprefnaptha, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temproom: typing.Union[MetaOapg.properties.temproom, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volfracdistillloss: typing.Union[MetaOapg.properties.volfracdistillloss, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volfrackerosene: typing.Union[MetaOapg.properties.volfrackerosene, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volfracltgasoil: typing.Union[MetaOapg.properties.volfracltgasoil, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volfracnaptha: typing.Union[MetaOapg.properties.volfracnaptha, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volfracrecovered: typing.Union[MetaOapg.properties.volfracrecovered, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volfracresidue: typing.Union[MetaOapg.properties.volfracresidue, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volfracsediment: typing.Union[MetaOapg.properties.volfracsediment, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volfracwater: typing.Union[MetaOapg.properties.volfracwater, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        waxpercent: typing.Union[MetaOapg.properties.waxpercent, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'OilPropertiesData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            apigravityafterclean=apigravityafterclean,
            apigravityasreceived=apigravityasreceived,
            asphaltene=asphaltene,
            bsw=bsw,
            color=color,
            com=com,
            densityafterclean=densityafterclean,
            densityasreceived=densityasreceived,
            densityreftemp=densityreftemp,
            densityrelafterclean=densityrelafterclean,
            densityrelasreceived=densityrelasreceived,
            distillmethod=distillmethod,
            idrecparent=idrecparent,
            presbarometric=presbarometric,
            presvapour=presvapour,
            salt=salt,
            sulphur=sulphur,
            tempboilinit=tempboilinit,
            tempflashpointcc=tempflashpointcc,
            tempflashpointoc=tempflashpointoc,
            temppourpoint=temppourpoint,
            temprefapigravity=temprefapigravity,
            temprefkerosene=temprefkerosene,
            temprefltgasoil=temprefltgasoil,
            temprefnaptha=temprefnaptha,
            temproom=temproom,
            volfracdistillloss=volfracdistillloss,
            volfrackerosene=volfrackerosene,
            volfracltgasoil=volfracltgasoil,
            volfracnaptha=volfracnaptha,
            volfracrecovered=volfracrecovered,
            volfracresidue=volfracresidue,
            volfracsediment=volfracsediment,
            volfracwater=volfracwater,
            waxpercent=waxpercent,
            _configuration=_configuration,
            **kwargs,
        )
