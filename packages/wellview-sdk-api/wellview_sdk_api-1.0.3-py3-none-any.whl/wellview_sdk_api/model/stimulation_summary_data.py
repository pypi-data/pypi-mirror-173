# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class StimulationSummaryData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            com = schemas.StrSchema
            contractor = schemas.StrSchema
            contractsupt = schemas.StrSchema
            diversioncontractor = schemas.StrSchema
            diversionmethod = schemas.StrSchema
            dttmend = schemas.DateTimeSchema
            dttmstart = schemas.DateTimeSchema
            durpump = schemas.NumberSchema
            fluidefficiency = schemas.NumberSchema
            iconname = schemas.StrSchema
            idrecjob = schemas.StrSchema
            intervalno = schemas.IntSchema
            intervalnodesign = schemas.IntSchema
            massproptotal = schemas.NumberSchema
            powertotal = schemas.NumberSchema
            prestreatavg = schemas.NumberSchema
            prestreatmax = schemas.NumberSchema
            ratetreatavg = schemas.NumberSchema
            ratetreatmax = schemas.NumberSchema
            resulttechnical = schemas.StrSchema
            resulttechnicaldetail = schemas.StrSchema
            resulttechnicalnote = schemas.StrSchema
            temptreat = schemas.NumberSchema
            typ1 = schemas.StrSchema
            typ2 = schemas.StrSchema
            usernum1 = schemas.NumberSchema
            usernum2 = schemas.NumberSchema
            usernum3 = schemas.NumberSchema
            usertxt1 = schemas.StrSchema
            volcleantotal = schemas.NumberSchema
            volco2total = schemas.NumberSchema
            voln2total = schemas.NumberSchema
            volrecoveredtotal = schemas.NumberSchema
            volslurrytotal = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "com": com,
                "contractor": contractor,
                "contractsupt": contractsupt,
                "diversioncontractor": diversioncontractor,
                "diversionmethod": diversionmethod,
                "dttmend": dttmend,
                "dttmstart": dttmstart,
                "durpump": durpump,
                "fluidefficiency": fluidefficiency,
                "iconname": iconname,
                "idrecjob": idrecjob,
                "intervalno": intervalno,
                "intervalnodesign": intervalnodesign,
                "massproptotal": massproptotal,
                "powertotal": powertotal,
                "prestreatavg": prestreatavg,
                "prestreatmax": prestreatmax,
                "ratetreatavg": ratetreatavg,
                "ratetreatmax": ratetreatmax,
                "resulttechnical": resulttechnical,
                "resulttechnicaldetail": resulttechnicaldetail,
                "resulttechnicalnote": resulttechnicalnote,
                "temptreat": temptreat,
                "typ1": typ1,
                "typ2": typ2,
                "usernum1": usernum1,
                "usernum2": usernum2,
                "usernum3": usernum3,
                "usertxt1": usertxt1,
                "volcleantotal": volcleantotal,
                "volco2total": volco2total,
                "voln2total": voln2total,
                "volrecoveredtotal": volrecoveredtotal,
                "volslurrytotal": volslurrytotal,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contractor"]) -> MetaOapg.properties.contractor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contractsupt"]) -> MetaOapg.properties.contractsupt: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["diversioncontractor"]) -> MetaOapg.properties.diversioncontractor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["diversionmethod"]) -> MetaOapg.properties.diversionmethod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmend"]) -> MetaOapg.properties.dttmend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmstart"]) -> MetaOapg.properties.dttmstart: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["durpump"]) -> MetaOapg.properties.durpump: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fluidefficiency"]) -> MetaOapg.properties.fluidefficiency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["iconname"]) -> MetaOapg.properties.iconname: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecjob"]) -> MetaOapg.properties.idrecjob: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["intervalno"]) -> MetaOapg.properties.intervalno: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["intervalnodesign"]) -> MetaOapg.properties.intervalnodesign: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["massproptotal"]) -> MetaOapg.properties.massproptotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["powertotal"]) -> MetaOapg.properties.powertotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prestreatavg"]) -> MetaOapg.properties.prestreatavg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prestreatmax"]) -> MetaOapg.properties.prestreatmax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ratetreatavg"]) -> MetaOapg.properties.ratetreatavg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ratetreatmax"]) -> MetaOapg.properties.ratetreatmax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["resulttechnical"]) -> MetaOapg.properties.resulttechnical: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["resulttechnicaldetail"]) -> MetaOapg.properties.resulttechnicaldetail: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["resulttechnicalnote"]) -> MetaOapg.properties.resulttechnicalnote: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temptreat"]) -> MetaOapg.properties.temptreat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["typ1"]) -> MetaOapg.properties.typ1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["typ2"]) -> MetaOapg.properties.typ2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usernum1"]) -> MetaOapg.properties.usernum1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usernum2"]) -> MetaOapg.properties.usernum2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usernum3"]) -> MetaOapg.properties.usernum3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usertxt1"]) -> MetaOapg.properties.usertxt1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volcleantotal"]) -> MetaOapg.properties.volcleantotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volco2total"]) -> MetaOapg.properties.volco2total: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["voln2total"]) -> MetaOapg.properties.voln2total: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volrecoveredtotal"]) -> MetaOapg.properties.volrecoveredtotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volslurrytotal"]) -> MetaOapg.properties.volslurrytotal: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "com", "contractor", "contractsupt", "diversioncontractor", "diversionmethod", "dttmend", "dttmstart", "durpump", "fluidefficiency", "iconname", "idrecjob", "intervalno", "intervalnodesign", "massproptotal", "powertotal", "prestreatavg", "prestreatmax", "ratetreatavg", "ratetreatmax", "resulttechnical", "resulttechnicaldetail", "resulttechnicalnote", "temptreat", "typ1", "typ2", "usernum1", "usernum2", "usernum3", "usertxt1", "volcleantotal", "volco2total", "voln2total", "volrecoveredtotal", "volslurrytotal", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contractor"]) -> typing.Union[MetaOapg.properties.contractor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contractsupt"]) -> typing.Union[MetaOapg.properties.contractsupt, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["diversioncontractor"]) -> typing.Union[MetaOapg.properties.diversioncontractor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["diversionmethod"]) -> typing.Union[MetaOapg.properties.diversionmethod, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmend"]) -> typing.Union[MetaOapg.properties.dttmend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmstart"]) -> typing.Union[MetaOapg.properties.dttmstart, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["durpump"]) -> typing.Union[MetaOapg.properties.durpump, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fluidefficiency"]) -> typing.Union[MetaOapg.properties.fluidefficiency, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["iconname"]) -> typing.Union[MetaOapg.properties.iconname, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecjob"]) -> typing.Union[MetaOapg.properties.idrecjob, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["intervalno"]) -> typing.Union[MetaOapg.properties.intervalno, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["intervalnodesign"]) -> typing.Union[MetaOapg.properties.intervalnodesign, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["massproptotal"]) -> typing.Union[MetaOapg.properties.massproptotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["powertotal"]) -> typing.Union[MetaOapg.properties.powertotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prestreatavg"]) -> typing.Union[MetaOapg.properties.prestreatavg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prestreatmax"]) -> typing.Union[MetaOapg.properties.prestreatmax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ratetreatavg"]) -> typing.Union[MetaOapg.properties.ratetreatavg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ratetreatmax"]) -> typing.Union[MetaOapg.properties.ratetreatmax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["resulttechnical"]) -> typing.Union[MetaOapg.properties.resulttechnical, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["resulttechnicaldetail"]) -> typing.Union[MetaOapg.properties.resulttechnicaldetail, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["resulttechnicalnote"]) -> typing.Union[MetaOapg.properties.resulttechnicalnote, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temptreat"]) -> typing.Union[MetaOapg.properties.temptreat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["typ1"]) -> typing.Union[MetaOapg.properties.typ1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["typ2"]) -> typing.Union[MetaOapg.properties.typ2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usernum1"]) -> typing.Union[MetaOapg.properties.usernum1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usernum2"]) -> typing.Union[MetaOapg.properties.usernum2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usernum3"]) -> typing.Union[MetaOapg.properties.usernum3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usertxt1"]) -> typing.Union[MetaOapg.properties.usertxt1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volcleantotal"]) -> typing.Union[MetaOapg.properties.volcleantotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volco2total"]) -> typing.Union[MetaOapg.properties.volco2total, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["voln2total"]) -> typing.Union[MetaOapg.properties.voln2total, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volrecoveredtotal"]) -> typing.Union[MetaOapg.properties.volrecoveredtotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volslurrytotal"]) -> typing.Union[MetaOapg.properties.volslurrytotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "com", "contractor", "contractsupt", "diversioncontractor", "diversionmethod", "dttmend", "dttmstart", "durpump", "fluidefficiency", "iconname", "idrecjob", "intervalno", "intervalnodesign", "massproptotal", "powertotal", "prestreatavg", "prestreatmax", "ratetreatavg", "ratetreatmax", "resulttechnical", "resulttechnicaldetail", "resulttechnicalnote", "temptreat", "typ1", "typ2", "usernum1", "usernum2", "usernum3", "usertxt1", "volcleantotal", "volco2total", "voln2total", "volrecoveredtotal", "volslurrytotal", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        contractor: typing.Union[MetaOapg.properties.contractor, str, schemas.Unset] = schemas.unset,
        contractsupt: typing.Union[MetaOapg.properties.contractsupt, str, schemas.Unset] = schemas.unset,
        diversioncontractor: typing.Union[MetaOapg.properties.diversioncontractor, str, schemas.Unset] = schemas.unset,
        diversionmethod: typing.Union[MetaOapg.properties.diversionmethod, str, schemas.Unset] = schemas.unset,
        dttmend: typing.Union[MetaOapg.properties.dttmend, str, datetime, schemas.Unset] = schemas.unset,
        dttmstart: typing.Union[MetaOapg.properties.dttmstart, str, datetime, schemas.Unset] = schemas.unset,
        durpump: typing.Union[MetaOapg.properties.durpump, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        fluidefficiency: typing.Union[MetaOapg.properties.fluidefficiency, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        iconname: typing.Union[MetaOapg.properties.iconname, str, schemas.Unset] = schemas.unset,
        idrecjob: typing.Union[MetaOapg.properties.idrecjob, str, schemas.Unset] = schemas.unset,
        intervalno: typing.Union[MetaOapg.properties.intervalno, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        intervalnodesign: typing.Union[MetaOapg.properties.intervalnodesign, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        massproptotal: typing.Union[MetaOapg.properties.massproptotal, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        powertotal: typing.Union[MetaOapg.properties.powertotal, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prestreatavg: typing.Union[MetaOapg.properties.prestreatavg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prestreatmax: typing.Union[MetaOapg.properties.prestreatmax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ratetreatavg: typing.Union[MetaOapg.properties.ratetreatavg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ratetreatmax: typing.Union[MetaOapg.properties.ratetreatmax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        resulttechnical: typing.Union[MetaOapg.properties.resulttechnical, str, schemas.Unset] = schemas.unset,
        resulttechnicaldetail: typing.Union[MetaOapg.properties.resulttechnicaldetail, str, schemas.Unset] = schemas.unset,
        resulttechnicalnote: typing.Union[MetaOapg.properties.resulttechnicalnote, str, schemas.Unset] = schemas.unset,
        temptreat: typing.Union[MetaOapg.properties.temptreat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        typ1: typing.Union[MetaOapg.properties.typ1, str, schemas.Unset] = schemas.unset,
        typ2: typing.Union[MetaOapg.properties.typ2, str, schemas.Unset] = schemas.unset,
        usernum1: typing.Union[MetaOapg.properties.usernum1, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        usernum2: typing.Union[MetaOapg.properties.usernum2, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        usernum3: typing.Union[MetaOapg.properties.usernum3, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        usertxt1: typing.Union[MetaOapg.properties.usertxt1, str, schemas.Unset] = schemas.unset,
        volcleantotal: typing.Union[MetaOapg.properties.volcleantotal, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volco2total: typing.Union[MetaOapg.properties.volco2total, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        voln2total: typing.Union[MetaOapg.properties.voln2total, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volrecoveredtotal: typing.Union[MetaOapg.properties.volrecoveredtotal, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volslurrytotal: typing.Union[MetaOapg.properties.volslurrytotal, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'StimulationSummaryData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            com=com,
            contractor=contractor,
            contractsupt=contractsupt,
            diversioncontractor=diversioncontractor,
            diversionmethod=diversionmethod,
            dttmend=dttmend,
            dttmstart=dttmstart,
            durpump=durpump,
            fluidefficiency=fluidefficiency,
            iconname=iconname,
            idrecjob=idrecjob,
            intervalno=intervalno,
            intervalnodesign=intervalnodesign,
            massproptotal=massproptotal,
            powertotal=powertotal,
            prestreatavg=prestreatavg,
            prestreatmax=prestreatmax,
            ratetreatavg=ratetreatavg,
            ratetreatmax=ratetreatmax,
            resulttechnical=resulttechnical,
            resulttechnicaldetail=resulttechnicaldetail,
            resulttechnicalnote=resulttechnicalnote,
            temptreat=temptreat,
            typ1=typ1,
            typ2=typ2,
            usernum1=usernum1,
            usernum2=usernum2,
            usernum3=usernum3,
            usertxt1=usertxt1,
            volcleantotal=volcleantotal,
            volco2total=volco2total,
            voln2total=voln2total,
            volrecoveredtotal=volrecoveredtotal,
            volslurrytotal=volslurrytotal,
            _configuration=_configuration,
            **kwargs,
        )
