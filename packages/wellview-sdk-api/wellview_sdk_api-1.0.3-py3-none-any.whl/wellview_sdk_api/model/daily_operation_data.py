# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class DailyOperationData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            condhole = schemas.StrSchema
            condlease = schemas.StrSchema
            condroad = schemas.StrSchema
            condtemp = schemas.NumberSchema
            condwave = schemas.StrSchema
            condweather = schemas.StrSchema
            condwind = schemas.StrSchema
            depthtvdendprojmethod = schemas.StrSchema
            dttmend = schemas.DateTimeSchema
            dttmstart = schemas.DateTimeSchema
            durationsinceltinc = schemas.NumberSchema
            durationsincerptinc = schemas.NumberSchema
            gasbackgroundavg = schemas.NumberSchema
            gasbackgroundmax = schemas.NumberSchema
            gasconnectionavg = schemas.NumberSchema
            gasconnectionmax = schemas.NumberSchema
            gasdrillavg = schemas.NumberSchema
            gasdrillmax = schemas.NumberSchema
            gastripavg = schemas.NumberSchema
            gastripmax = schemas.NumberSchema
            h2smax = schemas.NumberSchema
            idrecnextcas = schemas.StrSchema
            idrecparent = schemas.StrSchema
            plannextrptops = schemas.StrSchema
            remarks = schemas.StrSchema
            rigtime = schemas.NumberSchema
            rpttmactops = schemas.StrSchema
            statusend = schemas.StrSchema
            summaryops = schemas.StrSchema
            userboolean1 = schemas.BoolSchema
            userboolean2 = schemas.BoolSchema
            usernum1 = schemas.NumberSchema
            usernum2 = schemas.NumberSchema
            usernum3 = schemas.NumberSchema
            usernum4 = schemas.NumberSchema
            usernum5 = schemas.NumberSchema
            usertxt1 = schemas.StrSchema
            usertxt2 = schemas.StrSchema
            usertxt3 = schemas.StrSchema
            usertxt4 = schemas.StrSchema
            usertxt5 = schemas.StrSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "condhole": condhole,
                "condlease": condlease,
                "condroad": condroad,
                "condtemp": condtemp,
                "condwave": condwave,
                "condweather": condweather,
                "condwind": condwind,
                "depthtvdendprojmethod": depthtvdendprojmethod,
                "dttmend": dttmend,
                "dttmstart": dttmstart,
                "durationsinceltinc": durationsinceltinc,
                "durationsincerptinc": durationsincerptinc,
                "gasbackgroundavg": gasbackgroundavg,
                "gasbackgroundmax": gasbackgroundmax,
                "gasconnectionavg": gasconnectionavg,
                "gasconnectionmax": gasconnectionmax,
                "gasdrillavg": gasdrillavg,
                "gasdrillmax": gasdrillmax,
                "gastripavg": gastripavg,
                "gastripmax": gastripmax,
                "h2smax": h2smax,
                "idrecnextcas": idrecnextcas,
                "idrecparent": idrecparent,
                "plannextrptops": plannextrptops,
                "remarks": remarks,
                "rigtime": rigtime,
                "rpttmactops": rpttmactops,
                "statusend": statusend,
                "summaryops": summaryops,
                "userboolean1": userboolean1,
                "userboolean2": userboolean2,
                "usernum1": usernum1,
                "usernum2": usernum2,
                "usernum3": usernum3,
                "usernum4": usernum4,
                "usernum5": usernum5,
                "usertxt1": usertxt1,
                "usertxt2": usertxt2,
                "usertxt3": usertxt3,
                "usertxt4": usertxt4,
                "usertxt5": usertxt5,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["condhole"]) -> MetaOapg.properties.condhole: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["condlease"]) -> MetaOapg.properties.condlease: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["condroad"]) -> MetaOapg.properties.condroad: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["condtemp"]) -> MetaOapg.properties.condtemp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["condwave"]) -> MetaOapg.properties.condwave: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["condweather"]) -> MetaOapg.properties.condweather: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["condwind"]) -> MetaOapg.properties.condwind: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthtvdendprojmethod"]) -> MetaOapg.properties.depthtvdendprojmethod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmend"]) -> MetaOapg.properties.dttmend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmstart"]) -> MetaOapg.properties.dttmstart: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["durationsinceltinc"]) -> MetaOapg.properties.durationsinceltinc: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["durationsincerptinc"]) -> MetaOapg.properties.durationsincerptinc: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gasbackgroundavg"]) -> MetaOapg.properties.gasbackgroundavg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gasbackgroundmax"]) -> MetaOapg.properties.gasbackgroundmax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gasconnectionavg"]) -> MetaOapg.properties.gasconnectionavg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gasconnectionmax"]) -> MetaOapg.properties.gasconnectionmax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gasdrillavg"]) -> MetaOapg.properties.gasdrillavg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gasdrillmax"]) -> MetaOapg.properties.gasdrillmax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gastripavg"]) -> MetaOapg.properties.gastripavg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gastripmax"]) -> MetaOapg.properties.gastripmax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["h2smax"]) -> MetaOapg.properties.h2smax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecnextcas"]) -> MetaOapg.properties.idrecnextcas: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["plannextrptops"]) -> MetaOapg.properties.plannextrptops: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["remarks"]) -> MetaOapg.properties.remarks: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rigtime"]) -> MetaOapg.properties.rigtime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rpttmactops"]) -> MetaOapg.properties.rpttmactops: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statusend"]) -> MetaOapg.properties.statusend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["summaryops"]) -> MetaOapg.properties.summaryops: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userboolean1"]) -> MetaOapg.properties.userboolean1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userboolean2"]) -> MetaOapg.properties.userboolean2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usernum1"]) -> MetaOapg.properties.usernum1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usernum2"]) -> MetaOapg.properties.usernum2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usernum3"]) -> MetaOapg.properties.usernum3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usernum4"]) -> MetaOapg.properties.usernum4: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usernum5"]) -> MetaOapg.properties.usernum5: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usertxt1"]) -> MetaOapg.properties.usertxt1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usertxt2"]) -> MetaOapg.properties.usertxt2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usertxt3"]) -> MetaOapg.properties.usertxt3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usertxt4"]) -> MetaOapg.properties.usertxt4: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usertxt5"]) -> MetaOapg.properties.usertxt5: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "condhole", "condlease", "condroad", "condtemp", "condwave", "condweather", "condwind", "depthtvdendprojmethod", "dttmend", "dttmstart", "durationsinceltinc", "durationsincerptinc", "gasbackgroundavg", "gasbackgroundmax", "gasconnectionavg", "gasconnectionmax", "gasdrillavg", "gasdrillmax", "gastripavg", "gastripmax", "h2smax", "idrecnextcas", "idrecparent", "plannextrptops", "remarks", "rigtime", "rpttmactops", "statusend", "summaryops", "userboolean1", "userboolean2", "usernum1", "usernum2", "usernum3", "usernum4", "usernum5", "usertxt1", "usertxt2", "usertxt3", "usertxt4", "usertxt5", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["condhole"]) -> typing.Union[MetaOapg.properties.condhole, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["condlease"]) -> typing.Union[MetaOapg.properties.condlease, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["condroad"]) -> typing.Union[MetaOapg.properties.condroad, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["condtemp"]) -> typing.Union[MetaOapg.properties.condtemp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["condwave"]) -> typing.Union[MetaOapg.properties.condwave, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["condweather"]) -> typing.Union[MetaOapg.properties.condweather, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["condwind"]) -> typing.Union[MetaOapg.properties.condwind, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthtvdendprojmethod"]) -> typing.Union[MetaOapg.properties.depthtvdendprojmethod, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmend"]) -> typing.Union[MetaOapg.properties.dttmend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmstart"]) -> typing.Union[MetaOapg.properties.dttmstart, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["durationsinceltinc"]) -> typing.Union[MetaOapg.properties.durationsinceltinc, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["durationsincerptinc"]) -> typing.Union[MetaOapg.properties.durationsincerptinc, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gasbackgroundavg"]) -> typing.Union[MetaOapg.properties.gasbackgroundavg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gasbackgroundmax"]) -> typing.Union[MetaOapg.properties.gasbackgroundmax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gasconnectionavg"]) -> typing.Union[MetaOapg.properties.gasconnectionavg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gasconnectionmax"]) -> typing.Union[MetaOapg.properties.gasconnectionmax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gasdrillavg"]) -> typing.Union[MetaOapg.properties.gasdrillavg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gasdrillmax"]) -> typing.Union[MetaOapg.properties.gasdrillmax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gastripavg"]) -> typing.Union[MetaOapg.properties.gastripavg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gastripmax"]) -> typing.Union[MetaOapg.properties.gastripmax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["h2smax"]) -> typing.Union[MetaOapg.properties.h2smax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecnextcas"]) -> typing.Union[MetaOapg.properties.idrecnextcas, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["plannextrptops"]) -> typing.Union[MetaOapg.properties.plannextrptops, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["remarks"]) -> typing.Union[MetaOapg.properties.remarks, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rigtime"]) -> typing.Union[MetaOapg.properties.rigtime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rpttmactops"]) -> typing.Union[MetaOapg.properties.rpttmactops, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statusend"]) -> typing.Union[MetaOapg.properties.statusend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["summaryops"]) -> typing.Union[MetaOapg.properties.summaryops, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userboolean1"]) -> typing.Union[MetaOapg.properties.userboolean1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userboolean2"]) -> typing.Union[MetaOapg.properties.userboolean2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usernum1"]) -> typing.Union[MetaOapg.properties.usernum1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usernum2"]) -> typing.Union[MetaOapg.properties.usernum2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usernum3"]) -> typing.Union[MetaOapg.properties.usernum3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usernum4"]) -> typing.Union[MetaOapg.properties.usernum4, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usernum5"]) -> typing.Union[MetaOapg.properties.usernum5, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usertxt1"]) -> typing.Union[MetaOapg.properties.usertxt1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usertxt2"]) -> typing.Union[MetaOapg.properties.usertxt2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usertxt3"]) -> typing.Union[MetaOapg.properties.usertxt3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usertxt4"]) -> typing.Union[MetaOapg.properties.usertxt4, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usertxt5"]) -> typing.Union[MetaOapg.properties.usertxt5, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "condhole", "condlease", "condroad", "condtemp", "condwave", "condweather", "condwind", "depthtvdendprojmethod", "dttmend", "dttmstart", "durationsinceltinc", "durationsincerptinc", "gasbackgroundavg", "gasbackgroundmax", "gasconnectionavg", "gasconnectionmax", "gasdrillavg", "gasdrillmax", "gastripavg", "gastripmax", "h2smax", "idrecnextcas", "idrecparent", "plannextrptops", "remarks", "rigtime", "rpttmactops", "statusend", "summaryops", "userboolean1", "userboolean2", "usernum1", "usernum2", "usernum3", "usernum4", "usernum5", "usertxt1", "usertxt2", "usertxt3", "usertxt4", "usertxt5", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        condhole: typing.Union[MetaOapg.properties.condhole, str, schemas.Unset] = schemas.unset,
        condlease: typing.Union[MetaOapg.properties.condlease, str, schemas.Unset] = schemas.unset,
        condroad: typing.Union[MetaOapg.properties.condroad, str, schemas.Unset] = schemas.unset,
        condtemp: typing.Union[MetaOapg.properties.condtemp, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        condwave: typing.Union[MetaOapg.properties.condwave, str, schemas.Unset] = schemas.unset,
        condweather: typing.Union[MetaOapg.properties.condweather, str, schemas.Unset] = schemas.unset,
        condwind: typing.Union[MetaOapg.properties.condwind, str, schemas.Unset] = schemas.unset,
        depthtvdendprojmethod: typing.Union[MetaOapg.properties.depthtvdendprojmethod, str, schemas.Unset] = schemas.unset,
        dttmend: typing.Union[MetaOapg.properties.dttmend, str, datetime, schemas.Unset] = schemas.unset,
        dttmstart: typing.Union[MetaOapg.properties.dttmstart, str, datetime, schemas.Unset] = schemas.unset,
        durationsinceltinc: typing.Union[MetaOapg.properties.durationsinceltinc, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        durationsincerptinc: typing.Union[MetaOapg.properties.durationsincerptinc, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        gasbackgroundavg: typing.Union[MetaOapg.properties.gasbackgroundavg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        gasbackgroundmax: typing.Union[MetaOapg.properties.gasbackgroundmax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        gasconnectionavg: typing.Union[MetaOapg.properties.gasconnectionavg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        gasconnectionmax: typing.Union[MetaOapg.properties.gasconnectionmax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        gasdrillavg: typing.Union[MetaOapg.properties.gasdrillavg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        gasdrillmax: typing.Union[MetaOapg.properties.gasdrillmax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        gastripavg: typing.Union[MetaOapg.properties.gastripavg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        gastripmax: typing.Union[MetaOapg.properties.gastripmax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        h2smax: typing.Union[MetaOapg.properties.h2smax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        idrecnextcas: typing.Union[MetaOapg.properties.idrecnextcas, str, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        plannextrptops: typing.Union[MetaOapg.properties.plannextrptops, str, schemas.Unset] = schemas.unset,
        remarks: typing.Union[MetaOapg.properties.remarks, str, schemas.Unset] = schemas.unset,
        rigtime: typing.Union[MetaOapg.properties.rigtime, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rpttmactops: typing.Union[MetaOapg.properties.rpttmactops, str, schemas.Unset] = schemas.unset,
        statusend: typing.Union[MetaOapg.properties.statusend, str, schemas.Unset] = schemas.unset,
        summaryops: typing.Union[MetaOapg.properties.summaryops, str, schemas.Unset] = schemas.unset,
        userboolean1: typing.Union[MetaOapg.properties.userboolean1, bool, schemas.Unset] = schemas.unset,
        userboolean2: typing.Union[MetaOapg.properties.userboolean2, bool, schemas.Unset] = schemas.unset,
        usernum1: typing.Union[MetaOapg.properties.usernum1, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        usernum2: typing.Union[MetaOapg.properties.usernum2, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        usernum3: typing.Union[MetaOapg.properties.usernum3, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        usernum4: typing.Union[MetaOapg.properties.usernum4, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        usernum5: typing.Union[MetaOapg.properties.usernum5, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        usertxt1: typing.Union[MetaOapg.properties.usertxt1, str, schemas.Unset] = schemas.unset,
        usertxt2: typing.Union[MetaOapg.properties.usertxt2, str, schemas.Unset] = schemas.unset,
        usertxt3: typing.Union[MetaOapg.properties.usertxt3, str, schemas.Unset] = schemas.unset,
        usertxt4: typing.Union[MetaOapg.properties.usertxt4, str, schemas.Unset] = schemas.unset,
        usertxt5: typing.Union[MetaOapg.properties.usertxt5, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DailyOperationData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            condhole=condhole,
            condlease=condlease,
            condroad=condroad,
            condtemp=condtemp,
            condwave=condwave,
            condweather=condweather,
            condwind=condwind,
            depthtvdendprojmethod=depthtvdendprojmethod,
            dttmend=dttmend,
            dttmstart=dttmstart,
            durationsinceltinc=durationsinceltinc,
            durationsincerptinc=durationsincerptinc,
            gasbackgroundavg=gasbackgroundavg,
            gasbackgroundmax=gasbackgroundmax,
            gasconnectionavg=gasconnectionavg,
            gasconnectionmax=gasconnectionmax,
            gasdrillavg=gasdrillavg,
            gasdrillmax=gasdrillmax,
            gastripavg=gastripavg,
            gastripmax=gastripmax,
            h2smax=h2smax,
            idrecnextcas=idrecnextcas,
            idrecparent=idrecparent,
            plannextrptops=plannextrptops,
            remarks=remarks,
            rigtime=rigtime,
            rpttmactops=rpttmactops,
            statusend=statusend,
            summaryops=summaryops,
            userboolean1=userboolean1,
            userboolean2=userboolean2,
            usernum1=usernum1,
            usernum2=usernum2,
            usernum3=usernum3,
            usernum4=usernum4,
            usernum5=usernum5,
            usertxt1=usertxt1,
            usertxt2=usertxt2,
            usertxt3=usertxt3,
            usertxt4=usertxt4,
            usertxt5=usertxt5,
            _configuration=_configuration,
            **kwargs,
        )
