# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class MudMotorData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            bearingtyp = schemas.StrSchema
            deflnmagnlower = schemas.NumberSchema
            deflnmagnupper = schemas.NumberSchema
            deflntyplower = schemas.StrSchema
            deflntypupper = schemas.StrSchema
            designflowratemax = schemas.NumberSchema
            designflowratemin = schemas.NumberSchema
            designrpmmax = schemas.NumberSchema
            designrpmmin = schemas.NumberSchema
            elastomermodel = schemas.StrSchema
            elastomertyp = schemas.StrSchema
            idrecparent = schemas.StrSchema
            lengthplaybitsubaxialbearing = schemas.NumberSchema
            lengthstage = schemas.NumberSchema
            lengthtolowerdefln = schemas.NumberSchema
            lengthtoupperdefln = schemas.NumberSchema
            lobeconfig = schemas.StrSchema
            note = schemas.StrSchema
            presdiffmax = schemas.NumberSchema
            ratiorpmtoflow = schemas.NumberSchema
            rotorboredjet = schemas.BoolSchema
            rotorcoating = schemas.StrSchema
            rotornozdia = schemas.NumberSchema
            stageno = schemas.StrSchema
            statorevenwall = schemas.BoolSchema
            statormaterial = schemas.StrSchema
            statorrotorinterference = schemas.NumberSchema
            statorrotorinterferencemin = schemas.NumberSchema
            torquemax = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "bearingtyp": bearingtyp,
                "deflnmagnlower": deflnmagnlower,
                "deflnmagnupper": deflnmagnupper,
                "deflntyplower": deflntyplower,
                "deflntypupper": deflntypupper,
                "designflowratemax": designflowratemax,
                "designflowratemin": designflowratemin,
                "designrpmmax": designrpmmax,
                "designrpmmin": designrpmmin,
                "elastomermodel": elastomermodel,
                "elastomertyp": elastomertyp,
                "idrecparent": idrecparent,
                "lengthplaybitsubaxialbearing": lengthplaybitsubaxialbearing,
                "lengthstage": lengthstage,
                "lengthtolowerdefln": lengthtolowerdefln,
                "lengthtoupperdefln": lengthtoupperdefln,
                "lobeconfig": lobeconfig,
                "note": note,
                "presdiffmax": presdiffmax,
                "ratiorpmtoflow": ratiorpmtoflow,
                "rotorboredjet": rotorboredjet,
                "rotorcoating": rotorcoating,
                "rotornozdia": rotornozdia,
                "stageno": stageno,
                "statorevenwall": statorevenwall,
                "statormaterial": statormaterial,
                "statorrotorinterference": statorrotorinterference,
                "statorrotorinterferencemin": statorrotorinterferencemin,
                "torquemax": torquemax,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bearingtyp"]) -> MetaOapg.properties.bearingtyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deflnmagnlower"]) -> MetaOapg.properties.deflnmagnlower: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deflnmagnupper"]) -> MetaOapg.properties.deflnmagnupper: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deflntyplower"]) -> MetaOapg.properties.deflntyplower: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deflntypupper"]) -> MetaOapg.properties.deflntypupper: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["designflowratemax"]) -> MetaOapg.properties.designflowratemax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["designflowratemin"]) -> MetaOapg.properties.designflowratemin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["designrpmmax"]) -> MetaOapg.properties.designrpmmax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["designrpmmin"]) -> MetaOapg.properties.designrpmmin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["elastomermodel"]) -> MetaOapg.properties.elastomermodel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["elastomertyp"]) -> MetaOapg.properties.elastomertyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lengthplaybitsubaxialbearing"]) -> MetaOapg.properties.lengthplaybitsubaxialbearing: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lengthstage"]) -> MetaOapg.properties.lengthstage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lengthtolowerdefln"]) -> MetaOapg.properties.lengthtolowerdefln: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lengthtoupperdefln"]) -> MetaOapg.properties.lengthtoupperdefln: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lobeconfig"]) -> MetaOapg.properties.lobeconfig: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["note"]) -> MetaOapg.properties.note: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presdiffmax"]) -> MetaOapg.properties.presdiffmax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ratiorpmtoflow"]) -> MetaOapg.properties.ratiorpmtoflow: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rotorboredjet"]) -> MetaOapg.properties.rotorboredjet: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rotorcoating"]) -> MetaOapg.properties.rotorcoating: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rotornozdia"]) -> MetaOapg.properties.rotornozdia: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stageno"]) -> MetaOapg.properties.stageno: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statorevenwall"]) -> MetaOapg.properties.statorevenwall: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statormaterial"]) -> MetaOapg.properties.statormaterial: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statorrotorinterference"]) -> MetaOapg.properties.statorrotorinterference: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statorrotorinterferencemin"]) -> MetaOapg.properties.statorrotorinterferencemin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["torquemax"]) -> MetaOapg.properties.torquemax: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "bearingtyp", "deflnmagnlower", "deflnmagnupper", "deflntyplower", "deflntypupper", "designflowratemax", "designflowratemin", "designrpmmax", "designrpmmin", "elastomermodel", "elastomertyp", "idrecparent", "lengthplaybitsubaxialbearing", "lengthstage", "lengthtolowerdefln", "lengthtoupperdefln", "lobeconfig", "note", "presdiffmax", "ratiorpmtoflow", "rotorboredjet", "rotorcoating", "rotornozdia", "stageno", "statorevenwall", "statormaterial", "statorrotorinterference", "statorrotorinterferencemin", "torquemax", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bearingtyp"]) -> typing.Union[MetaOapg.properties.bearingtyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deflnmagnlower"]) -> typing.Union[MetaOapg.properties.deflnmagnlower, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deflnmagnupper"]) -> typing.Union[MetaOapg.properties.deflnmagnupper, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deflntyplower"]) -> typing.Union[MetaOapg.properties.deflntyplower, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deflntypupper"]) -> typing.Union[MetaOapg.properties.deflntypupper, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["designflowratemax"]) -> typing.Union[MetaOapg.properties.designflowratemax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["designflowratemin"]) -> typing.Union[MetaOapg.properties.designflowratemin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["designrpmmax"]) -> typing.Union[MetaOapg.properties.designrpmmax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["designrpmmin"]) -> typing.Union[MetaOapg.properties.designrpmmin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["elastomermodel"]) -> typing.Union[MetaOapg.properties.elastomermodel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["elastomertyp"]) -> typing.Union[MetaOapg.properties.elastomertyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lengthplaybitsubaxialbearing"]) -> typing.Union[MetaOapg.properties.lengthplaybitsubaxialbearing, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lengthstage"]) -> typing.Union[MetaOapg.properties.lengthstage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lengthtolowerdefln"]) -> typing.Union[MetaOapg.properties.lengthtolowerdefln, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lengthtoupperdefln"]) -> typing.Union[MetaOapg.properties.lengthtoupperdefln, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lobeconfig"]) -> typing.Union[MetaOapg.properties.lobeconfig, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["note"]) -> typing.Union[MetaOapg.properties.note, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presdiffmax"]) -> typing.Union[MetaOapg.properties.presdiffmax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ratiorpmtoflow"]) -> typing.Union[MetaOapg.properties.ratiorpmtoflow, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rotorboredjet"]) -> typing.Union[MetaOapg.properties.rotorboredjet, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rotorcoating"]) -> typing.Union[MetaOapg.properties.rotorcoating, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rotornozdia"]) -> typing.Union[MetaOapg.properties.rotornozdia, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stageno"]) -> typing.Union[MetaOapg.properties.stageno, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statorevenwall"]) -> typing.Union[MetaOapg.properties.statorevenwall, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statormaterial"]) -> typing.Union[MetaOapg.properties.statormaterial, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statorrotorinterference"]) -> typing.Union[MetaOapg.properties.statorrotorinterference, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statorrotorinterferencemin"]) -> typing.Union[MetaOapg.properties.statorrotorinterferencemin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["torquemax"]) -> typing.Union[MetaOapg.properties.torquemax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "bearingtyp", "deflnmagnlower", "deflnmagnupper", "deflntyplower", "deflntypupper", "designflowratemax", "designflowratemin", "designrpmmax", "designrpmmin", "elastomermodel", "elastomertyp", "idrecparent", "lengthplaybitsubaxialbearing", "lengthstage", "lengthtolowerdefln", "lengthtoupperdefln", "lobeconfig", "note", "presdiffmax", "ratiorpmtoflow", "rotorboredjet", "rotorcoating", "rotornozdia", "stageno", "statorevenwall", "statormaterial", "statorrotorinterference", "statorrotorinterferencemin", "torquemax", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        bearingtyp: typing.Union[MetaOapg.properties.bearingtyp, str, schemas.Unset] = schemas.unset,
        deflnmagnlower: typing.Union[MetaOapg.properties.deflnmagnlower, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        deflnmagnupper: typing.Union[MetaOapg.properties.deflnmagnupper, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        deflntyplower: typing.Union[MetaOapg.properties.deflntyplower, str, schemas.Unset] = schemas.unset,
        deflntypupper: typing.Union[MetaOapg.properties.deflntypupper, str, schemas.Unset] = schemas.unset,
        designflowratemax: typing.Union[MetaOapg.properties.designflowratemax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        designflowratemin: typing.Union[MetaOapg.properties.designflowratemin, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        designrpmmax: typing.Union[MetaOapg.properties.designrpmmax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        designrpmmin: typing.Union[MetaOapg.properties.designrpmmin, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        elastomermodel: typing.Union[MetaOapg.properties.elastomermodel, str, schemas.Unset] = schemas.unset,
        elastomertyp: typing.Union[MetaOapg.properties.elastomertyp, str, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        lengthplaybitsubaxialbearing: typing.Union[MetaOapg.properties.lengthplaybitsubaxialbearing, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lengthstage: typing.Union[MetaOapg.properties.lengthstage, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lengthtolowerdefln: typing.Union[MetaOapg.properties.lengthtolowerdefln, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lengthtoupperdefln: typing.Union[MetaOapg.properties.lengthtoupperdefln, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lobeconfig: typing.Union[MetaOapg.properties.lobeconfig, str, schemas.Unset] = schemas.unset,
        note: typing.Union[MetaOapg.properties.note, str, schemas.Unset] = schemas.unset,
        presdiffmax: typing.Union[MetaOapg.properties.presdiffmax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ratiorpmtoflow: typing.Union[MetaOapg.properties.ratiorpmtoflow, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rotorboredjet: typing.Union[MetaOapg.properties.rotorboredjet, bool, schemas.Unset] = schemas.unset,
        rotorcoating: typing.Union[MetaOapg.properties.rotorcoating, str, schemas.Unset] = schemas.unset,
        rotornozdia: typing.Union[MetaOapg.properties.rotornozdia, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        stageno: typing.Union[MetaOapg.properties.stageno, str, schemas.Unset] = schemas.unset,
        statorevenwall: typing.Union[MetaOapg.properties.statorevenwall, bool, schemas.Unset] = schemas.unset,
        statormaterial: typing.Union[MetaOapg.properties.statormaterial, str, schemas.Unset] = schemas.unset,
        statorrotorinterference: typing.Union[MetaOapg.properties.statorrotorinterference, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        statorrotorinterferencemin: typing.Union[MetaOapg.properties.statorrotorinterferencemin, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        torquemax: typing.Union[MetaOapg.properties.torquemax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'MudMotorData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            bearingtyp=bearingtyp,
            deflnmagnlower=deflnmagnlower,
            deflnmagnupper=deflnmagnupper,
            deflntyplower=deflntyplower,
            deflntypupper=deflntypupper,
            designflowratemax=designflowratemax,
            designflowratemin=designflowratemin,
            designrpmmax=designrpmmax,
            designrpmmin=designrpmmin,
            elastomermodel=elastomermodel,
            elastomertyp=elastomertyp,
            idrecparent=idrecparent,
            lengthplaybitsubaxialbearing=lengthplaybitsubaxialbearing,
            lengthstage=lengthstage,
            lengthtolowerdefln=lengthtolowerdefln,
            lengthtoupperdefln=lengthtoupperdefln,
            lobeconfig=lobeconfig,
            note=note,
            presdiffmax=presdiffmax,
            ratiorpmtoflow=ratiorpmtoflow,
            rotorboredjet=rotorboredjet,
            rotorcoating=rotorcoating,
            rotornozdia=rotornozdia,
            stageno=stageno,
            statorevenwall=statorevenwall,
            statormaterial=statormaterial,
            statorrotorinterference=statorrotorinterference,
            statorrotorinterferencemin=statorrotorinterferencemin,
            torquemax=torquemax,
            _configuration=_configuration,
            **kwargs,
        )
