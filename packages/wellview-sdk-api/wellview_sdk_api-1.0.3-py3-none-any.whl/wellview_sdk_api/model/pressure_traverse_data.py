# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class PressureTraverseData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            analysiscom = schemas.StrSchema
            analyst = schemas.StrSchema
            bsw = schemas.NumberSchema
            com = schemas.StrSchema
            depthgasoil = schemas.NumberSchema
            depthgaswater = schemas.NumberSchema
            depthoilwater = schemas.NumberSchema
            depthresdatum = schemas.NumberSchema
            depthresmpp = schemas.NumberSchema
            depthssresdatum = schemas.NumberSchema
            des = schemas.StrSchema
            displayflag = schemas.BoolSchema
            dttm = schemas.DateTimeSchema
            durationshutin = schemas.NumberSchema
            idrecjob = schemas.StrSchema
            idrecwellbore = schemas.StrSchema
            idreczonecompletion = schemas.StrSchema
            prescas = schemas.NumberSchema
            presgradientdatumor = schemas.NumberSchema
            presresdatum = schemas.NumberSchema
            presresmpp = schemas.NumberSchema
            prestub = schemas.NumberSchema
            rategas = schemas.NumberSchema
            rateliquid = schemas.NumberSchema
            sandcut = schemas.NumberSchema
            subtyp = schemas.StrSchema
            tempgradientor = schemas.NumberSchema
            tempres = schemas.NumberSchema
            testedby = schemas.StrSchema
            typ = schemas.StrSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "analysiscom": analysiscom,
                "analyst": analyst,
                "bsw": bsw,
                "com": com,
                "depthgasoil": depthgasoil,
                "depthgaswater": depthgaswater,
                "depthoilwater": depthoilwater,
                "depthresdatum": depthresdatum,
                "depthresmpp": depthresmpp,
                "depthssresdatum": depthssresdatum,
                "des": des,
                "displayflag": displayflag,
                "dttm": dttm,
                "durationshutin": durationshutin,
                "idrecjob": idrecjob,
                "idrecwellbore": idrecwellbore,
                "idreczonecompletion": idreczonecompletion,
                "prescas": prescas,
                "presgradientdatumor": presgradientdatumor,
                "presresdatum": presresdatum,
                "presresmpp": presresmpp,
                "prestub": prestub,
                "rategas": rategas,
                "rateliquid": rateliquid,
                "sandcut": sandcut,
                "subtyp": subtyp,
                "tempgradientor": tempgradientor,
                "tempres": tempres,
                "testedby": testedby,
                "typ": typ,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["analysiscom"]) -> MetaOapg.properties.analysiscom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["analyst"]) -> MetaOapg.properties.analyst: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bsw"]) -> MetaOapg.properties.bsw: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthgasoil"]) -> MetaOapg.properties.depthgasoil: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthgaswater"]) -> MetaOapg.properties.depthgaswater: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthoilwater"]) -> MetaOapg.properties.depthoilwater: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthresdatum"]) -> MetaOapg.properties.depthresdatum: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthresmpp"]) -> MetaOapg.properties.depthresmpp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthssresdatum"]) -> MetaOapg.properties.depthssresdatum: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["des"]) -> MetaOapg.properties.des: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["displayflag"]) -> MetaOapg.properties.displayflag: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttm"]) -> MetaOapg.properties.dttm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["durationshutin"]) -> MetaOapg.properties.durationshutin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecjob"]) -> MetaOapg.properties.idrecjob: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecwellbore"]) -> MetaOapg.properties.idrecwellbore: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idreczonecompletion"]) -> MetaOapg.properties.idreczonecompletion: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prescas"]) -> MetaOapg.properties.prescas: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presgradientdatumor"]) -> MetaOapg.properties.presgradientdatumor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presresdatum"]) -> MetaOapg.properties.presresdatum: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presresmpp"]) -> MetaOapg.properties.presresmpp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prestub"]) -> MetaOapg.properties.prestub: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rategas"]) -> MetaOapg.properties.rategas: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rateliquid"]) -> MetaOapg.properties.rateliquid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sandcut"]) -> MetaOapg.properties.sandcut: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subtyp"]) -> MetaOapg.properties.subtyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tempgradientor"]) -> MetaOapg.properties.tempgradientor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tempres"]) -> MetaOapg.properties.tempres: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["testedby"]) -> MetaOapg.properties.testedby: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["typ"]) -> MetaOapg.properties.typ: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "analysiscom", "analyst", "bsw", "com", "depthgasoil", "depthgaswater", "depthoilwater", "depthresdatum", "depthresmpp", "depthssresdatum", "des", "displayflag", "dttm", "durationshutin", "idrecjob", "idrecwellbore", "idreczonecompletion", "prescas", "presgradientdatumor", "presresdatum", "presresmpp", "prestub", "rategas", "rateliquid", "sandcut", "subtyp", "tempgradientor", "tempres", "testedby", "typ", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["analysiscom"]) -> typing.Union[MetaOapg.properties.analysiscom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["analyst"]) -> typing.Union[MetaOapg.properties.analyst, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bsw"]) -> typing.Union[MetaOapg.properties.bsw, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthgasoil"]) -> typing.Union[MetaOapg.properties.depthgasoil, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthgaswater"]) -> typing.Union[MetaOapg.properties.depthgaswater, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthoilwater"]) -> typing.Union[MetaOapg.properties.depthoilwater, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthresdatum"]) -> typing.Union[MetaOapg.properties.depthresdatum, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthresmpp"]) -> typing.Union[MetaOapg.properties.depthresmpp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthssresdatum"]) -> typing.Union[MetaOapg.properties.depthssresdatum, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["des"]) -> typing.Union[MetaOapg.properties.des, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["displayflag"]) -> typing.Union[MetaOapg.properties.displayflag, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttm"]) -> typing.Union[MetaOapg.properties.dttm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["durationshutin"]) -> typing.Union[MetaOapg.properties.durationshutin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecjob"]) -> typing.Union[MetaOapg.properties.idrecjob, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecwellbore"]) -> typing.Union[MetaOapg.properties.idrecwellbore, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idreczonecompletion"]) -> typing.Union[MetaOapg.properties.idreczonecompletion, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prescas"]) -> typing.Union[MetaOapg.properties.prescas, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presgradientdatumor"]) -> typing.Union[MetaOapg.properties.presgradientdatumor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presresdatum"]) -> typing.Union[MetaOapg.properties.presresdatum, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presresmpp"]) -> typing.Union[MetaOapg.properties.presresmpp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prestub"]) -> typing.Union[MetaOapg.properties.prestub, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rategas"]) -> typing.Union[MetaOapg.properties.rategas, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rateliquid"]) -> typing.Union[MetaOapg.properties.rateliquid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sandcut"]) -> typing.Union[MetaOapg.properties.sandcut, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subtyp"]) -> typing.Union[MetaOapg.properties.subtyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tempgradientor"]) -> typing.Union[MetaOapg.properties.tempgradientor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tempres"]) -> typing.Union[MetaOapg.properties.tempres, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["testedby"]) -> typing.Union[MetaOapg.properties.testedby, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["typ"]) -> typing.Union[MetaOapg.properties.typ, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "analysiscom", "analyst", "bsw", "com", "depthgasoil", "depthgaswater", "depthoilwater", "depthresdatum", "depthresmpp", "depthssresdatum", "des", "displayflag", "dttm", "durationshutin", "idrecjob", "idrecwellbore", "idreczonecompletion", "prescas", "presgradientdatumor", "presresdatum", "presresmpp", "prestub", "rategas", "rateliquid", "sandcut", "subtyp", "tempgradientor", "tempres", "testedby", "typ", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        analysiscom: typing.Union[MetaOapg.properties.analysiscom, str, schemas.Unset] = schemas.unset,
        analyst: typing.Union[MetaOapg.properties.analyst, str, schemas.Unset] = schemas.unset,
        bsw: typing.Union[MetaOapg.properties.bsw, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        depthgasoil: typing.Union[MetaOapg.properties.depthgasoil, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthgaswater: typing.Union[MetaOapg.properties.depthgaswater, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthoilwater: typing.Union[MetaOapg.properties.depthoilwater, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthresdatum: typing.Union[MetaOapg.properties.depthresdatum, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthresmpp: typing.Union[MetaOapg.properties.depthresmpp, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthssresdatum: typing.Union[MetaOapg.properties.depthssresdatum, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        des: typing.Union[MetaOapg.properties.des, str, schemas.Unset] = schemas.unset,
        displayflag: typing.Union[MetaOapg.properties.displayflag, bool, schemas.Unset] = schemas.unset,
        dttm: typing.Union[MetaOapg.properties.dttm, str, datetime, schemas.Unset] = schemas.unset,
        durationshutin: typing.Union[MetaOapg.properties.durationshutin, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        idrecjob: typing.Union[MetaOapg.properties.idrecjob, str, schemas.Unset] = schemas.unset,
        idrecwellbore: typing.Union[MetaOapg.properties.idrecwellbore, str, schemas.Unset] = schemas.unset,
        idreczonecompletion: typing.Union[MetaOapg.properties.idreczonecompletion, str, schemas.Unset] = schemas.unset,
        prescas: typing.Union[MetaOapg.properties.prescas, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presgradientdatumor: typing.Union[MetaOapg.properties.presgradientdatumor, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presresdatum: typing.Union[MetaOapg.properties.presresdatum, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presresmpp: typing.Union[MetaOapg.properties.presresmpp, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prestub: typing.Union[MetaOapg.properties.prestub, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rategas: typing.Union[MetaOapg.properties.rategas, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rateliquid: typing.Union[MetaOapg.properties.rateliquid, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        sandcut: typing.Union[MetaOapg.properties.sandcut, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        subtyp: typing.Union[MetaOapg.properties.subtyp, str, schemas.Unset] = schemas.unset,
        tempgradientor: typing.Union[MetaOapg.properties.tempgradientor, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tempres: typing.Union[MetaOapg.properties.tempres, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        testedby: typing.Union[MetaOapg.properties.testedby, str, schemas.Unset] = schemas.unset,
        typ: typing.Union[MetaOapg.properties.typ, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PressureTraverseData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            analysiscom=analysiscom,
            analyst=analyst,
            bsw=bsw,
            com=com,
            depthgasoil=depthgasoil,
            depthgaswater=depthgaswater,
            depthoilwater=depthoilwater,
            depthresdatum=depthresdatum,
            depthresmpp=depthresmpp,
            depthssresdatum=depthssresdatum,
            des=des,
            displayflag=displayflag,
            dttm=dttm,
            durationshutin=durationshutin,
            idrecjob=idrecjob,
            idrecwellbore=idrecwellbore,
            idreczonecompletion=idreczonecompletion,
            prescas=prescas,
            presgradientdatumor=presgradientdatumor,
            presresdatum=presresdatum,
            presresmpp=presresmpp,
            prestub=prestub,
            rategas=rategas,
            rateliquid=rateliquid,
            sandcut=sandcut,
            subtyp=subtyp,
            tempgradientor=tempgradientor,
            tempres=tempres,
            testedby=testedby,
            typ=typ,
            _configuration=_configuration,
            **kwargs,
        )
