# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class CementStageData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            btmplug = schemas.BoolSchema
            com = schemas.StrSchema
            depthbtm = schemas.NumberSchema
            depthdrillout = schemas.NumberSchema
            depthtagged = schemas.NumberSchema
            depthtop = schemas.NumberSchema
            des = schemas.StrSchema
            dttmdrillout = schemas.DateTimeSchema
            dttmendpump = schemas.DateTimeSchema
            dttmreleasedpres = schemas.DateTimeSchema
            dttmstartpump = schemas.DateTimeSchema
            dttmtagged = schemas.DateTimeSchema
            floatfailed = schemas.BoolSchema
            fullreturn = schemas.BoolSchema
            idrecparent = schemas.StrSchema
            measmethod = schemas.StrSchema
            objective = schemas.StrSchema
            oddrillout = schemas.NumberSchema
            pipemovenote = schemas.StrSchema
            plugfailed = schemas.BoolSchema
            presheld = schemas.NumberSchema
            presplugbump = schemas.NumberSchema
            prespumpend = schemas.NumberSchema
            proposeddrillout = schemas.BoolSchema
            ratepumpavg = schemas.NumberSchema
            ratepumpend = schemas.NumberSchema
            ratepumpstart = schemas.NumberSchema
            reciprate = schemas.NumberSchema
            reciprocated = schemas.BoolSchema
            recipstroke = schemas.NumberSchema
            rotated = schemas.BoolSchema
            rotaterpm = schemas.NumberSchema
            stagenum = schemas.IntSchema
            tagmethod = schemas.StrSchema
            topplug = schemas.BoolSchema
            volinfrm = schemas.NumberSchema
            vollost = schemas.NumberSchema
            volreturncmnt = schemas.NumberSchema
            weighttagged = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "btmplug": btmplug,
                "com": com,
                "depthbtm": depthbtm,
                "depthdrillout": depthdrillout,
                "depthtagged": depthtagged,
                "depthtop": depthtop,
                "des": des,
                "dttmdrillout": dttmdrillout,
                "dttmendpump": dttmendpump,
                "dttmreleasedpres": dttmreleasedpres,
                "dttmstartpump": dttmstartpump,
                "dttmtagged": dttmtagged,
                "floatfailed": floatfailed,
                "fullreturn": fullreturn,
                "idrecparent": idrecparent,
                "measmethod": measmethod,
                "objective": objective,
                "oddrillout": oddrillout,
                "pipemovenote": pipemovenote,
                "plugfailed": plugfailed,
                "presheld": presheld,
                "presplugbump": presplugbump,
                "prespumpend": prespumpend,
                "proposeddrillout": proposeddrillout,
                "ratepumpavg": ratepumpavg,
                "ratepumpend": ratepumpend,
                "ratepumpstart": ratepumpstart,
                "reciprate": reciprate,
                "reciprocated": reciprocated,
                "recipstroke": recipstroke,
                "rotated": rotated,
                "rotaterpm": rotaterpm,
                "stagenum": stagenum,
                "tagmethod": tagmethod,
                "topplug": topplug,
                "volinfrm": volinfrm,
                "vollost": vollost,
                "volreturncmnt": volreturncmnt,
                "weighttagged": weighttagged,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["btmplug"]) -> MetaOapg.properties.btmplug: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthbtm"]) -> MetaOapg.properties.depthbtm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthdrillout"]) -> MetaOapg.properties.depthdrillout: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthtagged"]) -> MetaOapg.properties.depthtagged: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthtop"]) -> MetaOapg.properties.depthtop: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["des"]) -> MetaOapg.properties.des: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmdrillout"]) -> MetaOapg.properties.dttmdrillout: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmendpump"]) -> MetaOapg.properties.dttmendpump: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmreleasedpres"]) -> MetaOapg.properties.dttmreleasedpres: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmstartpump"]) -> MetaOapg.properties.dttmstartpump: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmtagged"]) -> MetaOapg.properties.dttmtagged: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["floatfailed"]) -> MetaOapg.properties.floatfailed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fullreturn"]) -> MetaOapg.properties.fullreturn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["measmethod"]) -> MetaOapg.properties.measmethod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["objective"]) -> MetaOapg.properties.objective: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["oddrillout"]) -> MetaOapg.properties.oddrillout: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pipemovenote"]) -> MetaOapg.properties.pipemovenote: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["plugfailed"]) -> MetaOapg.properties.plugfailed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presheld"]) -> MetaOapg.properties.presheld: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presplugbump"]) -> MetaOapg.properties.presplugbump: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prespumpend"]) -> MetaOapg.properties.prespumpend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["proposeddrillout"]) -> MetaOapg.properties.proposeddrillout: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ratepumpavg"]) -> MetaOapg.properties.ratepumpavg: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ratepumpend"]) -> MetaOapg.properties.ratepumpend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ratepumpstart"]) -> MetaOapg.properties.ratepumpstart: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reciprate"]) -> MetaOapg.properties.reciprate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reciprocated"]) -> MetaOapg.properties.reciprocated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recipstroke"]) -> MetaOapg.properties.recipstroke: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rotated"]) -> MetaOapg.properties.rotated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rotaterpm"]) -> MetaOapg.properties.rotaterpm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stagenum"]) -> MetaOapg.properties.stagenum: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tagmethod"]) -> MetaOapg.properties.tagmethod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["topplug"]) -> MetaOapg.properties.topplug: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volinfrm"]) -> MetaOapg.properties.volinfrm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["vollost"]) -> MetaOapg.properties.vollost: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volreturncmnt"]) -> MetaOapg.properties.volreturncmnt: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["weighttagged"]) -> MetaOapg.properties.weighttagged: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "btmplug", "com", "depthbtm", "depthdrillout", "depthtagged", "depthtop", "des", "dttmdrillout", "dttmendpump", "dttmreleasedpres", "dttmstartpump", "dttmtagged", "floatfailed", "fullreturn", "idrecparent", "measmethod", "objective", "oddrillout", "pipemovenote", "plugfailed", "presheld", "presplugbump", "prespumpend", "proposeddrillout", "ratepumpavg", "ratepumpend", "ratepumpstart", "reciprate", "reciprocated", "recipstroke", "rotated", "rotaterpm", "stagenum", "tagmethod", "topplug", "volinfrm", "vollost", "volreturncmnt", "weighttagged", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["btmplug"]) -> typing.Union[MetaOapg.properties.btmplug, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthbtm"]) -> typing.Union[MetaOapg.properties.depthbtm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthdrillout"]) -> typing.Union[MetaOapg.properties.depthdrillout, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthtagged"]) -> typing.Union[MetaOapg.properties.depthtagged, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthtop"]) -> typing.Union[MetaOapg.properties.depthtop, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["des"]) -> typing.Union[MetaOapg.properties.des, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmdrillout"]) -> typing.Union[MetaOapg.properties.dttmdrillout, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmendpump"]) -> typing.Union[MetaOapg.properties.dttmendpump, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmreleasedpres"]) -> typing.Union[MetaOapg.properties.dttmreleasedpres, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmstartpump"]) -> typing.Union[MetaOapg.properties.dttmstartpump, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmtagged"]) -> typing.Union[MetaOapg.properties.dttmtagged, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["floatfailed"]) -> typing.Union[MetaOapg.properties.floatfailed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fullreturn"]) -> typing.Union[MetaOapg.properties.fullreturn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["measmethod"]) -> typing.Union[MetaOapg.properties.measmethod, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["objective"]) -> typing.Union[MetaOapg.properties.objective, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["oddrillout"]) -> typing.Union[MetaOapg.properties.oddrillout, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pipemovenote"]) -> typing.Union[MetaOapg.properties.pipemovenote, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["plugfailed"]) -> typing.Union[MetaOapg.properties.plugfailed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presheld"]) -> typing.Union[MetaOapg.properties.presheld, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presplugbump"]) -> typing.Union[MetaOapg.properties.presplugbump, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prespumpend"]) -> typing.Union[MetaOapg.properties.prespumpend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["proposeddrillout"]) -> typing.Union[MetaOapg.properties.proposeddrillout, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ratepumpavg"]) -> typing.Union[MetaOapg.properties.ratepumpavg, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ratepumpend"]) -> typing.Union[MetaOapg.properties.ratepumpend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ratepumpstart"]) -> typing.Union[MetaOapg.properties.ratepumpstart, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reciprate"]) -> typing.Union[MetaOapg.properties.reciprate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reciprocated"]) -> typing.Union[MetaOapg.properties.reciprocated, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recipstroke"]) -> typing.Union[MetaOapg.properties.recipstroke, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rotated"]) -> typing.Union[MetaOapg.properties.rotated, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rotaterpm"]) -> typing.Union[MetaOapg.properties.rotaterpm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stagenum"]) -> typing.Union[MetaOapg.properties.stagenum, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tagmethod"]) -> typing.Union[MetaOapg.properties.tagmethod, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["topplug"]) -> typing.Union[MetaOapg.properties.topplug, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volinfrm"]) -> typing.Union[MetaOapg.properties.volinfrm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["vollost"]) -> typing.Union[MetaOapg.properties.vollost, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volreturncmnt"]) -> typing.Union[MetaOapg.properties.volreturncmnt, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["weighttagged"]) -> typing.Union[MetaOapg.properties.weighttagged, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "btmplug", "com", "depthbtm", "depthdrillout", "depthtagged", "depthtop", "des", "dttmdrillout", "dttmendpump", "dttmreleasedpres", "dttmstartpump", "dttmtagged", "floatfailed", "fullreturn", "idrecparent", "measmethod", "objective", "oddrillout", "pipemovenote", "plugfailed", "presheld", "presplugbump", "prespumpend", "proposeddrillout", "ratepumpavg", "ratepumpend", "ratepumpstart", "reciprate", "reciprocated", "recipstroke", "rotated", "rotaterpm", "stagenum", "tagmethod", "topplug", "volinfrm", "vollost", "volreturncmnt", "weighttagged", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        btmplug: typing.Union[MetaOapg.properties.btmplug, bool, schemas.Unset] = schemas.unset,
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        depthbtm: typing.Union[MetaOapg.properties.depthbtm, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthdrillout: typing.Union[MetaOapg.properties.depthdrillout, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthtagged: typing.Union[MetaOapg.properties.depthtagged, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthtop: typing.Union[MetaOapg.properties.depthtop, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        des: typing.Union[MetaOapg.properties.des, str, schemas.Unset] = schemas.unset,
        dttmdrillout: typing.Union[MetaOapg.properties.dttmdrillout, str, datetime, schemas.Unset] = schemas.unset,
        dttmendpump: typing.Union[MetaOapg.properties.dttmendpump, str, datetime, schemas.Unset] = schemas.unset,
        dttmreleasedpres: typing.Union[MetaOapg.properties.dttmreleasedpres, str, datetime, schemas.Unset] = schemas.unset,
        dttmstartpump: typing.Union[MetaOapg.properties.dttmstartpump, str, datetime, schemas.Unset] = schemas.unset,
        dttmtagged: typing.Union[MetaOapg.properties.dttmtagged, str, datetime, schemas.Unset] = schemas.unset,
        floatfailed: typing.Union[MetaOapg.properties.floatfailed, bool, schemas.Unset] = schemas.unset,
        fullreturn: typing.Union[MetaOapg.properties.fullreturn, bool, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        measmethod: typing.Union[MetaOapg.properties.measmethod, str, schemas.Unset] = schemas.unset,
        objective: typing.Union[MetaOapg.properties.objective, str, schemas.Unset] = schemas.unset,
        oddrillout: typing.Union[MetaOapg.properties.oddrillout, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        pipemovenote: typing.Union[MetaOapg.properties.pipemovenote, str, schemas.Unset] = schemas.unset,
        plugfailed: typing.Union[MetaOapg.properties.plugfailed, bool, schemas.Unset] = schemas.unset,
        presheld: typing.Union[MetaOapg.properties.presheld, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presplugbump: typing.Union[MetaOapg.properties.presplugbump, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prespumpend: typing.Union[MetaOapg.properties.prespumpend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        proposeddrillout: typing.Union[MetaOapg.properties.proposeddrillout, bool, schemas.Unset] = schemas.unset,
        ratepumpavg: typing.Union[MetaOapg.properties.ratepumpavg, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ratepumpend: typing.Union[MetaOapg.properties.ratepumpend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ratepumpstart: typing.Union[MetaOapg.properties.ratepumpstart, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        reciprate: typing.Union[MetaOapg.properties.reciprate, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        reciprocated: typing.Union[MetaOapg.properties.reciprocated, bool, schemas.Unset] = schemas.unset,
        recipstroke: typing.Union[MetaOapg.properties.recipstroke, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rotated: typing.Union[MetaOapg.properties.rotated, bool, schemas.Unset] = schemas.unset,
        rotaterpm: typing.Union[MetaOapg.properties.rotaterpm, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        stagenum: typing.Union[MetaOapg.properties.stagenum, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        tagmethod: typing.Union[MetaOapg.properties.tagmethod, str, schemas.Unset] = schemas.unset,
        topplug: typing.Union[MetaOapg.properties.topplug, bool, schemas.Unset] = schemas.unset,
        volinfrm: typing.Union[MetaOapg.properties.volinfrm, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        vollost: typing.Union[MetaOapg.properties.vollost, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volreturncmnt: typing.Union[MetaOapg.properties.volreturncmnt, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        weighttagged: typing.Union[MetaOapg.properties.weighttagged, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CementStageData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            btmplug=btmplug,
            com=com,
            depthbtm=depthbtm,
            depthdrillout=depthdrillout,
            depthtagged=depthtagged,
            depthtop=depthtop,
            des=des,
            dttmdrillout=dttmdrillout,
            dttmendpump=dttmendpump,
            dttmreleasedpres=dttmreleasedpres,
            dttmstartpump=dttmstartpump,
            dttmtagged=dttmtagged,
            floatfailed=floatfailed,
            fullreturn=fullreturn,
            idrecparent=idrecparent,
            measmethod=measmethod,
            objective=objective,
            oddrillout=oddrillout,
            pipemovenote=pipemovenote,
            plugfailed=plugfailed,
            presheld=presheld,
            presplugbump=presplugbump,
            prespumpend=prespumpend,
            proposeddrillout=proposeddrillout,
            ratepumpavg=ratepumpavg,
            ratepumpend=ratepumpend,
            ratepumpstart=ratepumpstart,
            reciprate=reciprate,
            reciprocated=reciprocated,
            recipstroke=recipstroke,
            rotated=rotated,
            rotaterpm=rotaterpm,
            stagenum=stagenum,
            tagmethod=tagmethod,
            topplug=topplug,
            volinfrm=volinfrm,
            vollost=vollost,
            volreturncmnt=volreturncmnt,
            weighttagged=weighttagged,
            _configuration=_configuration,
            **kwargs,
        )
