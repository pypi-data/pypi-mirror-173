# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class SwabDetailData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            bsw = schemas.NumberSchema
            com = schemas.StrSchema
            density = schemas.NumberSchema
            depthfluidlevel = schemas.NumberSchema
            depthpull = schemas.NumberSchema
            dttm = schemas.DateTimeSchema
            h2s = schemas.NumberSchema
            idrecparent = schemas.StrSchema
            ph = schemas.NumberSchema
            prescas = schemas.NumberSchema
            prestub = schemas.NumberSchema
            rategas = schemas.NumberSchema
            salinity = schemas.NumberSchema
            sandcut = schemas.NumberSchema
            swabno = schemas.IntSchema
            tankgauge = schemas.NumberSchema
            tempwh = schemas.NumberSchema
            tmswab = schemas.NumberSchema
            volfluidrec = schemas.NumberSchema
            volgas = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "bsw": bsw,
                "com": com,
                "density": density,
                "depthfluidlevel": depthfluidlevel,
                "depthpull": depthpull,
                "dttm": dttm,
                "h2s": h2s,
                "idrecparent": idrecparent,
                "ph": ph,
                "prescas": prescas,
                "prestub": prestub,
                "rategas": rategas,
                "salinity": salinity,
                "sandcut": sandcut,
                "swabno": swabno,
                "tankgauge": tankgauge,
                "tempwh": tempwh,
                "tmswab": tmswab,
                "volfluidrec": volfluidrec,
                "volgas": volgas,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bsw"]) -> MetaOapg.properties.bsw: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["density"]) -> MetaOapg.properties.density: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthfluidlevel"]) -> MetaOapg.properties.depthfluidlevel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthpull"]) -> MetaOapg.properties.depthpull: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttm"]) -> MetaOapg.properties.dttm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["h2s"]) -> MetaOapg.properties.h2s: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ph"]) -> MetaOapg.properties.ph: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prescas"]) -> MetaOapg.properties.prescas: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prestub"]) -> MetaOapg.properties.prestub: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rategas"]) -> MetaOapg.properties.rategas: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["salinity"]) -> MetaOapg.properties.salinity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sandcut"]) -> MetaOapg.properties.sandcut: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["swabno"]) -> MetaOapg.properties.swabno: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tankgauge"]) -> MetaOapg.properties.tankgauge: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tempwh"]) -> MetaOapg.properties.tempwh: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tmswab"]) -> MetaOapg.properties.tmswab: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volfluidrec"]) -> MetaOapg.properties.volfluidrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volgas"]) -> MetaOapg.properties.volgas: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "bsw", "com", "density", "depthfluidlevel", "depthpull", "dttm", "h2s", "idrecparent", "ph", "prescas", "prestub", "rategas", "salinity", "sandcut", "swabno", "tankgauge", "tempwh", "tmswab", "volfluidrec", "volgas", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bsw"]) -> typing.Union[MetaOapg.properties.bsw, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["density"]) -> typing.Union[MetaOapg.properties.density, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthfluidlevel"]) -> typing.Union[MetaOapg.properties.depthfluidlevel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthpull"]) -> typing.Union[MetaOapg.properties.depthpull, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttm"]) -> typing.Union[MetaOapg.properties.dttm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["h2s"]) -> typing.Union[MetaOapg.properties.h2s, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ph"]) -> typing.Union[MetaOapg.properties.ph, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prescas"]) -> typing.Union[MetaOapg.properties.prescas, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prestub"]) -> typing.Union[MetaOapg.properties.prestub, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rategas"]) -> typing.Union[MetaOapg.properties.rategas, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["salinity"]) -> typing.Union[MetaOapg.properties.salinity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sandcut"]) -> typing.Union[MetaOapg.properties.sandcut, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["swabno"]) -> typing.Union[MetaOapg.properties.swabno, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tankgauge"]) -> typing.Union[MetaOapg.properties.tankgauge, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tempwh"]) -> typing.Union[MetaOapg.properties.tempwh, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tmswab"]) -> typing.Union[MetaOapg.properties.tmswab, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volfluidrec"]) -> typing.Union[MetaOapg.properties.volfluidrec, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volgas"]) -> typing.Union[MetaOapg.properties.volgas, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "bsw", "com", "density", "depthfluidlevel", "depthpull", "dttm", "h2s", "idrecparent", "ph", "prescas", "prestub", "rategas", "salinity", "sandcut", "swabno", "tankgauge", "tempwh", "tmswab", "volfluidrec", "volgas", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        bsw: typing.Union[MetaOapg.properties.bsw, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        density: typing.Union[MetaOapg.properties.density, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthfluidlevel: typing.Union[MetaOapg.properties.depthfluidlevel, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthpull: typing.Union[MetaOapg.properties.depthpull, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        dttm: typing.Union[MetaOapg.properties.dttm, str, datetime, schemas.Unset] = schemas.unset,
        h2s: typing.Union[MetaOapg.properties.h2s, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        ph: typing.Union[MetaOapg.properties.ph, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prescas: typing.Union[MetaOapg.properties.prescas, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prestub: typing.Union[MetaOapg.properties.prestub, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rategas: typing.Union[MetaOapg.properties.rategas, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        salinity: typing.Union[MetaOapg.properties.salinity, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        sandcut: typing.Union[MetaOapg.properties.sandcut, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        swabno: typing.Union[MetaOapg.properties.swabno, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        tankgauge: typing.Union[MetaOapg.properties.tankgauge, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tempwh: typing.Union[MetaOapg.properties.tempwh, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tmswab: typing.Union[MetaOapg.properties.tmswab, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volfluidrec: typing.Union[MetaOapg.properties.volfluidrec, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volgas: typing.Union[MetaOapg.properties.volgas, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SwabDetailData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            bsw=bsw,
            com=com,
            density=density,
            depthfluidlevel=depthfluidlevel,
            depthpull=depthpull,
            dttm=dttm,
            h2s=h2s,
            idrecparent=idrecparent,
            ph=ph,
            prescas=prescas,
            prestub=prestub,
            rategas=rategas,
            salinity=salinity,
            sandcut=sandcut,
            swabno=swabno,
            tankgauge=tankgauge,
            tempwh=tempwh,
            tmswab=tmswab,
            volfluidrec=volfluidrec,
            volgas=volgas,
            _configuration=_configuration,
            **kwargs,
        )
