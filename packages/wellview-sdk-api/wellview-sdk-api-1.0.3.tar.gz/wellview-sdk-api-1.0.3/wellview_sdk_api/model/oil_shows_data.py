# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class OilShowsData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            com = schemas.StrSchema
            cutcolor = schemas.StrSchema
            cutfluorcolor = schemas.StrSchema
            cutfluorform = schemas.StrSchema
            cutfluorlevel = schemas.StrSchema
            cutfluorqft = schemas.NumberSchema
            cutfluorspeed = schemas.StrSchema
            cutfluorstrength = schemas.StrSchema
            cutformulation = schemas.StrSchema
            cutlevel = schemas.StrSchema
            cutspeed = schemas.StrSchema
            cutstrength = schemas.StrSchema
            densityqft = schemas.NumberSchema
            depthbtm = schemas.NumberSchema
            depthtop = schemas.NumberSchema
            dttm = schemas.DateTimeSchema
            iconname = schemas.StrSchema
            idrecparent = schemas.StrSchema
            naturalfluorcolor = schemas.StrSchema
            naturalfluordes = schemas.StrSchema
            naturalfluordist = schemas.StrSchema
            naturalfluorlevel = schemas.StrSchema
            naturalfluorpercent = schemas.NumberSchema
            naturalfluorqft = schemas.NumberSchema
            odor = schemas.StrSchema
            refno = schemas.StrSchema
            residuecolor = schemas.StrSchema
            showorigin = schemas.StrSchema
            showquality = schemas.StrSchema
            showtyp = schemas.StrSchema
            visiblestaincolor = schemas.StrSchema
            visiblestaindegree = schemas.StrSchema
            visiblestaindist = schemas.StrSchema
            visiblestainpercent = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "com": com,
                "cutcolor": cutcolor,
                "cutfluorcolor": cutfluorcolor,
                "cutfluorform": cutfluorform,
                "cutfluorlevel": cutfluorlevel,
                "cutfluorqft": cutfluorqft,
                "cutfluorspeed": cutfluorspeed,
                "cutfluorstrength": cutfluorstrength,
                "cutformulation": cutformulation,
                "cutlevel": cutlevel,
                "cutspeed": cutspeed,
                "cutstrength": cutstrength,
                "densityqft": densityqft,
                "depthbtm": depthbtm,
                "depthtop": depthtop,
                "dttm": dttm,
                "iconname": iconname,
                "idrecparent": idrecparent,
                "naturalfluorcolor": naturalfluorcolor,
                "naturalfluordes": naturalfluordes,
                "naturalfluordist": naturalfluordist,
                "naturalfluorlevel": naturalfluorlevel,
                "naturalfluorpercent": naturalfluorpercent,
                "naturalfluorqft": naturalfluorqft,
                "odor": odor,
                "refno": refno,
                "residuecolor": residuecolor,
                "showorigin": showorigin,
                "showquality": showquality,
                "showtyp": showtyp,
                "visiblestaincolor": visiblestaincolor,
                "visiblestaindegree": visiblestaindegree,
                "visiblestaindist": visiblestaindist,
                "visiblestainpercent": visiblestainpercent,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cutcolor"]) -> MetaOapg.properties.cutcolor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cutfluorcolor"]) -> MetaOapg.properties.cutfluorcolor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cutfluorform"]) -> MetaOapg.properties.cutfluorform: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cutfluorlevel"]) -> MetaOapg.properties.cutfluorlevel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cutfluorqft"]) -> MetaOapg.properties.cutfluorqft: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cutfluorspeed"]) -> MetaOapg.properties.cutfluorspeed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cutfluorstrength"]) -> MetaOapg.properties.cutfluorstrength: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cutformulation"]) -> MetaOapg.properties.cutformulation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cutlevel"]) -> MetaOapg.properties.cutlevel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cutspeed"]) -> MetaOapg.properties.cutspeed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cutstrength"]) -> MetaOapg.properties.cutstrength: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["densityqft"]) -> MetaOapg.properties.densityqft: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthbtm"]) -> MetaOapg.properties.depthbtm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthtop"]) -> MetaOapg.properties.depthtop: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttm"]) -> MetaOapg.properties.dttm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["iconname"]) -> MetaOapg.properties.iconname: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["naturalfluorcolor"]) -> MetaOapg.properties.naturalfluorcolor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["naturalfluordes"]) -> MetaOapg.properties.naturalfluordes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["naturalfluordist"]) -> MetaOapg.properties.naturalfluordist: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["naturalfluorlevel"]) -> MetaOapg.properties.naturalfluorlevel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["naturalfluorpercent"]) -> MetaOapg.properties.naturalfluorpercent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["naturalfluorqft"]) -> MetaOapg.properties.naturalfluorqft: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["odor"]) -> MetaOapg.properties.odor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["refno"]) -> MetaOapg.properties.refno: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["residuecolor"]) -> MetaOapg.properties.residuecolor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["showorigin"]) -> MetaOapg.properties.showorigin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["showquality"]) -> MetaOapg.properties.showquality: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["showtyp"]) -> MetaOapg.properties.showtyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["visiblestaincolor"]) -> MetaOapg.properties.visiblestaincolor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["visiblestaindegree"]) -> MetaOapg.properties.visiblestaindegree: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["visiblestaindist"]) -> MetaOapg.properties.visiblestaindist: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["visiblestainpercent"]) -> MetaOapg.properties.visiblestainpercent: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "com", "cutcolor", "cutfluorcolor", "cutfluorform", "cutfluorlevel", "cutfluorqft", "cutfluorspeed", "cutfluorstrength", "cutformulation", "cutlevel", "cutspeed", "cutstrength", "densityqft", "depthbtm", "depthtop", "dttm", "iconname", "idrecparent", "naturalfluorcolor", "naturalfluordes", "naturalfluordist", "naturalfluorlevel", "naturalfluorpercent", "naturalfluorqft", "odor", "refno", "residuecolor", "showorigin", "showquality", "showtyp", "visiblestaincolor", "visiblestaindegree", "visiblestaindist", "visiblestainpercent", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cutcolor"]) -> typing.Union[MetaOapg.properties.cutcolor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cutfluorcolor"]) -> typing.Union[MetaOapg.properties.cutfluorcolor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cutfluorform"]) -> typing.Union[MetaOapg.properties.cutfluorform, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cutfluorlevel"]) -> typing.Union[MetaOapg.properties.cutfluorlevel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cutfluorqft"]) -> typing.Union[MetaOapg.properties.cutfluorqft, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cutfluorspeed"]) -> typing.Union[MetaOapg.properties.cutfluorspeed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cutfluorstrength"]) -> typing.Union[MetaOapg.properties.cutfluorstrength, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cutformulation"]) -> typing.Union[MetaOapg.properties.cutformulation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cutlevel"]) -> typing.Union[MetaOapg.properties.cutlevel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cutspeed"]) -> typing.Union[MetaOapg.properties.cutspeed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cutstrength"]) -> typing.Union[MetaOapg.properties.cutstrength, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["densityqft"]) -> typing.Union[MetaOapg.properties.densityqft, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthbtm"]) -> typing.Union[MetaOapg.properties.depthbtm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthtop"]) -> typing.Union[MetaOapg.properties.depthtop, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttm"]) -> typing.Union[MetaOapg.properties.dttm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["iconname"]) -> typing.Union[MetaOapg.properties.iconname, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["naturalfluorcolor"]) -> typing.Union[MetaOapg.properties.naturalfluorcolor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["naturalfluordes"]) -> typing.Union[MetaOapg.properties.naturalfluordes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["naturalfluordist"]) -> typing.Union[MetaOapg.properties.naturalfluordist, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["naturalfluorlevel"]) -> typing.Union[MetaOapg.properties.naturalfluorlevel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["naturalfluorpercent"]) -> typing.Union[MetaOapg.properties.naturalfluorpercent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["naturalfluorqft"]) -> typing.Union[MetaOapg.properties.naturalfluorqft, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["odor"]) -> typing.Union[MetaOapg.properties.odor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["refno"]) -> typing.Union[MetaOapg.properties.refno, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["residuecolor"]) -> typing.Union[MetaOapg.properties.residuecolor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["showorigin"]) -> typing.Union[MetaOapg.properties.showorigin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["showquality"]) -> typing.Union[MetaOapg.properties.showquality, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["showtyp"]) -> typing.Union[MetaOapg.properties.showtyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["visiblestaincolor"]) -> typing.Union[MetaOapg.properties.visiblestaincolor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["visiblestaindegree"]) -> typing.Union[MetaOapg.properties.visiblestaindegree, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["visiblestaindist"]) -> typing.Union[MetaOapg.properties.visiblestaindist, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["visiblestainpercent"]) -> typing.Union[MetaOapg.properties.visiblestainpercent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "com", "cutcolor", "cutfluorcolor", "cutfluorform", "cutfluorlevel", "cutfluorqft", "cutfluorspeed", "cutfluorstrength", "cutformulation", "cutlevel", "cutspeed", "cutstrength", "densityqft", "depthbtm", "depthtop", "dttm", "iconname", "idrecparent", "naturalfluorcolor", "naturalfluordes", "naturalfluordist", "naturalfluorlevel", "naturalfluorpercent", "naturalfluorqft", "odor", "refno", "residuecolor", "showorigin", "showquality", "showtyp", "visiblestaincolor", "visiblestaindegree", "visiblestaindist", "visiblestainpercent", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        cutcolor: typing.Union[MetaOapg.properties.cutcolor, str, schemas.Unset] = schemas.unset,
        cutfluorcolor: typing.Union[MetaOapg.properties.cutfluorcolor, str, schemas.Unset] = schemas.unset,
        cutfluorform: typing.Union[MetaOapg.properties.cutfluorform, str, schemas.Unset] = schemas.unset,
        cutfluorlevel: typing.Union[MetaOapg.properties.cutfluorlevel, str, schemas.Unset] = schemas.unset,
        cutfluorqft: typing.Union[MetaOapg.properties.cutfluorqft, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        cutfluorspeed: typing.Union[MetaOapg.properties.cutfluorspeed, str, schemas.Unset] = schemas.unset,
        cutfluorstrength: typing.Union[MetaOapg.properties.cutfluorstrength, str, schemas.Unset] = schemas.unset,
        cutformulation: typing.Union[MetaOapg.properties.cutformulation, str, schemas.Unset] = schemas.unset,
        cutlevel: typing.Union[MetaOapg.properties.cutlevel, str, schemas.Unset] = schemas.unset,
        cutspeed: typing.Union[MetaOapg.properties.cutspeed, str, schemas.Unset] = schemas.unset,
        cutstrength: typing.Union[MetaOapg.properties.cutstrength, str, schemas.Unset] = schemas.unset,
        densityqft: typing.Union[MetaOapg.properties.densityqft, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthbtm: typing.Union[MetaOapg.properties.depthbtm, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthtop: typing.Union[MetaOapg.properties.depthtop, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        dttm: typing.Union[MetaOapg.properties.dttm, str, datetime, schemas.Unset] = schemas.unset,
        iconname: typing.Union[MetaOapg.properties.iconname, str, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        naturalfluorcolor: typing.Union[MetaOapg.properties.naturalfluorcolor, str, schemas.Unset] = schemas.unset,
        naturalfluordes: typing.Union[MetaOapg.properties.naturalfluordes, str, schemas.Unset] = schemas.unset,
        naturalfluordist: typing.Union[MetaOapg.properties.naturalfluordist, str, schemas.Unset] = schemas.unset,
        naturalfluorlevel: typing.Union[MetaOapg.properties.naturalfluorlevel, str, schemas.Unset] = schemas.unset,
        naturalfluorpercent: typing.Union[MetaOapg.properties.naturalfluorpercent, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        naturalfluorqft: typing.Union[MetaOapg.properties.naturalfluorqft, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        odor: typing.Union[MetaOapg.properties.odor, str, schemas.Unset] = schemas.unset,
        refno: typing.Union[MetaOapg.properties.refno, str, schemas.Unset] = schemas.unset,
        residuecolor: typing.Union[MetaOapg.properties.residuecolor, str, schemas.Unset] = schemas.unset,
        showorigin: typing.Union[MetaOapg.properties.showorigin, str, schemas.Unset] = schemas.unset,
        showquality: typing.Union[MetaOapg.properties.showquality, str, schemas.Unset] = schemas.unset,
        showtyp: typing.Union[MetaOapg.properties.showtyp, str, schemas.Unset] = schemas.unset,
        visiblestaincolor: typing.Union[MetaOapg.properties.visiblestaincolor, str, schemas.Unset] = schemas.unset,
        visiblestaindegree: typing.Union[MetaOapg.properties.visiblestaindegree, str, schemas.Unset] = schemas.unset,
        visiblestaindist: typing.Union[MetaOapg.properties.visiblestaindist, str, schemas.Unset] = schemas.unset,
        visiblestainpercent: typing.Union[MetaOapg.properties.visiblestainpercent, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'OilShowsData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            com=com,
            cutcolor=cutcolor,
            cutfluorcolor=cutfluorcolor,
            cutfluorform=cutfluorform,
            cutfluorlevel=cutfluorlevel,
            cutfluorqft=cutfluorqft,
            cutfluorspeed=cutfluorspeed,
            cutfluorstrength=cutfluorstrength,
            cutformulation=cutformulation,
            cutlevel=cutlevel,
            cutspeed=cutspeed,
            cutstrength=cutstrength,
            densityqft=densityqft,
            depthbtm=depthbtm,
            depthtop=depthtop,
            dttm=dttm,
            iconname=iconname,
            idrecparent=idrecparent,
            naturalfluorcolor=naturalfluorcolor,
            naturalfluordes=naturalfluordes,
            naturalfluordist=naturalfluordist,
            naturalfluorlevel=naturalfluorlevel,
            naturalfluorpercent=naturalfluorpercent,
            naturalfluorqft=naturalfluorqft,
            odor=odor,
            refno=refno,
            residuecolor=residuecolor,
            showorigin=showorigin,
            showquality=showquality,
            showtyp=showtyp,
            visiblestaincolor=visiblestaincolor,
            visiblestaindegree=visiblestaindegree,
            visiblestaindist=visiblestaindist,
            visiblestainpercent=visiblestainpercent,
            _configuration=_configuration,
            **kwargs,
        )
