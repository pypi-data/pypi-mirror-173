# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class PerforationData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            balance = schemas.StrSchema
            balancepres = schemas.NumberSchema
            carrierdes = schemas.StrSchema
            carriermake = schemas.StrSchema
            chargemake = schemas.StrSchema
            chargesz = schemas.NumberSchema
            chargetyp = schemas.StrSchema
            cluserrefno = schemas.NumberSchema
            com = schemas.StrSchema
            contractor = schemas.StrSchema
            conveymeth = schemas.StrSchema
            depthbtm = schemas.NumberSchema
            depthcsngcollarref = schemas.NumberSchema
            depthfluidafter = schemas.NumberSchema
            depthfluidbefore = schemas.NumberSchema
            depthgauge = schemas.NumberSchema
            depthtop = schemas.NumberSchema
            dttm = schemas.DateTimeSchema
            explosivetyp = schemas.StrSchema
            fluiddensity = schemas.NumberSchema
            fluidtyp = schemas.StrSchema
            guncentralize = schemas.StrSchema
            gundes = schemas.StrSchema
            gunleftinhole = schemas.BoolSchema
            gunmetallurgy = schemas.StrSchema
            icondrawshort = schemas.BoolSchema
            idrecjob = schemas.StrSchema
            idreclog = schemas.StrSchema
            idrecstring = schemas.StrSchema
            idrecwellbore = schemas.StrSchema
            idreczoneor = schemas.StrSchema
            intno = schemas.NumberSchema
            orientation = schemas.StrSchema
            orientmethod = schemas.StrSchema
            penetrationnom = schemas.NumberSchema
            phasing = schemas.NumberSchema
            presbh = schemas.NumberSchema
            presbhtyp = schemas.StrSchema
            presdatum = schemas.NumberSchema
            presdesignbh = schemas.NumberSchema
            presduringperf = schemas.NumberSchema
            presfinalsurf = schemas.NumberSchema
            presgradientgaugetompp = schemas.NumberSchema
            preshhsurftompp = schemas.NumberSchema
            presinitsurf = schemas.NumberSchema
            presmpp = schemas.NumberSchema
            proposed = schemas.BoolSchema
            ratefluidafter = schemas.NumberSchema
            ratefluidbefore = schemas.NumberSchema
            resulttechnical = schemas.StrSchema
            resulttechnicaldetail = schemas.StrSchema
            resulttechnicalnote = schemas.StrSchema
            shotdensity = schemas.NumberSchema
            shotplan = schemas.IntSchema
            shottotal = schemas.IntSchema
            szgun = schemas.NumberSchema
            szholeact = schemas.NumberSchema
            szholenom = schemas.NumberSchema
            typ = schemas.StrSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "balance": balance,
                "balancepres": balancepres,
                "carrierdes": carrierdes,
                "carriermake": carriermake,
                "chargemake": chargemake,
                "chargesz": chargesz,
                "chargetyp": chargetyp,
                "cluserrefno": cluserrefno,
                "com": com,
                "contractor": contractor,
                "conveymeth": conveymeth,
                "depthbtm": depthbtm,
                "depthcsngcollarref": depthcsngcollarref,
                "depthfluidafter": depthfluidafter,
                "depthfluidbefore": depthfluidbefore,
                "depthgauge": depthgauge,
                "depthtop": depthtop,
                "dttm": dttm,
                "explosivetyp": explosivetyp,
                "fluiddensity": fluiddensity,
                "fluidtyp": fluidtyp,
                "guncentralize": guncentralize,
                "gundes": gundes,
                "gunleftinhole": gunleftinhole,
                "gunmetallurgy": gunmetallurgy,
                "icondrawshort": icondrawshort,
                "idrecjob": idrecjob,
                "idreclog": idreclog,
                "idrecstring": idrecstring,
                "idrecwellbore": idrecwellbore,
                "idreczoneor": idreczoneor,
                "intno": intno,
                "orientation": orientation,
                "orientmethod": orientmethod,
                "penetrationnom": penetrationnom,
                "phasing": phasing,
                "presbh": presbh,
                "presbhtyp": presbhtyp,
                "presdatum": presdatum,
                "presdesignbh": presdesignbh,
                "presduringperf": presduringperf,
                "presfinalsurf": presfinalsurf,
                "presgradientgaugetompp": presgradientgaugetompp,
                "preshhsurftompp": preshhsurftompp,
                "presinitsurf": presinitsurf,
                "presmpp": presmpp,
                "proposed": proposed,
                "ratefluidafter": ratefluidafter,
                "ratefluidbefore": ratefluidbefore,
                "resulttechnical": resulttechnical,
                "resulttechnicaldetail": resulttechnicaldetail,
                "resulttechnicalnote": resulttechnicalnote,
                "shotdensity": shotdensity,
                "shotplan": shotplan,
                "shottotal": shottotal,
                "szgun": szgun,
                "szholeact": szholeact,
                "szholenom": szholenom,
                "typ": typ,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["balance"]) -> MetaOapg.properties.balance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["balancepres"]) -> MetaOapg.properties.balancepres: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["carrierdes"]) -> MetaOapg.properties.carrierdes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["carriermake"]) -> MetaOapg.properties.carriermake: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["chargemake"]) -> MetaOapg.properties.chargemake: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["chargesz"]) -> MetaOapg.properties.chargesz: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["chargetyp"]) -> MetaOapg.properties.chargetyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cluserrefno"]) -> MetaOapg.properties.cluserrefno: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contractor"]) -> MetaOapg.properties.contractor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["conveymeth"]) -> MetaOapg.properties.conveymeth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthbtm"]) -> MetaOapg.properties.depthbtm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthcsngcollarref"]) -> MetaOapg.properties.depthcsngcollarref: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthfluidafter"]) -> MetaOapg.properties.depthfluidafter: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthfluidbefore"]) -> MetaOapg.properties.depthfluidbefore: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthgauge"]) -> MetaOapg.properties.depthgauge: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthtop"]) -> MetaOapg.properties.depthtop: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttm"]) -> MetaOapg.properties.dttm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["explosivetyp"]) -> MetaOapg.properties.explosivetyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fluiddensity"]) -> MetaOapg.properties.fluiddensity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fluidtyp"]) -> MetaOapg.properties.fluidtyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["guncentralize"]) -> MetaOapg.properties.guncentralize: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gundes"]) -> MetaOapg.properties.gundes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gunleftinhole"]) -> MetaOapg.properties.gunleftinhole: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gunmetallurgy"]) -> MetaOapg.properties.gunmetallurgy: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["icondrawshort"]) -> MetaOapg.properties.icondrawshort: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecjob"]) -> MetaOapg.properties.idrecjob: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idreclog"]) -> MetaOapg.properties.idreclog: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecstring"]) -> MetaOapg.properties.idrecstring: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecwellbore"]) -> MetaOapg.properties.idrecwellbore: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idreczoneor"]) -> MetaOapg.properties.idreczoneor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["intno"]) -> MetaOapg.properties.intno: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["orientation"]) -> MetaOapg.properties.orientation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["orientmethod"]) -> MetaOapg.properties.orientmethod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["penetrationnom"]) -> MetaOapg.properties.penetrationnom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phasing"]) -> MetaOapg.properties.phasing: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presbh"]) -> MetaOapg.properties.presbh: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presbhtyp"]) -> MetaOapg.properties.presbhtyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presdatum"]) -> MetaOapg.properties.presdatum: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presdesignbh"]) -> MetaOapg.properties.presdesignbh: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presduringperf"]) -> MetaOapg.properties.presduringperf: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presfinalsurf"]) -> MetaOapg.properties.presfinalsurf: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presgradientgaugetompp"]) -> MetaOapg.properties.presgradientgaugetompp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["preshhsurftompp"]) -> MetaOapg.properties.preshhsurftompp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presinitsurf"]) -> MetaOapg.properties.presinitsurf: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presmpp"]) -> MetaOapg.properties.presmpp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["proposed"]) -> MetaOapg.properties.proposed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ratefluidafter"]) -> MetaOapg.properties.ratefluidafter: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ratefluidbefore"]) -> MetaOapg.properties.ratefluidbefore: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["resulttechnical"]) -> MetaOapg.properties.resulttechnical: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["resulttechnicaldetail"]) -> MetaOapg.properties.resulttechnicaldetail: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["resulttechnicalnote"]) -> MetaOapg.properties.resulttechnicalnote: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shotdensity"]) -> MetaOapg.properties.shotdensity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shotplan"]) -> MetaOapg.properties.shotplan: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shottotal"]) -> MetaOapg.properties.shottotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["szgun"]) -> MetaOapg.properties.szgun: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["szholeact"]) -> MetaOapg.properties.szholeact: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["szholenom"]) -> MetaOapg.properties.szholenom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["typ"]) -> MetaOapg.properties.typ: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "balance", "balancepres", "carrierdes", "carriermake", "chargemake", "chargesz", "chargetyp", "cluserrefno", "com", "contractor", "conveymeth", "depthbtm", "depthcsngcollarref", "depthfluidafter", "depthfluidbefore", "depthgauge", "depthtop", "dttm", "explosivetyp", "fluiddensity", "fluidtyp", "guncentralize", "gundes", "gunleftinhole", "gunmetallurgy", "icondrawshort", "idrecjob", "idreclog", "idrecstring", "idrecwellbore", "idreczoneor", "intno", "orientation", "orientmethod", "penetrationnom", "phasing", "presbh", "presbhtyp", "presdatum", "presdesignbh", "presduringperf", "presfinalsurf", "presgradientgaugetompp", "preshhsurftompp", "presinitsurf", "presmpp", "proposed", "ratefluidafter", "ratefluidbefore", "resulttechnical", "resulttechnicaldetail", "resulttechnicalnote", "shotdensity", "shotplan", "shottotal", "szgun", "szholeact", "szholenom", "typ", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["balance"]) -> typing.Union[MetaOapg.properties.balance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["balancepres"]) -> typing.Union[MetaOapg.properties.balancepres, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["carrierdes"]) -> typing.Union[MetaOapg.properties.carrierdes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["carriermake"]) -> typing.Union[MetaOapg.properties.carriermake, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["chargemake"]) -> typing.Union[MetaOapg.properties.chargemake, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["chargesz"]) -> typing.Union[MetaOapg.properties.chargesz, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["chargetyp"]) -> typing.Union[MetaOapg.properties.chargetyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cluserrefno"]) -> typing.Union[MetaOapg.properties.cluserrefno, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contractor"]) -> typing.Union[MetaOapg.properties.contractor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["conveymeth"]) -> typing.Union[MetaOapg.properties.conveymeth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthbtm"]) -> typing.Union[MetaOapg.properties.depthbtm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthcsngcollarref"]) -> typing.Union[MetaOapg.properties.depthcsngcollarref, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthfluidafter"]) -> typing.Union[MetaOapg.properties.depthfluidafter, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthfluidbefore"]) -> typing.Union[MetaOapg.properties.depthfluidbefore, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthgauge"]) -> typing.Union[MetaOapg.properties.depthgauge, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthtop"]) -> typing.Union[MetaOapg.properties.depthtop, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttm"]) -> typing.Union[MetaOapg.properties.dttm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["explosivetyp"]) -> typing.Union[MetaOapg.properties.explosivetyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fluiddensity"]) -> typing.Union[MetaOapg.properties.fluiddensity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fluidtyp"]) -> typing.Union[MetaOapg.properties.fluidtyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["guncentralize"]) -> typing.Union[MetaOapg.properties.guncentralize, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gundes"]) -> typing.Union[MetaOapg.properties.gundes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gunleftinhole"]) -> typing.Union[MetaOapg.properties.gunleftinhole, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gunmetallurgy"]) -> typing.Union[MetaOapg.properties.gunmetallurgy, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["icondrawshort"]) -> typing.Union[MetaOapg.properties.icondrawshort, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecjob"]) -> typing.Union[MetaOapg.properties.idrecjob, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idreclog"]) -> typing.Union[MetaOapg.properties.idreclog, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecstring"]) -> typing.Union[MetaOapg.properties.idrecstring, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecwellbore"]) -> typing.Union[MetaOapg.properties.idrecwellbore, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idreczoneor"]) -> typing.Union[MetaOapg.properties.idreczoneor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["intno"]) -> typing.Union[MetaOapg.properties.intno, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["orientation"]) -> typing.Union[MetaOapg.properties.orientation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["orientmethod"]) -> typing.Union[MetaOapg.properties.orientmethod, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["penetrationnom"]) -> typing.Union[MetaOapg.properties.penetrationnom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phasing"]) -> typing.Union[MetaOapg.properties.phasing, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presbh"]) -> typing.Union[MetaOapg.properties.presbh, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presbhtyp"]) -> typing.Union[MetaOapg.properties.presbhtyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presdatum"]) -> typing.Union[MetaOapg.properties.presdatum, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presdesignbh"]) -> typing.Union[MetaOapg.properties.presdesignbh, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presduringperf"]) -> typing.Union[MetaOapg.properties.presduringperf, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presfinalsurf"]) -> typing.Union[MetaOapg.properties.presfinalsurf, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presgradientgaugetompp"]) -> typing.Union[MetaOapg.properties.presgradientgaugetompp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["preshhsurftompp"]) -> typing.Union[MetaOapg.properties.preshhsurftompp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presinitsurf"]) -> typing.Union[MetaOapg.properties.presinitsurf, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presmpp"]) -> typing.Union[MetaOapg.properties.presmpp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["proposed"]) -> typing.Union[MetaOapg.properties.proposed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ratefluidafter"]) -> typing.Union[MetaOapg.properties.ratefluidafter, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ratefluidbefore"]) -> typing.Union[MetaOapg.properties.ratefluidbefore, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["resulttechnical"]) -> typing.Union[MetaOapg.properties.resulttechnical, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["resulttechnicaldetail"]) -> typing.Union[MetaOapg.properties.resulttechnicaldetail, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["resulttechnicalnote"]) -> typing.Union[MetaOapg.properties.resulttechnicalnote, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shotdensity"]) -> typing.Union[MetaOapg.properties.shotdensity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shotplan"]) -> typing.Union[MetaOapg.properties.shotplan, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shottotal"]) -> typing.Union[MetaOapg.properties.shottotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["szgun"]) -> typing.Union[MetaOapg.properties.szgun, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["szholeact"]) -> typing.Union[MetaOapg.properties.szholeact, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["szholenom"]) -> typing.Union[MetaOapg.properties.szholenom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["typ"]) -> typing.Union[MetaOapg.properties.typ, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "balance", "balancepres", "carrierdes", "carriermake", "chargemake", "chargesz", "chargetyp", "cluserrefno", "com", "contractor", "conveymeth", "depthbtm", "depthcsngcollarref", "depthfluidafter", "depthfluidbefore", "depthgauge", "depthtop", "dttm", "explosivetyp", "fluiddensity", "fluidtyp", "guncentralize", "gundes", "gunleftinhole", "gunmetallurgy", "icondrawshort", "idrecjob", "idreclog", "idrecstring", "idrecwellbore", "idreczoneor", "intno", "orientation", "orientmethod", "penetrationnom", "phasing", "presbh", "presbhtyp", "presdatum", "presdesignbh", "presduringperf", "presfinalsurf", "presgradientgaugetompp", "preshhsurftompp", "presinitsurf", "presmpp", "proposed", "ratefluidafter", "ratefluidbefore", "resulttechnical", "resulttechnicaldetail", "resulttechnicalnote", "shotdensity", "shotplan", "shottotal", "szgun", "szholeact", "szholenom", "typ", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        balance: typing.Union[MetaOapg.properties.balance, str, schemas.Unset] = schemas.unset,
        balancepres: typing.Union[MetaOapg.properties.balancepres, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        carrierdes: typing.Union[MetaOapg.properties.carrierdes, str, schemas.Unset] = schemas.unset,
        carriermake: typing.Union[MetaOapg.properties.carriermake, str, schemas.Unset] = schemas.unset,
        chargemake: typing.Union[MetaOapg.properties.chargemake, str, schemas.Unset] = schemas.unset,
        chargesz: typing.Union[MetaOapg.properties.chargesz, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        chargetyp: typing.Union[MetaOapg.properties.chargetyp, str, schemas.Unset] = schemas.unset,
        cluserrefno: typing.Union[MetaOapg.properties.cluserrefno, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        contractor: typing.Union[MetaOapg.properties.contractor, str, schemas.Unset] = schemas.unset,
        conveymeth: typing.Union[MetaOapg.properties.conveymeth, str, schemas.Unset] = schemas.unset,
        depthbtm: typing.Union[MetaOapg.properties.depthbtm, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthcsngcollarref: typing.Union[MetaOapg.properties.depthcsngcollarref, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthfluidafter: typing.Union[MetaOapg.properties.depthfluidafter, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthfluidbefore: typing.Union[MetaOapg.properties.depthfluidbefore, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthgauge: typing.Union[MetaOapg.properties.depthgauge, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthtop: typing.Union[MetaOapg.properties.depthtop, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        dttm: typing.Union[MetaOapg.properties.dttm, str, datetime, schemas.Unset] = schemas.unset,
        explosivetyp: typing.Union[MetaOapg.properties.explosivetyp, str, schemas.Unset] = schemas.unset,
        fluiddensity: typing.Union[MetaOapg.properties.fluiddensity, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        fluidtyp: typing.Union[MetaOapg.properties.fluidtyp, str, schemas.Unset] = schemas.unset,
        guncentralize: typing.Union[MetaOapg.properties.guncentralize, str, schemas.Unset] = schemas.unset,
        gundes: typing.Union[MetaOapg.properties.gundes, str, schemas.Unset] = schemas.unset,
        gunleftinhole: typing.Union[MetaOapg.properties.gunleftinhole, bool, schemas.Unset] = schemas.unset,
        gunmetallurgy: typing.Union[MetaOapg.properties.gunmetallurgy, str, schemas.Unset] = schemas.unset,
        icondrawshort: typing.Union[MetaOapg.properties.icondrawshort, bool, schemas.Unset] = schemas.unset,
        idrecjob: typing.Union[MetaOapg.properties.idrecjob, str, schemas.Unset] = schemas.unset,
        idreclog: typing.Union[MetaOapg.properties.idreclog, str, schemas.Unset] = schemas.unset,
        idrecstring: typing.Union[MetaOapg.properties.idrecstring, str, schemas.Unset] = schemas.unset,
        idrecwellbore: typing.Union[MetaOapg.properties.idrecwellbore, str, schemas.Unset] = schemas.unset,
        idreczoneor: typing.Union[MetaOapg.properties.idreczoneor, str, schemas.Unset] = schemas.unset,
        intno: typing.Union[MetaOapg.properties.intno, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        orientation: typing.Union[MetaOapg.properties.orientation, str, schemas.Unset] = schemas.unset,
        orientmethod: typing.Union[MetaOapg.properties.orientmethod, str, schemas.Unset] = schemas.unset,
        penetrationnom: typing.Union[MetaOapg.properties.penetrationnom, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        phasing: typing.Union[MetaOapg.properties.phasing, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presbh: typing.Union[MetaOapg.properties.presbh, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presbhtyp: typing.Union[MetaOapg.properties.presbhtyp, str, schemas.Unset] = schemas.unset,
        presdatum: typing.Union[MetaOapg.properties.presdatum, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presdesignbh: typing.Union[MetaOapg.properties.presdesignbh, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presduringperf: typing.Union[MetaOapg.properties.presduringperf, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presfinalsurf: typing.Union[MetaOapg.properties.presfinalsurf, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presgradientgaugetompp: typing.Union[MetaOapg.properties.presgradientgaugetompp, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        preshhsurftompp: typing.Union[MetaOapg.properties.preshhsurftompp, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presinitsurf: typing.Union[MetaOapg.properties.presinitsurf, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presmpp: typing.Union[MetaOapg.properties.presmpp, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        proposed: typing.Union[MetaOapg.properties.proposed, bool, schemas.Unset] = schemas.unset,
        ratefluidafter: typing.Union[MetaOapg.properties.ratefluidafter, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ratefluidbefore: typing.Union[MetaOapg.properties.ratefluidbefore, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        resulttechnical: typing.Union[MetaOapg.properties.resulttechnical, str, schemas.Unset] = schemas.unset,
        resulttechnicaldetail: typing.Union[MetaOapg.properties.resulttechnicaldetail, str, schemas.Unset] = schemas.unset,
        resulttechnicalnote: typing.Union[MetaOapg.properties.resulttechnicalnote, str, schemas.Unset] = schemas.unset,
        shotdensity: typing.Union[MetaOapg.properties.shotdensity, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        shotplan: typing.Union[MetaOapg.properties.shotplan, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        shottotal: typing.Union[MetaOapg.properties.shottotal, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        szgun: typing.Union[MetaOapg.properties.szgun, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        szholeact: typing.Union[MetaOapg.properties.szholeact, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        szholenom: typing.Union[MetaOapg.properties.szholenom, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        typ: typing.Union[MetaOapg.properties.typ, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PerforationData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            balance=balance,
            balancepres=balancepres,
            carrierdes=carrierdes,
            carriermake=carriermake,
            chargemake=chargemake,
            chargesz=chargesz,
            chargetyp=chargetyp,
            cluserrefno=cluserrefno,
            com=com,
            contractor=contractor,
            conveymeth=conveymeth,
            depthbtm=depthbtm,
            depthcsngcollarref=depthcsngcollarref,
            depthfluidafter=depthfluidafter,
            depthfluidbefore=depthfluidbefore,
            depthgauge=depthgauge,
            depthtop=depthtop,
            dttm=dttm,
            explosivetyp=explosivetyp,
            fluiddensity=fluiddensity,
            fluidtyp=fluidtyp,
            guncentralize=guncentralize,
            gundes=gundes,
            gunleftinhole=gunleftinhole,
            gunmetallurgy=gunmetallurgy,
            icondrawshort=icondrawshort,
            idrecjob=idrecjob,
            idreclog=idreclog,
            idrecstring=idrecstring,
            idrecwellbore=idrecwellbore,
            idreczoneor=idreczoneor,
            intno=intno,
            orientation=orientation,
            orientmethod=orientmethod,
            penetrationnom=penetrationnom,
            phasing=phasing,
            presbh=presbh,
            presbhtyp=presbhtyp,
            presdatum=presdatum,
            presdesignbh=presdesignbh,
            presduringperf=presduringperf,
            presfinalsurf=presfinalsurf,
            presgradientgaugetompp=presgradientgaugetompp,
            preshhsurftompp=preshhsurftompp,
            presinitsurf=presinitsurf,
            presmpp=presmpp,
            proposed=proposed,
            ratefluidafter=ratefluidafter,
            ratefluidbefore=ratefluidbefore,
            resulttechnical=resulttechnical,
            resulttechnicaldetail=resulttechnicaldetail,
            resulttechnicalnote=resulttechnicalnote,
            shotdensity=shotdensity,
            shotplan=shotplan,
            shottotal=shottotal,
            szgun=szgun,
            szholeact=szholeact,
            szholenom=szholenom,
            typ=typ,
            _configuration=_configuration,
            **kwargs,
        )
