# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class ReservoirDetailsData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            depth = schemas.NumberSchema
            fracpresmax = schemas.NumberSchema
            fracpresmin = schemas.NumberSchema
            fracpresml = schemas.NumberSchema
            idrecparent = schemas.StrSchema
            idrecwellbore = schemas.StrSchema
            note = schemas.StrSchema
            porepresmax = schemas.NumberSchema
            porepresmin = schemas.NumberSchema
            porepresml = schemas.NumberSchema
            temp = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "depth": depth,
                "fracpresmax": fracpresmax,
                "fracpresmin": fracpresmin,
                "fracpresml": fracpresml,
                "idrecparent": idrecparent,
                "idrecwellbore": idrecwellbore,
                "note": note,
                "porepresmax": porepresmax,
                "porepresmin": porepresmin,
                "porepresml": porepresml,
                "temp": temp,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depth"]) -> MetaOapg.properties.depth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fracpresmax"]) -> MetaOapg.properties.fracpresmax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fracpresmin"]) -> MetaOapg.properties.fracpresmin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fracpresml"]) -> MetaOapg.properties.fracpresml: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecwellbore"]) -> MetaOapg.properties.idrecwellbore: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["note"]) -> MetaOapg.properties.note: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["porepresmax"]) -> MetaOapg.properties.porepresmax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["porepresmin"]) -> MetaOapg.properties.porepresmin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["porepresml"]) -> MetaOapg.properties.porepresml: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temp"]) -> MetaOapg.properties.temp: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "depth", "fracpresmax", "fracpresmin", "fracpresml", "idrecparent", "idrecwellbore", "note", "porepresmax", "porepresmin", "porepresml", "temp", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depth"]) -> typing.Union[MetaOapg.properties.depth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fracpresmax"]) -> typing.Union[MetaOapg.properties.fracpresmax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fracpresmin"]) -> typing.Union[MetaOapg.properties.fracpresmin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fracpresml"]) -> typing.Union[MetaOapg.properties.fracpresml, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecwellbore"]) -> typing.Union[MetaOapg.properties.idrecwellbore, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["note"]) -> typing.Union[MetaOapg.properties.note, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["porepresmax"]) -> typing.Union[MetaOapg.properties.porepresmax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["porepresmin"]) -> typing.Union[MetaOapg.properties.porepresmin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["porepresml"]) -> typing.Union[MetaOapg.properties.porepresml, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temp"]) -> typing.Union[MetaOapg.properties.temp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "depth", "fracpresmax", "fracpresmin", "fracpresml", "idrecparent", "idrecwellbore", "note", "porepresmax", "porepresmin", "porepresml", "temp", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        depth: typing.Union[MetaOapg.properties.depth, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        fracpresmax: typing.Union[MetaOapg.properties.fracpresmax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        fracpresmin: typing.Union[MetaOapg.properties.fracpresmin, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        fracpresml: typing.Union[MetaOapg.properties.fracpresml, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        idrecwellbore: typing.Union[MetaOapg.properties.idrecwellbore, str, schemas.Unset] = schemas.unset,
        note: typing.Union[MetaOapg.properties.note, str, schemas.Unset] = schemas.unset,
        porepresmax: typing.Union[MetaOapg.properties.porepresmax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        porepresmin: typing.Union[MetaOapg.properties.porepresmin, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        porepresml: typing.Union[MetaOapg.properties.porepresml, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temp: typing.Union[MetaOapg.properties.temp, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ReservoirDetailsData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            depth=depth,
            fracpresmax=fracpresmax,
            fracpresmin=fracpresmin,
            fracpresml=fracpresml,
            idrecparent=idrecparent,
            idrecwellbore=idrecwellbore,
            note=note,
            porepresmax=porepresmax,
            porepresmin=porepresmin,
            porepresml=porepresml,
            temp=temp,
            _configuration=_configuration,
            **kwargs,
        )
