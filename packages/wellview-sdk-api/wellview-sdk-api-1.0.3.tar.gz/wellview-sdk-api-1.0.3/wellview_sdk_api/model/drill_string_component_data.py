# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class DrillStringComponentData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            coating = schemas.StrSchema
            com = schemas.StrSchema
            compsubtyp = schemas.StrSchema
            conditionpull = schemas.StrSchema
            conditionrun = schemas.StrSchema
            connszbtm = schemas.NumberSchema
            connsztop = schemas.NumberSchema
            connthrdbtm = schemas.StrSchema
            connthrdtop = schemas.StrSchema
            conntypbtm = schemas.StrSchema
            conntyptop = schemas.StrSchema
            cost = schemas.NumberSchema
            costunitlabel = schemas.StrSchema
            currentstatus = schemas.StrSchema
            des = schemas.StrSchema
            dttmlastinspect = schemas.DateTimeSchema
            dttmmanufacture = schemas.DateTimeSchema
            fishnecklength = schemas.NumberSchema
            fishneckod = schemas.NumberSchema
            grade = schemas.StrSchema
            hoursstart = schemas.NumberSchema
            iconname = schemas.StrSchema
            idrecparent = schemas.StrSchema
            joints = schemas.IntSchema
            length = schemas.NumberSchema
            linetosurf = schemas.BoolSchema
            make = schemas.StrSchema
            material = schemas.StrSchema
            model = schemas.StrSchema
            owner = schemas.StrSchema
            refid = schemas.StrSchema
            service = schemas.StrSchema
            sn = schemas.StrSchema
            szdrift = schemas.NumberSchema
            szidnom = schemas.NumberSchema
            szodmax = schemas.NumberSchema
            szodnom = schemas.NumberSchema
            temprating = schemas.NumberSchema
            tensilemax = schemas.NumberSchema
            torquemax = schemas.NumberSchema
            torquemin = schemas.NumberSchema
            upsetbtm = schemas.StrSchema
            upsettop = schemas.StrSchema
            usedclass = schemas.StrSchema
            wtperlength = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "coating": coating,
                "com": com,
                "compsubtyp": compsubtyp,
                "conditionpull": conditionpull,
                "conditionrun": conditionrun,
                "connszbtm": connszbtm,
                "connsztop": connsztop,
                "connthrdbtm": connthrdbtm,
                "connthrdtop": connthrdtop,
                "conntypbtm": conntypbtm,
                "conntyptop": conntyptop,
                "cost": cost,
                "costunitlabel": costunitlabel,
                "currentstatus": currentstatus,
                "des": des,
                "dttmlastinspect": dttmlastinspect,
                "dttmmanufacture": dttmmanufacture,
                "fishnecklength": fishnecklength,
                "fishneckod": fishneckod,
                "grade": grade,
                "hoursstart": hoursstart,
                "iconname": iconname,
                "idrecparent": idrecparent,
                "joints": joints,
                "length": length,
                "linetosurf": linetosurf,
                "make": make,
                "material": material,
                "model": model,
                "owner": owner,
                "refid": refid,
                "service": service,
                "sn": sn,
                "szdrift": szdrift,
                "szidnom": szidnom,
                "szodmax": szodmax,
                "szodnom": szodnom,
                "temprating": temprating,
                "tensilemax": tensilemax,
                "torquemax": torquemax,
                "torquemin": torquemin,
                "upsetbtm": upsetbtm,
                "upsettop": upsettop,
                "usedclass": usedclass,
                "wtperlength": wtperlength,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["coating"]) -> MetaOapg.properties.coating: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["compsubtyp"]) -> MetaOapg.properties.compsubtyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["conditionpull"]) -> MetaOapg.properties.conditionpull: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["conditionrun"]) -> MetaOapg.properties.conditionrun: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["connszbtm"]) -> MetaOapg.properties.connszbtm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["connsztop"]) -> MetaOapg.properties.connsztop: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["connthrdbtm"]) -> MetaOapg.properties.connthrdbtm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["connthrdtop"]) -> MetaOapg.properties.connthrdtop: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["conntypbtm"]) -> MetaOapg.properties.conntypbtm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["conntyptop"]) -> MetaOapg.properties.conntyptop: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cost"]) -> MetaOapg.properties.cost: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["costunitlabel"]) -> MetaOapg.properties.costunitlabel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["currentstatus"]) -> MetaOapg.properties.currentstatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["des"]) -> MetaOapg.properties.des: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmlastinspect"]) -> MetaOapg.properties.dttmlastinspect: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmmanufacture"]) -> MetaOapg.properties.dttmmanufacture: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fishnecklength"]) -> MetaOapg.properties.fishnecklength: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fishneckod"]) -> MetaOapg.properties.fishneckod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["grade"]) -> MetaOapg.properties.grade: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hoursstart"]) -> MetaOapg.properties.hoursstart: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["iconname"]) -> MetaOapg.properties.iconname: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["joints"]) -> MetaOapg.properties.joints: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["length"]) -> MetaOapg.properties.length: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["linetosurf"]) -> MetaOapg.properties.linetosurf: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["make"]) -> MetaOapg.properties.make: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["material"]) -> MetaOapg.properties.material: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["model"]) -> MetaOapg.properties.model: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["owner"]) -> MetaOapg.properties.owner: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["refid"]) -> MetaOapg.properties.refid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["service"]) -> MetaOapg.properties.service: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sn"]) -> MetaOapg.properties.sn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["szdrift"]) -> MetaOapg.properties.szdrift: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["szidnom"]) -> MetaOapg.properties.szidnom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["szodmax"]) -> MetaOapg.properties.szodmax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["szodnom"]) -> MetaOapg.properties.szodnom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temprating"]) -> MetaOapg.properties.temprating: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tensilemax"]) -> MetaOapg.properties.tensilemax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["torquemax"]) -> MetaOapg.properties.torquemax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["torquemin"]) -> MetaOapg.properties.torquemin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["upsetbtm"]) -> MetaOapg.properties.upsetbtm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["upsettop"]) -> MetaOapg.properties.upsettop: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usedclass"]) -> MetaOapg.properties.usedclass: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["wtperlength"]) -> MetaOapg.properties.wtperlength: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "coating", "com", "compsubtyp", "conditionpull", "conditionrun", "connszbtm", "connsztop", "connthrdbtm", "connthrdtop", "conntypbtm", "conntyptop", "cost", "costunitlabel", "currentstatus", "des", "dttmlastinspect", "dttmmanufacture", "fishnecklength", "fishneckod", "grade", "hoursstart", "iconname", "idrecparent", "joints", "length", "linetosurf", "make", "material", "model", "owner", "refid", "service", "sn", "szdrift", "szidnom", "szodmax", "szodnom", "temprating", "tensilemax", "torquemax", "torquemin", "upsetbtm", "upsettop", "usedclass", "wtperlength", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["coating"]) -> typing.Union[MetaOapg.properties.coating, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["compsubtyp"]) -> typing.Union[MetaOapg.properties.compsubtyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["conditionpull"]) -> typing.Union[MetaOapg.properties.conditionpull, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["conditionrun"]) -> typing.Union[MetaOapg.properties.conditionrun, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["connszbtm"]) -> typing.Union[MetaOapg.properties.connszbtm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["connsztop"]) -> typing.Union[MetaOapg.properties.connsztop, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["connthrdbtm"]) -> typing.Union[MetaOapg.properties.connthrdbtm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["connthrdtop"]) -> typing.Union[MetaOapg.properties.connthrdtop, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["conntypbtm"]) -> typing.Union[MetaOapg.properties.conntypbtm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["conntyptop"]) -> typing.Union[MetaOapg.properties.conntyptop, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cost"]) -> typing.Union[MetaOapg.properties.cost, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["costunitlabel"]) -> typing.Union[MetaOapg.properties.costunitlabel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["currentstatus"]) -> typing.Union[MetaOapg.properties.currentstatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["des"]) -> typing.Union[MetaOapg.properties.des, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmlastinspect"]) -> typing.Union[MetaOapg.properties.dttmlastinspect, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmmanufacture"]) -> typing.Union[MetaOapg.properties.dttmmanufacture, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fishnecklength"]) -> typing.Union[MetaOapg.properties.fishnecklength, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fishneckod"]) -> typing.Union[MetaOapg.properties.fishneckod, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["grade"]) -> typing.Union[MetaOapg.properties.grade, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hoursstart"]) -> typing.Union[MetaOapg.properties.hoursstart, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["iconname"]) -> typing.Union[MetaOapg.properties.iconname, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["joints"]) -> typing.Union[MetaOapg.properties.joints, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["length"]) -> typing.Union[MetaOapg.properties.length, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["linetosurf"]) -> typing.Union[MetaOapg.properties.linetosurf, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["make"]) -> typing.Union[MetaOapg.properties.make, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["material"]) -> typing.Union[MetaOapg.properties.material, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["model"]) -> typing.Union[MetaOapg.properties.model, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["owner"]) -> typing.Union[MetaOapg.properties.owner, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["refid"]) -> typing.Union[MetaOapg.properties.refid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["service"]) -> typing.Union[MetaOapg.properties.service, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sn"]) -> typing.Union[MetaOapg.properties.sn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["szdrift"]) -> typing.Union[MetaOapg.properties.szdrift, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["szidnom"]) -> typing.Union[MetaOapg.properties.szidnom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["szodmax"]) -> typing.Union[MetaOapg.properties.szodmax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["szodnom"]) -> typing.Union[MetaOapg.properties.szodnom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temprating"]) -> typing.Union[MetaOapg.properties.temprating, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tensilemax"]) -> typing.Union[MetaOapg.properties.tensilemax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["torquemax"]) -> typing.Union[MetaOapg.properties.torquemax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["torquemin"]) -> typing.Union[MetaOapg.properties.torquemin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["upsetbtm"]) -> typing.Union[MetaOapg.properties.upsetbtm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["upsettop"]) -> typing.Union[MetaOapg.properties.upsettop, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usedclass"]) -> typing.Union[MetaOapg.properties.usedclass, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["wtperlength"]) -> typing.Union[MetaOapg.properties.wtperlength, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "coating", "com", "compsubtyp", "conditionpull", "conditionrun", "connszbtm", "connsztop", "connthrdbtm", "connthrdtop", "conntypbtm", "conntyptop", "cost", "costunitlabel", "currentstatus", "des", "dttmlastinspect", "dttmmanufacture", "fishnecklength", "fishneckod", "grade", "hoursstart", "iconname", "idrecparent", "joints", "length", "linetosurf", "make", "material", "model", "owner", "refid", "service", "sn", "szdrift", "szidnom", "szodmax", "szodnom", "temprating", "tensilemax", "torquemax", "torquemin", "upsetbtm", "upsettop", "usedclass", "wtperlength", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        coating: typing.Union[MetaOapg.properties.coating, str, schemas.Unset] = schemas.unset,
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        compsubtyp: typing.Union[MetaOapg.properties.compsubtyp, str, schemas.Unset] = schemas.unset,
        conditionpull: typing.Union[MetaOapg.properties.conditionpull, str, schemas.Unset] = schemas.unset,
        conditionrun: typing.Union[MetaOapg.properties.conditionrun, str, schemas.Unset] = schemas.unset,
        connszbtm: typing.Union[MetaOapg.properties.connszbtm, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        connsztop: typing.Union[MetaOapg.properties.connsztop, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        connthrdbtm: typing.Union[MetaOapg.properties.connthrdbtm, str, schemas.Unset] = schemas.unset,
        connthrdtop: typing.Union[MetaOapg.properties.connthrdtop, str, schemas.Unset] = schemas.unset,
        conntypbtm: typing.Union[MetaOapg.properties.conntypbtm, str, schemas.Unset] = schemas.unset,
        conntyptop: typing.Union[MetaOapg.properties.conntyptop, str, schemas.Unset] = schemas.unset,
        cost: typing.Union[MetaOapg.properties.cost, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        costunitlabel: typing.Union[MetaOapg.properties.costunitlabel, str, schemas.Unset] = schemas.unset,
        currentstatus: typing.Union[MetaOapg.properties.currentstatus, str, schemas.Unset] = schemas.unset,
        des: typing.Union[MetaOapg.properties.des, str, schemas.Unset] = schemas.unset,
        dttmlastinspect: typing.Union[MetaOapg.properties.dttmlastinspect, str, datetime, schemas.Unset] = schemas.unset,
        dttmmanufacture: typing.Union[MetaOapg.properties.dttmmanufacture, str, datetime, schemas.Unset] = schemas.unset,
        fishnecklength: typing.Union[MetaOapg.properties.fishnecklength, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        fishneckod: typing.Union[MetaOapg.properties.fishneckod, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        grade: typing.Union[MetaOapg.properties.grade, str, schemas.Unset] = schemas.unset,
        hoursstart: typing.Union[MetaOapg.properties.hoursstart, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        iconname: typing.Union[MetaOapg.properties.iconname, str, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        joints: typing.Union[MetaOapg.properties.joints, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        length: typing.Union[MetaOapg.properties.length, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        linetosurf: typing.Union[MetaOapg.properties.linetosurf, bool, schemas.Unset] = schemas.unset,
        make: typing.Union[MetaOapg.properties.make, str, schemas.Unset] = schemas.unset,
        material: typing.Union[MetaOapg.properties.material, str, schemas.Unset] = schemas.unset,
        model: typing.Union[MetaOapg.properties.model, str, schemas.Unset] = schemas.unset,
        owner: typing.Union[MetaOapg.properties.owner, str, schemas.Unset] = schemas.unset,
        refid: typing.Union[MetaOapg.properties.refid, str, schemas.Unset] = schemas.unset,
        service: typing.Union[MetaOapg.properties.service, str, schemas.Unset] = schemas.unset,
        sn: typing.Union[MetaOapg.properties.sn, str, schemas.Unset] = schemas.unset,
        szdrift: typing.Union[MetaOapg.properties.szdrift, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        szidnom: typing.Union[MetaOapg.properties.szidnom, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        szodmax: typing.Union[MetaOapg.properties.szodmax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        szodnom: typing.Union[MetaOapg.properties.szodnom, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temprating: typing.Union[MetaOapg.properties.temprating, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tensilemax: typing.Union[MetaOapg.properties.tensilemax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        torquemax: typing.Union[MetaOapg.properties.torquemax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        torquemin: typing.Union[MetaOapg.properties.torquemin, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        upsetbtm: typing.Union[MetaOapg.properties.upsetbtm, str, schemas.Unset] = schemas.unset,
        upsettop: typing.Union[MetaOapg.properties.upsettop, str, schemas.Unset] = schemas.unset,
        usedclass: typing.Union[MetaOapg.properties.usedclass, str, schemas.Unset] = schemas.unset,
        wtperlength: typing.Union[MetaOapg.properties.wtperlength, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DrillStringComponentData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            coating=coating,
            com=com,
            compsubtyp=compsubtyp,
            conditionpull=conditionpull,
            conditionrun=conditionrun,
            connszbtm=connszbtm,
            connsztop=connsztop,
            connthrdbtm=connthrdbtm,
            connthrdtop=connthrdtop,
            conntypbtm=conntypbtm,
            conntyptop=conntyptop,
            cost=cost,
            costunitlabel=costunitlabel,
            currentstatus=currentstatus,
            des=des,
            dttmlastinspect=dttmlastinspect,
            dttmmanufacture=dttmmanufacture,
            fishnecklength=fishnecklength,
            fishneckod=fishneckod,
            grade=grade,
            hoursstart=hoursstart,
            iconname=iconname,
            idrecparent=idrecparent,
            joints=joints,
            length=length,
            linetosurf=linetosurf,
            make=make,
            material=material,
            model=model,
            owner=owner,
            refid=refid,
            service=service,
            sn=sn,
            szdrift=szdrift,
            szidnom=szidnom,
            szodmax=szodmax,
            szodnom=szodnom,
            temprating=temprating,
            tensilemax=tensilemax,
            torquemax=torquemax,
            torquemin=torquemin,
            upsetbtm=upsetbtm,
            upsettop=upsettop,
            usedclass=usedclass,
            wtperlength=wtperlength,
            _configuration=_configuration,
            **kwargs,
        )
