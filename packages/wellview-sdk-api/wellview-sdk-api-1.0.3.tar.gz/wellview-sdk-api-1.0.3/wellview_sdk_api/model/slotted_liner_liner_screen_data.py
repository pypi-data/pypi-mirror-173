# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class SlottedLinerLinerScreenData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            blankbottom = schemas.NumberSchema
            blanktop = schemas.NumberSchema
            centerslengthwise = schemas.NumberSchema
            idrecparent = schemas.StrSchema
            openingmaxdimension = schemas.NumberSchema
            openingmindimension = schemas.NumberSchema
            percentopenarea = schemas.NumberSchema
            perfrows = schemas.IntSchema
            screengauge = schemas.NumberSchema
            slotdes = schemas.StrSchema
            slotfrequency = schemas.NumberSchema
            slotlength = schemas.NumberSchema
            slotpattern = schemas.StrSchema
            slotwidth = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "blankbottom": blankbottom,
                "blanktop": blanktop,
                "centerslengthwise": centerslengthwise,
                "idrecparent": idrecparent,
                "openingmaxdimension": openingmaxdimension,
                "openingmindimension": openingmindimension,
                "percentopenarea": percentopenarea,
                "perfrows": perfrows,
                "screengauge": screengauge,
                "slotdes": slotdes,
                "slotfrequency": slotfrequency,
                "slotlength": slotlength,
                "slotpattern": slotpattern,
                "slotwidth": slotwidth,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["blankbottom"]) -> MetaOapg.properties.blankbottom: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["blanktop"]) -> MetaOapg.properties.blanktop: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["centerslengthwise"]) -> MetaOapg.properties.centerslengthwise: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["openingmaxdimension"]) -> MetaOapg.properties.openingmaxdimension: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["openingmindimension"]) -> MetaOapg.properties.openingmindimension: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["percentopenarea"]) -> MetaOapg.properties.percentopenarea: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["perfrows"]) -> MetaOapg.properties.perfrows: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["screengauge"]) -> MetaOapg.properties.screengauge: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["slotdes"]) -> MetaOapg.properties.slotdes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["slotfrequency"]) -> MetaOapg.properties.slotfrequency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["slotlength"]) -> MetaOapg.properties.slotlength: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["slotpattern"]) -> MetaOapg.properties.slotpattern: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["slotwidth"]) -> MetaOapg.properties.slotwidth: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "blankbottom", "blanktop", "centerslengthwise", "idrecparent", "openingmaxdimension", "openingmindimension", "percentopenarea", "perfrows", "screengauge", "slotdes", "slotfrequency", "slotlength", "slotpattern", "slotwidth", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["blankbottom"]) -> typing.Union[MetaOapg.properties.blankbottom, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["blanktop"]) -> typing.Union[MetaOapg.properties.blanktop, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["centerslengthwise"]) -> typing.Union[MetaOapg.properties.centerslengthwise, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["openingmaxdimension"]) -> typing.Union[MetaOapg.properties.openingmaxdimension, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["openingmindimension"]) -> typing.Union[MetaOapg.properties.openingmindimension, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["percentopenarea"]) -> typing.Union[MetaOapg.properties.percentopenarea, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["perfrows"]) -> typing.Union[MetaOapg.properties.perfrows, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["screengauge"]) -> typing.Union[MetaOapg.properties.screengauge, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["slotdes"]) -> typing.Union[MetaOapg.properties.slotdes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["slotfrequency"]) -> typing.Union[MetaOapg.properties.slotfrequency, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["slotlength"]) -> typing.Union[MetaOapg.properties.slotlength, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["slotpattern"]) -> typing.Union[MetaOapg.properties.slotpattern, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["slotwidth"]) -> typing.Union[MetaOapg.properties.slotwidth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "blankbottom", "blanktop", "centerslengthwise", "idrecparent", "openingmaxdimension", "openingmindimension", "percentopenarea", "perfrows", "screengauge", "slotdes", "slotfrequency", "slotlength", "slotpattern", "slotwidth", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        blankbottom: typing.Union[MetaOapg.properties.blankbottom, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        blanktop: typing.Union[MetaOapg.properties.blanktop, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        centerslengthwise: typing.Union[MetaOapg.properties.centerslengthwise, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        openingmaxdimension: typing.Union[MetaOapg.properties.openingmaxdimension, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        openingmindimension: typing.Union[MetaOapg.properties.openingmindimension, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        percentopenarea: typing.Union[MetaOapg.properties.percentopenarea, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        perfrows: typing.Union[MetaOapg.properties.perfrows, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        screengauge: typing.Union[MetaOapg.properties.screengauge, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        slotdes: typing.Union[MetaOapg.properties.slotdes, str, schemas.Unset] = schemas.unset,
        slotfrequency: typing.Union[MetaOapg.properties.slotfrequency, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        slotlength: typing.Union[MetaOapg.properties.slotlength, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        slotpattern: typing.Union[MetaOapg.properties.slotpattern, str, schemas.Unset] = schemas.unset,
        slotwidth: typing.Union[MetaOapg.properties.slotwidth, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SlottedLinerLinerScreenData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            blankbottom=blankbottom,
            blanktop=blanktop,
            centerslengthwise=centerslengthwise,
            idrecparent=idrecparent,
            openingmaxdimension=openingmaxdimension,
            openingmindimension=openingmindimension,
            percentopenarea=percentopenarea,
            perfrows=perfrows,
            screengauge=screengauge,
            slotdes=slotdes,
            slotfrequency=slotfrequency,
            slotlength=slotlength,
            slotpattern=slotpattern,
            slotwidth=slotwidth,
            _configuration=_configuration,
            **kwargs,
        )
