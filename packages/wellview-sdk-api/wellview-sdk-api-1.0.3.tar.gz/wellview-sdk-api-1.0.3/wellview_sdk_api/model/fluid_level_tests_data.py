# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class FluidLevelTestsData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            bsw = schemas.NumberSchema
            com = schemas.StrSchema
            density = schemas.NumberSchema
            depthfluidabovepump = schemas.NumberSchema
            depthfluidlevel = schemas.NumberSchema
            depthfluidlevelcorr = schemas.NumberSchema
            displayflag = schemas.BoolSchema
            dttm = schemas.DateTimeSchema
            durationshutin = schemas.NumberSchema
            fluidtyp = schemas.StrSchema
            idrecjob = schemas.StrSchema
            idrecstring = schemas.StrSchema
            joints = schemas.IntSchema
            lengthavgjoint = schemas.NumberSchema
            notecorrection = schemas.StrSchema
            presbh = schemas.NumberSchema
            prescas = schemas.NumberSchema
            prescasstart = schemas.NumberSchema
            presgradient = schemas.NumberSchema
            preshyd = schemas.NumberSchema
            prestub = schemas.NumberSchema
            prestubstart = schemas.NumberSchema
            rategas = schemas.NumberSchema
            rateliquid = schemas.NumberSchema
            sandcut = schemas.NumberSchema
            status = schemas.StrSchema
            testedby = schemas.StrSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "bsw": bsw,
                "com": com,
                "density": density,
                "depthfluidabovepump": depthfluidabovepump,
                "depthfluidlevel": depthfluidlevel,
                "depthfluidlevelcorr": depthfluidlevelcorr,
                "displayflag": displayflag,
                "dttm": dttm,
                "durationshutin": durationshutin,
                "fluidtyp": fluidtyp,
                "idrecjob": idrecjob,
                "idrecstring": idrecstring,
                "joints": joints,
                "lengthavgjoint": lengthavgjoint,
                "notecorrection": notecorrection,
                "presbh": presbh,
                "prescas": prescas,
                "prescasstart": prescasstart,
                "presgradient": presgradient,
                "preshyd": preshyd,
                "prestub": prestub,
                "prestubstart": prestubstart,
                "rategas": rategas,
                "rateliquid": rateliquid,
                "sandcut": sandcut,
                "status": status,
                "testedby": testedby,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bsw"]) -> MetaOapg.properties.bsw: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["density"]) -> MetaOapg.properties.density: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthfluidabovepump"]) -> MetaOapg.properties.depthfluidabovepump: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthfluidlevel"]) -> MetaOapg.properties.depthfluidlevel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthfluidlevelcorr"]) -> MetaOapg.properties.depthfluidlevelcorr: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["displayflag"]) -> MetaOapg.properties.displayflag: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttm"]) -> MetaOapg.properties.dttm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["durationshutin"]) -> MetaOapg.properties.durationshutin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fluidtyp"]) -> MetaOapg.properties.fluidtyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecjob"]) -> MetaOapg.properties.idrecjob: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecstring"]) -> MetaOapg.properties.idrecstring: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["joints"]) -> MetaOapg.properties.joints: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lengthavgjoint"]) -> MetaOapg.properties.lengthavgjoint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notecorrection"]) -> MetaOapg.properties.notecorrection: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presbh"]) -> MetaOapg.properties.presbh: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prescas"]) -> MetaOapg.properties.prescas: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prescasstart"]) -> MetaOapg.properties.prescasstart: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presgradient"]) -> MetaOapg.properties.presgradient: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["preshyd"]) -> MetaOapg.properties.preshyd: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prestub"]) -> MetaOapg.properties.prestub: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prestubstart"]) -> MetaOapg.properties.prestubstart: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rategas"]) -> MetaOapg.properties.rategas: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rateliquid"]) -> MetaOapg.properties.rateliquid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sandcut"]) -> MetaOapg.properties.sandcut: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["testedby"]) -> MetaOapg.properties.testedby: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "bsw", "com", "density", "depthfluidabovepump", "depthfluidlevel", "depthfluidlevelcorr", "displayflag", "dttm", "durationshutin", "fluidtyp", "idrecjob", "idrecstring", "joints", "lengthavgjoint", "notecorrection", "presbh", "prescas", "prescasstart", "presgradient", "preshyd", "prestub", "prestubstart", "rategas", "rateliquid", "sandcut", "status", "testedby", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bsw"]) -> typing.Union[MetaOapg.properties.bsw, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["density"]) -> typing.Union[MetaOapg.properties.density, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthfluidabovepump"]) -> typing.Union[MetaOapg.properties.depthfluidabovepump, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthfluidlevel"]) -> typing.Union[MetaOapg.properties.depthfluidlevel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthfluidlevelcorr"]) -> typing.Union[MetaOapg.properties.depthfluidlevelcorr, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["displayflag"]) -> typing.Union[MetaOapg.properties.displayflag, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttm"]) -> typing.Union[MetaOapg.properties.dttm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["durationshutin"]) -> typing.Union[MetaOapg.properties.durationshutin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fluidtyp"]) -> typing.Union[MetaOapg.properties.fluidtyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecjob"]) -> typing.Union[MetaOapg.properties.idrecjob, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecstring"]) -> typing.Union[MetaOapg.properties.idrecstring, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["joints"]) -> typing.Union[MetaOapg.properties.joints, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lengthavgjoint"]) -> typing.Union[MetaOapg.properties.lengthavgjoint, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notecorrection"]) -> typing.Union[MetaOapg.properties.notecorrection, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presbh"]) -> typing.Union[MetaOapg.properties.presbh, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prescas"]) -> typing.Union[MetaOapg.properties.prescas, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prescasstart"]) -> typing.Union[MetaOapg.properties.prescasstart, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presgradient"]) -> typing.Union[MetaOapg.properties.presgradient, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["preshyd"]) -> typing.Union[MetaOapg.properties.preshyd, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prestub"]) -> typing.Union[MetaOapg.properties.prestub, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prestubstart"]) -> typing.Union[MetaOapg.properties.prestubstart, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rategas"]) -> typing.Union[MetaOapg.properties.rategas, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rateliquid"]) -> typing.Union[MetaOapg.properties.rateliquid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sandcut"]) -> typing.Union[MetaOapg.properties.sandcut, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["testedby"]) -> typing.Union[MetaOapg.properties.testedby, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "bsw", "com", "density", "depthfluidabovepump", "depthfluidlevel", "depthfluidlevelcorr", "displayflag", "dttm", "durationshutin", "fluidtyp", "idrecjob", "idrecstring", "joints", "lengthavgjoint", "notecorrection", "presbh", "prescas", "prescasstart", "presgradient", "preshyd", "prestub", "prestubstart", "rategas", "rateliquid", "sandcut", "status", "testedby", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        bsw: typing.Union[MetaOapg.properties.bsw, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        density: typing.Union[MetaOapg.properties.density, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthfluidabovepump: typing.Union[MetaOapg.properties.depthfluidabovepump, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthfluidlevel: typing.Union[MetaOapg.properties.depthfluidlevel, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthfluidlevelcorr: typing.Union[MetaOapg.properties.depthfluidlevelcorr, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        displayflag: typing.Union[MetaOapg.properties.displayflag, bool, schemas.Unset] = schemas.unset,
        dttm: typing.Union[MetaOapg.properties.dttm, str, datetime, schemas.Unset] = schemas.unset,
        durationshutin: typing.Union[MetaOapg.properties.durationshutin, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        fluidtyp: typing.Union[MetaOapg.properties.fluidtyp, str, schemas.Unset] = schemas.unset,
        idrecjob: typing.Union[MetaOapg.properties.idrecjob, str, schemas.Unset] = schemas.unset,
        idrecstring: typing.Union[MetaOapg.properties.idrecstring, str, schemas.Unset] = schemas.unset,
        joints: typing.Union[MetaOapg.properties.joints, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        lengthavgjoint: typing.Union[MetaOapg.properties.lengthavgjoint, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        notecorrection: typing.Union[MetaOapg.properties.notecorrection, str, schemas.Unset] = schemas.unset,
        presbh: typing.Union[MetaOapg.properties.presbh, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prescas: typing.Union[MetaOapg.properties.prescas, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prescasstart: typing.Union[MetaOapg.properties.prescasstart, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presgradient: typing.Union[MetaOapg.properties.presgradient, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        preshyd: typing.Union[MetaOapg.properties.preshyd, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prestub: typing.Union[MetaOapg.properties.prestub, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prestubstart: typing.Union[MetaOapg.properties.prestubstart, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rategas: typing.Union[MetaOapg.properties.rategas, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rateliquid: typing.Union[MetaOapg.properties.rateliquid, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        sandcut: typing.Union[MetaOapg.properties.sandcut, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        testedby: typing.Union[MetaOapg.properties.testedby, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'FluidLevelTestsData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            bsw=bsw,
            com=com,
            density=density,
            depthfluidabovepump=depthfluidabovepump,
            depthfluidlevel=depthfluidlevel,
            depthfluidlevelcorr=depthfluidlevelcorr,
            displayflag=displayflag,
            dttm=dttm,
            durationshutin=durationshutin,
            fluidtyp=fluidtyp,
            idrecjob=idrecjob,
            idrecstring=idrecstring,
            joints=joints,
            lengthavgjoint=lengthavgjoint,
            notecorrection=notecorrection,
            presbh=presbh,
            prescas=prescas,
            prescasstart=prescasstart,
            presgradient=presgradient,
            preshyd=preshyd,
            prestub=prestub,
            prestubstart=prestubstart,
            rategas=rategas,
            rateliquid=rateliquid,
            sandcut=sandcut,
            status=status,
            testedby=testedby,
            _configuration=_configuration,
            **kwargs,
        )
