# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class CriteriaData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            daysmax = schemas.NumberSchema
            daysmin = schemas.NumberSchema
            daysoperator = schemas.StrSchema
            idrecparent = schemas.StrSchema
            state = schemas.StrSchema
            statedes = schemas.StrSchema
            statemax = schemas.NumberSchema
            statemin = schemas.NumberSchema
            stateoperator = schemas.StrSchema
            statetyp = schemas.StrSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "daysmax": daysmax,
                "daysmin": daysmin,
                "daysoperator": daysoperator,
                "idrecparent": idrecparent,
                "state": state,
                "statedes": statedes,
                "statemax": statemax,
                "statemin": statemin,
                "stateoperator": stateoperator,
                "statetyp": statetyp,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["daysmax"]) -> MetaOapg.properties.daysmax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["daysmin"]) -> MetaOapg.properties.daysmin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["daysoperator"]) -> MetaOapg.properties.daysoperator: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["state"]) -> MetaOapg.properties.state: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statedes"]) -> MetaOapg.properties.statedes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statemax"]) -> MetaOapg.properties.statemax: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statemin"]) -> MetaOapg.properties.statemin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stateoperator"]) -> MetaOapg.properties.stateoperator: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["statetyp"]) -> MetaOapg.properties.statetyp: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "daysmax", "daysmin", "daysoperator", "idrecparent", "state", "statedes", "statemax", "statemin", "stateoperator", "statetyp", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["daysmax"]) -> typing.Union[MetaOapg.properties.daysmax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["daysmin"]) -> typing.Union[MetaOapg.properties.daysmin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["daysoperator"]) -> typing.Union[MetaOapg.properties.daysoperator, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["state"]) -> typing.Union[MetaOapg.properties.state, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statedes"]) -> typing.Union[MetaOapg.properties.statedes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statemax"]) -> typing.Union[MetaOapg.properties.statemax, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statemin"]) -> typing.Union[MetaOapg.properties.statemin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stateoperator"]) -> typing.Union[MetaOapg.properties.stateoperator, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["statetyp"]) -> typing.Union[MetaOapg.properties.statetyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "daysmax", "daysmin", "daysoperator", "idrecparent", "state", "statedes", "statemax", "statemin", "stateoperator", "statetyp", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        daysmax: typing.Union[MetaOapg.properties.daysmax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        daysmin: typing.Union[MetaOapg.properties.daysmin, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        daysoperator: typing.Union[MetaOapg.properties.daysoperator, str, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        state: typing.Union[MetaOapg.properties.state, str, schemas.Unset] = schemas.unset,
        statedes: typing.Union[MetaOapg.properties.statedes, str, schemas.Unset] = schemas.unset,
        statemax: typing.Union[MetaOapg.properties.statemax, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        statemin: typing.Union[MetaOapg.properties.statemin, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        stateoperator: typing.Union[MetaOapg.properties.stateoperator, str, schemas.Unset] = schemas.unset,
        statetyp: typing.Union[MetaOapg.properties.statetyp, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CriteriaData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            daysmax=daysmax,
            daysmin=daysmin,
            daysoperator=daysoperator,
            idrecparent=idrecparent,
            state=state,
            statedes=statedes,
            statemax=statemax,
            statemin=statemin,
            stateoperator=stateoperator,
            statetyp=statetyp,
            _configuration=_configuration,
            **kwargs,
        )
