# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class ProductionLogTestIntervalsData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            depthbtm = schemas.NumberSchema
            depthdatum = schemas.NumberSchema
            depthssdatum = schemas.NumberSchema
            depthtop = schemas.NumberSchema
            flowcontribution = schemas.NumberSchema
            idrecparent = schemas.StrSchema
            idrecwellbore = schemas.StrSchema
            idreczonecompletion = schemas.StrSchema
            note = schemas.StrSchema
            presdatumgradient = schemas.NumberSchema
            presdatumgradientdes = schemas.StrSchema
            presgradient = schemas.NumberSchema
            presmpp = schemas.NumberSchema
            prestyp = schemas.StrSchema
            ratecond = schemas.NumberSchema
            rategas = schemas.NumberSchema
            rateoil = schemas.NumberSchema
            ratewater = schemas.NumberSchema
            rps = schemas.NumberSchema
            rpscontribution = schemas.NumberSchema
            rpsdelta = schemas.NumberSchema
            runno = schemas.IntSchema
            temp = schemas.NumberSchema
            tripdir = schemas.StrSchema
            tripspeed = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "depthbtm": depthbtm,
                "depthdatum": depthdatum,
                "depthssdatum": depthssdatum,
                "depthtop": depthtop,
                "flowcontribution": flowcontribution,
                "idrecparent": idrecparent,
                "idrecwellbore": idrecwellbore,
                "idreczonecompletion": idreczonecompletion,
                "note": note,
                "presdatumgradient": presdatumgradient,
                "presdatumgradientdes": presdatumgradientdes,
                "presgradient": presgradient,
                "presmpp": presmpp,
                "prestyp": prestyp,
                "ratecond": ratecond,
                "rategas": rategas,
                "rateoil": rateoil,
                "ratewater": ratewater,
                "rps": rps,
                "rpscontribution": rpscontribution,
                "rpsdelta": rpsdelta,
                "runno": runno,
                "temp": temp,
                "tripdir": tripdir,
                "tripspeed": tripspeed,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthbtm"]) -> MetaOapg.properties.depthbtm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthdatum"]) -> MetaOapg.properties.depthdatum: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthssdatum"]) -> MetaOapg.properties.depthssdatum: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthtop"]) -> MetaOapg.properties.depthtop: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["flowcontribution"]) -> MetaOapg.properties.flowcontribution: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecwellbore"]) -> MetaOapg.properties.idrecwellbore: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idreczonecompletion"]) -> MetaOapg.properties.idreczonecompletion: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["note"]) -> MetaOapg.properties.note: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presdatumgradient"]) -> MetaOapg.properties.presdatumgradient: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presdatumgradientdes"]) -> MetaOapg.properties.presdatumgradientdes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presgradient"]) -> MetaOapg.properties.presgradient: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presmpp"]) -> MetaOapg.properties.presmpp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prestyp"]) -> MetaOapg.properties.prestyp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ratecond"]) -> MetaOapg.properties.ratecond: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rategas"]) -> MetaOapg.properties.rategas: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rateoil"]) -> MetaOapg.properties.rateoil: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ratewater"]) -> MetaOapg.properties.ratewater: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rps"]) -> MetaOapg.properties.rps: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rpscontribution"]) -> MetaOapg.properties.rpscontribution: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rpsdelta"]) -> MetaOapg.properties.rpsdelta: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["runno"]) -> MetaOapg.properties.runno: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temp"]) -> MetaOapg.properties.temp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tripdir"]) -> MetaOapg.properties.tripdir: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tripspeed"]) -> MetaOapg.properties.tripspeed: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "depthbtm", "depthdatum", "depthssdatum", "depthtop", "flowcontribution", "idrecparent", "idrecwellbore", "idreczonecompletion", "note", "presdatumgradient", "presdatumgradientdes", "presgradient", "presmpp", "prestyp", "ratecond", "rategas", "rateoil", "ratewater", "rps", "rpscontribution", "rpsdelta", "runno", "temp", "tripdir", "tripspeed", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthbtm"]) -> typing.Union[MetaOapg.properties.depthbtm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthdatum"]) -> typing.Union[MetaOapg.properties.depthdatum, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthssdatum"]) -> typing.Union[MetaOapg.properties.depthssdatum, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthtop"]) -> typing.Union[MetaOapg.properties.depthtop, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["flowcontribution"]) -> typing.Union[MetaOapg.properties.flowcontribution, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecwellbore"]) -> typing.Union[MetaOapg.properties.idrecwellbore, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idreczonecompletion"]) -> typing.Union[MetaOapg.properties.idreczonecompletion, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["note"]) -> typing.Union[MetaOapg.properties.note, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presdatumgradient"]) -> typing.Union[MetaOapg.properties.presdatumgradient, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presdatumgradientdes"]) -> typing.Union[MetaOapg.properties.presdatumgradientdes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presgradient"]) -> typing.Union[MetaOapg.properties.presgradient, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presmpp"]) -> typing.Union[MetaOapg.properties.presmpp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prestyp"]) -> typing.Union[MetaOapg.properties.prestyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ratecond"]) -> typing.Union[MetaOapg.properties.ratecond, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rategas"]) -> typing.Union[MetaOapg.properties.rategas, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rateoil"]) -> typing.Union[MetaOapg.properties.rateoil, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ratewater"]) -> typing.Union[MetaOapg.properties.ratewater, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rps"]) -> typing.Union[MetaOapg.properties.rps, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rpscontribution"]) -> typing.Union[MetaOapg.properties.rpscontribution, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rpsdelta"]) -> typing.Union[MetaOapg.properties.rpsdelta, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["runno"]) -> typing.Union[MetaOapg.properties.runno, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temp"]) -> typing.Union[MetaOapg.properties.temp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tripdir"]) -> typing.Union[MetaOapg.properties.tripdir, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tripspeed"]) -> typing.Union[MetaOapg.properties.tripspeed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "depthbtm", "depthdatum", "depthssdatum", "depthtop", "flowcontribution", "idrecparent", "idrecwellbore", "idreczonecompletion", "note", "presdatumgradient", "presdatumgradientdes", "presgradient", "presmpp", "prestyp", "ratecond", "rategas", "rateoil", "ratewater", "rps", "rpscontribution", "rpsdelta", "runno", "temp", "tripdir", "tripspeed", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        depthbtm: typing.Union[MetaOapg.properties.depthbtm, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthdatum: typing.Union[MetaOapg.properties.depthdatum, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthssdatum: typing.Union[MetaOapg.properties.depthssdatum, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthtop: typing.Union[MetaOapg.properties.depthtop, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        flowcontribution: typing.Union[MetaOapg.properties.flowcontribution, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        idrecwellbore: typing.Union[MetaOapg.properties.idrecwellbore, str, schemas.Unset] = schemas.unset,
        idreczonecompletion: typing.Union[MetaOapg.properties.idreczonecompletion, str, schemas.Unset] = schemas.unset,
        note: typing.Union[MetaOapg.properties.note, str, schemas.Unset] = schemas.unset,
        presdatumgradient: typing.Union[MetaOapg.properties.presdatumgradient, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presdatumgradientdes: typing.Union[MetaOapg.properties.presdatumgradientdes, str, schemas.Unset] = schemas.unset,
        presgradient: typing.Union[MetaOapg.properties.presgradient, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presmpp: typing.Union[MetaOapg.properties.presmpp, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prestyp: typing.Union[MetaOapg.properties.prestyp, str, schemas.Unset] = schemas.unset,
        ratecond: typing.Union[MetaOapg.properties.ratecond, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rategas: typing.Union[MetaOapg.properties.rategas, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rateoil: typing.Union[MetaOapg.properties.rateoil, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ratewater: typing.Union[MetaOapg.properties.ratewater, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rps: typing.Union[MetaOapg.properties.rps, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rpscontribution: typing.Union[MetaOapg.properties.rpscontribution, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rpsdelta: typing.Union[MetaOapg.properties.rpsdelta, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        runno: typing.Union[MetaOapg.properties.runno, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        temp: typing.Union[MetaOapg.properties.temp, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tripdir: typing.Union[MetaOapg.properties.tripdir, str, schemas.Unset] = schemas.unset,
        tripspeed: typing.Union[MetaOapg.properties.tripspeed, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ProductionLogTestIntervalsData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            depthbtm=depthbtm,
            depthdatum=depthdatum,
            depthssdatum=depthssdatum,
            depthtop=depthtop,
            flowcontribution=flowcontribution,
            idrecparent=idrecparent,
            idrecwellbore=idrecwellbore,
            idreczonecompletion=idreczonecompletion,
            note=note,
            presdatumgradient=presdatumgradient,
            presdatumgradientdes=presdatumgradientdes,
            presgradient=presgradient,
            presmpp=presmpp,
            prestyp=prestyp,
            ratecond=ratecond,
            rategas=rategas,
            rateoil=rateoil,
            ratewater=ratewater,
            rps=rps,
            rpscontribution=rpscontribution,
            rpsdelta=rpsdelta,
            runno=runno,
            temp=temp,
            tripdir=tripdir,
            tripspeed=tripspeed,
            _configuration=_configuration,
            **kwargs,
        )
