# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class SafetyIncidentData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            affectonline = schemas.StrSchema
            category = schemas.StrSchema
            cause = schemas.StrSchema
            com = schemas.StrSchema
            des = schemas.StrSchema
            dttm = schemas.DateTimeSchema
            estcost = schemas.NumberSchema
            idrecjobcontact = schemas.StrSchema
            idrecjobservicecontract = schemas.StrSchema
            idrecparent = schemas.StrSchema
            incidentid1 = schemas.StrSchema
            incidentid2 = schemas.StrSchema
            incidentid3 = schemas.StrSchema
            losttime = schemas.BoolSchema
            opsfunction = schemas.StrSchema
            potentialseverity = schemas.StrSchema
            reportable = schemas.BoolSchema
            reportedby = schemas.StrSchema
            severity = schemas.StrSchema
            tour = schemas.StrSchema
            typ1 = schemas.StrSchema
            typ2 = schemas.StrSchema
            userboolean1 = schemas.BoolSchema
            userboolean2 = schemas.BoolSchema
            userboolean3 = schemas.BoolSchema
            usernum1 = schemas.NumberSchema
            usernum2 = schemas.NumberSchema
            usernum3 = schemas.NumberSchema
            usertxt1 = schemas.StrSchema
            usertxt2 = schemas.StrSchema
            usertxt3 = schemas.StrSchema
            witness = schemas.StrSchema
            witnesscontact = schemas.StrSchema
            witnesstyp = schemas.StrSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "affectonline": affectonline,
                "category": category,
                "cause": cause,
                "com": com,
                "des": des,
                "dttm": dttm,
                "estcost": estcost,
                "idrecjobcontact": idrecjobcontact,
                "idrecjobservicecontract": idrecjobservicecontract,
                "idrecparent": idrecparent,
                "incidentid1": incidentid1,
                "incidentid2": incidentid2,
                "incidentid3": incidentid3,
                "losttime": losttime,
                "opsfunction": opsfunction,
                "potentialseverity": potentialseverity,
                "reportable": reportable,
                "reportedby": reportedby,
                "severity": severity,
                "tour": tour,
                "typ1": typ1,
                "typ2": typ2,
                "userboolean1": userboolean1,
                "userboolean2": userboolean2,
                "userboolean3": userboolean3,
                "usernum1": usernum1,
                "usernum2": usernum2,
                "usernum3": usernum3,
                "usertxt1": usertxt1,
                "usertxt2": usertxt2,
                "usertxt3": usertxt3,
                "witness": witness,
                "witnesscontact": witnesscontact,
                "witnesstyp": witnesstyp,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["affectonline"]) -> MetaOapg.properties.affectonline: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["category"]) -> MetaOapg.properties.category: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cause"]) -> MetaOapg.properties.cause: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["des"]) -> MetaOapg.properties.des: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttm"]) -> MetaOapg.properties.dttm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["estcost"]) -> MetaOapg.properties.estcost: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecjobcontact"]) -> MetaOapg.properties.idrecjobcontact: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecjobservicecontract"]) -> MetaOapg.properties.idrecjobservicecontract: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["incidentid1"]) -> MetaOapg.properties.incidentid1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["incidentid2"]) -> MetaOapg.properties.incidentid2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["incidentid3"]) -> MetaOapg.properties.incidentid3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["losttime"]) -> MetaOapg.properties.losttime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["opsfunction"]) -> MetaOapg.properties.opsfunction: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["potentialseverity"]) -> MetaOapg.properties.potentialseverity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reportable"]) -> MetaOapg.properties.reportable: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reportedby"]) -> MetaOapg.properties.reportedby: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["severity"]) -> MetaOapg.properties.severity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tour"]) -> MetaOapg.properties.tour: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["typ1"]) -> MetaOapg.properties.typ1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["typ2"]) -> MetaOapg.properties.typ2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userboolean1"]) -> MetaOapg.properties.userboolean1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userboolean2"]) -> MetaOapg.properties.userboolean2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userboolean3"]) -> MetaOapg.properties.userboolean3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usernum1"]) -> MetaOapg.properties.usernum1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usernum2"]) -> MetaOapg.properties.usernum2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usernum3"]) -> MetaOapg.properties.usernum3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usertxt1"]) -> MetaOapg.properties.usertxt1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usertxt2"]) -> MetaOapg.properties.usertxt2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usertxt3"]) -> MetaOapg.properties.usertxt3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["witness"]) -> MetaOapg.properties.witness: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["witnesscontact"]) -> MetaOapg.properties.witnesscontact: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["witnesstyp"]) -> MetaOapg.properties.witnesstyp: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "affectonline", "category", "cause", "com", "des", "dttm", "estcost", "idrecjobcontact", "idrecjobservicecontract", "idrecparent", "incidentid1", "incidentid2", "incidentid3", "losttime", "opsfunction", "potentialseverity", "reportable", "reportedby", "severity", "tour", "typ1", "typ2", "userboolean1", "userboolean2", "userboolean3", "usernum1", "usernum2", "usernum3", "usertxt1", "usertxt2", "usertxt3", "witness", "witnesscontact", "witnesstyp", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["affectonline"]) -> typing.Union[MetaOapg.properties.affectonline, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["category"]) -> typing.Union[MetaOapg.properties.category, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cause"]) -> typing.Union[MetaOapg.properties.cause, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["des"]) -> typing.Union[MetaOapg.properties.des, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttm"]) -> typing.Union[MetaOapg.properties.dttm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["estcost"]) -> typing.Union[MetaOapg.properties.estcost, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecjobcontact"]) -> typing.Union[MetaOapg.properties.idrecjobcontact, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecjobservicecontract"]) -> typing.Union[MetaOapg.properties.idrecjobservicecontract, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["incidentid1"]) -> typing.Union[MetaOapg.properties.incidentid1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["incidentid2"]) -> typing.Union[MetaOapg.properties.incidentid2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["incidentid3"]) -> typing.Union[MetaOapg.properties.incidentid3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["losttime"]) -> typing.Union[MetaOapg.properties.losttime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["opsfunction"]) -> typing.Union[MetaOapg.properties.opsfunction, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["potentialseverity"]) -> typing.Union[MetaOapg.properties.potentialseverity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reportable"]) -> typing.Union[MetaOapg.properties.reportable, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reportedby"]) -> typing.Union[MetaOapg.properties.reportedby, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["severity"]) -> typing.Union[MetaOapg.properties.severity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tour"]) -> typing.Union[MetaOapg.properties.tour, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["typ1"]) -> typing.Union[MetaOapg.properties.typ1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["typ2"]) -> typing.Union[MetaOapg.properties.typ2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userboolean1"]) -> typing.Union[MetaOapg.properties.userboolean1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userboolean2"]) -> typing.Union[MetaOapg.properties.userboolean2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userboolean3"]) -> typing.Union[MetaOapg.properties.userboolean3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usernum1"]) -> typing.Union[MetaOapg.properties.usernum1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usernum2"]) -> typing.Union[MetaOapg.properties.usernum2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usernum3"]) -> typing.Union[MetaOapg.properties.usernum3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usertxt1"]) -> typing.Union[MetaOapg.properties.usertxt1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usertxt2"]) -> typing.Union[MetaOapg.properties.usertxt2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usertxt3"]) -> typing.Union[MetaOapg.properties.usertxt3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["witness"]) -> typing.Union[MetaOapg.properties.witness, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["witnesscontact"]) -> typing.Union[MetaOapg.properties.witnesscontact, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["witnesstyp"]) -> typing.Union[MetaOapg.properties.witnesstyp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "affectonline", "category", "cause", "com", "des", "dttm", "estcost", "idrecjobcontact", "idrecjobservicecontract", "idrecparent", "incidentid1", "incidentid2", "incidentid3", "losttime", "opsfunction", "potentialseverity", "reportable", "reportedby", "severity", "tour", "typ1", "typ2", "userboolean1", "userboolean2", "userboolean3", "usernum1", "usernum2", "usernum3", "usertxt1", "usertxt2", "usertxt3", "witness", "witnesscontact", "witnesstyp", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        affectonline: typing.Union[MetaOapg.properties.affectonline, str, schemas.Unset] = schemas.unset,
        category: typing.Union[MetaOapg.properties.category, str, schemas.Unset] = schemas.unset,
        cause: typing.Union[MetaOapg.properties.cause, str, schemas.Unset] = schemas.unset,
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        des: typing.Union[MetaOapg.properties.des, str, schemas.Unset] = schemas.unset,
        dttm: typing.Union[MetaOapg.properties.dttm, str, datetime, schemas.Unset] = schemas.unset,
        estcost: typing.Union[MetaOapg.properties.estcost, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        idrecjobcontact: typing.Union[MetaOapg.properties.idrecjobcontact, str, schemas.Unset] = schemas.unset,
        idrecjobservicecontract: typing.Union[MetaOapg.properties.idrecjobservicecontract, str, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        incidentid1: typing.Union[MetaOapg.properties.incidentid1, str, schemas.Unset] = schemas.unset,
        incidentid2: typing.Union[MetaOapg.properties.incidentid2, str, schemas.Unset] = schemas.unset,
        incidentid3: typing.Union[MetaOapg.properties.incidentid3, str, schemas.Unset] = schemas.unset,
        losttime: typing.Union[MetaOapg.properties.losttime, bool, schemas.Unset] = schemas.unset,
        opsfunction: typing.Union[MetaOapg.properties.opsfunction, str, schemas.Unset] = schemas.unset,
        potentialseverity: typing.Union[MetaOapg.properties.potentialseverity, str, schemas.Unset] = schemas.unset,
        reportable: typing.Union[MetaOapg.properties.reportable, bool, schemas.Unset] = schemas.unset,
        reportedby: typing.Union[MetaOapg.properties.reportedby, str, schemas.Unset] = schemas.unset,
        severity: typing.Union[MetaOapg.properties.severity, str, schemas.Unset] = schemas.unset,
        tour: typing.Union[MetaOapg.properties.tour, str, schemas.Unset] = schemas.unset,
        typ1: typing.Union[MetaOapg.properties.typ1, str, schemas.Unset] = schemas.unset,
        typ2: typing.Union[MetaOapg.properties.typ2, str, schemas.Unset] = schemas.unset,
        userboolean1: typing.Union[MetaOapg.properties.userboolean1, bool, schemas.Unset] = schemas.unset,
        userboolean2: typing.Union[MetaOapg.properties.userboolean2, bool, schemas.Unset] = schemas.unset,
        userboolean3: typing.Union[MetaOapg.properties.userboolean3, bool, schemas.Unset] = schemas.unset,
        usernum1: typing.Union[MetaOapg.properties.usernum1, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        usernum2: typing.Union[MetaOapg.properties.usernum2, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        usernum3: typing.Union[MetaOapg.properties.usernum3, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        usertxt1: typing.Union[MetaOapg.properties.usertxt1, str, schemas.Unset] = schemas.unset,
        usertxt2: typing.Union[MetaOapg.properties.usertxt2, str, schemas.Unset] = schemas.unset,
        usertxt3: typing.Union[MetaOapg.properties.usertxt3, str, schemas.Unset] = schemas.unset,
        witness: typing.Union[MetaOapg.properties.witness, str, schemas.Unset] = schemas.unset,
        witnesscontact: typing.Union[MetaOapg.properties.witnesscontact, str, schemas.Unset] = schemas.unset,
        witnesstyp: typing.Union[MetaOapg.properties.witnesstyp, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SafetyIncidentData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            affectonline=affectonline,
            category=category,
            cause=cause,
            com=com,
            des=des,
            dttm=dttm,
            estcost=estcost,
            idrecjobcontact=idrecjobcontact,
            idrecjobservicecontract=idrecjobservicecontract,
            idrecparent=idrecparent,
            incidentid1=incidentid1,
            incidentid2=incidentid2,
            incidentid3=incidentid3,
            losttime=losttime,
            opsfunction=opsfunction,
            potentialseverity=potentialseverity,
            reportable=reportable,
            reportedby=reportedby,
            severity=severity,
            tour=tour,
            typ1=typ1,
            typ2=typ2,
            userboolean1=userboolean1,
            userboolean2=userboolean2,
            userboolean3=userboolean3,
            usernum1=usernum1,
            usernum2=usernum2,
            usernum3=usernum3,
            usertxt1=usertxt1,
            usertxt2=usertxt2,
            usertxt3=usertxt3,
            witness=witness,
            witnesscontact=witnesscontact,
            witnesstyp=witnesstyp,
            _configuration=_configuration,
            **kwargs,
        )
