# coding: utf-8

"""
    WellViewSDKAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from wellview_sdk_api import schemas  # noqa: F401


class IntervalFlowPeriodsData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "idrec",
            "idwell",
        }
        
        class properties:
            idrec = schemas.StrSchema
            idwell = schemas.StrSchema
            bswend = schemas.NumberSchema
            com = schemas.StrSchema
            densitygasend = schemas.NumberSchema
            densityoilend = schemas.NumberSchema
            depthfluidlevelend = schemas.NumberSchema
            dttmend = schemas.DateTimeSchema
            dttmstart = schemas.DateTimeSchema
            efficiency = schemas.NumberSchema
            h2send = schemas.NumberSchema
            idrecgaugeused = schemas.StrSchema
            idrecparent = schemas.StrSchema
            phwaterend = schemas.NumberSchema
            presbhend = schemas.NumberSchema
            presbhinit = schemas.NumberSchema
            prescasend = schemas.NumberSchema
            prescasinit = schemas.NumberSchema
            pressepend = schemas.NumberSchema
            pressepinit = schemas.NumberSchema
            prestubend = schemas.NumberSchema
            prestubinit = schemas.NumberSchema
            ratecondend = schemas.NumberSchema
            rategasend = schemas.NumberSchema
            rategasliftgas = schemas.NumberSchema
            rateoilend = schemas.NumberSchema
            ratewaterend = schemas.NumberSchema
            salinitywaterend = schemas.NumberSchema
            sandcutend = schemas.NumberSchema
            szdiachoke = schemas.NumberSchema
            tempbhend = schemas.NumberSchema
            tempbhinit = schemas.NumberSchema
            tempcasend = schemas.NumberSchema
            tempcasinit = schemas.NumberSchema
            tempsepend = schemas.NumberSchema
            tempsepinit = schemas.NumberSchema
            temptubend = schemas.NumberSchema
            temptubinit = schemas.NumberSchema
            typ = schemas.StrSchema
            volumecondtotal = schemas.NumberSchema
            volumegastotal = schemas.NumberSchema
            volumeoiltotal = schemas.NumberSchema
            volumewatertotal = schemas.NumberSchema
            __annotations__ = {
                "idrec": idrec,
                "idwell": idwell,
                "bswend": bswend,
                "com": com,
                "densitygasend": densitygasend,
                "densityoilend": densityoilend,
                "depthfluidlevelend": depthfluidlevelend,
                "dttmend": dttmend,
                "dttmstart": dttmstart,
                "efficiency": efficiency,
                "h2send": h2send,
                "idrecgaugeused": idrecgaugeused,
                "idrecparent": idrecparent,
                "phwaterend": phwaterend,
                "presbhend": presbhend,
                "presbhinit": presbhinit,
                "prescasend": prescasend,
                "prescasinit": prescasinit,
                "pressepend": pressepend,
                "pressepinit": pressepinit,
                "prestubend": prestubend,
                "prestubinit": prestubinit,
                "ratecondend": ratecondend,
                "rategasend": rategasend,
                "rategasliftgas": rategasliftgas,
                "rateoilend": rateoilend,
                "ratewaterend": ratewaterend,
                "salinitywaterend": salinitywaterend,
                "sandcutend": sandcutend,
                "szdiachoke": szdiachoke,
                "tempbhend": tempbhend,
                "tempbhinit": tempbhinit,
                "tempcasend": tempcasend,
                "tempcasinit": tempcasinit,
                "tempsepend": tempsepend,
                "tempsepinit": tempsepinit,
                "temptubend": temptubend,
                "temptubinit": temptubinit,
                "typ": typ,
                "volumecondtotal": volumecondtotal,
                "volumegastotal": volumegastotal,
                "volumeoiltotal": volumeoiltotal,
                "volumewatertotal": volumewatertotal,
            }
    
    idrec: MetaOapg.properties.idrec
    idwell: MetaOapg.properties.idwell
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bswend"]) -> MetaOapg.properties.bswend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["com"]) -> MetaOapg.properties.com: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["densitygasend"]) -> MetaOapg.properties.densitygasend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["densityoilend"]) -> MetaOapg.properties.densityoilend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["depthfluidlevelend"]) -> MetaOapg.properties.depthfluidlevelend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmend"]) -> MetaOapg.properties.dttmend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dttmstart"]) -> MetaOapg.properties.dttmstart: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["efficiency"]) -> MetaOapg.properties.efficiency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["h2send"]) -> MetaOapg.properties.h2send: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecgaugeused"]) -> MetaOapg.properties.idrecgaugeused: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idrecparent"]) -> MetaOapg.properties.idrecparent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phwaterend"]) -> MetaOapg.properties.phwaterend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presbhend"]) -> MetaOapg.properties.presbhend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presbhinit"]) -> MetaOapg.properties.presbhinit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prescasend"]) -> MetaOapg.properties.prescasend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prescasinit"]) -> MetaOapg.properties.prescasinit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pressepend"]) -> MetaOapg.properties.pressepend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pressepinit"]) -> MetaOapg.properties.pressepinit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prestubend"]) -> MetaOapg.properties.prestubend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prestubinit"]) -> MetaOapg.properties.prestubinit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ratecondend"]) -> MetaOapg.properties.ratecondend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rategasend"]) -> MetaOapg.properties.rategasend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rategasliftgas"]) -> MetaOapg.properties.rategasliftgas: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rateoilend"]) -> MetaOapg.properties.rateoilend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ratewaterend"]) -> MetaOapg.properties.ratewaterend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["salinitywaterend"]) -> MetaOapg.properties.salinitywaterend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sandcutend"]) -> MetaOapg.properties.sandcutend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["szdiachoke"]) -> MetaOapg.properties.szdiachoke: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tempbhend"]) -> MetaOapg.properties.tempbhend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tempbhinit"]) -> MetaOapg.properties.tempbhinit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tempcasend"]) -> MetaOapg.properties.tempcasend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tempcasinit"]) -> MetaOapg.properties.tempcasinit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tempsepend"]) -> MetaOapg.properties.tempsepend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tempsepinit"]) -> MetaOapg.properties.tempsepinit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temptubend"]) -> MetaOapg.properties.temptubend: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["temptubinit"]) -> MetaOapg.properties.temptubinit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["typ"]) -> MetaOapg.properties.typ: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volumecondtotal"]) -> MetaOapg.properties.volumecondtotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volumegastotal"]) -> MetaOapg.properties.volumegastotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volumeoiltotal"]) -> MetaOapg.properties.volumeoiltotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["volumewatertotal"]) -> MetaOapg.properties.volumewatertotal: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "bswend", "com", "densitygasend", "densityoilend", "depthfluidlevelend", "dttmend", "dttmstart", "efficiency", "h2send", "idrecgaugeused", "idrecparent", "phwaterend", "presbhend", "presbhinit", "prescasend", "prescasinit", "pressepend", "pressepinit", "prestubend", "prestubinit", "ratecondend", "rategasend", "rategasliftgas", "rateoilend", "ratewaterend", "salinitywaterend", "sandcutend", "szdiachoke", "tempbhend", "tempbhinit", "tempcasend", "tempcasinit", "tempsepend", "tempsepinit", "temptubend", "temptubinit", "typ", "volumecondtotal", "volumegastotal", "volumeoiltotal", "volumewatertotal", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrec"]) -> MetaOapg.properties.idrec: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idwell"]) -> MetaOapg.properties.idwell: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bswend"]) -> typing.Union[MetaOapg.properties.bswend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["com"]) -> typing.Union[MetaOapg.properties.com, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["densitygasend"]) -> typing.Union[MetaOapg.properties.densitygasend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["densityoilend"]) -> typing.Union[MetaOapg.properties.densityoilend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["depthfluidlevelend"]) -> typing.Union[MetaOapg.properties.depthfluidlevelend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmend"]) -> typing.Union[MetaOapg.properties.dttmend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dttmstart"]) -> typing.Union[MetaOapg.properties.dttmstart, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["efficiency"]) -> typing.Union[MetaOapg.properties.efficiency, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["h2send"]) -> typing.Union[MetaOapg.properties.h2send, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecgaugeused"]) -> typing.Union[MetaOapg.properties.idrecgaugeused, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idrecparent"]) -> typing.Union[MetaOapg.properties.idrecparent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phwaterend"]) -> typing.Union[MetaOapg.properties.phwaterend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presbhend"]) -> typing.Union[MetaOapg.properties.presbhend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presbhinit"]) -> typing.Union[MetaOapg.properties.presbhinit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prescasend"]) -> typing.Union[MetaOapg.properties.prescasend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prescasinit"]) -> typing.Union[MetaOapg.properties.prescasinit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pressepend"]) -> typing.Union[MetaOapg.properties.pressepend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pressepinit"]) -> typing.Union[MetaOapg.properties.pressepinit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prestubend"]) -> typing.Union[MetaOapg.properties.prestubend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prestubinit"]) -> typing.Union[MetaOapg.properties.prestubinit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ratecondend"]) -> typing.Union[MetaOapg.properties.ratecondend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rategasend"]) -> typing.Union[MetaOapg.properties.rategasend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rategasliftgas"]) -> typing.Union[MetaOapg.properties.rategasliftgas, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rateoilend"]) -> typing.Union[MetaOapg.properties.rateoilend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ratewaterend"]) -> typing.Union[MetaOapg.properties.ratewaterend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["salinitywaterend"]) -> typing.Union[MetaOapg.properties.salinitywaterend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sandcutend"]) -> typing.Union[MetaOapg.properties.sandcutend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["szdiachoke"]) -> typing.Union[MetaOapg.properties.szdiachoke, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tempbhend"]) -> typing.Union[MetaOapg.properties.tempbhend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tempbhinit"]) -> typing.Union[MetaOapg.properties.tempbhinit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tempcasend"]) -> typing.Union[MetaOapg.properties.tempcasend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tempcasinit"]) -> typing.Union[MetaOapg.properties.tempcasinit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tempsepend"]) -> typing.Union[MetaOapg.properties.tempsepend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tempsepinit"]) -> typing.Union[MetaOapg.properties.tempsepinit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temptubend"]) -> typing.Union[MetaOapg.properties.temptubend, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["temptubinit"]) -> typing.Union[MetaOapg.properties.temptubinit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["typ"]) -> typing.Union[MetaOapg.properties.typ, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volumecondtotal"]) -> typing.Union[MetaOapg.properties.volumecondtotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volumegastotal"]) -> typing.Union[MetaOapg.properties.volumegastotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volumeoiltotal"]) -> typing.Union[MetaOapg.properties.volumeoiltotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["volumewatertotal"]) -> typing.Union[MetaOapg.properties.volumewatertotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idrec", "idwell", "bswend", "com", "densitygasend", "densityoilend", "depthfluidlevelend", "dttmend", "dttmstart", "efficiency", "h2send", "idrecgaugeused", "idrecparent", "phwaterend", "presbhend", "presbhinit", "prescasend", "prescasinit", "pressepend", "pressepinit", "prestubend", "prestubinit", "ratecondend", "rategasend", "rategasliftgas", "rateoilend", "ratewaterend", "salinitywaterend", "sandcutend", "szdiachoke", "tempbhend", "tempbhinit", "tempcasend", "tempcasinit", "tempsepend", "tempsepinit", "temptubend", "temptubinit", "typ", "volumecondtotal", "volumegastotal", "volumeoiltotal", "volumewatertotal", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idrec: typing.Union[MetaOapg.properties.idrec, str, ],
        idwell: typing.Union[MetaOapg.properties.idwell, str, ],
        bswend: typing.Union[MetaOapg.properties.bswend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        com: typing.Union[MetaOapg.properties.com, str, schemas.Unset] = schemas.unset,
        densitygasend: typing.Union[MetaOapg.properties.densitygasend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        densityoilend: typing.Union[MetaOapg.properties.densityoilend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        depthfluidlevelend: typing.Union[MetaOapg.properties.depthfluidlevelend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        dttmend: typing.Union[MetaOapg.properties.dttmend, str, datetime, schemas.Unset] = schemas.unset,
        dttmstart: typing.Union[MetaOapg.properties.dttmstart, str, datetime, schemas.Unset] = schemas.unset,
        efficiency: typing.Union[MetaOapg.properties.efficiency, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        h2send: typing.Union[MetaOapg.properties.h2send, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        idrecgaugeused: typing.Union[MetaOapg.properties.idrecgaugeused, str, schemas.Unset] = schemas.unset,
        idrecparent: typing.Union[MetaOapg.properties.idrecparent, str, schemas.Unset] = schemas.unset,
        phwaterend: typing.Union[MetaOapg.properties.phwaterend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presbhend: typing.Union[MetaOapg.properties.presbhend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        presbhinit: typing.Union[MetaOapg.properties.presbhinit, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prescasend: typing.Union[MetaOapg.properties.prescasend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prescasinit: typing.Union[MetaOapg.properties.prescasinit, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        pressepend: typing.Union[MetaOapg.properties.pressepend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        pressepinit: typing.Union[MetaOapg.properties.pressepinit, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prestubend: typing.Union[MetaOapg.properties.prestubend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        prestubinit: typing.Union[MetaOapg.properties.prestubinit, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ratecondend: typing.Union[MetaOapg.properties.ratecondend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rategasend: typing.Union[MetaOapg.properties.rategasend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rategasliftgas: typing.Union[MetaOapg.properties.rategasliftgas, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        rateoilend: typing.Union[MetaOapg.properties.rateoilend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ratewaterend: typing.Union[MetaOapg.properties.ratewaterend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        salinitywaterend: typing.Union[MetaOapg.properties.salinitywaterend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        sandcutend: typing.Union[MetaOapg.properties.sandcutend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        szdiachoke: typing.Union[MetaOapg.properties.szdiachoke, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tempbhend: typing.Union[MetaOapg.properties.tempbhend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tempbhinit: typing.Union[MetaOapg.properties.tempbhinit, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tempcasend: typing.Union[MetaOapg.properties.tempcasend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tempcasinit: typing.Union[MetaOapg.properties.tempcasinit, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tempsepend: typing.Union[MetaOapg.properties.tempsepend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        tempsepinit: typing.Union[MetaOapg.properties.tempsepinit, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temptubend: typing.Union[MetaOapg.properties.temptubend, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        temptubinit: typing.Union[MetaOapg.properties.temptubinit, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        typ: typing.Union[MetaOapg.properties.typ, str, schemas.Unset] = schemas.unset,
        volumecondtotal: typing.Union[MetaOapg.properties.volumecondtotal, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volumegastotal: typing.Union[MetaOapg.properties.volumegastotal, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volumeoiltotal: typing.Union[MetaOapg.properties.volumeoiltotal, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        volumewatertotal: typing.Union[MetaOapg.properties.volumewatertotal, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'IntervalFlowPeriodsData':
        return super().__new__(
            cls,
            *args,
            idrec=idrec,
            idwell=idwell,
            bswend=bswend,
            com=com,
            densitygasend=densitygasend,
            densityoilend=densityoilend,
            depthfluidlevelend=depthfluidlevelend,
            dttmend=dttmend,
            dttmstart=dttmstart,
            efficiency=efficiency,
            h2send=h2send,
            idrecgaugeused=idrecgaugeused,
            idrecparent=idrecparent,
            phwaterend=phwaterend,
            presbhend=presbhend,
            presbhinit=presbhinit,
            prescasend=prescasend,
            prescasinit=prescasinit,
            pressepend=pressepend,
            pressepinit=pressepinit,
            prestubend=prestubend,
            prestubinit=prestubinit,
            ratecondend=ratecondend,
            rategasend=rategasend,
            rategasliftgas=rategasliftgas,
            rateoilend=rateoilend,
            ratewaterend=ratewaterend,
            salinitywaterend=salinitywaterend,
            sandcutend=sandcutend,
            szdiachoke=szdiachoke,
            tempbhend=tempbhend,
            tempbhinit=tempbhinit,
            tempcasend=tempcasend,
            tempcasinit=tempcasinit,
            tempsepend=tempsepend,
            tempsepinit=tempsepinit,
            temptubend=temptubend,
            temptubinit=temptubinit,
            typ=typ,
            volumecondtotal=volumecondtotal,
            volumegastotal=volumegastotal,
            volumeoiltotal=volumeoiltotal,
            volumewatertotal=volumewatertotal,
            _configuration=_configuration,
            **kwargs,
        )
