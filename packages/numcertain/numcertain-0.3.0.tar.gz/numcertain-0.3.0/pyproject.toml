[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools",
    "oldest-supported-numpy",
    "wheel",
    "setuptools_scm[toml]",
]

[project]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = ["numpy"]
description = "A python & numpy data type for floating point numbers with quantified uncertainity."
dynamic = ["version"]
license = { file = "LICENSE" }
name = "numcertain"
readme = "README.rst"
requires-python = ">=3.9"

[project.urls]
GitHub = "https://github.com/DiamondLightSource/numcertain"

[[project.authors]]
email = "garry.o'donnell@diamond.ac.uk"
name = "Garry O'Donnell"

[[project.maintainers]]
email = "garry.o'donnell@diamond.ac.uk"
name = "Garry O'Donnell"


[project.optional-dependencies]
dev = [
    "black",
    "isort",
    "pytest-cov",
    "mypy",
    "flake8",
    "flake8-isort",
    "flake8-pyi",
    "Flake8-pyproject",
    "pydocstyle[toml]",
    "pre-commit",
]
docs = ["sphinx-rtd-theme-github-versions"]

[tool.setuptools_scm]
write_to = "src/numcertain/_version.py"

[tool.mypy]
ignore_missing_imports = true          # Ignore missing stubs in imported modules
plugins = ["numpy.typing.mypy_plugin"]

[tool.isort]
float_to_top = true
profile = "black"

[tool.flake8]
extend-ignore = [
    "E203", # See https://github.com/PyCQA/pycodestyle/issues/373
    "F811", # support typing.overload decorator
]
max-line-length = 88 # Respect black's line length (default 88),
per-file-ignores = "*pyi:E302"

[tool.pydocstyle]
add-ignore = [
    "D100", # Ignore missing docstrings in public modules
    "D104", # Ignore missing docstrings in public packages
    "D418", # Ignore missing docstrings in dunder methods; See: https://github.com/PyCQA/pydocstyle/issues/525
]
convention = "google"

[tool.pytest.ini_options]
addopts = """\
    --tb=native -vv --doctest-modules --doctest-glob=\"*.rst\"
    --cov=numcertain --cov-report term --cov-report xml:cov.xml\
    """
filterwarnings = "error"
testpaths = "docs src tests"

[tool.coverage.run]
data_file = "/tmp/numcertain.coverage"

[tool.coverage.paths]
# Tests are run from installed location, map back to the src directory
source = ["src", "**/site-packages/"]
