# coding: utf-8

"""
    Camunda Platform REST API

    OpenApi Spec for Camunda Platform REST API.  # noqa: E501

    The version of the OpenAPI document: 7.17.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from generic_camunda_client.configuration import Configuration


class BatchStatisticsDtoAllOf(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'remaining_jobs': 'int',
        'completed_jobs': 'int',
        'failed_jobs': 'int'
    }

    attribute_map = {
        'remaining_jobs': 'remainingJobs',
        'completed_jobs': 'completedJobs',
        'failed_jobs': 'failedJobs'
    }

    def __init__(self, remaining_jobs=None, completed_jobs=None, failed_jobs=None, local_vars_configuration=None):  # noqa: E501
        """BatchStatisticsDtoAllOf - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._remaining_jobs = None
        self._completed_jobs = None
        self._failed_jobs = None
        self.discriminator = None

        self.remaining_jobs = remaining_jobs
        self.completed_jobs = completed_jobs
        self.failed_jobs = failed_jobs

    @property
    def remaining_jobs(self):
        """Gets the remaining_jobs of this BatchStatisticsDtoAllOf.  # noqa: E501

        The number of remaining batch execution jobs. This does include failed batch execution jobs and batch execution jobs which still have to be created by the seed job.  # noqa: E501

        :return: The remaining_jobs of this BatchStatisticsDtoAllOf.  # noqa: E501
        :rtype: int
        """
        return self._remaining_jobs

    @remaining_jobs.setter
    def remaining_jobs(self, remaining_jobs):
        """Sets the remaining_jobs of this BatchStatisticsDtoAllOf.

        The number of remaining batch execution jobs. This does include failed batch execution jobs and batch execution jobs which still have to be created by the seed job.  # noqa: E501

        :param remaining_jobs: The remaining_jobs of this BatchStatisticsDtoAllOf.  # noqa: E501
        :type: int
        """

        self._remaining_jobs = remaining_jobs

    @property
    def completed_jobs(self):
        """Gets the completed_jobs of this BatchStatisticsDtoAllOf.  # noqa: E501

        The number of completed batch execution jobs. This does include aborted/deleted batch execution jobs.  # noqa: E501

        :return: The completed_jobs of this BatchStatisticsDtoAllOf.  # noqa: E501
        :rtype: int
        """
        return self._completed_jobs

    @completed_jobs.setter
    def completed_jobs(self, completed_jobs):
        """Sets the completed_jobs of this BatchStatisticsDtoAllOf.

        The number of completed batch execution jobs. This does include aborted/deleted batch execution jobs.  # noqa: E501

        :param completed_jobs: The completed_jobs of this BatchStatisticsDtoAllOf.  # noqa: E501
        :type: int
        """

        self._completed_jobs = completed_jobs

    @property
    def failed_jobs(self):
        """Gets the failed_jobs of this BatchStatisticsDtoAllOf.  # noqa: E501

        The number of failed batch execution jobs. This does not include aborted or deleted batch execution jobs.  # noqa: E501

        :return: The failed_jobs of this BatchStatisticsDtoAllOf.  # noqa: E501
        :rtype: int
        """
        return self._failed_jobs

    @failed_jobs.setter
    def failed_jobs(self, failed_jobs):
        """Sets the failed_jobs of this BatchStatisticsDtoAllOf.

        The number of failed batch execution jobs. This does not include aborted or deleted batch execution jobs.  # noqa: E501

        :param failed_jobs: The failed_jobs of this BatchStatisticsDtoAllOf.  # noqa: E501
        :type: int
        """

        self._failed_jobs = failed_jobs

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BatchStatisticsDtoAllOf):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, BatchStatisticsDtoAllOf):
            return True

        return self.to_dict() != other.to_dict()
