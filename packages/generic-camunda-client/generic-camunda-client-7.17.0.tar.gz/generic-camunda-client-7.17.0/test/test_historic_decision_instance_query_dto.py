# coding: utf-8

"""
    Camunda Platform REST API

    OpenApi Spec for Camunda Platform REST API.  # noqa: E501

    The version of the OpenAPI document: 7.17.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import generic_camunda_client
from generic_camunda_client.models.historic_decision_instance_query_dto import HistoricDecisionInstanceQueryDto  # noqa: E501
from generic_camunda_client.rest import ApiException

class TestHistoricDecisionInstanceQueryDto(unittest.TestCase):
    """HistoricDecisionInstanceQueryDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test HistoricDecisionInstanceQueryDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = generic_camunda_client.models.historic_decision_instance_query_dto.HistoricDecisionInstanceQueryDto()  # noqa: E501
        if include_optional :
            return HistoricDecisionInstanceQueryDto(
                decision_instance_id = '0', 
                decision_instance_id_in = [
                    '0'
                    ], 
                decision_definition_id = '0', 
                decision_definition_id_in = [
                    '0'
                    ], 
                decision_definition_key = '0', 
                decision_definition_key_in = [
                    '0'
                    ], 
                decision_definition_name = '0', 
                decision_definition_name_like = '0', 
                process_definition_id = '0', 
                process_definition_key = '0', 
                process_instance_id = '0', 
                case_definition_id = '0', 
                case_definition_key = '0', 
                case_instance_id = '0', 
                activity_id_in = [
                    '0'
                    ], 
                activity_instance_id_in = [
                    '0'
                    ], 
                tenant_id_in = [
                    '0'
                    ], 
                without_tenant_id = True, 
                evaluated_before = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                evaluated_after = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                user_id = '0', 
                root_decision_instance_id = '0', 
                root_decision_instances_only = True, 
                decision_requirements_definition_id = '0', 
                decision_requirements_definition_key = '0', 
                include_inputs = True, 
                include_outputs = True, 
                disable_binary_fetching = True, 
                disable_custom_object_deserialization = True
            )
        else :
            return HistoricDecisionInstanceQueryDto(
        )

    def testHistoricDecisionInstanceQueryDto(self):
        """Test HistoricDecisionInstanceQueryDto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
