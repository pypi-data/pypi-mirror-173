# coding: utf-8

"""
    Camunda Platform REST API

    OpenApi Spec for Camunda Platform REST API.  # noqa: E501

    The version of the OpenAPI document: 7.17.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import generic_camunda_client
from generic_camunda_client.models.set_job_retries_dto import SetJobRetriesDto  # noqa: E501
from generic_camunda_client.rest import ApiException

class TestSetJobRetriesDto(unittest.TestCase):
    """SetJobRetriesDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SetJobRetriesDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = generic_camunda_client.models.set_job_retries_dto.SetJobRetriesDto()  # noqa: E501
        if include_optional :
            return SetJobRetriesDto(
                job_ids = [
                    '0'
                    ], 
                job_query = generic_camunda_client.models.job_query_dto.JobQueryDto(
                    job_id = '0', 
                    job_ids = [
                        '0'
                        ], 
                    job_definition_id = '0', 
                    process_instance_id = '0', 
                    process_instance_ids = [
                        '0'
                        ], 
                    execution_id = '0', 
                    process_definition_id = '0', 
                    process_definition_key = '0', 
                    activity_id = '0', 
                    with_retries_left = True, 
                    executable = True, 
                    timers = True, 
                    messages = True, 
                    due_dates = [
                        generic_camunda_client.models.job_condition_query_parameter_dto.JobConditionQueryParameterDto(
                            operator = 'gt', 
                            value = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    create_times = [
                        generic_camunda_client.models.job_condition_query_parameter_dto.JobConditionQueryParameterDto(
                            operator = 'gt', 
                            value = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    with_exception = True, 
                    exception_message = '0', 
                    failed_activity_id = '0', 
                    no_retries_left = True, 
                    active = True, 
                    suspended = True, 
                    priority_lower_than_or_equals = 56, 
                    priority_higher_than_or_equals = 56, 
                    tenant_id_in = [
                        '0'
                        ], 
                    without_tenant_id = True, 
                    include_jobs_without_tenant_id = True, 
                    sorting = [
                        generic_camunda_client.models.job_query_dto_sorting.JobQueryDto_sorting(
                            sort_by = 'jobId', 
                            sort_order = 'asc', )
                        ], ), 
                retries = 0
            )
        else :
            return SetJobRetriesDto(
        )

    def testSetJobRetriesDto(self):
        """Test SetJobRetriesDto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
