# coding: utf-8

"""
    Camunda Platform REST API

    OpenApi Spec for Camunda Platform REST API.  # noqa: E501

    The version of the OpenAPI document: 7.18.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from generic_camunda_client.configuration import Configuration


class MigrationExecutionDto(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'migration_plan': 'MigrationPlanDto',
        'process_instance_ids': 'list[str]',
        'process_instance_query': 'ProcessInstanceQueryDto',
        'skip_custom_listeners': 'bool',
        'skip_io_mappings': 'bool'
    }

    attribute_map = {
        'migration_plan': 'migrationPlan',
        'process_instance_ids': 'processInstanceIds',
        'process_instance_query': 'processInstanceQuery',
        'skip_custom_listeners': 'skipCustomListeners',
        'skip_io_mappings': 'skipIoMappings'
    }

    def __init__(self, migration_plan=None, process_instance_ids=None, process_instance_query=None, skip_custom_listeners=None, skip_io_mappings=None, local_vars_configuration=None):  # noqa: E501
        """MigrationExecutionDto - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._migration_plan = None
        self._process_instance_ids = None
        self._process_instance_query = None
        self._skip_custom_listeners = None
        self._skip_io_mappings = None
        self.discriminator = None

        if migration_plan is not None:
            self.migration_plan = migration_plan
        self.process_instance_ids = process_instance_ids
        if process_instance_query is not None:
            self.process_instance_query = process_instance_query
        self.skip_custom_listeners = skip_custom_listeners
        self.skip_io_mappings = skip_io_mappings

    @property
    def migration_plan(self):
        """Gets the migration_plan of this MigrationExecutionDto.  # noqa: E501


        :return: The migration_plan of this MigrationExecutionDto.  # noqa: E501
        :rtype: MigrationPlanDto
        """
        return self._migration_plan

    @migration_plan.setter
    def migration_plan(self, migration_plan):
        """Sets the migration_plan of this MigrationExecutionDto.


        :param migration_plan: The migration_plan of this MigrationExecutionDto.  # noqa: E501
        :type: MigrationPlanDto
        """

        self._migration_plan = migration_plan

    @property
    def process_instance_ids(self):
        """Gets the process_instance_ids of this MigrationExecutionDto.  # noqa: E501

        A list of process instance ids to migrate.  # noqa: E501

        :return: The process_instance_ids of this MigrationExecutionDto.  # noqa: E501
        :rtype: list[str]
        """
        return self._process_instance_ids

    @process_instance_ids.setter
    def process_instance_ids(self, process_instance_ids):
        """Sets the process_instance_ids of this MigrationExecutionDto.

        A list of process instance ids to migrate.  # noqa: E501

        :param process_instance_ids: The process_instance_ids of this MigrationExecutionDto.  # noqa: E501
        :type: list[str]
        """

        self._process_instance_ids = process_instance_ids

    @property
    def process_instance_query(self):
        """Gets the process_instance_query of this MigrationExecutionDto.  # noqa: E501


        :return: The process_instance_query of this MigrationExecutionDto.  # noqa: E501
        :rtype: ProcessInstanceQueryDto
        """
        return self._process_instance_query

    @process_instance_query.setter
    def process_instance_query(self, process_instance_query):
        """Sets the process_instance_query of this MigrationExecutionDto.


        :param process_instance_query: The process_instance_query of this MigrationExecutionDto.  # noqa: E501
        :type: ProcessInstanceQueryDto
        """

        self._process_instance_query = process_instance_query

    @property
    def skip_custom_listeners(self):
        """Gets the skip_custom_listeners of this MigrationExecutionDto.  # noqa: E501

        A boolean value to control whether execution listeners should be invoked during migration.  # noqa: E501

        :return: The skip_custom_listeners of this MigrationExecutionDto.  # noqa: E501
        :rtype: bool
        """
        return self._skip_custom_listeners

    @skip_custom_listeners.setter
    def skip_custom_listeners(self, skip_custom_listeners):
        """Sets the skip_custom_listeners of this MigrationExecutionDto.

        A boolean value to control whether execution listeners should be invoked during migration.  # noqa: E501

        :param skip_custom_listeners: The skip_custom_listeners of this MigrationExecutionDto.  # noqa: E501
        :type: bool
        """

        self._skip_custom_listeners = skip_custom_listeners

    @property
    def skip_io_mappings(self):
        """Gets the skip_io_mappings of this MigrationExecutionDto.  # noqa: E501

        A boolean value to control whether input/output mappings should be executed during migration.  # noqa: E501

        :return: The skip_io_mappings of this MigrationExecutionDto.  # noqa: E501
        :rtype: bool
        """
        return self._skip_io_mappings

    @skip_io_mappings.setter
    def skip_io_mappings(self, skip_io_mappings):
        """Sets the skip_io_mappings of this MigrationExecutionDto.

        A boolean value to control whether input/output mappings should be executed during migration.  # noqa: E501

        :param skip_io_mappings: The skip_io_mappings of this MigrationExecutionDto.  # noqa: E501
        :type: bool
        """

        self._skip_io_mappings = skip_io_mappings

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MigrationExecutionDto):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, MigrationExecutionDto):
            return True

        return self.to_dict() != other.to_dict()
