# coding: utf-8

"""
    Camunda Platform REST API

    OpenApi Spec for Camunda Platform REST API.  # noqa: E501

    The version of the OpenAPI document: 7.18.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import generic_camunda_client
from generic_camunda_client.models.called_process_definition_dto import CalledProcessDefinitionDto  # noqa: E501
from generic_camunda_client.rest import ApiException

class TestCalledProcessDefinitionDto(unittest.TestCase):
    """CalledProcessDefinitionDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CalledProcessDefinitionDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = generic_camunda_client.models.called_process_definition_dto.CalledProcessDefinitionDto()  # noqa: E501
        if include_optional :
            return CalledProcessDefinitionDto(
                called_from_activity_ids = [
                    '0'
                    ], 
                calling_process_definition_id = '0', 
                id = '0', 
                key = '0', 
                category = '0', 
                description = '0', 
                name = '0', 
                version = 56, 
                resource = '0', 
                deployment_id = '0', 
                diagram = '0', 
                suspended = True, 
                tenant_id = '0', 
                version_tag = '0', 
                history_time_to_live = 0, 
                startable_in_tasklist = True
            )
        else :
            return CalledProcessDefinitionDto(
        )

    def testCalledProcessDefinitionDto(self):
        """Test CalledProcessDefinitionDto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
