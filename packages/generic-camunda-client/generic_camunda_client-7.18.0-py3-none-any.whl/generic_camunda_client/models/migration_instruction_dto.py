# coding: utf-8

"""
    Camunda Platform REST API

    OpenApi Spec for Camunda Platform REST API.  # noqa: E501

    The version of the OpenAPI document: 7.18.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from generic_camunda_client.configuration import Configuration


class MigrationInstructionDto(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'source_activity_ids': 'list[str]',
        'target_activity_ids': 'list[str]',
        'update_event_trigger': 'bool'
    }

    attribute_map = {
        'source_activity_ids': 'sourceActivityIds',
        'target_activity_ids': 'targetActivityIds',
        'update_event_trigger': 'updateEventTrigger'
    }

    def __init__(self, source_activity_ids=None, target_activity_ids=None, update_event_trigger=None, local_vars_configuration=None):  # noqa: E501
        """MigrationInstructionDto - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._source_activity_ids = None
        self._target_activity_ids = None
        self._update_event_trigger = None
        self.discriminator = None

        self.source_activity_ids = source_activity_ids
        self.target_activity_ids = target_activity_ids
        self.update_event_trigger = update_event_trigger

    @property
    def source_activity_ids(self):
        """Gets the source_activity_ids of this MigrationInstructionDto.  # noqa: E501

        The activity ids from the source process definition being mapped.  # noqa: E501

        :return: The source_activity_ids of this MigrationInstructionDto.  # noqa: E501
        :rtype: list[str]
        """
        return self._source_activity_ids

    @source_activity_ids.setter
    def source_activity_ids(self, source_activity_ids):
        """Sets the source_activity_ids of this MigrationInstructionDto.

        The activity ids from the source process definition being mapped.  # noqa: E501

        :param source_activity_ids: The source_activity_ids of this MigrationInstructionDto.  # noqa: E501
        :type: list[str]
        """

        self._source_activity_ids = source_activity_ids

    @property
    def target_activity_ids(self):
        """Gets the target_activity_ids of this MigrationInstructionDto.  # noqa: E501

        The activity ids from the target process definition being mapped.  # noqa: E501

        :return: The target_activity_ids of this MigrationInstructionDto.  # noqa: E501
        :rtype: list[str]
        """
        return self._target_activity_ids

    @target_activity_ids.setter
    def target_activity_ids(self, target_activity_ids):
        """Sets the target_activity_ids of this MigrationInstructionDto.

        The activity ids from the target process definition being mapped.  # noqa: E501

        :param target_activity_ids: The target_activity_ids of this MigrationInstructionDto.  # noqa: E501
        :type: list[str]
        """

        self._target_activity_ids = target_activity_ids

    @property
    def update_event_trigger(self):
        """Gets the update_event_trigger of this MigrationInstructionDto.  # noqa: E501

        Configuration flag whether event triggers defined are going to be updated during migration.  # noqa: E501

        :return: The update_event_trigger of this MigrationInstructionDto.  # noqa: E501
        :rtype: bool
        """
        return self._update_event_trigger

    @update_event_trigger.setter
    def update_event_trigger(self, update_event_trigger):
        """Sets the update_event_trigger of this MigrationInstructionDto.

        Configuration flag whether event triggers defined are going to be updated during migration.  # noqa: E501

        :param update_event_trigger: The update_event_trigger of this MigrationInstructionDto.  # noqa: E501
        :type: bool
        """

        self._update_event_trigger = update_event_trigger

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MigrationInstructionDto):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, MigrationInstructionDto):
            return True

        return self.to_dict() != other.to_dict()
