# coding: utf-8

"""
    Camunda Platform REST API

    OpenApi Spec for Camunda Platform REST API.  # noqa: E501

    The version of the OpenAPI document: 7.18.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from generic_camunda_client.configuration import Configuration


class JobSuspensionStateDtoAllOf(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'job_definition_id': 'str',
        'process_definition_id': 'str',
        'process_instance_id': 'str',
        'process_definition_key': 'str',
        'process_definition_tenant_id': 'str',
        'process_definition_without_tenant_id': 'bool'
    }

    attribute_map = {
        'job_definition_id': 'jobDefinitionId',
        'process_definition_id': 'processDefinitionId',
        'process_instance_id': 'processInstanceId',
        'process_definition_key': 'processDefinitionKey',
        'process_definition_tenant_id': 'processDefinitionTenantId',
        'process_definition_without_tenant_id': 'processDefinitionWithoutTenantId'
    }

    def __init__(self, job_definition_id=None, process_definition_id=None, process_instance_id=None, process_definition_key=None, process_definition_tenant_id=None, process_definition_without_tenant_id=None, local_vars_configuration=None):  # noqa: E501
        """JobSuspensionStateDtoAllOf - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._job_definition_id = None
        self._process_definition_id = None
        self._process_instance_id = None
        self._process_definition_key = None
        self._process_definition_tenant_id = None
        self._process_definition_without_tenant_id = None
        self.discriminator = None

        self.job_definition_id = job_definition_id
        self.process_definition_id = process_definition_id
        self.process_instance_id = process_instance_id
        self.process_definition_key = process_definition_key
        self.process_definition_tenant_id = process_definition_tenant_id
        self.process_definition_without_tenant_id = process_definition_without_tenant_id

    @property
    def job_definition_id(self):
        """Gets the job_definition_id of this JobSuspensionStateDtoAllOf.  # noqa: E501

        The job definition id of the jobs to activate or suspend.  # noqa: E501

        :return: The job_definition_id of this JobSuspensionStateDtoAllOf.  # noqa: E501
        :rtype: str
        """
        return self._job_definition_id

    @job_definition_id.setter
    def job_definition_id(self, job_definition_id):
        """Sets the job_definition_id of this JobSuspensionStateDtoAllOf.

        The job definition id of the jobs to activate or suspend.  # noqa: E501

        :param job_definition_id: The job_definition_id of this JobSuspensionStateDtoAllOf.  # noqa: E501
        :type: str
        """

        self._job_definition_id = job_definition_id

    @property
    def process_definition_id(self):
        """Gets the process_definition_id of this JobSuspensionStateDtoAllOf.  # noqa: E501

        The process definition id of the jobs to activate or suspend.  # noqa: E501

        :return: The process_definition_id of this JobSuspensionStateDtoAllOf.  # noqa: E501
        :rtype: str
        """
        return self._process_definition_id

    @process_definition_id.setter
    def process_definition_id(self, process_definition_id):
        """Sets the process_definition_id of this JobSuspensionStateDtoAllOf.

        The process definition id of the jobs to activate or suspend.  # noqa: E501

        :param process_definition_id: The process_definition_id of this JobSuspensionStateDtoAllOf.  # noqa: E501
        :type: str
        """

        self._process_definition_id = process_definition_id

    @property
    def process_instance_id(self):
        """Gets the process_instance_id of this JobSuspensionStateDtoAllOf.  # noqa: E501

        The process instance id of the jobs to activate or suspend.  # noqa: E501

        :return: The process_instance_id of this JobSuspensionStateDtoAllOf.  # noqa: E501
        :rtype: str
        """
        return self._process_instance_id

    @process_instance_id.setter
    def process_instance_id(self, process_instance_id):
        """Sets the process_instance_id of this JobSuspensionStateDtoAllOf.

        The process instance id of the jobs to activate or suspend.  # noqa: E501

        :param process_instance_id: The process_instance_id of this JobSuspensionStateDtoAllOf.  # noqa: E501
        :type: str
        """

        self._process_instance_id = process_instance_id

    @property
    def process_definition_key(self):
        """Gets the process_definition_key of this JobSuspensionStateDtoAllOf.  # noqa: E501

        The process definition key of the jobs to activate or suspend.  # noqa: E501

        :return: The process_definition_key of this JobSuspensionStateDtoAllOf.  # noqa: E501
        :rtype: str
        """
        return self._process_definition_key

    @process_definition_key.setter
    def process_definition_key(self, process_definition_key):
        """Sets the process_definition_key of this JobSuspensionStateDtoAllOf.

        The process definition key of the jobs to activate or suspend.  # noqa: E501

        :param process_definition_key: The process_definition_key of this JobSuspensionStateDtoAllOf.  # noqa: E501
        :type: str
        """

        self._process_definition_key = process_definition_key

    @property
    def process_definition_tenant_id(self):
        """Gets the process_definition_tenant_id of this JobSuspensionStateDtoAllOf.  # noqa: E501

        Only activate or suspend jobs of a process definition which belongs to a tenant with the given id. Works only when selecting with `processDefinitionKey`.  # noqa: E501

        :return: The process_definition_tenant_id of this JobSuspensionStateDtoAllOf.  # noqa: E501
        :rtype: str
        """
        return self._process_definition_tenant_id

    @process_definition_tenant_id.setter
    def process_definition_tenant_id(self, process_definition_tenant_id):
        """Sets the process_definition_tenant_id of this JobSuspensionStateDtoAllOf.

        Only activate or suspend jobs of a process definition which belongs to a tenant with the given id. Works only when selecting with `processDefinitionKey`.  # noqa: E501

        :param process_definition_tenant_id: The process_definition_tenant_id of this JobSuspensionStateDtoAllOf.  # noqa: E501
        :type: str
        """

        self._process_definition_tenant_id = process_definition_tenant_id

    @property
    def process_definition_without_tenant_id(self):
        """Gets the process_definition_without_tenant_id of this JobSuspensionStateDtoAllOf.  # noqa: E501

        Only activate or suspend jobs of a process definition which belongs to no tenant. Value may only be `true`, as `false` is the default behavior. Works only when selecting with `processDefinitionKey`.  # noqa: E501

        :return: The process_definition_without_tenant_id of this JobSuspensionStateDtoAllOf.  # noqa: E501
        :rtype: bool
        """
        return self._process_definition_without_tenant_id

    @process_definition_without_tenant_id.setter
    def process_definition_without_tenant_id(self, process_definition_without_tenant_id):
        """Sets the process_definition_without_tenant_id of this JobSuspensionStateDtoAllOf.

        Only activate or suspend jobs of a process definition which belongs to no tenant. Value may only be `true`, as `false` is the default behavior. Works only when selecting with `processDefinitionKey`.  # noqa: E501

        :param process_definition_without_tenant_id: The process_definition_without_tenant_id of this JobSuspensionStateDtoAllOf.  # noqa: E501
        :type: bool
        """

        self._process_definition_without_tenant_id = process_definition_without_tenant_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobSuspensionStateDtoAllOf):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, JobSuspensionStateDtoAllOf):
            return True

        return self.to_dict() != other.to_dict()
