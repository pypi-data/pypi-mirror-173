[tool.poetry]
name = "pygopher-interfaces"
version = "0.1.2"
description = "Go-style interfaces for Python"
authors = ["Mark Rogaski <mrogaski@pobox.com>"]
license = "MIT"
readme = "README.rst"
repository = "https://github.com/mrogaski/pygopher-interfaces"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Typing :: Typed"
]
packages = [
    { include = "pygopher", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
importlib-metadata = { version = "*" }
Sphinx = { version = "*", optional = true }
sphinx-rtd-theme = { version = "*", optional = true }

[tool.poetry.extras]
docs = ["sphinx", "sphinx-rtd-theme"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pre-commit = ">=2.9.3"
black = "*"
isort = "*"
pylint = "*"
mypy = "*"
flake8 = "*"
flake8-cognitive-complexity = "*"
pytest-cov = "*"
coverage = { extras = ["toml"], version = "*" }

[tool.coverage.run]
branch = true
omit = []

[tool.coverage.report]
show_missing = true
ignore_errors = true
exclude_lines = ["pragma: no cover"]

[tool.black]
line-length = 120
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
known_first_party = "go_interfaces"
line_length = 120
multi_line_output = 3
use_parentheses = true
include_trailing_comma = true
ensure_newline_before_comments = true
force_grid_wrap = 0
[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
pythonpath = "src"
testpaths = "tests"
python_files = "test_*.py"
log_cli = false
log_level = "DEBUG"
