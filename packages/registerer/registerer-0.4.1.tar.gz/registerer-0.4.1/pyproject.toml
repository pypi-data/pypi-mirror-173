[tool.poetry]
name = "registerer"
version = "0.4.1"
description = "Everything you need to implement maintainable and easy to use registry patterns in your project."
authors = ["Danial Keimasi <danialkeimasi@gmail.com>"]
license = "MIT"
homepage = "https://github.com/danialkeimasi/python-registerer"
readme = "README.md"
classifiers = [
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/danialkeimasi/python-registerer/issues"

[tool.poetry.dependencies]
python = "^3.7"

[tool.poetry.dev-dependencies]
lazydocs = "^0.4.8"
coverage = {extras = ["toml"], version = "^6.4.4"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
omit = [
    "tests*"
]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",

    # Don't complain if tests don't hit defensive assertion code:
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc.)?abstractmethod",
]
ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"
