import numpy as np
import pandas as pd
from solas_disparity import const as const
from solas_disparity.conditioning import condition as condition
from solas_disparity.types import StatSig as StatSig, StatSigHypothesis as StatSigHypothesis, StatSigRegressionType as StatSigRegressionType, StatSigTest as StatSigTest
from solas_disparity.utils import pgrg_ordered as pgrg_ordered
from solas_disparity.validation import validation as validation
from typing import List, Optional, Union

def fishers_or_chi_squared_test(group_data: pd.DataFrame, protected_groups: List[str], reference_groups: List[str], group_categories: List[str], outcome: Union[pd.Series, np.ndarray, pd.DataFrame], sample_weight: Optional[Union[pd.Series, np.ndarray, pd.DataFrame]] = ..., max_for_fishers: int = ..., alternative_hypothesis: Union[str, StatSigHypothesis] = ...) -> StatSig: ...
def fishers_exact(group_data: pd.DataFrame, protected_groups: List[str], reference_groups: List[str], group_categories: List[str], outcome: Union[pd.Series, np.ndarray, pd.DataFrame], sample_weight: Optional[Union[pd.Series, np.ndarray, pd.DataFrame]] = ..., alternative_hypothesis: Union[str, StatSigHypothesis] = ...) -> StatSig: ...
def chi_squared_test(group_data: pd.DataFrame, protected_groups: List[str], reference_groups: List[str], group_categories: List[str], outcome: Union[pd.Series, np.ndarray, pd.DataFrame], sample_weight: Optional[Union[pd.Series, np.ndarray, pd.DataFrame]] = ...) -> StatSig: ...
def two_sample_t_test(group_data: pd.DataFrame, protected_groups: List[str], reference_groups: List[str], group_categories: List[str], outcome: Union[pd.Series, np.ndarray, pd.DataFrame], sample_weight: Optional[Union[pd.Series, np.ndarray, pd.DataFrame]] = ...) -> StatSig: ...
def weighted_regression(group_data: pd.DataFrame, protected_groups: List[str], reference_groups: List[str], group_categories: List[str], outcome: Union[pd.Series, np.ndarray, pd.DataFrame], regression_type: Union[str, StatSigRegressionType] = ..., sample_weight: Optional[Union[pd.Series, np.ndarray, pd.DataFrame]] = ...) -> StatSig: ...
