Metadata-Version: 2.1
Name: cloudnetpy_qc
Version: 1.2.0
Summary: Quality control routines for CloudnetPy products
Home-page: https://github.com/actris-cloudnet/cloudnetpy-qc
Author: Finnish Meteorological Institute
Author-email: actris-cloudnet@fmi.fi
License: MIT License
Description: # CloudnetPy-QC
        
        ![](https://github.com/actris-cloudnet/cloudnetpy-qc/workflows/CloudnetPy-QC%20CI/badge.svg)
        
        Software for evaluating quality of [ACTRIS-Cloudnet](https://cloudnet.fmi.fi) data products.
        
        Installation
        ------------
        ```shell
        $ pip3 install cloudnetpy-qc
        ```
        
        Usage
        -----
        ```python
        import json
        from pathlib import Path
        from cloudnetpy_qc import quality
        report = quality.run_tests(Path('cloudnet-file.nc'))
        json_object = json.dumps(report, indent=2)
        print(json_object)
        ```
        
        ## Format of the report
        * `timestamp`: UTC timestamp of the test
        * `qcVersion`: `cloudnetpy-qc` version
        * `tests`: `Test[]`
        
        ### `Test`
        * `testId`: Unique name of the test
        * `description`: Free-form description of the test
        * `exceptions`: `Exception[]`
        
        ### `Exception`
        * `message`: Free-form message about the exception
        * `result`: `"error"` or `"warning"`
        
        
        ### Example:
        
        ```json
        {
          "timestamp": "2022-10-13T07:00:26.906815Z",
          "qcVersion": "1.1.2",
          "tests": [
            {
              "testId": "TestUnits",
              "description": "Test that unit attribute of variable matches expected value",
              "exceptions": []
            },
            {
              "testId": "TestInstrumentPid",
              "description": "Test that valid instrument PID exists",
              "exceptions": [
                {
                  "message": "Instrument PID is missing.",
                  "result": "warning"
                }
              ]
            },
            {
              "testId": "TestTimeVector",
              "description": "Test that time vector is continuous",
              "exceptions": []
            },
            {
              "testId": "TestVariableNames",
              "description": "Find missing variables",
              "exceptions": []
            },
            {
              "testId": "TestCFConvention",
              "description": "Test that file passes CF convention",
              "exceptions": []
            }
          ]
        }
        ```
        
        ## License
        MIT
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3.8
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Provides-Extra: test
