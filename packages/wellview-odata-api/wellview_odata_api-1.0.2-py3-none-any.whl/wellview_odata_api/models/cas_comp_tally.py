# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CasCompTally(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cas_comp': 'AnyOfCasCompTallyCasComp',
        'centralized': 'int',
        'centralizersdes': 'str',
        'centralizersno': 'int',
        'extjewelry': 'str',
        'heatno': 'OneOfCasCompTallyHeatno',
        'idrec': 'str',
        'idrecparent': 'str',
        'idwell': 'str',
        'jointrun': 'int',
        'length': 'OneOfCasCompTallyLength',
        'refid': 'str',
        'refno': 'int',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'sysseq': 'int',
        'systag': 'str'
    }

    attribute_map = {
        'cas_comp': 'casComp',
        'centralized': 'centralized',
        'centralizersdes': 'centralizersdes',
        'centralizersno': 'centralizersno',
        'extjewelry': 'extjewelry',
        'heatno': 'heatno',
        'idrec': 'idrec',
        'idrecparent': 'idrecparent',
        'idwell': 'idwell',
        'jointrun': 'jointrun',
        'length': 'length',
        'refid': 'refid',
        'refno': 'refno',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'sysseq': 'sysseq',
        'systag': 'systag'
    }

    def __init__(self, cas_comp=None, centralized=None, centralizersdes=None, centralizersno=None, extjewelry=None, heatno=None, idrec=None, idrecparent=None, idwell=None, jointrun=None, length=None, refid=None, refno=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, sysseq=None, systag=None):  # noqa: E501
        """CasCompTally - a model defined in Swagger"""  # noqa: E501
        self._cas_comp = None
        self._centralized = None
        self._centralizersdes = None
        self._centralizersno = None
        self._extjewelry = None
        self._heatno = None
        self._idrec = None
        self._idrecparent = None
        self._idwell = None
        self._jointrun = None
        self._length = None
        self._refid = None
        self._refno = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._sysseq = None
        self._systag = None
        self.discriminator = None
        if cas_comp is not None:
            self.cas_comp = cas_comp
        if centralized is not None:
            self.centralized = centralized
        if centralizersdes is not None:
            self.centralizersdes = centralizersdes
        if centralizersno is not None:
            self.centralizersno = centralizersno
        if extjewelry is not None:
            self.extjewelry = extjewelry
        if heatno is not None:
            self.heatno = heatno
        if idrec is not None:
            self.idrec = idrec
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idwell is not None:
            self.idwell = idwell
        if jointrun is not None:
            self.jointrun = jointrun
        if length is not None:
            self.length = length
        if refid is not None:
            self.refid = refid
        if refno is not None:
            self.refno = refno
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if sysseq is not None:
            self.sysseq = sysseq
        if systag is not None:
            self.systag = systag

    @property
    def cas_comp(self):
        """Gets the cas_comp of this CasCompTally.  # noqa: E501


        :return: The cas_comp of this CasCompTally.  # noqa: E501
        :rtype: AnyOfCasCompTallyCasComp
        """
        return self._cas_comp

    @cas_comp.setter
    def cas_comp(self, cas_comp):
        """Sets the cas_comp of this CasCompTally.


        :param cas_comp: The cas_comp of this CasCompTally.  # noqa: E501
        :type: AnyOfCasCompTallyCasComp
        """

        self._cas_comp = cas_comp

    @property
    def centralized(self):
        """Gets the centralized of this CasCompTally.  # noqa: E501


        :return: The centralized of this CasCompTally.  # noqa: E501
        :rtype: int
        """
        return self._centralized

    @centralized.setter
    def centralized(self, centralized):
        """Sets the centralized of this CasCompTally.


        :param centralized: The centralized of this CasCompTally.  # noqa: E501
        :type: int
        """

        self._centralized = centralized

    @property
    def centralizersdes(self):
        """Gets the centralizersdes of this CasCompTally.  # noqa: E501


        :return: The centralizersdes of this CasCompTally.  # noqa: E501
        :rtype: str
        """
        return self._centralizersdes

    @centralizersdes.setter
    def centralizersdes(self, centralizersdes):
        """Sets the centralizersdes of this CasCompTally.


        :param centralizersdes: The centralizersdes of this CasCompTally.  # noqa: E501
        :type: str
        """

        self._centralizersdes = centralizersdes

    @property
    def centralizersno(self):
        """Gets the centralizersno of this CasCompTally.  # noqa: E501


        :return: The centralizersno of this CasCompTally.  # noqa: E501
        :rtype: int
        """
        return self._centralizersno

    @centralizersno.setter
    def centralizersno(self, centralizersno):
        """Sets the centralizersno of this CasCompTally.


        :param centralizersno: The centralizersno of this CasCompTally.  # noqa: E501
        :type: int
        """

        self._centralizersno = centralizersno

    @property
    def extjewelry(self):
        """Gets the extjewelry of this CasCompTally.  # noqa: E501


        :return: The extjewelry of this CasCompTally.  # noqa: E501
        :rtype: str
        """
        return self._extjewelry

    @extjewelry.setter
    def extjewelry(self, extjewelry):
        """Sets the extjewelry of this CasCompTally.


        :param extjewelry: The extjewelry of this CasCompTally.  # noqa: E501
        :type: str
        """

        self._extjewelry = extjewelry

    @property
    def heatno(self):
        """Gets the heatno of this CasCompTally.  # noqa: E501


        :return: The heatno of this CasCompTally.  # noqa: E501
        :rtype: OneOfCasCompTallyHeatno
        """
        return self._heatno

    @heatno.setter
    def heatno(self, heatno):
        """Sets the heatno of this CasCompTally.


        :param heatno: The heatno of this CasCompTally.  # noqa: E501
        :type: OneOfCasCompTallyHeatno
        """

        self._heatno = heatno

    @property
    def idrec(self):
        """Gets the idrec of this CasCompTally.  # noqa: E501


        :return: The idrec of this CasCompTally.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this CasCompTally.


        :param idrec: The idrec of this CasCompTally.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecparent(self):
        """Gets the idrecparent of this CasCompTally.  # noqa: E501


        :return: The idrecparent of this CasCompTally.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this CasCompTally.


        :param idrecparent: The idrecparent of this CasCompTally.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idwell(self):
        """Gets the idwell of this CasCompTally.  # noqa: E501


        :return: The idwell of this CasCompTally.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this CasCompTally.


        :param idwell: The idwell of this CasCompTally.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def jointrun(self):
        """Gets the jointrun of this CasCompTally.  # noqa: E501


        :return: The jointrun of this CasCompTally.  # noqa: E501
        :rtype: int
        """
        return self._jointrun

    @jointrun.setter
    def jointrun(self, jointrun):
        """Sets the jointrun of this CasCompTally.


        :param jointrun: The jointrun of this CasCompTally.  # noqa: E501
        :type: int
        """

        self._jointrun = jointrun

    @property
    def length(self):
        """Gets the length of this CasCompTally.  # noqa: E501


        :return: The length of this CasCompTally.  # noqa: E501
        :rtype: OneOfCasCompTallyLength
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this CasCompTally.


        :param length: The length of this CasCompTally.  # noqa: E501
        :type: OneOfCasCompTallyLength
        """

        self._length = length

    @property
    def refid(self):
        """Gets the refid of this CasCompTally.  # noqa: E501


        :return: The refid of this CasCompTally.  # noqa: E501
        :rtype: str
        """
        return self._refid

    @refid.setter
    def refid(self, refid):
        """Sets the refid of this CasCompTally.


        :param refid: The refid of this CasCompTally.  # noqa: E501
        :type: str
        """

        self._refid = refid

    @property
    def refno(self):
        """Gets the refno of this CasCompTally.  # noqa: E501


        :return: The refno of this CasCompTally.  # noqa: E501
        :rtype: int
        """
        return self._refno

    @refno.setter
    def refno(self, refno):
        """Sets the refno of this CasCompTally.


        :param refno: The refno of this CasCompTally.  # noqa: E501
        :type: int
        """

        self._refno = refno

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this CasCompTally.  # noqa: E501


        :return: The syscreatedate of this CasCompTally.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this CasCompTally.


        :param syscreatedate: The syscreatedate of this CasCompTally.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this CasCompTally.  # noqa: E501


        :return: The syscreateuser of this CasCompTally.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this CasCompTally.


        :param syscreateuser: The syscreateuser of this CasCompTally.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this CasCompTally.  # noqa: E501


        :return: The syslockchildren of this CasCompTally.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this CasCompTally.


        :param syslockchildren: The syslockchildren of this CasCompTally.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this CasCompTally.  # noqa: E501


        :return: The syslockchildrenui of this CasCompTally.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this CasCompTally.


        :param syslockchildrenui: The syslockchildrenui of this CasCompTally.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this CasCompTally.  # noqa: E501


        :return: The syslockdate of this CasCompTally.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this CasCompTally.


        :param syslockdate: The syslockdate of this CasCompTally.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this CasCompTally.  # noqa: E501


        :return: The syslockme of this CasCompTally.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this CasCompTally.


        :param syslockme: The syslockme of this CasCompTally.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this CasCompTally.  # noqa: E501


        :return: The syslockmeui of this CasCompTally.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this CasCompTally.


        :param syslockmeui: The syslockmeui of this CasCompTally.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this CasCompTally.  # noqa: E501


        :return: The sysmoddate of this CasCompTally.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this CasCompTally.


        :param sysmoddate: The sysmoddate of this CasCompTally.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this CasCompTally.  # noqa: E501


        :return: The sysmoduser of this CasCompTally.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this CasCompTally.


        :param sysmoduser: The sysmoduser of this CasCompTally.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def sysseq(self):
        """Gets the sysseq of this CasCompTally.  # noqa: E501


        :return: The sysseq of this CasCompTally.  # noqa: E501
        :rtype: int
        """
        return self._sysseq

    @sysseq.setter
    def sysseq(self, sysseq):
        """Sets the sysseq of this CasCompTally.


        :param sysseq: The sysseq of this CasCompTally.  # noqa: E501
        :type: int
        """

        self._sysseq = sysseq

    @property
    def systag(self):
        """Gets the systag of this CasCompTally.  # noqa: E501


        :return: The systag of this CasCompTally.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this CasCompTally.


        :param systag: The systag of this CasCompTally.  # noqa: E501
        :type: str
        """

        self._systag = systag

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CasCompTally, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CasCompTally):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
