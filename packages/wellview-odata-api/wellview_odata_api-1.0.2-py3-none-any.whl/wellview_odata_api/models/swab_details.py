# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SwabDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'bsw': 'OneOfSwabDetailsBsw',
        'com': 'str',
        'density': 'OneOfSwabDetailsDensity',
        'depthfluidlevel': 'OneOfSwabDetailsDepthfluidlevel',
        'depthpull': 'OneOfSwabDetailsDepthpull',
        'dttm': 'datetime',
        'h2s': 'OneOfSwabDetailsH2s',
        'idrec': 'str',
        'idrecparent': 'str',
        'idwell': 'str',
        'ph': 'OneOfSwabDetailsPh',
        'prescas': 'OneOfSwabDetailsPrescas',
        'prestub': 'OneOfSwabDetailsPrestub',
        'rategas': 'OneOfSwabDetailsRategas',
        'salinity': 'OneOfSwabDetailsSalinity',
        'sandcut': 'OneOfSwabDetailsSandcut',
        'swab': 'AnyOfSwabDetailsSwab',
        'swabno': 'int',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'systag': 'str',
        'tankgauge': 'OneOfSwabDetailsTankgauge',
        'tempwh': 'OneOfSwabDetailsTempwh',
        'tmswab': 'OneOfSwabDetailsTmswab',
        'volfluidrec': 'OneOfSwabDetailsVolfluidrec',
        'volgas': 'OneOfSwabDetailsVolgas'
    }

    attribute_map = {
        'bsw': 'bsw',
        'com': 'com',
        'density': 'density',
        'depthfluidlevel': 'depthfluidlevel',
        'depthpull': 'depthpull',
        'dttm': 'dttm',
        'h2s': 'h2s',
        'idrec': 'idrec',
        'idrecparent': 'idrecparent',
        'idwell': 'idwell',
        'ph': 'ph',
        'prescas': 'prescas',
        'prestub': 'prestub',
        'rategas': 'rategas',
        'salinity': 'salinity',
        'sandcut': 'sandcut',
        'swab': 'swab',
        'swabno': 'swabno',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'systag': 'systag',
        'tankgauge': 'tankgauge',
        'tempwh': 'tempwh',
        'tmswab': 'tmswab',
        'volfluidrec': 'volfluidrec',
        'volgas': 'volgas'
    }

    def __init__(self, bsw=None, com=None, density=None, depthfluidlevel=None, depthpull=None, dttm=None, h2s=None, idrec=None, idrecparent=None, idwell=None, ph=None, prescas=None, prestub=None, rategas=None, salinity=None, sandcut=None, swab=None, swabno=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, systag=None, tankgauge=None, tempwh=None, tmswab=None, volfluidrec=None, volgas=None):  # noqa: E501
        """SwabDetails - a model defined in Swagger"""  # noqa: E501
        self._bsw = None
        self._com = None
        self._density = None
        self._depthfluidlevel = None
        self._depthpull = None
        self._dttm = None
        self._h2s = None
        self._idrec = None
        self._idrecparent = None
        self._idwell = None
        self._ph = None
        self._prescas = None
        self._prestub = None
        self._rategas = None
        self._salinity = None
        self._sandcut = None
        self._swab = None
        self._swabno = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._systag = None
        self._tankgauge = None
        self._tempwh = None
        self._tmswab = None
        self._volfluidrec = None
        self._volgas = None
        self.discriminator = None
        if bsw is not None:
            self.bsw = bsw
        if com is not None:
            self.com = com
        if density is not None:
            self.density = density
        if depthfluidlevel is not None:
            self.depthfluidlevel = depthfluidlevel
        if depthpull is not None:
            self.depthpull = depthpull
        if dttm is not None:
            self.dttm = dttm
        if h2s is not None:
            self.h2s = h2s
        if idrec is not None:
            self.idrec = idrec
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idwell is not None:
            self.idwell = idwell
        if ph is not None:
            self.ph = ph
        if prescas is not None:
            self.prescas = prescas
        if prestub is not None:
            self.prestub = prestub
        if rategas is not None:
            self.rategas = rategas
        if salinity is not None:
            self.salinity = salinity
        if sandcut is not None:
            self.sandcut = sandcut
        if swab is not None:
            self.swab = swab
        if swabno is not None:
            self.swabno = swabno
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if systag is not None:
            self.systag = systag
        if tankgauge is not None:
            self.tankgauge = tankgauge
        if tempwh is not None:
            self.tempwh = tempwh
        if tmswab is not None:
            self.tmswab = tmswab
        if volfluidrec is not None:
            self.volfluidrec = volfluidrec
        if volgas is not None:
            self.volgas = volgas

    @property
    def bsw(self):
        """Gets the bsw of this SwabDetails.  # noqa: E501


        :return: The bsw of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsBsw
        """
        return self._bsw

    @bsw.setter
    def bsw(self, bsw):
        """Sets the bsw of this SwabDetails.


        :param bsw: The bsw of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsBsw
        """

        self._bsw = bsw

    @property
    def com(self):
        """Gets the com of this SwabDetails.  # noqa: E501


        :return: The com of this SwabDetails.  # noqa: E501
        :rtype: str
        """
        return self._com

    @com.setter
    def com(self, com):
        """Sets the com of this SwabDetails.


        :param com: The com of this SwabDetails.  # noqa: E501
        :type: str
        """

        self._com = com

    @property
    def density(self):
        """Gets the density of this SwabDetails.  # noqa: E501


        :return: The density of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsDensity
        """
        return self._density

    @density.setter
    def density(self, density):
        """Sets the density of this SwabDetails.


        :param density: The density of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsDensity
        """

        self._density = density

    @property
    def depthfluidlevel(self):
        """Gets the depthfluidlevel of this SwabDetails.  # noqa: E501


        :return: The depthfluidlevel of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsDepthfluidlevel
        """
        return self._depthfluidlevel

    @depthfluidlevel.setter
    def depthfluidlevel(self, depthfluidlevel):
        """Sets the depthfluidlevel of this SwabDetails.


        :param depthfluidlevel: The depthfluidlevel of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsDepthfluidlevel
        """

        self._depthfluidlevel = depthfluidlevel

    @property
    def depthpull(self):
        """Gets the depthpull of this SwabDetails.  # noqa: E501


        :return: The depthpull of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsDepthpull
        """
        return self._depthpull

    @depthpull.setter
    def depthpull(self, depthpull):
        """Sets the depthpull of this SwabDetails.


        :param depthpull: The depthpull of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsDepthpull
        """

        self._depthpull = depthpull

    @property
    def dttm(self):
        """Gets the dttm of this SwabDetails.  # noqa: E501


        :return: The dttm of this SwabDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._dttm

    @dttm.setter
    def dttm(self, dttm):
        """Sets the dttm of this SwabDetails.


        :param dttm: The dttm of this SwabDetails.  # noqa: E501
        :type: datetime
        """

        self._dttm = dttm

    @property
    def h2s(self):
        """Gets the h2s of this SwabDetails.  # noqa: E501


        :return: The h2s of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsH2s
        """
        return self._h2s

    @h2s.setter
    def h2s(self, h2s):
        """Sets the h2s of this SwabDetails.


        :param h2s: The h2s of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsH2s
        """

        self._h2s = h2s

    @property
    def idrec(self):
        """Gets the idrec of this SwabDetails.  # noqa: E501


        :return: The idrec of this SwabDetails.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this SwabDetails.


        :param idrec: The idrec of this SwabDetails.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecparent(self):
        """Gets the idrecparent of this SwabDetails.  # noqa: E501


        :return: The idrecparent of this SwabDetails.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this SwabDetails.


        :param idrecparent: The idrecparent of this SwabDetails.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idwell(self):
        """Gets the idwell of this SwabDetails.  # noqa: E501


        :return: The idwell of this SwabDetails.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this SwabDetails.


        :param idwell: The idwell of this SwabDetails.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def ph(self):
        """Gets the ph of this SwabDetails.  # noqa: E501


        :return: The ph of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsPh
        """
        return self._ph

    @ph.setter
    def ph(self, ph):
        """Sets the ph of this SwabDetails.


        :param ph: The ph of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsPh
        """

        self._ph = ph

    @property
    def prescas(self):
        """Gets the prescas of this SwabDetails.  # noqa: E501


        :return: The prescas of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsPrescas
        """
        return self._prescas

    @prescas.setter
    def prescas(self, prescas):
        """Sets the prescas of this SwabDetails.


        :param prescas: The prescas of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsPrescas
        """

        self._prescas = prescas

    @property
    def prestub(self):
        """Gets the prestub of this SwabDetails.  # noqa: E501


        :return: The prestub of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsPrestub
        """
        return self._prestub

    @prestub.setter
    def prestub(self, prestub):
        """Sets the prestub of this SwabDetails.


        :param prestub: The prestub of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsPrestub
        """

        self._prestub = prestub

    @property
    def rategas(self):
        """Gets the rategas of this SwabDetails.  # noqa: E501


        :return: The rategas of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsRategas
        """
        return self._rategas

    @rategas.setter
    def rategas(self, rategas):
        """Sets the rategas of this SwabDetails.


        :param rategas: The rategas of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsRategas
        """

        self._rategas = rategas

    @property
    def salinity(self):
        """Gets the salinity of this SwabDetails.  # noqa: E501


        :return: The salinity of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsSalinity
        """
        return self._salinity

    @salinity.setter
    def salinity(self, salinity):
        """Sets the salinity of this SwabDetails.


        :param salinity: The salinity of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsSalinity
        """

        self._salinity = salinity

    @property
    def sandcut(self):
        """Gets the sandcut of this SwabDetails.  # noqa: E501


        :return: The sandcut of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsSandcut
        """
        return self._sandcut

    @sandcut.setter
    def sandcut(self, sandcut):
        """Sets the sandcut of this SwabDetails.


        :param sandcut: The sandcut of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsSandcut
        """

        self._sandcut = sandcut

    @property
    def swab(self):
        """Gets the swab of this SwabDetails.  # noqa: E501


        :return: The swab of this SwabDetails.  # noqa: E501
        :rtype: AnyOfSwabDetailsSwab
        """
        return self._swab

    @swab.setter
    def swab(self, swab):
        """Sets the swab of this SwabDetails.


        :param swab: The swab of this SwabDetails.  # noqa: E501
        :type: AnyOfSwabDetailsSwab
        """

        self._swab = swab

    @property
    def swabno(self):
        """Gets the swabno of this SwabDetails.  # noqa: E501


        :return: The swabno of this SwabDetails.  # noqa: E501
        :rtype: int
        """
        return self._swabno

    @swabno.setter
    def swabno(self, swabno):
        """Sets the swabno of this SwabDetails.


        :param swabno: The swabno of this SwabDetails.  # noqa: E501
        :type: int
        """

        self._swabno = swabno

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this SwabDetails.  # noqa: E501


        :return: The syscreatedate of this SwabDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this SwabDetails.


        :param syscreatedate: The syscreatedate of this SwabDetails.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this SwabDetails.  # noqa: E501


        :return: The syscreateuser of this SwabDetails.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this SwabDetails.


        :param syscreateuser: The syscreateuser of this SwabDetails.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this SwabDetails.  # noqa: E501


        :return: The syslockchildren of this SwabDetails.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this SwabDetails.


        :param syslockchildren: The syslockchildren of this SwabDetails.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this SwabDetails.  # noqa: E501


        :return: The syslockchildrenui of this SwabDetails.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this SwabDetails.


        :param syslockchildrenui: The syslockchildrenui of this SwabDetails.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this SwabDetails.  # noqa: E501


        :return: The syslockdate of this SwabDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this SwabDetails.


        :param syslockdate: The syslockdate of this SwabDetails.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this SwabDetails.  # noqa: E501


        :return: The syslockme of this SwabDetails.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this SwabDetails.


        :param syslockme: The syslockme of this SwabDetails.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this SwabDetails.  # noqa: E501


        :return: The syslockmeui of this SwabDetails.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this SwabDetails.


        :param syslockmeui: The syslockmeui of this SwabDetails.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this SwabDetails.  # noqa: E501


        :return: The sysmoddate of this SwabDetails.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this SwabDetails.


        :param sysmoddate: The sysmoddate of this SwabDetails.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this SwabDetails.  # noqa: E501


        :return: The sysmoduser of this SwabDetails.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this SwabDetails.


        :param sysmoduser: The sysmoduser of this SwabDetails.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def systag(self):
        """Gets the systag of this SwabDetails.  # noqa: E501


        :return: The systag of this SwabDetails.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this SwabDetails.


        :param systag: The systag of this SwabDetails.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def tankgauge(self):
        """Gets the tankgauge of this SwabDetails.  # noqa: E501


        :return: The tankgauge of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsTankgauge
        """
        return self._tankgauge

    @tankgauge.setter
    def tankgauge(self, tankgauge):
        """Sets the tankgauge of this SwabDetails.


        :param tankgauge: The tankgauge of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsTankgauge
        """

        self._tankgauge = tankgauge

    @property
    def tempwh(self):
        """Gets the tempwh of this SwabDetails.  # noqa: E501


        :return: The tempwh of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsTempwh
        """
        return self._tempwh

    @tempwh.setter
    def tempwh(self, tempwh):
        """Sets the tempwh of this SwabDetails.


        :param tempwh: The tempwh of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsTempwh
        """

        self._tempwh = tempwh

    @property
    def tmswab(self):
        """Gets the tmswab of this SwabDetails.  # noqa: E501


        :return: The tmswab of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsTmswab
        """
        return self._tmswab

    @tmswab.setter
    def tmswab(self, tmswab):
        """Sets the tmswab of this SwabDetails.


        :param tmswab: The tmswab of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsTmswab
        """

        self._tmswab = tmswab

    @property
    def volfluidrec(self):
        """Gets the volfluidrec of this SwabDetails.  # noqa: E501


        :return: The volfluidrec of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsVolfluidrec
        """
        return self._volfluidrec

    @volfluidrec.setter
    def volfluidrec(self, volfluidrec):
        """Sets the volfluidrec of this SwabDetails.


        :param volfluidrec: The volfluidrec of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsVolfluidrec
        """

        self._volfluidrec = volfluidrec

    @property
    def volgas(self):
        """Gets the volgas of this SwabDetails.  # noqa: E501


        :return: The volgas of this SwabDetails.  # noqa: E501
        :rtype: OneOfSwabDetailsVolgas
        """
        return self._volgas

    @volgas.setter
    def volgas(self, volgas):
        """Sets the volgas of this SwabDetails.


        :param volgas: The volgas of this SwabDetails.  # noqa: E501
        :type: OneOfSwabDetailsVolgas
        """

        self._volgas = volgas

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SwabDetails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SwabDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
