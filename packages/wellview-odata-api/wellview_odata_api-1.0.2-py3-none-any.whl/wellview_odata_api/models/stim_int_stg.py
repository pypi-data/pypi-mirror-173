# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class StimIntStg(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'com': 'str',
        'concbhavg': 'OneOfStimIntStgConcbhavg',
        'concbhend': 'OneOfStimIntStgConcbhend',
        'concbhmax': 'OneOfStimIntStgConcbhmax',
        'concbhmin': 'OneOfStimIntStgConcbhmin',
        'concbhstart': 'OneOfStimIntStgConcbhstart',
        'concsurfavg': 'OneOfStimIntStgConcsurfavg',
        'concsurfend': 'OneOfStimIntStgConcsurfend',
        'concsurfmax': 'OneOfStimIntStgConcsurfmax',
        'concsurfmin': 'OneOfStimIntStgConcsurfmin',
        'concsurfstart': 'OneOfStimIntStgConcsurfstart',
        'des': 'str',
        'dttmend': 'datetime',
        'dttmstart': 'datetime',
        'durpumptotal': 'OneOfStimIntStgDurpumptotal',
        'exclude': 'int',
        'foamco2quality': 'OneOfStimIntStgFoamco2quality',
        'foamn2quality': 'OneOfStimIntStgFoamn2quality',
        'frictionfactor': 'OneOfStimIntStgFrictionfactor',
        'gasdes': 'str',
        'idrec': 'str',
        'idrecfluid': 'str',
        'idrecfluidtk': 'str',
        'idrecparent': 'str',
        'idrecprop': 'str',
        'idrecproptk': 'str',
        'idwell': 'str',
        'massprop': 'OneOfStimIntStgMassprop',
        'masspropwh': 'OneOfStimIntStgMasspropwh',
        'presbhavg': 'OneOfStimIntStgPresbhavg',
        'presbhend': 'OneOfStimIntStgPresbhend',
        'presbhmax': 'OneOfStimIntStgPresbhmax',
        'presbhmin': 'OneOfStimIntStgPresbhmin',
        'presbhstart': 'OneOfStimIntStgPresbhstart',
        'prespumpingmax': 'OneOfStimIntStgPrespumpingmax',
        'pressurfavg': 'OneOfStimIntStgPressurfavg',
        'pressurfend': 'OneOfStimIntStgPressurfend',
        'pressurfmax': 'OneOfStimIntStgPressurfmax',
        'pressurfmin': 'OneOfStimIntStgPressurfmin',
        'pressurfstart': 'OneOfStimIntStgPressurfstart',
        'preszonemax': 'OneOfStimIntStgPreszonemax',
        'pumppoweravg': 'OneOfStimIntStgPumppoweravg',
        'ratecleanavg': 'OneOfStimIntStgRatecleanavg',
        'ratecleanend': 'OneOfStimIntStgRatecleanend',
        'ratecleanmax': 'OneOfStimIntStgRatecleanmax',
        'ratecleanmin': 'OneOfStimIntStgRatecleanmin',
        'ratecleanstart': 'OneOfStimIntStgRatecleanstart',
        'rateco2foamend': 'OneOfStimIntStgRateco2foamend',
        'rateco2foamstart': 'OneOfStimIntStgRateco2foamstart',
        'rateco2max': 'OneOfStimIntStgRateco2max',
        'rateco2min': 'OneOfStimIntStgRateco2min',
        'rateco2surfavg': 'OneOfStimIntStgRateco2surfavg',
        'rateco2surfend': 'OneOfStimIntStgRateco2surfend',
        'rateco2surfstart': 'OneOfStimIntStgRateco2surfstart',
        'raten2foamend': 'OneOfStimIntStgRaten2foamend',
        'raten2foamstart': 'OneOfStimIntStgRaten2foamstart',
        'raten2max': 'OneOfStimIntStgRaten2max',
        'raten2min': 'OneOfStimIntStgRaten2min',
        'raten2surfavg': 'OneOfStimIntStgRaten2surfavg',
        'raten2surfend': 'OneOfStimIntStgRaten2surfend',
        'raten2surfstart': 'OneOfStimIntStgRaten2surfstart',
        'ratepumpbhavg': 'OneOfStimIntStgRatepumpbhavg',
        'ratepumpbhend': 'OneOfStimIntStgRatepumpbhend',
        'ratepumpbhstart': 'OneOfStimIntStgRatepumpbhstart',
        'ratepumpsurfavg': 'OneOfStimIntStgRatepumpsurfavg',
        'ratepumpsurfend': 'OneOfStimIntStgRatepumpsurfend',
        'ratepumpsurfstart': 'OneOfStimIntStgRatepumpsurfstart',
        'rateslurryavg': 'OneOfStimIntStgRateslurryavg',
        'rateslurryend': 'OneOfStimIntStgRateslurryend',
        'rateslurrymax': 'OneOfStimIntStgRateslurrymax',
        'rateslurrymin': 'OneOfStimIntStgRateslurrymin',
        'rateslurrystart': 'OneOfStimIntStgRateslurrystart',
        'spacefactor': 'OneOfStimIntStgSpacefactor',
        'stagenum': 'int',
        'stagetyp1': 'str',
        'stagetyp2': 'str',
        'stim_int': 'AnyOfStimIntStgStimInt',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'systag': 'str',
        'temptreatavg': 'OneOfStimIntStgTemptreatavg',
        'usernum1': 'OneOfStimIntStgUsernum1',
        'usernum2': 'OneOfStimIntStgUsernum2',
        'usernum3': 'OneOfStimIntStgUsernum3',
        'usernum4': 'OneOfStimIntStgUsernum4',
        'usernum5': 'OneOfStimIntStgUsernum5',
        'usertxt1': 'str',
        'volclean': 'OneOfStimIntStgVolclean',
        'volco2': 'OneOfStimIntStgVolco2',
        'voln2': 'OneOfStimIntStgVoln2',
        'volrecovered': 'OneOfStimIntStgVolrecovered',
        'volslurry': 'OneOfStimIntStgVolslurry'
    }

    attribute_map = {
        'com': 'com',
        'concbhavg': 'concbhavg',
        'concbhend': 'concbhend',
        'concbhmax': 'concbhmax',
        'concbhmin': 'concbhmin',
        'concbhstart': 'concbhstart',
        'concsurfavg': 'concsurfavg',
        'concsurfend': 'concsurfend',
        'concsurfmax': 'concsurfmax',
        'concsurfmin': 'concsurfmin',
        'concsurfstart': 'concsurfstart',
        'des': 'des',
        'dttmend': 'dttmend',
        'dttmstart': 'dttmstart',
        'durpumptotal': 'durpumptotal',
        'exclude': 'exclude',
        'foamco2quality': 'foamco2quality',
        'foamn2quality': 'foamn2quality',
        'frictionfactor': 'frictionfactor',
        'gasdes': 'gasdes',
        'idrec': 'idrec',
        'idrecfluid': 'idrecfluid',
        'idrecfluidtk': 'idrecfluidtk',
        'idrecparent': 'idrecparent',
        'idrecprop': 'idrecprop',
        'idrecproptk': 'idrecproptk',
        'idwell': 'idwell',
        'massprop': 'massprop',
        'masspropwh': 'masspropwh',
        'presbhavg': 'presbhavg',
        'presbhend': 'presbhend',
        'presbhmax': 'presbhmax',
        'presbhmin': 'presbhmin',
        'presbhstart': 'presbhstart',
        'prespumpingmax': 'prespumpingmax',
        'pressurfavg': 'pressurfavg',
        'pressurfend': 'pressurfend',
        'pressurfmax': 'pressurfmax',
        'pressurfmin': 'pressurfmin',
        'pressurfstart': 'pressurfstart',
        'preszonemax': 'preszonemax',
        'pumppoweravg': 'pumppoweravg',
        'ratecleanavg': 'ratecleanavg',
        'ratecleanend': 'ratecleanend',
        'ratecleanmax': 'ratecleanmax',
        'ratecleanmin': 'ratecleanmin',
        'ratecleanstart': 'ratecleanstart',
        'rateco2foamend': 'rateco2foamend',
        'rateco2foamstart': 'rateco2foamstart',
        'rateco2max': 'rateco2max',
        'rateco2min': 'rateco2min',
        'rateco2surfavg': 'rateco2surfavg',
        'rateco2surfend': 'rateco2surfend',
        'rateco2surfstart': 'rateco2surfstart',
        'raten2foamend': 'raten2foamend',
        'raten2foamstart': 'raten2foamstart',
        'raten2max': 'raten2max',
        'raten2min': 'raten2min',
        'raten2surfavg': 'raten2surfavg',
        'raten2surfend': 'raten2surfend',
        'raten2surfstart': 'raten2surfstart',
        'ratepumpbhavg': 'ratepumpbhavg',
        'ratepumpbhend': 'ratepumpbhend',
        'ratepumpbhstart': 'ratepumpbhstart',
        'ratepumpsurfavg': 'ratepumpsurfavg',
        'ratepumpsurfend': 'ratepumpsurfend',
        'ratepumpsurfstart': 'ratepumpsurfstart',
        'rateslurryavg': 'rateslurryavg',
        'rateslurryend': 'rateslurryend',
        'rateslurrymax': 'rateslurrymax',
        'rateslurrymin': 'rateslurrymin',
        'rateslurrystart': 'rateslurrystart',
        'spacefactor': 'spacefactor',
        'stagenum': 'stagenum',
        'stagetyp1': 'stagetyp1',
        'stagetyp2': 'stagetyp2',
        'stim_int': 'stimInt',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'systag': 'systag',
        'temptreatavg': 'temptreatavg',
        'usernum1': 'usernum1',
        'usernum2': 'usernum2',
        'usernum3': 'usernum3',
        'usernum4': 'usernum4',
        'usernum5': 'usernum5',
        'usertxt1': 'usertxt1',
        'volclean': 'volclean',
        'volco2': 'volco2',
        'voln2': 'voln2',
        'volrecovered': 'volrecovered',
        'volslurry': 'volslurry'
    }

    def __init__(self, com=None, concbhavg=None, concbhend=None, concbhmax=None, concbhmin=None, concbhstart=None, concsurfavg=None, concsurfend=None, concsurfmax=None, concsurfmin=None, concsurfstart=None, des=None, dttmend=None, dttmstart=None, durpumptotal=None, exclude=None, foamco2quality=None, foamn2quality=None, frictionfactor=None, gasdes=None, idrec=None, idrecfluid=None, idrecfluidtk=None, idrecparent=None, idrecprop=None, idrecproptk=None, idwell=None, massprop=None, masspropwh=None, presbhavg=None, presbhend=None, presbhmax=None, presbhmin=None, presbhstart=None, prespumpingmax=None, pressurfavg=None, pressurfend=None, pressurfmax=None, pressurfmin=None, pressurfstart=None, preszonemax=None, pumppoweravg=None, ratecleanavg=None, ratecleanend=None, ratecleanmax=None, ratecleanmin=None, ratecleanstart=None, rateco2foamend=None, rateco2foamstart=None, rateco2max=None, rateco2min=None, rateco2surfavg=None, rateco2surfend=None, rateco2surfstart=None, raten2foamend=None, raten2foamstart=None, raten2max=None, raten2min=None, raten2surfavg=None, raten2surfend=None, raten2surfstart=None, ratepumpbhavg=None, ratepumpbhend=None, ratepumpbhstart=None, ratepumpsurfavg=None, ratepumpsurfend=None, ratepumpsurfstart=None, rateslurryavg=None, rateslurryend=None, rateslurrymax=None, rateslurrymin=None, rateslurrystart=None, spacefactor=None, stagenum=None, stagetyp1=None, stagetyp2=None, stim_int=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, systag=None, temptreatavg=None, usernum1=None, usernum2=None, usernum3=None, usernum4=None, usernum5=None, usertxt1=None, volclean=None, volco2=None, voln2=None, volrecovered=None, volslurry=None):  # noqa: E501
        """StimIntStg - a model defined in Swagger"""  # noqa: E501
        self._com = None
        self._concbhavg = None
        self._concbhend = None
        self._concbhmax = None
        self._concbhmin = None
        self._concbhstart = None
        self._concsurfavg = None
        self._concsurfend = None
        self._concsurfmax = None
        self._concsurfmin = None
        self._concsurfstart = None
        self._des = None
        self._dttmend = None
        self._dttmstart = None
        self._durpumptotal = None
        self._exclude = None
        self._foamco2quality = None
        self._foamn2quality = None
        self._frictionfactor = None
        self._gasdes = None
        self._idrec = None
        self._idrecfluid = None
        self._idrecfluidtk = None
        self._idrecparent = None
        self._idrecprop = None
        self._idrecproptk = None
        self._idwell = None
        self._massprop = None
        self._masspropwh = None
        self._presbhavg = None
        self._presbhend = None
        self._presbhmax = None
        self._presbhmin = None
        self._presbhstart = None
        self._prespumpingmax = None
        self._pressurfavg = None
        self._pressurfend = None
        self._pressurfmax = None
        self._pressurfmin = None
        self._pressurfstart = None
        self._preszonemax = None
        self._pumppoweravg = None
        self._ratecleanavg = None
        self._ratecleanend = None
        self._ratecleanmax = None
        self._ratecleanmin = None
        self._ratecleanstart = None
        self._rateco2foamend = None
        self._rateco2foamstart = None
        self._rateco2max = None
        self._rateco2min = None
        self._rateco2surfavg = None
        self._rateco2surfend = None
        self._rateco2surfstart = None
        self._raten2foamend = None
        self._raten2foamstart = None
        self._raten2max = None
        self._raten2min = None
        self._raten2surfavg = None
        self._raten2surfend = None
        self._raten2surfstart = None
        self._ratepumpbhavg = None
        self._ratepumpbhend = None
        self._ratepumpbhstart = None
        self._ratepumpsurfavg = None
        self._ratepumpsurfend = None
        self._ratepumpsurfstart = None
        self._rateslurryavg = None
        self._rateslurryend = None
        self._rateslurrymax = None
        self._rateslurrymin = None
        self._rateslurrystart = None
        self._spacefactor = None
        self._stagenum = None
        self._stagetyp1 = None
        self._stagetyp2 = None
        self._stim_int = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._systag = None
        self._temptreatavg = None
        self._usernum1 = None
        self._usernum2 = None
        self._usernum3 = None
        self._usernum4 = None
        self._usernum5 = None
        self._usertxt1 = None
        self._volclean = None
        self._volco2 = None
        self._voln2 = None
        self._volrecovered = None
        self._volslurry = None
        self.discriminator = None
        if com is not None:
            self.com = com
        if concbhavg is not None:
            self.concbhavg = concbhavg
        if concbhend is not None:
            self.concbhend = concbhend
        if concbhmax is not None:
            self.concbhmax = concbhmax
        if concbhmin is not None:
            self.concbhmin = concbhmin
        if concbhstart is not None:
            self.concbhstart = concbhstart
        if concsurfavg is not None:
            self.concsurfavg = concsurfavg
        if concsurfend is not None:
            self.concsurfend = concsurfend
        if concsurfmax is not None:
            self.concsurfmax = concsurfmax
        if concsurfmin is not None:
            self.concsurfmin = concsurfmin
        if concsurfstart is not None:
            self.concsurfstart = concsurfstart
        if des is not None:
            self.des = des
        if dttmend is not None:
            self.dttmend = dttmend
        if dttmstart is not None:
            self.dttmstart = dttmstart
        if durpumptotal is not None:
            self.durpumptotal = durpumptotal
        if exclude is not None:
            self.exclude = exclude
        if foamco2quality is not None:
            self.foamco2quality = foamco2quality
        if foamn2quality is not None:
            self.foamn2quality = foamn2quality
        if frictionfactor is not None:
            self.frictionfactor = frictionfactor
        if gasdes is not None:
            self.gasdes = gasdes
        if idrec is not None:
            self.idrec = idrec
        if idrecfluid is not None:
            self.idrecfluid = idrecfluid
        if idrecfluidtk is not None:
            self.idrecfluidtk = idrecfluidtk
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idrecprop is not None:
            self.idrecprop = idrecprop
        if idrecproptk is not None:
            self.idrecproptk = idrecproptk
        if idwell is not None:
            self.idwell = idwell
        if massprop is not None:
            self.massprop = massprop
        if masspropwh is not None:
            self.masspropwh = masspropwh
        if presbhavg is not None:
            self.presbhavg = presbhavg
        if presbhend is not None:
            self.presbhend = presbhend
        if presbhmax is not None:
            self.presbhmax = presbhmax
        if presbhmin is not None:
            self.presbhmin = presbhmin
        if presbhstart is not None:
            self.presbhstart = presbhstart
        if prespumpingmax is not None:
            self.prespumpingmax = prespumpingmax
        if pressurfavg is not None:
            self.pressurfavg = pressurfavg
        if pressurfend is not None:
            self.pressurfend = pressurfend
        if pressurfmax is not None:
            self.pressurfmax = pressurfmax
        if pressurfmin is not None:
            self.pressurfmin = pressurfmin
        if pressurfstart is not None:
            self.pressurfstart = pressurfstart
        if preszonemax is not None:
            self.preszonemax = preszonemax
        if pumppoweravg is not None:
            self.pumppoweravg = pumppoweravg
        if ratecleanavg is not None:
            self.ratecleanavg = ratecleanavg
        if ratecleanend is not None:
            self.ratecleanend = ratecleanend
        if ratecleanmax is not None:
            self.ratecleanmax = ratecleanmax
        if ratecleanmin is not None:
            self.ratecleanmin = ratecleanmin
        if ratecleanstart is not None:
            self.ratecleanstart = ratecleanstart
        if rateco2foamend is not None:
            self.rateco2foamend = rateco2foamend
        if rateco2foamstart is not None:
            self.rateco2foamstart = rateco2foamstart
        if rateco2max is not None:
            self.rateco2max = rateco2max
        if rateco2min is not None:
            self.rateco2min = rateco2min
        if rateco2surfavg is not None:
            self.rateco2surfavg = rateco2surfavg
        if rateco2surfend is not None:
            self.rateco2surfend = rateco2surfend
        if rateco2surfstart is not None:
            self.rateco2surfstart = rateco2surfstart
        if raten2foamend is not None:
            self.raten2foamend = raten2foamend
        if raten2foamstart is not None:
            self.raten2foamstart = raten2foamstart
        if raten2max is not None:
            self.raten2max = raten2max
        if raten2min is not None:
            self.raten2min = raten2min
        if raten2surfavg is not None:
            self.raten2surfavg = raten2surfavg
        if raten2surfend is not None:
            self.raten2surfend = raten2surfend
        if raten2surfstart is not None:
            self.raten2surfstart = raten2surfstart
        if ratepumpbhavg is not None:
            self.ratepumpbhavg = ratepumpbhavg
        if ratepumpbhend is not None:
            self.ratepumpbhend = ratepumpbhend
        if ratepumpbhstart is not None:
            self.ratepumpbhstart = ratepumpbhstart
        if ratepumpsurfavg is not None:
            self.ratepumpsurfavg = ratepumpsurfavg
        if ratepumpsurfend is not None:
            self.ratepumpsurfend = ratepumpsurfend
        if ratepumpsurfstart is not None:
            self.ratepumpsurfstart = ratepumpsurfstart
        if rateslurryavg is not None:
            self.rateslurryavg = rateslurryavg
        if rateslurryend is not None:
            self.rateslurryend = rateslurryend
        if rateslurrymax is not None:
            self.rateslurrymax = rateslurrymax
        if rateslurrymin is not None:
            self.rateslurrymin = rateslurrymin
        if rateslurrystart is not None:
            self.rateslurrystart = rateslurrystart
        if spacefactor is not None:
            self.spacefactor = spacefactor
        if stagenum is not None:
            self.stagenum = stagenum
        if stagetyp1 is not None:
            self.stagetyp1 = stagetyp1
        if stagetyp2 is not None:
            self.stagetyp2 = stagetyp2
        if stim_int is not None:
            self.stim_int = stim_int
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if systag is not None:
            self.systag = systag
        if temptreatavg is not None:
            self.temptreatavg = temptreatavg
        if usernum1 is not None:
            self.usernum1 = usernum1
        if usernum2 is not None:
            self.usernum2 = usernum2
        if usernum3 is not None:
            self.usernum3 = usernum3
        if usernum4 is not None:
            self.usernum4 = usernum4
        if usernum5 is not None:
            self.usernum5 = usernum5
        if usertxt1 is not None:
            self.usertxt1 = usertxt1
        if volclean is not None:
            self.volclean = volclean
        if volco2 is not None:
            self.volco2 = volco2
        if voln2 is not None:
            self.voln2 = voln2
        if volrecovered is not None:
            self.volrecovered = volrecovered
        if volslurry is not None:
            self.volslurry = volslurry

    @property
    def com(self):
        """Gets the com of this StimIntStg.  # noqa: E501


        :return: The com of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._com

    @com.setter
    def com(self, com):
        """Sets the com of this StimIntStg.


        :param com: The com of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._com = com

    @property
    def concbhavg(self):
        """Gets the concbhavg of this StimIntStg.  # noqa: E501


        :return: The concbhavg of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgConcbhavg
        """
        return self._concbhavg

    @concbhavg.setter
    def concbhavg(self, concbhavg):
        """Sets the concbhavg of this StimIntStg.


        :param concbhavg: The concbhavg of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgConcbhavg
        """

        self._concbhavg = concbhavg

    @property
    def concbhend(self):
        """Gets the concbhend of this StimIntStg.  # noqa: E501


        :return: The concbhend of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgConcbhend
        """
        return self._concbhend

    @concbhend.setter
    def concbhend(self, concbhend):
        """Sets the concbhend of this StimIntStg.


        :param concbhend: The concbhend of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgConcbhend
        """

        self._concbhend = concbhend

    @property
    def concbhmax(self):
        """Gets the concbhmax of this StimIntStg.  # noqa: E501


        :return: The concbhmax of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgConcbhmax
        """
        return self._concbhmax

    @concbhmax.setter
    def concbhmax(self, concbhmax):
        """Sets the concbhmax of this StimIntStg.


        :param concbhmax: The concbhmax of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgConcbhmax
        """

        self._concbhmax = concbhmax

    @property
    def concbhmin(self):
        """Gets the concbhmin of this StimIntStg.  # noqa: E501


        :return: The concbhmin of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgConcbhmin
        """
        return self._concbhmin

    @concbhmin.setter
    def concbhmin(self, concbhmin):
        """Sets the concbhmin of this StimIntStg.


        :param concbhmin: The concbhmin of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgConcbhmin
        """

        self._concbhmin = concbhmin

    @property
    def concbhstart(self):
        """Gets the concbhstart of this StimIntStg.  # noqa: E501


        :return: The concbhstart of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgConcbhstart
        """
        return self._concbhstart

    @concbhstart.setter
    def concbhstart(self, concbhstart):
        """Sets the concbhstart of this StimIntStg.


        :param concbhstart: The concbhstart of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgConcbhstart
        """

        self._concbhstart = concbhstart

    @property
    def concsurfavg(self):
        """Gets the concsurfavg of this StimIntStg.  # noqa: E501


        :return: The concsurfavg of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgConcsurfavg
        """
        return self._concsurfavg

    @concsurfavg.setter
    def concsurfavg(self, concsurfavg):
        """Sets the concsurfavg of this StimIntStg.


        :param concsurfavg: The concsurfavg of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgConcsurfavg
        """

        self._concsurfavg = concsurfavg

    @property
    def concsurfend(self):
        """Gets the concsurfend of this StimIntStg.  # noqa: E501


        :return: The concsurfend of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgConcsurfend
        """
        return self._concsurfend

    @concsurfend.setter
    def concsurfend(self, concsurfend):
        """Sets the concsurfend of this StimIntStg.


        :param concsurfend: The concsurfend of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgConcsurfend
        """

        self._concsurfend = concsurfend

    @property
    def concsurfmax(self):
        """Gets the concsurfmax of this StimIntStg.  # noqa: E501


        :return: The concsurfmax of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgConcsurfmax
        """
        return self._concsurfmax

    @concsurfmax.setter
    def concsurfmax(self, concsurfmax):
        """Sets the concsurfmax of this StimIntStg.


        :param concsurfmax: The concsurfmax of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgConcsurfmax
        """

        self._concsurfmax = concsurfmax

    @property
    def concsurfmin(self):
        """Gets the concsurfmin of this StimIntStg.  # noqa: E501


        :return: The concsurfmin of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgConcsurfmin
        """
        return self._concsurfmin

    @concsurfmin.setter
    def concsurfmin(self, concsurfmin):
        """Sets the concsurfmin of this StimIntStg.


        :param concsurfmin: The concsurfmin of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgConcsurfmin
        """

        self._concsurfmin = concsurfmin

    @property
    def concsurfstart(self):
        """Gets the concsurfstart of this StimIntStg.  # noqa: E501


        :return: The concsurfstart of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgConcsurfstart
        """
        return self._concsurfstart

    @concsurfstart.setter
    def concsurfstart(self, concsurfstart):
        """Sets the concsurfstart of this StimIntStg.


        :param concsurfstart: The concsurfstart of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgConcsurfstart
        """

        self._concsurfstart = concsurfstart

    @property
    def des(self):
        """Gets the des of this StimIntStg.  # noqa: E501


        :return: The des of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._des

    @des.setter
    def des(self, des):
        """Sets the des of this StimIntStg.


        :param des: The des of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._des = des

    @property
    def dttmend(self):
        """Gets the dttmend of this StimIntStg.  # noqa: E501


        :return: The dttmend of this StimIntStg.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmend

    @dttmend.setter
    def dttmend(self, dttmend):
        """Sets the dttmend of this StimIntStg.


        :param dttmend: The dttmend of this StimIntStg.  # noqa: E501
        :type: datetime
        """

        self._dttmend = dttmend

    @property
    def dttmstart(self):
        """Gets the dttmstart of this StimIntStg.  # noqa: E501


        :return: The dttmstart of this StimIntStg.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmstart

    @dttmstart.setter
    def dttmstart(self, dttmstart):
        """Sets the dttmstart of this StimIntStg.


        :param dttmstart: The dttmstart of this StimIntStg.  # noqa: E501
        :type: datetime
        """

        self._dttmstart = dttmstart

    @property
    def durpumptotal(self):
        """Gets the durpumptotal of this StimIntStg.  # noqa: E501


        :return: The durpumptotal of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgDurpumptotal
        """
        return self._durpumptotal

    @durpumptotal.setter
    def durpumptotal(self, durpumptotal):
        """Sets the durpumptotal of this StimIntStg.


        :param durpumptotal: The durpumptotal of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgDurpumptotal
        """

        self._durpumptotal = durpumptotal

    @property
    def exclude(self):
        """Gets the exclude of this StimIntStg.  # noqa: E501


        :return: The exclude of this StimIntStg.  # noqa: E501
        :rtype: int
        """
        return self._exclude

    @exclude.setter
    def exclude(self, exclude):
        """Sets the exclude of this StimIntStg.


        :param exclude: The exclude of this StimIntStg.  # noqa: E501
        :type: int
        """

        self._exclude = exclude

    @property
    def foamco2quality(self):
        """Gets the foamco2quality of this StimIntStg.  # noqa: E501


        :return: The foamco2quality of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgFoamco2quality
        """
        return self._foamco2quality

    @foamco2quality.setter
    def foamco2quality(self, foamco2quality):
        """Sets the foamco2quality of this StimIntStg.


        :param foamco2quality: The foamco2quality of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgFoamco2quality
        """

        self._foamco2quality = foamco2quality

    @property
    def foamn2quality(self):
        """Gets the foamn2quality of this StimIntStg.  # noqa: E501


        :return: The foamn2quality of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgFoamn2quality
        """
        return self._foamn2quality

    @foamn2quality.setter
    def foamn2quality(self, foamn2quality):
        """Sets the foamn2quality of this StimIntStg.


        :param foamn2quality: The foamn2quality of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgFoamn2quality
        """

        self._foamn2quality = foamn2quality

    @property
    def frictionfactor(self):
        """Gets the frictionfactor of this StimIntStg.  # noqa: E501


        :return: The frictionfactor of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgFrictionfactor
        """
        return self._frictionfactor

    @frictionfactor.setter
    def frictionfactor(self, frictionfactor):
        """Sets the frictionfactor of this StimIntStg.


        :param frictionfactor: The frictionfactor of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgFrictionfactor
        """

        self._frictionfactor = frictionfactor

    @property
    def gasdes(self):
        """Gets the gasdes of this StimIntStg.  # noqa: E501


        :return: The gasdes of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._gasdes

    @gasdes.setter
    def gasdes(self, gasdes):
        """Sets the gasdes of this StimIntStg.


        :param gasdes: The gasdes of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._gasdes = gasdes

    @property
    def idrec(self):
        """Gets the idrec of this StimIntStg.  # noqa: E501


        :return: The idrec of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this StimIntStg.


        :param idrec: The idrec of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecfluid(self):
        """Gets the idrecfluid of this StimIntStg.  # noqa: E501


        :return: The idrecfluid of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._idrecfluid

    @idrecfluid.setter
    def idrecfluid(self, idrecfluid):
        """Sets the idrecfluid of this StimIntStg.


        :param idrecfluid: The idrecfluid of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._idrecfluid = idrecfluid

    @property
    def idrecfluidtk(self):
        """Gets the idrecfluidtk of this StimIntStg.  # noqa: E501


        :return: The idrecfluidtk of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._idrecfluidtk

    @idrecfluidtk.setter
    def idrecfluidtk(self, idrecfluidtk):
        """Sets the idrecfluidtk of this StimIntStg.


        :param idrecfluidtk: The idrecfluidtk of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._idrecfluidtk = idrecfluidtk

    @property
    def idrecparent(self):
        """Gets the idrecparent of this StimIntStg.  # noqa: E501


        :return: The idrecparent of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this StimIntStg.


        :param idrecparent: The idrecparent of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idrecprop(self):
        """Gets the idrecprop of this StimIntStg.  # noqa: E501


        :return: The idrecprop of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._idrecprop

    @idrecprop.setter
    def idrecprop(self, idrecprop):
        """Sets the idrecprop of this StimIntStg.


        :param idrecprop: The idrecprop of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._idrecprop = idrecprop

    @property
    def idrecproptk(self):
        """Gets the idrecproptk of this StimIntStg.  # noqa: E501


        :return: The idrecproptk of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._idrecproptk

    @idrecproptk.setter
    def idrecproptk(self, idrecproptk):
        """Sets the idrecproptk of this StimIntStg.


        :param idrecproptk: The idrecproptk of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._idrecproptk = idrecproptk

    @property
    def idwell(self):
        """Gets the idwell of this StimIntStg.  # noqa: E501


        :return: The idwell of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this StimIntStg.


        :param idwell: The idwell of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def massprop(self):
        """Gets the massprop of this StimIntStg.  # noqa: E501


        :return: The massprop of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgMassprop
        """
        return self._massprop

    @massprop.setter
    def massprop(self, massprop):
        """Sets the massprop of this StimIntStg.


        :param massprop: The massprop of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgMassprop
        """

        self._massprop = massprop

    @property
    def masspropwh(self):
        """Gets the masspropwh of this StimIntStg.  # noqa: E501


        :return: The masspropwh of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgMasspropwh
        """
        return self._masspropwh

    @masspropwh.setter
    def masspropwh(self, masspropwh):
        """Sets the masspropwh of this StimIntStg.


        :param masspropwh: The masspropwh of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgMasspropwh
        """

        self._masspropwh = masspropwh

    @property
    def presbhavg(self):
        """Gets the presbhavg of this StimIntStg.  # noqa: E501


        :return: The presbhavg of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgPresbhavg
        """
        return self._presbhavg

    @presbhavg.setter
    def presbhavg(self, presbhavg):
        """Sets the presbhavg of this StimIntStg.


        :param presbhavg: The presbhavg of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgPresbhavg
        """

        self._presbhavg = presbhavg

    @property
    def presbhend(self):
        """Gets the presbhend of this StimIntStg.  # noqa: E501


        :return: The presbhend of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgPresbhend
        """
        return self._presbhend

    @presbhend.setter
    def presbhend(self, presbhend):
        """Sets the presbhend of this StimIntStg.


        :param presbhend: The presbhend of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgPresbhend
        """

        self._presbhend = presbhend

    @property
    def presbhmax(self):
        """Gets the presbhmax of this StimIntStg.  # noqa: E501


        :return: The presbhmax of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgPresbhmax
        """
        return self._presbhmax

    @presbhmax.setter
    def presbhmax(self, presbhmax):
        """Sets the presbhmax of this StimIntStg.


        :param presbhmax: The presbhmax of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgPresbhmax
        """

        self._presbhmax = presbhmax

    @property
    def presbhmin(self):
        """Gets the presbhmin of this StimIntStg.  # noqa: E501


        :return: The presbhmin of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgPresbhmin
        """
        return self._presbhmin

    @presbhmin.setter
    def presbhmin(self, presbhmin):
        """Sets the presbhmin of this StimIntStg.


        :param presbhmin: The presbhmin of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgPresbhmin
        """

        self._presbhmin = presbhmin

    @property
    def presbhstart(self):
        """Gets the presbhstart of this StimIntStg.  # noqa: E501


        :return: The presbhstart of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgPresbhstart
        """
        return self._presbhstart

    @presbhstart.setter
    def presbhstart(self, presbhstart):
        """Sets the presbhstart of this StimIntStg.


        :param presbhstart: The presbhstart of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgPresbhstart
        """

        self._presbhstart = presbhstart

    @property
    def prespumpingmax(self):
        """Gets the prespumpingmax of this StimIntStg.  # noqa: E501


        :return: The prespumpingmax of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgPrespumpingmax
        """
        return self._prespumpingmax

    @prespumpingmax.setter
    def prespumpingmax(self, prespumpingmax):
        """Sets the prespumpingmax of this StimIntStg.


        :param prespumpingmax: The prespumpingmax of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgPrespumpingmax
        """

        self._prespumpingmax = prespumpingmax

    @property
    def pressurfavg(self):
        """Gets the pressurfavg of this StimIntStg.  # noqa: E501


        :return: The pressurfavg of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgPressurfavg
        """
        return self._pressurfavg

    @pressurfavg.setter
    def pressurfavg(self, pressurfavg):
        """Sets the pressurfavg of this StimIntStg.


        :param pressurfavg: The pressurfavg of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgPressurfavg
        """

        self._pressurfavg = pressurfavg

    @property
    def pressurfend(self):
        """Gets the pressurfend of this StimIntStg.  # noqa: E501


        :return: The pressurfend of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgPressurfend
        """
        return self._pressurfend

    @pressurfend.setter
    def pressurfend(self, pressurfend):
        """Sets the pressurfend of this StimIntStg.


        :param pressurfend: The pressurfend of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgPressurfend
        """

        self._pressurfend = pressurfend

    @property
    def pressurfmax(self):
        """Gets the pressurfmax of this StimIntStg.  # noqa: E501


        :return: The pressurfmax of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgPressurfmax
        """
        return self._pressurfmax

    @pressurfmax.setter
    def pressurfmax(self, pressurfmax):
        """Sets the pressurfmax of this StimIntStg.


        :param pressurfmax: The pressurfmax of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgPressurfmax
        """

        self._pressurfmax = pressurfmax

    @property
    def pressurfmin(self):
        """Gets the pressurfmin of this StimIntStg.  # noqa: E501


        :return: The pressurfmin of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgPressurfmin
        """
        return self._pressurfmin

    @pressurfmin.setter
    def pressurfmin(self, pressurfmin):
        """Sets the pressurfmin of this StimIntStg.


        :param pressurfmin: The pressurfmin of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgPressurfmin
        """

        self._pressurfmin = pressurfmin

    @property
    def pressurfstart(self):
        """Gets the pressurfstart of this StimIntStg.  # noqa: E501


        :return: The pressurfstart of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgPressurfstart
        """
        return self._pressurfstart

    @pressurfstart.setter
    def pressurfstart(self, pressurfstart):
        """Sets the pressurfstart of this StimIntStg.


        :param pressurfstart: The pressurfstart of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgPressurfstart
        """

        self._pressurfstart = pressurfstart

    @property
    def preszonemax(self):
        """Gets the preszonemax of this StimIntStg.  # noqa: E501


        :return: The preszonemax of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgPreszonemax
        """
        return self._preszonemax

    @preszonemax.setter
    def preszonemax(self, preszonemax):
        """Sets the preszonemax of this StimIntStg.


        :param preszonemax: The preszonemax of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgPreszonemax
        """

        self._preszonemax = preszonemax

    @property
    def pumppoweravg(self):
        """Gets the pumppoweravg of this StimIntStg.  # noqa: E501


        :return: The pumppoweravg of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgPumppoweravg
        """
        return self._pumppoweravg

    @pumppoweravg.setter
    def pumppoweravg(self, pumppoweravg):
        """Sets the pumppoweravg of this StimIntStg.


        :param pumppoweravg: The pumppoweravg of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgPumppoweravg
        """

        self._pumppoweravg = pumppoweravg

    @property
    def ratecleanavg(self):
        """Gets the ratecleanavg of this StimIntStg.  # noqa: E501


        :return: The ratecleanavg of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRatecleanavg
        """
        return self._ratecleanavg

    @ratecleanavg.setter
    def ratecleanavg(self, ratecleanavg):
        """Sets the ratecleanavg of this StimIntStg.


        :param ratecleanavg: The ratecleanavg of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRatecleanavg
        """

        self._ratecleanavg = ratecleanavg

    @property
    def ratecleanend(self):
        """Gets the ratecleanend of this StimIntStg.  # noqa: E501


        :return: The ratecleanend of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRatecleanend
        """
        return self._ratecleanend

    @ratecleanend.setter
    def ratecleanend(self, ratecleanend):
        """Sets the ratecleanend of this StimIntStg.


        :param ratecleanend: The ratecleanend of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRatecleanend
        """

        self._ratecleanend = ratecleanend

    @property
    def ratecleanmax(self):
        """Gets the ratecleanmax of this StimIntStg.  # noqa: E501


        :return: The ratecleanmax of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRatecleanmax
        """
        return self._ratecleanmax

    @ratecleanmax.setter
    def ratecleanmax(self, ratecleanmax):
        """Sets the ratecleanmax of this StimIntStg.


        :param ratecleanmax: The ratecleanmax of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRatecleanmax
        """

        self._ratecleanmax = ratecleanmax

    @property
    def ratecleanmin(self):
        """Gets the ratecleanmin of this StimIntStg.  # noqa: E501


        :return: The ratecleanmin of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRatecleanmin
        """
        return self._ratecleanmin

    @ratecleanmin.setter
    def ratecleanmin(self, ratecleanmin):
        """Sets the ratecleanmin of this StimIntStg.


        :param ratecleanmin: The ratecleanmin of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRatecleanmin
        """

        self._ratecleanmin = ratecleanmin

    @property
    def ratecleanstart(self):
        """Gets the ratecleanstart of this StimIntStg.  # noqa: E501


        :return: The ratecleanstart of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRatecleanstart
        """
        return self._ratecleanstart

    @ratecleanstart.setter
    def ratecleanstart(self, ratecleanstart):
        """Sets the ratecleanstart of this StimIntStg.


        :param ratecleanstart: The ratecleanstart of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRatecleanstart
        """

        self._ratecleanstart = ratecleanstart

    @property
    def rateco2foamend(self):
        """Gets the rateco2foamend of this StimIntStg.  # noqa: E501


        :return: The rateco2foamend of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRateco2foamend
        """
        return self._rateco2foamend

    @rateco2foamend.setter
    def rateco2foamend(self, rateco2foamend):
        """Sets the rateco2foamend of this StimIntStg.


        :param rateco2foamend: The rateco2foamend of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRateco2foamend
        """

        self._rateco2foamend = rateco2foamend

    @property
    def rateco2foamstart(self):
        """Gets the rateco2foamstart of this StimIntStg.  # noqa: E501


        :return: The rateco2foamstart of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRateco2foamstart
        """
        return self._rateco2foamstart

    @rateco2foamstart.setter
    def rateco2foamstart(self, rateco2foamstart):
        """Sets the rateco2foamstart of this StimIntStg.


        :param rateco2foamstart: The rateco2foamstart of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRateco2foamstart
        """

        self._rateco2foamstart = rateco2foamstart

    @property
    def rateco2max(self):
        """Gets the rateco2max of this StimIntStg.  # noqa: E501


        :return: The rateco2max of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRateco2max
        """
        return self._rateco2max

    @rateco2max.setter
    def rateco2max(self, rateco2max):
        """Sets the rateco2max of this StimIntStg.


        :param rateco2max: The rateco2max of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRateco2max
        """

        self._rateco2max = rateco2max

    @property
    def rateco2min(self):
        """Gets the rateco2min of this StimIntStg.  # noqa: E501


        :return: The rateco2min of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRateco2min
        """
        return self._rateco2min

    @rateco2min.setter
    def rateco2min(self, rateco2min):
        """Sets the rateco2min of this StimIntStg.


        :param rateco2min: The rateco2min of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRateco2min
        """

        self._rateco2min = rateco2min

    @property
    def rateco2surfavg(self):
        """Gets the rateco2surfavg of this StimIntStg.  # noqa: E501


        :return: The rateco2surfavg of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRateco2surfavg
        """
        return self._rateco2surfavg

    @rateco2surfavg.setter
    def rateco2surfavg(self, rateco2surfavg):
        """Sets the rateco2surfavg of this StimIntStg.


        :param rateco2surfavg: The rateco2surfavg of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRateco2surfavg
        """

        self._rateco2surfavg = rateco2surfavg

    @property
    def rateco2surfend(self):
        """Gets the rateco2surfend of this StimIntStg.  # noqa: E501


        :return: The rateco2surfend of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRateco2surfend
        """
        return self._rateco2surfend

    @rateco2surfend.setter
    def rateco2surfend(self, rateco2surfend):
        """Sets the rateco2surfend of this StimIntStg.


        :param rateco2surfend: The rateco2surfend of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRateco2surfend
        """

        self._rateco2surfend = rateco2surfend

    @property
    def rateco2surfstart(self):
        """Gets the rateco2surfstart of this StimIntStg.  # noqa: E501


        :return: The rateco2surfstart of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRateco2surfstart
        """
        return self._rateco2surfstart

    @rateco2surfstart.setter
    def rateco2surfstart(self, rateco2surfstart):
        """Sets the rateco2surfstart of this StimIntStg.


        :param rateco2surfstart: The rateco2surfstart of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRateco2surfstart
        """

        self._rateco2surfstart = rateco2surfstart

    @property
    def raten2foamend(self):
        """Gets the raten2foamend of this StimIntStg.  # noqa: E501


        :return: The raten2foamend of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRaten2foamend
        """
        return self._raten2foamend

    @raten2foamend.setter
    def raten2foamend(self, raten2foamend):
        """Sets the raten2foamend of this StimIntStg.


        :param raten2foamend: The raten2foamend of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRaten2foamend
        """

        self._raten2foamend = raten2foamend

    @property
    def raten2foamstart(self):
        """Gets the raten2foamstart of this StimIntStg.  # noqa: E501


        :return: The raten2foamstart of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRaten2foamstart
        """
        return self._raten2foamstart

    @raten2foamstart.setter
    def raten2foamstart(self, raten2foamstart):
        """Sets the raten2foamstart of this StimIntStg.


        :param raten2foamstart: The raten2foamstart of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRaten2foamstart
        """

        self._raten2foamstart = raten2foamstart

    @property
    def raten2max(self):
        """Gets the raten2max of this StimIntStg.  # noqa: E501


        :return: The raten2max of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRaten2max
        """
        return self._raten2max

    @raten2max.setter
    def raten2max(self, raten2max):
        """Sets the raten2max of this StimIntStg.


        :param raten2max: The raten2max of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRaten2max
        """

        self._raten2max = raten2max

    @property
    def raten2min(self):
        """Gets the raten2min of this StimIntStg.  # noqa: E501


        :return: The raten2min of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRaten2min
        """
        return self._raten2min

    @raten2min.setter
    def raten2min(self, raten2min):
        """Sets the raten2min of this StimIntStg.


        :param raten2min: The raten2min of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRaten2min
        """

        self._raten2min = raten2min

    @property
    def raten2surfavg(self):
        """Gets the raten2surfavg of this StimIntStg.  # noqa: E501


        :return: The raten2surfavg of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRaten2surfavg
        """
        return self._raten2surfavg

    @raten2surfavg.setter
    def raten2surfavg(self, raten2surfavg):
        """Sets the raten2surfavg of this StimIntStg.


        :param raten2surfavg: The raten2surfavg of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRaten2surfavg
        """

        self._raten2surfavg = raten2surfavg

    @property
    def raten2surfend(self):
        """Gets the raten2surfend of this StimIntStg.  # noqa: E501


        :return: The raten2surfend of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRaten2surfend
        """
        return self._raten2surfend

    @raten2surfend.setter
    def raten2surfend(self, raten2surfend):
        """Sets the raten2surfend of this StimIntStg.


        :param raten2surfend: The raten2surfend of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRaten2surfend
        """

        self._raten2surfend = raten2surfend

    @property
    def raten2surfstart(self):
        """Gets the raten2surfstart of this StimIntStg.  # noqa: E501


        :return: The raten2surfstart of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRaten2surfstart
        """
        return self._raten2surfstart

    @raten2surfstart.setter
    def raten2surfstart(self, raten2surfstart):
        """Sets the raten2surfstart of this StimIntStg.


        :param raten2surfstart: The raten2surfstart of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRaten2surfstart
        """

        self._raten2surfstart = raten2surfstart

    @property
    def ratepumpbhavg(self):
        """Gets the ratepumpbhavg of this StimIntStg.  # noqa: E501


        :return: The ratepumpbhavg of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRatepumpbhavg
        """
        return self._ratepumpbhavg

    @ratepumpbhavg.setter
    def ratepumpbhavg(self, ratepumpbhavg):
        """Sets the ratepumpbhavg of this StimIntStg.


        :param ratepumpbhavg: The ratepumpbhavg of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRatepumpbhavg
        """

        self._ratepumpbhavg = ratepumpbhavg

    @property
    def ratepumpbhend(self):
        """Gets the ratepumpbhend of this StimIntStg.  # noqa: E501


        :return: The ratepumpbhend of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRatepumpbhend
        """
        return self._ratepumpbhend

    @ratepumpbhend.setter
    def ratepumpbhend(self, ratepumpbhend):
        """Sets the ratepumpbhend of this StimIntStg.


        :param ratepumpbhend: The ratepumpbhend of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRatepumpbhend
        """

        self._ratepumpbhend = ratepumpbhend

    @property
    def ratepumpbhstart(self):
        """Gets the ratepumpbhstart of this StimIntStg.  # noqa: E501


        :return: The ratepumpbhstart of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRatepumpbhstart
        """
        return self._ratepumpbhstart

    @ratepumpbhstart.setter
    def ratepumpbhstart(self, ratepumpbhstart):
        """Sets the ratepumpbhstart of this StimIntStg.


        :param ratepumpbhstart: The ratepumpbhstart of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRatepumpbhstart
        """

        self._ratepumpbhstart = ratepumpbhstart

    @property
    def ratepumpsurfavg(self):
        """Gets the ratepumpsurfavg of this StimIntStg.  # noqa: E501


        :return: The ratepumpsurfavg of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRatepumpsurfavg
        """
        return self._ratepumpsurfavg

    @ratepumpsurfavg.setter
    def ratepumpsurfavg(self, ratepumpsurfavg):
        """Sets the ratepumpsurfavg of this StimIntStg.


        :param ratepumpsurfavg: The ratepumpsurfavg of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRatepumpsurfavg
        """

        self._ratepumpsurfavg = ratepumpsurfavg

    @property
    def ratepumpsurfend(self):
        """Gets the ratepumpsurfend of this StimIntStg.  # noqa: E501


        :return: The ratepumpsurfend of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRatepumpsurfend
        """
        return self._ratepumpsurfend

    @ratepumpsurfend.setter
    def ratepumpsurfend(self, ratepumpsurfend):
        """Sets the ratepumpsurfend of this StimIntStg.


        :param ratepumpsurfend: The ratepumpsurfend of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRatepumpsurfend
        """

        self._ratepumpsurfend = ratepumpsurfend

    @property
    def ratepumpsurfstart(self):
        """Gets the ratepumpsurfstart of this StimIntStg.  # noqa: E501


        :return: The ratepumpsurfstart of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRatepumpsurfstart
        """
        return self._ratepumpsurfstart

    @ratepumpsurfstart.setter
    def ratepumpsurfstart(self, ratepumpsurfstart):
        """Sets the ratepumpsurfstart of this StimIntStg.


        :param ratepumpsurfstart: The ratepumpsurfstart of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRatepumpsurfstart
        """

        self._ratepumpsurfstart = ratepumpsurfstart

    @property
    def rateslurryavg(self):
        """Gets the rateslurryavg of this StimIntStg.  # noqa: E501


        :return: The rateslurryavg of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRateslurryavg
        """
        return self._rateslurryavg

    @rateslurryavg.setter
    def rateslurryavg(self, rateslurryavg):
        """Sets the rateslurryavg of this StimIntStg.


        :param rateslurryavg: The rateslurryavg of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRateslurryavg
        """

        self._rateslurryavg = rateslurryavg

    @property
    def rateslurryend(self):
        """Gets the rateslurryend of this StimIntStg.  # noqa: E501


        :return: The rateslurryend of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRateslurryend
        """
        return self._rateslurryend

    @rateslurryend.setter
    def rateslurryend(self, rateslurryend):
        """Sets the rateslurryend of this StimIntStg.


        :param rateslurryend: The rateslurryend of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRateslurryend
        """

        self._rateslurryend = rateslurryend

    @property
    def rateslurrymax(self):
        """Gets the rateslurrymax of this StimIntStg.  # noqa: E501


        :return: The rateslurrymax of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRateslurrymax
        """
        return self._rateslurrymax

    @rateslurrymax.setter
    def rateslurrymax(self, rateslurrymax):
        """Sets the rateslurrymax of this StimIntStg.


        :param rateslurrymax: The rateslurrymax of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRateslurrymax
        """

        self._rateslurrymax = rateslurrymax

    @property
    def rateslurrymin(self):
        """Gets the rateslurrymin of this StimIntStg.  # noqa: E501


        :return: The rateslurrymin of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRateslurrymin
        """
        return self._rateslurrymin

    @rateslurrymin.setter
    def rateslurrymin(self, rateslurrymin):
        """Sets the rateslurrymin of this StimIntStg.


        :param rateslurrymin: The rateslurrymin of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRateslurrymin
        """

        self._rateslurrymin = rateslurrymin

    @property
    def rateslurrystart(self):
        """Gets the rateslurrystart of this StimIntStg.  # noqa: E501


        :return: The rateslurrystart of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgRateslurrystart
        """
        return self._rateslurrystart

    @rateslurrystart.setter
    def rateslurrystart(self, rateslurrystart):
        """Sets the rateslurrystart of this StimIntStg.


        :param rateslurrystart: The rateslurrystart of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgRateslurrystart
        """

        self._rateslurrystart = rateslurrystart

    @property
    def spacefactor(self):
        """Gets the spacefactor of this StimIntStg.  # noqa: E501


        :return: The spacefactor of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgSpacefactor
        """
        return self._spacefactor

    @spacefactor.setter
    def spacefactor(self, spacefactor):
        """Sets the spacefactor of this StimIntStg.


        :param spacefactor: The spacefactor of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgSpacefactor
        """

        self._spacefactor = spacefactor

    @property
    def stagenum(self):
        """Gets the stagenum of this StimIntStg.  # noqa: E501


        :return: The stagenum of this StimIntStg.  # noqa: E501
        :rtype: int
        """
        return self._stagenum

    @stagenum.setter
    def stagenum(self, stagenum):
        """Sets the stagenum of this StimIntStg.


        :param stagenum: The stagenum of this StimIntStg.  # noqa: E501
        :type: int
        """

        self._stagenum = stagenum

    @property
    def stagetyp1(self):
        """Gets the stagetyp1 of this StimIntStg.  # noqa: E501


        :return: The stagetyp1 of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._stagetyp1

    @stagetyp1.setter
    def stagetyp1(self, stagetyp1):
        """Sets the stagetyp1 of this StimIntStg.


        :param stagetyp1: The stagetyp1 of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._stagetyp1 = stagetyp1

    @property
    def stagetyp2(self):
        """Gets the stagetyp2 of this StimIntStg.  # noqa: E501


        :return: The stagetyp2 of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._stagetyp2

    @stagetyp2.setter
    def stagetyp2(self, stagetyp2):
        """Sets the stagetyp2 of this StimIntStg.


        :param stagetyp2: The stagetyp2 of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._stagetyp2 = stagetyp2

    @property
    def stim_int(self):
        """Gets the stim_int of this StimIntStg.  # noqa: E501


        :return: The stim_int of this StimIntStg.  # noqa: E501
        :rtype: AnyOfStimIntStgStimInt
        """
        return self._stim_int

    @stim_int.setter
    def stim_int(self, stim_int):
        """Sets the stim_int of this StimIntStg.


        :param stim_int: The stim_int of this StimIntStg.  # noqa: E501
        :type: AnyOfStimIntStgStimInt
        """

        self._stim_int = stim_int

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this StimIntStg.  # noqa: E501


        :return: The syscreatedate of this StimIntStg.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this StimIntStg.


        :param syscreatedate: The syscreatedate of this StimIntStg.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this StimIntStg.  # noqa: E501


        :return: The syscreateuser of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this StimIntStg.


        :param syscreateuser: The syscreateuser of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this StimIntStg.  # noqa: E501


        :return: The syslockchildren of this StimIntStg.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this StimIntStg.


        :param syslockchildren: The syslockchildren of this StimIntStg.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this StimIntStg.  # noqa: E501


        :return: The syslockchildrenui of this StimIntStg.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this StimIntStg.


        :param syslockchildrenui: The syslockchildrenui of this StimIntStg.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this StimIntStg.  # noqa: E501


        :return: The syslockdate of this StimIntStg.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this StimIntStg.


        :param syslockdate: The syslockdate of this StimIntStg.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this StimIntStg.  # noqa: E501


        :return: The syslockme of this StimIntStg.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this StimIntStg.


        :param syslockme: The syslockme of this StimIntStg.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this StimIntStg.  # noqa: E501


        :return: The syslockmeui of this StimIntStg.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this StimIntStg.


        :param syslockmeui: The syslockmeui of this StimIntStg.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this StimIntStg.  # noqa: E501


        :return: The sysmoddate of this StimIntStg.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this StimIntStg.


        :param sysmoddate: The sysmoddate of this StimIntStg.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this StimIntStg.  # noqa: E501


        :return: The sysmoduser of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this StimIntStg.


        :param sysmoduser: The sysmoduser of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def systag(self):
        """Gets the systag of this StimIntStg.  # noqa: E501


        :return: The systag of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this StimIntStg.


        :param systag: The systag of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def temptreatavg(self):
        """Gets the temptreatavg of this StimIntStg.  # noqa: E501


        :return: The temptreatavg of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgTemptreatavg
        """
        return self._temptreatavg

    @temptreatavg.setter
    def temptreatavg(self, temptreatavg):
        """Sets the temptreatavg of this StimIntStg.


        :param temptreatavg: The temptreatavg of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgTemptreatavg
        """

        self._temptreatavg = temptreatavg

    @property
    def usernum1(self):
        """Gets the usernum1 of this StimIntStg.  # noqa: E501


        :return: The usernum1 of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgUsernum1
        """
        return self._usernum1

    @usernum1.setter
    def usernum1(self, usernum1):
        """Sets the usernum1 of this StimIntStg.


        :param usernum1: The usernum1 of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgUsernum1
        """

        self._usernum1 = usernum1

    @property
    def usernum2(self):
        """Gets the usernum2 of this StimIntStg.  # noqa: E501


        :return: The usernum2 of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgUsernum2
        """
        return self._usernum2

    @usernum2.setter
    def usernum2(self, usernum2):
        """Sets the usernum2 of this StimIntStg.


        :param usernum2: The usernum2 of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgUsernum2
        """

        self._usernum2 = usernum2

    @property
    def usernum3(self):
        """Gets the usernum3 of this StimIntStg.  # noqa: E501


        :return: The usernum3 of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgUsernum3
        """
        return self._usernum3

    @usernum3.setter
    def usernum3(self, usernum3):
        """Sets the usernum3 of this StimIntStg.


        :param usernum3: The usernum3 of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgUsernum3
        """

        self._usernum3 = usernum3

    @property
    def usernum4(self):
        """Gets the usernum4 of this StimIntStg.  # noqa: E501


        :return: The usernum4 of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgUsernum4
        """
        return self._usernum4

    @usernum4.setter
    def usernum4(self, usernum4):
        """Sets the usernum4 of this StimIntStg.


        :param usernum4: The usernum4 of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgUsernum4
        """

        self._usernum4 = usernum4

    @property
    def usernum5(self):
        """Gets the usernum5 of this StimIntStg.  # noqa: E501


        :return: The usernum5 of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgUsernum5
        """
        return self._usernum5

    @usernum5.setter
    def usernum5(self, usernum5):
        """Sets the usernum5 of this StimIntStg.


        :param usernum5: The usernum5 of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgUsernum5
        """

        self._usernum5 = usernum5

    @property
    def usertxt1(self):
        """Gets the usertxt1 of this StimIntStg.  # noqa: E501


        :return: The usertxt1 of this StimIntStg.  # noqa: E501
        :rtype: str
        """
        return self._usertxt1

    @usertxt1.setter
    def usertxt1(self, usertxt1):
        """Sets the usertxt1 of this StimIntStg.


        :param usertxt1: The usertxt1 of this StimIntStg.  # noqa: E501
        :type: str
        """

        self._usertxt1 = usertxt1

    @property
    def volclean(self):
        """Gets the volclean of this StimIntStg.  # noqa: E501


        :return: The volclean of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgVolclean
        """
        return self._volclean

    @volclean.setter
    def volclean(self, volclean):
        """Sets the volclean of this StimIntStg.


        :param volclean: The volclean of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgVolclean
        """

        self._volclean = volclean

    @property
    def volco2(self):
        """Gets the volco2 of this StimIntStg.  # noqa: E501


        :return: The volco2 of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgVolco2
        """
        return self._volco2

    @volco2.setter
    def volco2(self, volco2):
        """Sets the volco2 of this StimIntStg.


        :param volco2: The volco2 of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgVolco2
        """

        self._volco2 = volco2

    @property
    def voln2(self):
        """Gets the voln2 of this StimIntStg.  # noqa: E501


        :return: The voln2 of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgVoln2
        """
        return self._voln2

    @voln2.setter
    def voln2(self, voln2):
        """Sets the voln2 of this StimIntStg.


        :param voln2: The voln2 of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgVoln2
        """

        self._voln2 = voln2

    @property
    def volrecovered(self):
        """Gets the volrecovered of this StimIntStg.  # noqa: E501


        :return: The volrecovered of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgVolrecovered
        """
        return self._volrecovered

    @volrecovered.setter
    def volrecovered(self, volrecovered):
        """Sets the volrecovered of this StimIntStg.


        :param volrecovered: The volrecovered of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgVolrecovered
        """

        self._volrecovered = volrecovered

    @property
    def volslurry(self):
        """Gets the volslurry of this StimIntStg.  # noqa: E501


        :return: The volslurry of this StimIntStg.  # noqa: E501
        :rtype: OneOfStimIntStgVolslurry
        """
        return self._volslurry

    @volslurry.setter
    def volslurry(self, volslurry):
        """Sets the volslurry of this StimIntStg.


        :param volslurry: The volslurry of this StimIntStg.  # noqa: E501
        :type: OneOfStimIntStgVolslurry
        """

        self._volslurry = volslurry

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(StimIntStg, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, StimIntStg):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
