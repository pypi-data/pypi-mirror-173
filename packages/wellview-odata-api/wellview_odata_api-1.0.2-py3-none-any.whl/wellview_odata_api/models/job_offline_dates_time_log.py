# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class JobOfflineDatesTimeLog(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'affectonline': 'str',
        'code1': 'str',
        'code2': 'str',
        'code3': 'str',
        'code4': 'str',
        'com': 'str',
        'depthend': 'OneOfJobOfflineDatesTimeLogDepthend',
        'depthstart': 'OneOfJobOfflineDatesTimeLogDepthstart',
        'duration': 'OneOfJobOfflineDatesTimeLogDuration',
        'idrec': 'str',
        'idrecparent': 'str',
        'idrecwellbore': 'str',
        'idrecwellboretk': 'str',
        'idwell': 'str',
        'inactive': 'int',
        'job_offline': 'AnyOfJobOfflineDatesTimeLogJobOffline',
        'opscategory': 'str',
        'refderrick': 'str',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'sysseq': 'int',
        'systag': 'str',
        'unschedtyp': 'str',
        'usertxt1': 'str'
    }

    attribute_map = {
        'affectonline': 'affectonline',
        'code1': 'code1',
        'code2': 'code2',
        'code3': 'code3',
        'code4': 'code4',
        'com': 'com',
        'depthend': 'depthend',
        'depthstart': 'depthstart',
        'duration': 'duration',
        'idrec': 'idrec',
        'idrecparent': 'idrecparent',
        'idrecwellbore': 'idrecwellbore',
        'idrecwellboretk': 'idrecwellboretk',
        'idwell': 'idwell',
        'inactive': 'inactive',
        'job_offline': 'jobOffline',
        'opscategory': 'opscategory',
        'refderrick': 'refderrick',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'sysseq': 'sysseq',
        'systag': 'systag',
        'unschedtyp': 'unschedtyp',
        'usertxt1': 'usertxt1'
    }

    def __init__(self, affectonline=None, code1=None, code2=None, code3=None, code4=None, com=None, depthend=None, depthstart=None, duration=None, idrec=None, idrecparent=None, idrecwellbore=None, idrecwellboretk=None, idwell=None, inactive=None, job_offline=None, opscategory=None, refderrick=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, sysseq=None, systag=None, unschedtyp=None, usertxt1=None):  # noqa: E501
        """JobOfflineDatesTimeLog - a model defined in Swagger"""  # noqa: E501
        self._affectonline = None
        self._code1 = None
        self._code2 = None
        self._code3 = None
        self._code4 = None
        self._com = None
        self._depthend = None
        self._depthstart = None
        self._duration = None
        self._idrec = None
        self._idrecparent = None
        self._idrecwellbore = None
        self._idrecwellboretk = None
        self._idwell = None
        self._inactive = None
        self._job_offline = None
        self._opscategory = None
        self._refderrick = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._sysseq = None
        self._systag = None
        self._unschedtyp = None
        self._usertxt1 = None
        self.discriminator = None
        if affectonline is not None:
            self.affectonline = affectonline
        if code1 is not None:
            self.code1 = code1
        if code2 is not None:
            self.code2 = code2
        if code3 is not None:
            self.code3 = code3
        if code4 is not None:
            self.code4 = code4
        if com is not None:
            self.com = com
        if depthend is not None:
            self.depthend = depthend
        if depthstart is not None:
            self.depthstart = depthstart
        if duration is not None:
            self.duration = duration
        if idrec is not None:
            self.idrec = idrec
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idrecwellbore is not None:
            self.idrecwellbore = idrecwellbore
        if idrecwellboretk is not None:
            self.idrecwellboretk = idrecwellboretk
        if idwell is not None:
            self.idwell = idwell
        if inactive is not None:
            self.inactive = inactive
        if job_offline is not None:
            self.job_offline = job_offline
        if opscategory is not None:
            self.opscategory = opscategory
        if refderrick is not None:
            self.refderrick = refderrick
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if sysseq is not None:
            self.sysseq = sysseq
        if systag is not None:
            self.systag = systag
        if unschedtyp is not None:
            self.unschedtyp = unschedtyp
        if usertxt1 is not None:
            self.usertxt1 = usertxt1

    @property
    def affectonline(self):
        """Gets the affectonline of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The affectonline of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._affectonline

    @affectonline.setter
    def affectonline(self, affectonline):
        """Sets the affectonline of this JobOfflineDatesTimeLog.


        :param affectonline: The affectonline of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._affectonline = affectonline

    @property
    def code1(self):
        """Gets the code1 of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The code1 of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._code1

    @code1.setter
    def code1(self, code1):
        """Sets the code1 of this JobOfflineDatesTimeLog.


        :param code1: The code1 of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._code1 = code1

    @property
    def code2(self):
        """Gets the code2 of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The code2 of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._code2

    @code2.setter
    def code2(self, code2):
        """Sets the code2 of this JobOfflineDatesTimeLog.


        :param code2: The code2 of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._code2 = code2

    @property
    def code3(self):
        """Gets the code3 of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The code3 of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._code3

    @code3.setter
    def code3(self, code3):
        """Sets the code3 of this JobOfflineDatesTimeLog.


        :param code3: The code3 of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._code3 = code3

    @property
    def code4(self):
        """Gets the code4 of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The code4 of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._code4

    @code4.setter
    def code4(self, code4):
        """Sets the code4 of this JobOfflineDatesTimeLog.


        :param code4: The code4 of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._code4 = code4

    @property
    def com(self):
        """Gets the com of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The com of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._com

    @com.setter
    def com(self, com):
        """Sets the com of this JobOfflineDatesTimeLog.


        :param com: The com of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._com = com

    @property
    def depthend(self):
        """Gets the depthend of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The depthend of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: OneOfJobOfflineDatesTimeLogDepthend
        """
        return self._depthend

    @depthend.setter
    def depthend(self, depthend):
        """Sets the depthend of this JobOfflineDatesTimeLog.


        :param depthend: The depthend of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: OneOfJobOfflineDatesTimeLogDepthend
        """

        self._depthend = depthend

    @property
    def depthstart(self):
        """Gets the depthstart of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The depthstart of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: OneOfJobOfflineDatesTimeLogDepthstart
        """
        return self._depthstart

    @depthstart.setter
    def depthstart(self, depthstart):
        """Sets the depthstart of this JobOfflineDatesTimeLog.


        :param depthstart: The depthstart of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: OneOfJobOfflineDatesTimeLogDepthstart
        """

        self._depthstart = depthstart

    @property
    def duration(self):
        """Gets the duration of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The duration of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: OneOfJobOfflineDatesTimeLogDuration
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this JobOfflineDatesTimeLog.


        :param duration: The duration of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: OneOfJobOfflineDatesTimeLogDuration
        """

        self._duration = duration

    @property
    def idrec(self):
        """Gets the idrec of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The idrec of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this JobOfflineDatesTimeLog.


        :param idrec: The idrec of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecparent(self):
        """Gets the idrecparent of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The idrecparent of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this JobOfflineDatesTimeLog.


        :param idrecparent: The idrecparent of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idrecwellbore(self):
        """Gets the idrecwellbore of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The idrecwellbore of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellbore

    @idrecwellbore.setter
    def idrecwellbore(self, idrecwellbore):
        """Sets the idrecwellbore of this JobOfflineDatesTimeLog.


        :param idrecwellbore: The idrecwellbore of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._idrecwellbore = idrecwellbore

    @property
    def idrecwellboretk(self):
        """Gets the idrecwellboretk of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The idrecwellboretk of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellboretk

    @idrecwellboretk.setter
    def idrecwellboretk(self, idrecwellboretk):
        """Sets the idrecwellboretk of this JobOfflineDatesTimeLog.


        :param idrecwellboretk: The idrecwellboretk of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._idrecwellboretk = idrecwellboretk

    @property
    def idwell(self):
        """Gets the idwell of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The idwell of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this JobOfflineDatesTimeLog.


        :param idwell: The idwell of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def inactive(self):
        """Gets the inactive of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The inactive of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: int
        """
        return self._inactive

    @inactive.setter
    def inactive(self, inactive):
        """Sets the inactive of this JobOfflineDatesTimeLog.


        :param inactive: The inactive of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: int
        """

        self._inactive = inactive

    @property
    def job_offline(self):
        """Gets the job_offline of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The job_offline of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: AnyOfJobOfflineDatesTimeLogJobOffline
        """
        return self._job_offline

    @job_offline.setter
    def job_offline(self, job_offline):
        """Sets the job_offline of this JobOfflineDatesTimeLog.


        :param job_offline: The job_offline of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: AnyOfJobOfflineDatesTimeLogJobOffline
        """

        self._job_offline = job_offline

    @property
    def opscategory(self):
        """Gets the opscategory of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The opscategory of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._opscategory

    @opscategory.setter
    def opscategory(self, opscategory):
        """Sets the opscategory of this JobOfflineDatesTimeLog.


        :param opscategory: The opscategory of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._opscategory = opscategory

    @property
    def refderrick(self):
        """Gets the refderrick of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The refderrick of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._refderrick

    @refderrick.setter
    def refderrick(self, refderrick):
        """Sets the refderrick of this JobOfflineDatesTimeLog.


        :param refderrick: The refderrick of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._refderrick = refderrick

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The syscreatedate of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this JobOfflineDatesTimeLog.


        :param syscreatedate: The syscreatedate of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The syscreateuser of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this JobOfflineDatesTimeLog.


        :param syscreateuser: The syscreateuser of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The syslockchildren of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this JobOfflineDatesTimeLog.


        :param syslockchildren: The syslockchildren of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The syslockchildrenui of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this JobOfflineDatesTimeLog.


        :param syslockchildrenui: The syslockchildrenui of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The syslockdate of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this JobOfflineDatesTimeLog.


        :param syslockdate: The syslockdate of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The syslockme of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this JobOfflineDatesTimeLog.


        :param syslockme: The syslockme of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The syslockmeui of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this JobOfflineDatesTimeLog.


        :param syslockmeui: The syslockmeui of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The sysmoddate of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this JobOfflineDatesTimeLog.


        :param sysmoddate: The sysmoddate of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The sysmoduser of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this JobOfflineDatesTimeLog.


        :param sysmoduser: The sysmoduser of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def sysseq(self):
        """Gets the sysseq of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The sysseq of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: int
        """
        return self._sysseq

    @sysseq.setter
    def sysseq(self, sysseq):
        """Sets the sysseq of this JobOfflineDatesTimeLog.


        :param sysseq: The sysseq of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: int
        """

        self._sysseq = sysseq

    @property
    def systag(self):
        """Gets the systag of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The systag of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this JobOfflineDatesTimeLog.


        :param systag: The systag of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def unschedtyp(self):
        """Gets the unschedtyp of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The unschedtyp of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._unschedtyp

    @unschedtyp.setter
    def unschedtyp(self, unschedtyp):
        """Sets the unschedtyp of this JobOfflineDatesTimeLog.


        :param unschedtyp: The unschedtyp of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._unschedtyp = unschedtyp

    @property
    def usertxt1(self):
        """Gets the usertxt1 of this JobOfflineDatesTimeLog.  # noqa: E501


        :return: The usertxt1 of this JobOfflineDatesTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._usertxt1

    @usertxt1.setter
    def usertxt1(self, usertxt1):
        """Sets the usertxt1 of this JobOfflineDatesTimeLog.


        :param usertxt1: The usertxt1 of this JobOfflineDatesTimeLog.  # noqa: E501
        :type: str
        """

        self._usertxt1 = usertxt1

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(JobOfflineDatesTimeLog, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobOfflineDatesTimeLog):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
