# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class TubCompEspMotorPwrCable(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'conditionpull': 'str',
        'conditionrun': 'str',
        'cost': 'OneOfTubCompEspMotorPwrCableCost',
        'costunitlabel': 'str',
        'hoursstart': 'OneOfTubCompEspMotorPwrCableHoursstart',
        'idrec': 'str',
        'idrecparent': 'str',
        'idwell': 'str',
        'pwrcablearmor': 'str',
        'pwrcablega': 'OneOfTubCompEspMotorPwrCablePwrcablega',
        'pwrcableinsul': 'str',
        'pwrcablelength': 'OneOfTubCompEspMotorPwrCablePwrcablelength',
        'pwrcablemake': 'str',
        'pwrcablemodel': 'str',
        'pwrcablenosplice': 'int',
        'pwrcableprofile': 'str',
        'pwrcableshape': 'str',
        'pwrcablesheath': 'str',
        'pwrcablesn': 'str',
        'pwrcabletemprating': 'OneOfTubCompEspMotorPwrCablePwrcabletemprating',
        'pwrcabletensilemax': 'OneOfTubCompEspMotorPwrCablePwrcabletensilemax',
        'pwrcabletyp': 'str',
        'pwrcablevolt': 'OneOfTubCompEspMotorPwrCablePwrcablevolt',
        'pwrcablewtperlength': 'OneOfTubCompEspMotorPwrCablePwrcablewtperlength',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'sysseq': 'int',
        'systag': 'str',
        'tub_comp_esp_motor': 'AnyOfTubCompEspMotorPwrCableTubCompEspMotor'
    }

    attribute_map = {
        'conditionpull': 'conditionpull',
        'conditionrun': 'conditionrun',
        'cost': 'cost',
        'costunitlabel': 'costunitlabel',
        'hoursstart': 'hoursstart',
        'idrec': 'idrec',
        'idrecparent': 'idrecparent',
        'idwell': 'idwell',
        'pwrcablearmor': 'pwrcablearmor',
        'pwrcablega': 'pwrcablega',
        'pwrcableinsul': 'pwrcableinsul',
        'pwrcablelength': 'pwrcablelength',
        'pwrcablemake': 'pwrcablemake',
        'pwrcablemodel': 'pwrcablemodel',
        'pwrcablenosplice': 'pwrcablenosplice',
        'pwrcableprofile': 'pwrcableprofile',
        'pwrcableshape': 'pwrcableshape',
        'pwrcablesheath': 'pwrcablesheath',
        'pwrcablesn': 'pwrcablesn',
        'pwrcabletemprating': 'pwrcabletemprating',
        'pwrcabletensilemax': 'pwrcabletensilemax',
        'pwrcabletyp': 'pwrcabletyp',
        'pwrcablevolt': 'pwrcablevolt',
        'pwrcablewtperlength': 'pwrcablewtperlength',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'sysseq': 'sysseq',
        'systag': 'systag',
        'tub_comp_esp_motor': 'tubCompEspMotor'
    }

    def __init__(self, conditionpull=None, conditionrun=None, cost=None, costunitlabel=None, hoursstart=None, idrec=None, idrecparent=None, idwell=None, pwrcablearmor=None, pwrcablega=None, pwrcableinsul=None, pwrcablelength=None, pwrcablemake=None, pwrcablemodel=None, pwrcablenosplice=None, pwrcableprofile=None, pwrcableshape=None, pwrcablesheath=None, pwrcablesn=None, pwrcabletemprating=None, pwrcabletensilemax=None, pwrcabletyp=None, pwrcablevolt=None, pwrcablewtperlength=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, sysseq=None, systag=None, tub_comp_esp_motor=None):  # noqa: E501
        """TubCompEspMotorPwrCable - a model defined in Swagger"""  # noqa: E501
        self._conditionpull = None
        self._conditionrun = None
        self._cost = None
        self._costunitlabel = None
        self._hoursstart = None
        self._idrec = None
        self._idrecparent = None
        self._idwell = None
        self._pwrcablearmor = None
        self._pwrcablega = None
        self._pwrcableinsul = None
        self._pwrcablelength = None
        self._pwrcablemake = None
        self._pwrcablemodel = None
        self._pwrcablenosplice = None
        self._pwrcableprofile = None
        self._pwrcableshape = None
        self._pwrcablesheath = None
        self._pwrcablesn = None
        self._pwrcabletemprating = None
        self._pwrcabletensilemax = None
        self._pwrcabletyp = None
        self._pwrcablevolt = None
        self._pwrcablewtperlength = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._sysseq = None
        self._systag = None
        self._tub_comp_esp_motor = None
        self.discriminator = None
        if conditionpull is not None:
            self.conditionpull = conditionpull
        if conditionrun is not None:
            self.conditionrun = conditionrun
        if cost is not None:
            self.cost = cost
        if costunitlabel is not None:
            self.costunitlabel = costunitlabel
        if hoursstart is not None:
            self.hoursstart = hoursstart
        if idrec is not None:
            self.idrec = idrec
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idwell is not None:
            self.idwell = idwell
        if pwrcablearmor is not None:
            self.pwrcablearmor = pwrcablearmor
        if pwrcablega is not None:
            self.pwrcablega = pwrcablega
        if pwrcableinsul is not None:
            self.pwrcableinsul = pwrcableinsul
        if pwrcablelength is not None:
            self.pwrcablelength = pwrcablelength
        if pwrcablemake is not None:
            self.pwrcablemake = pwrcablemake
        if pwrcablemodel is not None:
            self.pwrcablemodel = pwrcablemodel
        if pwrcablenosplice is not None:
            self.pwrcablenosplice = pwrcablenosplice
        if pwrcableprofile is not None:
            self.pwrcableprofile = pwrcableprofile
        if pwrcableshape is not None:
            self.pwrcableshape = pwrcableshape
        if pwrcablesheath is not None:
            self.pwrcablesheath = pwrcablesheath
        if pwrcablesn is not None:
            self.pwrcablesn = pwrcablesn
        if pwrcabletemprating is not None:
            self.pwrcabletemprating = pwrcabletemprating
        if pwrcabletensilemax is not None:
            self.pwrcabletensilemax = pwrcabletensilemax
        if pwrcabletyp is not None:
            self.pwrcabletyp = pwrcabletyp
        if pwrcablevolt is not None:
            self.pwrcablevolt = pwrcablevolt
        if pwrcablewtperlength is not None:
            self.pwrcablewtperlength = pwrcablewtperlength
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if sysseq is not None:
            self.sysseq = sysseq
        if systag is not None:
            self.systag = systag
        if tub_comp_esp_motor is not None:
            self.tub_comp_esp_motor = tub_comp_esp_motor

    @property
    def conditionpull(self):
        """Gets the conditionpull of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The conditionpull of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._conditionpull

    @conditionpull.setter
    def conditionpull(self, conditionpull):
        """Sets the conditionpull of this TubCompEspMotorPwrCable.


        :param conditionpull: The conditionpull of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._conditionpull = conditionpull

    @property
    def conditionrun(self):
        """Gets the conditionrun of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The conditionrun of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._conditionrun

    @conditionrun.setter
    def conditionrun(self, conditionrun):
        """Sets the conditionrun of this TubCompEspMotorPwrCable.


        :param conditionrun: The conditionrun of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._conditionrun = conditionrun

    @property
    def cost(self):
        """Gets the cost of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The cost of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: OneOfTubCompEspMotorPwrCableCost
        """
        return self._cost

    @cost.setter
    def cost(self, cost):
        """Sets the cost of this TubCompEspMotorPwrCable.


        :param cost: The cost of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: OneOfTubCompEspMotorPwrCableCost
        """

        self._cost = cost

    @property
    def costunitlabel(self):
        """Gets the costunitlabel of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The costunitlabel of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._costunitlabel

    @costunitlabel.setter
    def costunitlabel(self, costunitlabel):
        """Sets the costunitlabel of this TubCompEspMotorPwrCable.


        :param costunitlabel: The costunitlabel of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._costunitlabel = costunitlabel

    @property
    def hoursstart(self):
        """Gets the hoursstart of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The hoursstart of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: OneOfTubCompEspMotorPwrCableHoursstart
        """
        return self._hoursstart

    @hoursstart.setter
    def hoursstart(self, hoursstart):
        """Sets the hoursstart of this TubCompEspMotorPwrCable.


        :param hoursstart: The hoursstart of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: OneOfTubCompEspMotorPwrCableHoursstart
        """

        self._hoursstart = hoursstart

    @property
    def idrec(self):
        """Gets the idrec of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The idrec of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this TubCompEspMotorPwrCable.


        :param idrec: The idrec of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecparent(self):
        """Gets the idrecparent of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The idrecparent of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this TubCompEspMotorPwrCable.


        :param idrecparent: The idrecparent of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idwell(self):
        """Gets the idwell of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The idwell of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this TubCompEspMotorPwrCable.


        :param idwell: The idwell of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def pwrcablearmor(self):
        """Gets the pwrcablearmor of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcablearmor of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._pwrcablearmor

    @pwrcablearmor.setter
    def pwrcablearmor(self, pwrcablearmor):
        """Sets the pwrcablearmor of this TubCompEspMotorPwrCable.


        :param pwrcablearmor: The pwrcablearmor of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._pwrcablearmor = pwrcablearmor

    @property
    def pwrcablega(self):
        """Gets the pwrcablega of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcablega of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: OneOfTubCompEspMotorPwrCablePwrcablega
        """
        return self._pwrcablega

    @pwrcablega.setter
    def pwrcablega(self, pwrcablega):
        """Sets the pwrcablega of this TubCompEspMotorPwrCable.


        :param pwrcablega: The pwrcablega of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: OneOfTubCompEspMotorPwrCablePwrcablega
        """

        self._pwrcablega = pwrcablega

    @property
    def pwrcableinsul(self):
        """Gets the pwrcableinsul of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcableinsul of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._pwrcableinsul

    @pwrcableinsul.setter
    def pwrcableinsul(self, pwrcableinsul):
        """Sets the pwrcableinsul of this TubCompEspMotorPwrCable.


        :param pwrcableinsul: The pwrcableinsul of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._pwrcableinsul = pwrcableinsul

    @property
    def pwrcablelength(self):
        """Gets the pwrcablelength of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcablelength of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: OneOfTubCompEspMotorPwrCablePwrcablelength
        """
        return self._pwrcablelength

    @pwrcablelength.setter
    def pwrcablelength(self, pwrcablelength):
        """Sets the pwrcablelength of this TubCompEspMotorPwrCable.


        :param pwrcablelength: The pwrcablelength of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: OneOfTubCompEspMotorPwrCablePwrcablelength
        """

        self._pwrcablelength = pwrcablelength

    @property
    def pwrcablemake(self):
        """Gets the pwrcablemake of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcablemake of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._pwrcablemake

    @pwrcablemake.setter
    def pwrcablemake(self, pwrcablemake):
        """Sets the pwrcablemake of this TubCompEspMotorPwrCable.


        :param pwrcablemake: The pwrcablemake of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._pwrcablemake = pwrcablemake

    @property
    def pwrcablemodel(self):
        """Gets the pwrcablemodel of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcablemodel of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._pwrcablemodel

    @pwrcablemodel.setter
    def pwrcablemodel(self, pwrcablemodel):
        """Sets the pwrcablemodel of this TubCompEspMotorPwrCable.


        :param pwrcablemodel: The pwrcablemodel of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._pwrcablemodel = pwrcablemodel

    @property
    def pwrcablenosplice(self):
        """Gets the pwrcablenosplice of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcablenosplice of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: int
        """
        return self._pwrcablenosplice

    @pwrcablenosplice.setter
    def pwrcablenosplice(self, pwrcablenosplice):
        """Sets the pwrcablenosplice of this TubCompEspMotorPwrCable.


        :param pwrcablenosplice: The pwrcablenosplice of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: int
        """

        self._pwrcablenosplice = pwrcablenosplice

    @property
    def pwrcableprofile(self):
        """Gets the pwrcableprofile of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcableprofile of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._pwrcableprofile

    @pwrcableprofile.setter
    def pwrcableprofile(self, pwrcableprofile):
        """Sets the pwrcableprofile of this TubCompEspMotorPwrCable.


        :param pwrcableprofile: The pwrcableprofile of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._pwrcableprofile = pwrcableprofile

    @property
    def pwrcableshape(self):
        """Gets the pwrcableshape of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcableshape of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._pwrcableshape

    @pwrcableshape.setter
    def pwrcableshape(self, pwrcableshape):
        """Sets the pwrcableshape of this TubCompEspMotorPwrCable.


        :param pwrcableshape: The pwrcableshape of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._pwrcableshape = pwrcableshape

    @property
    def pwrcablesheath(self):
        """Gets the pwrcablesheath of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcablesheath of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._pwrcablesheath

    @pwrcablesheath.setter
    def pwrcablesheath(self, pwrcablesheath):
        """Sets the pwrcablesheath of this TubCompEspMotorPwrCable.


        :param pwrcablesheath: The pwrcablesheath of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._pwrcablesheath = pwrcablesheath

    @property
    def pwrcablesn(self):
        """Gets the pwrcablesn of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcablesn of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._pwrcablesn

    @pwrcablesn.setter
    def pwrcablesn(self, pwrcablesn):
        """Sets the pwrcablesn of this TubCompEspMotorPwrCable.


        :param pwrcablesn: The pwrcablesn of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._pwrcablesn = pwrcablesn

    @property
    def pwrcabletemprating(self):
        """Gets the pwrcabletemprating of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcabletemprating of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: OneOfTubCompEspMotorPwrCablePwrcabletemprating
        """
        return self._pwrcabletemprating

    @pwrcabletemprating.setter
    def pwrcabletemprating(self, pwrcabletemprating):
        """Sets the pwrcabletemprating of this TubCompEspMotorPwrCable.


        :param pwrcabletemprating: The pwrcabletemprating of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: OneOfTubCompEspMotorPwrCablePwrcabletemprating
        """

        self._pwrcabletemprating = pwrcabletemprating

    @property
    def pwrcabletensilemax(self):
        """Gets the pwrcabletensilemax of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcabletensilemax of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: OneOfTubCompEspMotorPwrCablePwrcabletensilemax
        """
        return self._pwrcabletensilemax

    @pwrcabletensilemax.setter
    def pwrcabletensilemax(self, pwrcabletensilemax):
        """Sets the pwrcabletensilemax of this TubCompEspMotorPwrCable.


        :param pwrcabletensilemax: The pwrcabletensilemax of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: OneOfTubCompEspMotorPwrCablePwrcabletensilemax
        """

        self._pwrcabletensilemax = pwrcabletensilemax

    @property
    def pwrcabletyp(self):
        """Gets the pwrcabletyp of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcabletyp of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._pwrcabletyp

    @pwrcabletyp.setter
    def pwrcabletyp(self, pwrcabletyp):
        """Sets the pwrcabletyp of this TubCompEspMotorPwrCable.


        :param pwrcabletyp: The pwrcabletyp of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._pwrcabletyp = pwrcabletyp

    @property
    def pwrcablevolt(self):
        """Gets the pwrcablevolt of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcablevolt of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: OneOfTubCompEspMotorPwrCablePwrcablevolt
        """
        return self._pwrcablevolt

    @pwrcablevolt.setter
    def pwrcablevolt(self, pwrcablevolt):
        """Sets the pwrcablevolt of this TubCompEspMotorPwrCable.


        :param pwrcablevolt: The pwrcablevolt of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: OneOfTubCompEspMotorPwrCablePwrcablevolt
        """

        self._pwrcablevolt = pwrcablevolt

    @property
    def pwrcablewtperlength(self):
        """Gets the pwrcablewtperlength of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The pwrcablewtperlength of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: OneOfTubCompEspMotorPwrCablePwrcablewtperlength
        """
        return self._pwrcablewtperlength

    @pwrcablewtperlength.setter
    def pwrcablewtperlength(self, pwrcablewtperlength):
        """Sets the pwrcablewtperlength of this TubCompEspMotorPwrCable.


        :param pwrcablewtperlength: The pwrcablewtperlength of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: OneOfTubCompEspMotorPwrCablePwrcablewtperlength
        """

        self._pwrcablewtperlength = pwrcablewtperlength

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The syscreatedate of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this TubCompEspMotorPwrCable.


        :param syscreatedate: The syscreatedate of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The syscreateuser of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this TubCompEspMotorPwrCable.


        :param syscreateuser: The syscreateuser of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The syslockchildren of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this TubCompEspMotorPwrCable.


        :param syslockchildren: The syslockchildren of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The syslockchildrenui of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this TubCompEspMotorPwrCable.


        :param syslockchildrenui: The syslockchildrenui of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The syslockdate of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this TubCompEspMotorPwrCable.


        :param syslockdate: The syslockdate of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The syslockme of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this TubCompEspMotorPwrCable.


        :param syslockme: The syslockme of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The syslockmeui of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this TubCompEspMotorPwrCable.


        :param syslockmeui: The syslockmeui of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The sysmoddate of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this TubCompEspMotorPwrCable.


        :param sysmoddate: The sysmoddate of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The sysmoduser of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this TubCompEspMotorPwrCable.


        :param sysmoduser: The sysmoduser of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def sysseq(self):
        """Gets the sysseq of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The sysseq of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: int
        """
        return self._sysseq

    @sysseq.setter
    def sysseq(self, sysseq):
        """Sets the sysseq of this TubCompEspMotorPwrCable.


        :param sysseq: The sysseq of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: int
        """

        self._sysseq = sysseq

    @property
    def systag(self):
        """Gets the systag of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The systag of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this TubCompEspMotorPwrCable.


        :param systag: The systag of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def tub_comp_esp_motor(self):
        """Gets the tub_comp_esp_motor of this TubCompEspMotorPwrCable.  # noqa: E501


        :return: The tub_comp_esp_motor of this TubCompEspMotorPwrCable.  # noqa: E501
        :rtype: AnyOfTubCompEspMotorPwrCableTubCompEspMotor
        """
        return self._tub_comp_esp_motor

    @tub_comp_esp_motor.setter
    def tub_comp_esp_motor(self, tub_comp_esp_motor):
        """Sets the tub_comp_esp_motor of this TubCompEspMotorPwrCable.


        :param tub_comp_esp_motor: The tub_comp_esp_motor of this TubCompEspMotorPwrCable.  # noqa: E501
        :type: AnyOfTubCompEspMotorPwrCableTubCompEspMotor
        """

        self._tub_comp_esp_motor = tub_comp_esp_motor

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(TubCompEspMotorPwrCable, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TubCompEspMotorPwrCable):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
