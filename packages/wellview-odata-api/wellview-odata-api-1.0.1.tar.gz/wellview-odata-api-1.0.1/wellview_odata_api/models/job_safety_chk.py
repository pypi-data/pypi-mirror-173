# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class JobSafetyChk(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'com': 'str',
        'des': 'str',
        'dttm': 'datetime',
        'idrec': 'str',
        'idrecparent': 'str',
        'idwell': 'str',
        'inspector': 'str',
        'job': 'AnyOfJobSafetyChkJob',
        'result': 'str',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'systag': 'str',
        'tour': 'str',
        'typ': 'str',
        'typfrequency': 'OneOfJobSafetyChkTypfrequency'
    }

    attribute_map = {
        'com': 'com',
        'des': 'des',
        'dttm': 'dttm',
        'idrec': 'idrec',
        'idrecparent': 'idrecparent',
        'idwell': 'idwell',
        'inspector': 'inspector',
        'job': 'job',
        'result': 'result',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'systag': 'systag',
        'tour': 'tour',
        'typ': 'typ',
        'typfrequency': 'typfrequency'
    }

    def __init__(self, com=None, des=None, dttm=None, idrec=None, idrecparent=None, idwell=None, inspector=None, job=None, result=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, systag=None, tour=None, typ=None, typfrequency=None):  # noqa: E501
        """JobSafetyChk - a model defined in Swagger"""  # noqa: E501
        self._com = None
        self._des = None
        self._dttm = None
        self._idrec = None
        self._idrecparent = None
        self._idwell = None
        self._inspector = None
        self._job = None
        self._result = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._systag = None
        self._tour = None
        self._typ = None
        self._typfrequency = None
        self.discriminator = None
        if com is not None:
            self.com = com
        if des is not None:
            self.des = des
        if dttm is not None:
            self.dttm = dttm
        if idrec is not None:
            self.idrec = idrec
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idwell is not None:
            self.idwell = idwell
        if inspector is not None:
            self.inspector = inspector
        if job is not None:
            self.job = job
        if result is not None:
            self.result = result
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if systag is not None:
            self.systag = systag
        if tour is not None:
            self.tour = tour
        if typ is not None:
            self.typ = typ
        if typfrequency is not None:
            self.typfrequency = typfrequency

    @property
    def com(self):
        """Gets the com of this JobSafetyChk.  # noqa: E501


        :return: The com of this JobSafetyChk.  # noqa: E501
        :rtype: str
        """
        return self._com

    @com.setter
    def com(self, com):
        """Sets the com of this JobSafetyChk.


        :param com: The com of this JobSafetyChk.  # noqa: E501
        :type: str
        """

        self._com = com

    @property
    def des(self):
        """Gets the des of this JobSafetyChk.  # noqa: E501


        :return: The des of this JobSafetyChk.  # noqa: E501
        :rtype: str
        """
        return self._des

    @des.setter
    def des(self, des):
        """Sets the des of this JobSafetyChk.


        :param des: The des of this JobSafetyChk.  # noqa: E501
        :type: str
        """

        self._des = des

    @property
    def dttm(self):
        """Gets the dttm of this JobSafetyChk.  # noqa: E501


        :return: The dttm of this JobSafetyChk.  # noqa: E501
        :rtype: datetime
        """
        return self._dttm

    @dttm.setter
    def dttm(self, dttm):
        """Sets the dttm of this JobSafetyChk.


        :param dttm: The dttm of this JobSafetyChk.  # noqa: E501
        :type: datetime
        """

        self._dttm = dttm

    @property
    def idrec(self):
        """Gets the idrec of this JobSafetyChk.  # noqa: E501


        :return: The idrec of this JobSafetyChk.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this JobSafetyChk.


        :param idrec: The idrec of this JobSafetyChk.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecparent(self):
        """Gets the idrecparent of this JobSafetyChk.  # noqa: E501


        :return: The idrecparent of this JobSafetyChk.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this JobSafetyChk.


        :param idrecparent: The idrecparent of this JobSafetyChk.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idwell(self):
        """Gets the idwell of this JobSafetyChk.  # noqa: E501


        :return: The idwell of this JobSafetyChk.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this JobSafetyChk.


        :param idwell: The idwell of this JobSafetyChk.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def inspector(self):
        """Gets the inspector of this JobSafetyChk.  # noqa: E501


        :return: The inspector of this JobSafetyChk.  # noqa: E501
        :rtype: str
        """
        return self._inspector

    @inspector.setter
    def inspector(self, inspector):
        """Sets the inspector of this JobSafetyChk.


        :param inspector: The inspector of this JobSafetyChk.  # noqa: E501
        :type: str
        """

        self._inspector = inspector

    @property
    def job(self):
        """Gets the job of this JobSafetyChk.  # noqa: E501


        :return: The job of this JobSafetyChk.  # noqa: E501
        :rtype: AnyOfJobSafetyChkJob
        """
        return self._job

    @job.setter
    def job(self, job):
        """Sets the job of this JobSafetyChk.


        :param job: The job of this JobSafetyChk.  # noqa: E501
        :type: AnyOfJobSafetyChkJob
        """

        self._job = job

    @property
    def result(self):
        """Gets the result of this JobSafetyChk.  # noqa: E501


        :return: The result of this JobSafetyChk.  # noqa: E501
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this JobSafetyChk.


        :param result: The result of this JobSafetyChk.  # noqa: E501
        :type: str
        """

        self._result = result

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this JobSafetyChk.  # noqa: E501


        :return: The syscreatedate of this JobSafetyChk.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this JobSafetyChk.


        :param syscreatedate: The syscreatedate of this JobSafetyChk.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this JobSafetyChk.  # noqa: E501


        :return: The syscreateuser of this JobSafetyChk.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this JobSafetyChk.


        :param syscreateuser: The syscreateuser of this JobSafetyChk.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this JobSafetyChk.  # noqa: E501


        :return: The syslockchildren of this JobSafetyChk.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this JobSafetyChk.


        :param syslockchildren: The syslockchildren of this JobSafetyChk.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this JobSafetyChk.  # noqa: E501


        :return: The syslockchildrenui of this JobSafetyChk.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this JobSafetyChk.


        :param syslockchildrenui: The syslockchildrenui of this JobSafetyChk.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this JobSafetyChk.  # noqa: E501


        :return: The syslockdate of this JobSafetyChk.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this JobSafetyChk.


        :param syslockdate: The syslockdate of this JobSafetyChk.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this JobSafetyChk.  # noqa: E501


        :return: The syslockme of this JobSafetyChk.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this JobSafetyChk.


        :param syslockme: The syslockme of this JobSafetyChk.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this JobSafetyChk.  # noqa: E501


        :return: The syslockmeui of this JobSafetyChk.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this JobSafetyChk.


        :param syslockmeui: The syslockmeui of this JobSafetyChk.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this JobSafetyChk.  # noqa: E501


        :return: The sysmoddate of this JobSafetyChk.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this JobSafetyChk.


        :param sysmoddate: The sysmoddate of this JobSafetyChk.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this JobSafetyChk.  # noqa: E501


        :return: The sysmoduser of this JobSafetyChk.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this JobSafetyChk.


        :param sysmoduser: The sysmoduser of this JobSafetyChk.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def systag(self):
        """Gets the systag of this JobSafetyChk.  # noqa: E501


        :return: The systag of this JobSafetyChk.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this JobSafetyChk.


        :param systag: The systag of this JobSafetyChk.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def tour(self):
        """Gets the tour of this JobSafetyChk.  # noqa: E501


        :return: The tour of this JobSafetyChk.  # noqa: E501
        :rtype: str
        """
        return self._tour

    @tour.setter
    def tour(self, tour):
        """Sets the tour of this JobSafetyChk.


        :param tour: The tour of this JobSafetyChk.  # noqa: E501
        :type: str
        """

        self._tour = tour

    @property
    def typ(self):
        """Gets the typ of this JobSafetyChk.  # noqa: E501


        :return: The typ of this JobSafetyChk.  # noqa: E501
        :rtype: str
        """
        return self._typ

    @typ.setter
    def typ(self, typ):
        """Sets the typ of this JobSafetyChk.


        :param typ: The typ of this JobSafetyChk.  # noqa: E501
        :type: str
        """

        self._typ = typ

    @property
    def typfrequency(self):
        """Gets the typfrequency of this JobSafetyChk.  # noqa: E501


        :return: The typfrequency of this JobSafetyChk.  # noqa: E501
        :rtype: OneOfJobSafetyChkTypfrequency
        """
        return self._typfrequency

    @typfrequency.setter
    def typfrequency(self, typfrequency):
        """Sets the typfrequency of this JobSafetyChk.


        :param typfrequency: The typfrequency of this JobSafetyChk.  # noqa: E501
        :type: OneOfJobSafetyChkTypfrequency
        """

        self._typfrequency = typfrequency

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(JobSafetyChk, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobSafetyChk):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
