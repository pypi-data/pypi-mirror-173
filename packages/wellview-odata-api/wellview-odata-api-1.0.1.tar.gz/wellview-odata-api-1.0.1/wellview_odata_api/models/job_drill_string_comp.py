# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class JobDrillStringComp(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'coating': 'str',
        'com': 'str',
        'compsubtyp': 'str',
        'conditionpull': 'str',
        'conditionrun': 'str',
        'connszbtm': 'OneOfJobDrillStringCompConnszbtm',
        'connsztop': 'OneOfJobDrillStringCompConnsztop',
        'connthrdbtm': 'str',
        'connthrdtop': 'str',
        'conntypbtm': 'str',
        'conntyptop': 'str',
        'cost': 'OneOfJobDrillStringCompCost',
        'costunitlabel': 'str',
        'currentstatus': 'str',
        'des': 'str',
        'dttmlastinspect': 'datetime',
        'dttmmanufacture': 'datetime',
        'fishnecklength': 'OneOfJobDrillStringCompFishnecklength',
        'fishneckod': 'OneOfJobDrillStringCompFishneckod',
        'grade': 'str',
        'hoursstart': 'OneOfJobDrillStringCompHoursstart',
        'iconname': 'str',
        'idrec': 'str',
        'idrecparent': 'str',
        'idwell': 'str',
        'job_drill_string': 'AnyOfJobDrillStringCompJobDrillString',
        'job_drill_string_comp_accs': 'list[JobDrillStringCompAcc]',
        'job_drill_string_comp_motors': 'list[JobDrillStringCompMotor]',
        'job_drill_string_comp_statuses': 'list[JobDrillStringCompStatus]',
        'job_drill_string_comp_tallies': 'list[JobDrillStringCompTally]',
        'job_drill_string_comp_vgs': 'list[JobDrillStringCompVgs]',
        'joints': 'int',
        'length': 'OneOfJobDrillStringCompLength',
        'linetosurf': 'int',
        'make': 'str',
        'material': 'str',
        'model': 'str',
        'owner': 'str',
        'refid': 'str',
        'service': 'str',
        'sn': 'str',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'sysseq': 'int',
        'systag': 'str',
        'szdrift': 'OneOfJobDrillStringCompSzdrift',
        'szidnom': 'OneOfJobDrillStringCompSzidnom',
        'szodmax': 'OneOfJobDrillStringCompSzodmax',
        'szodnom': 'OneOfJobDrillStringCompSzodnom',
        'temprating': 'OneOfJobDrillStringCompTemprating',
        'tensilemax': 'OneOfJobDrillStringCompTensilemax',
        'torquemax': 'OneOfJobDrillStringCompTorquemax',
        'torquemin': 'OneOfJobDrillStringCompTorquemin',
        'upsetbtm': 'str',
        'upsettop': 'str',
        'usedclass': 'str',
        'wtperlength': 'OneOfJobDrillStringCompWtperlength'
    }

    attribute_map = {
        'coating': 'coating',
        'com': 'com',
        'compsubtyp': 'compsubtyp',
        'conditionpull': 'conditionpull',
        'conditionrun': 'conditionrun',
        'connszbtm': 'connszbtm',
        'connsztop': 'connsztop',
        'connthrdbtm': 'connthrdbtm',
        'connthrdtop': 'connthrdtop',
        'conntypbtm': 'conntypbtm',
        'conntyptop': 'conntyptop',
        'cost': 'cost',
        'costunitlabel': 'costunitlabel',
        'currentstatus': 'currentstatus',
        'des': 'des',
        'dttmlastinspect': 'dttmlastinspect',
        'dttmmanufacture': 'dttmmanufacture',
        'fishnecklength': 'fishnecklength',
        'fishneckod': 'fishneckod',
        'grade': 'grade',
        'hoursstart': 'hoursstart',
        'iconname': 'iconname',
        'idrec': 'idrec',
        'idrecparent': 'idrecparent',
        'idwell': 'idwell',
        'job_drill_string': 'jobDrillString',
        'job_drill_string_comp_accs': 'jobDrillStringCompAccs',
        'job_drill_string_comp_motors': 'jobDrillStringCompMotors',
        'job_drill_string_comp_statuses': 'jobDrillStringCompStatuses',
        'job_drill_string_comp_tallies': 'jobDrillStringCompTallies',
        'job_drill_string_comp_vgs': 'jobDrillStringCompVgs',
        'joints': 'joints',
        'length': 'length',
        'linetosurf': 'linetosurf',
        'make': 'make',
        'material': 'material',
        'model': 'model',
        'owner': 'owner',
        'refid': 'refid',
        'service': 'service',
        'sn': 'sn',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'sysseq': 'sysseq',
        'systag': 'systag',
        'szdrift': 'szdrift',
        'szidnom': 'szidnom',
        'szodmax': 'szodmax',
        'szodnom': 'szodnom',
        'temprating': 'temprating',
        'tensilemax': 'tensilemax',
        'torquemax': 'torquemax',
        'torquemin': 'torquemin',
        'upsetbtm': 'upsetbtm',
        'upsettop': 'upsettop',
        'usedclass': 'usedclass',
        'wtperlength': 'wtperlength'
    }

    def __init__(self, coating=None, com=None, compsubtyp=None, conditionpull=None, conditionrun=None, connszbtm=None, connsztop=None, connthrdbtm=None, connthrdtop=None, conntypbtm=None, conntyptop=None, cost=None, costunitlabel=None, currentstatus=None, des=None, dttmlastinspect=None, dttmmanufacture=None, fishnecklength=None, fishneckod=None, grade=None, hoursstart=None, iconname=None, idrec=None, idrecparent=None, idwell=None, job_drill_string=None, job_drill_string_comp_accs=None, job_drill_string_comp_motors=None, job_drill_string_comp_statuses=None, job_drill_string_comp_tallies=None, job_drill_string_comp_vgs=None, joints=None, length=None, linetosurf=None, make=None, material=None, model=None, owner=None, refid=None, service=None, sn=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, sysseq=None, systag=None, szdrift=None, szidnom=None, szodmax=None, szodnom=None, temprating=None, tensilemax=None, torquemax=None, torquemin=None, upsetbtm=None, upsettop=None, usedclass=None, wtperlength=None):  # noqa: E501
        """JobDrillStringComp - a model defined in Swagger"""  # noqa: E501
        self._coating = None
        self._com = None
        self._compsubtyp = None
        self._conditionpull = None
        self._conditionrun = None
        self._connszbtm = None
        self._connsztop = None
        self._connthrdbtm = None
        self._connthrdtop = None
        self._conntypbtm = None
        self._conntyptop = None
        self._cost = None
        self._costunitlabel = None
        self._currentstatus = None
        self._des = None
        self._dttmlastinspect = None
        self._dttmmanufacture = None
        self._fishnecklength = None
        self._fishneckod = None
        self._grade = None
        self._hoursstart = None
        self._iconname = None
        self._idrec = None
        self._idrecparent = None
        self._idwell = None
        self._job_drill_string = None
        self._job_drill_string_comp_accs = None
        self._job_drill_string_comp_motors = None
        self._job_drill_string_comp_statuses = None
        self._job_drill_string_comp_tallies = None
        self._job_drill_string_comp_vgs = None
        self._joints = None
        self._length = None
        self._linetosurf = None
        self._make = None
        self._material = None
        self._model = None
        self._owner = None
        self._refid = None
        self._service = None
        self._sn = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._sysseq = None
        self._systag = None
        self._szdrift = None
        self._szidnom = None
        self._szodmax = None
        self._szodnom = None
        self._temprating = None
        self._tensilemax = None
        self._torquemax = None
        self._torquemin = None
        self._upsetbtm = None
        self._upsettop = None
        self._usedclass = None
        self._wtperlength = None
        self.discriminator = None
        if coating is not None:
            self.coating = coating
        if com is not None:
            self.com = com
        if compsubtyp is not None:
            self.compsubtyp = compsubtyp
        if conditionpull is not None:
            self.conditionpull = conditionpull
        if conditionrun is not None:
            self.conditionrun = conditionrun
        if connszbtm is not None:
            self.connszbtm = connszbtm
        if connsztop is not None:
            self.connsztop = connsztop
        if connthrdbtm is not None:
            self.connthrdbtm = connthrdbtm
        if connthrdtop is not None:
            self.connthrdtop = connthrdtop
        if conntypbtm is not None:
            self.conntypbtm = conntypbtm
        if conntyptop is not None:
            self.conntyptop = conntyptop
        if cost is not None:
            self.cost = cost
        if costunitlabel is not None:
            self.costunitlabel = costunitlabel
        if currentstatus is not None:
            self.currentstatus = currentstatus
        if des is not None:
            self.des = des
        if dttmlastinspect is not None:
            self.dttmlastinspect = dttmlastinspect
        if dttmmanufacture is not None:
            self.dttmmanufacture = dttmmanufacture
        if fishnecklength is not None:
            self.fishnecklength = fishnecklength
        if fishneckod is not None:
            self.fishneckod = fishneckod
        if grade is not None:
            self.grade = grade
        if hoursstart is not None:
            self.hoursstart = hoursstart
        if iconname is not None:
            self.iconname = iconname
        if idrec is not None:
            self.idrec = idrec
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idwell is not None:
            self.idwell = idwell
        if job_drill_string is not None:
            self.job_drill_string = job_drill_string
        if job_drill_string_comp_accs is not None:
            self.job_drill_string_comp_accs = job_drill_string_comp_accs
        if job_drill_string_comp_motors is not None:
            self.job_drill_string_comp_motors = job_drill_string_comp_motors
        if job_drill_string_comp_statuses is not None:
            self.job_drill_string_comp_statuses = job_drill_string_comp_statuses
        if job_drill_string_comp_tallies is not None:
            self.job_drill_string_comp_tallies = job_drill_string_comp_tallies
        if job_drill_string_comp_vgs is not None:
            self.job_drill_string_comp_vgs = job_drill_string_comp_vgs
        if joints is not None:
            self.joints = joints
        if length is not None:
            self.length = length
        if linetosurf is not None:
            self.linetosurf = linetosurf
        if make is not None:
            self.make = make
        if material is not None:
            self.material = material
        if model is not None:
            self.model = model
        if owner is not None:
            self.owner = owner
        if refid is not None:
            self.refid = refid
        if service is not None:
            self.service = service
        if sn is not None:
            self.sn = sn
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if sysseq is not None:
            self.sysseq = sysseq
        if systag is not None:
            self.systag = systag
        if szdrift is not None:
            self.szdrift = szdrift
        if szidnom is not None:
            self.szidnom = szidnom
        if szodmax is not None:
            self.szodmax = szodmax
        if szodnom is not None:
            self.szodnom = szodnom
        if temprating is not None:
            self.temprating = temprating
        if tensilemax is not None:
            self.tensilemax = tensilemax
        if torquemax is not None:
            self.torquemax = torquemax
        if torquemin is not None:
            self.torquemin = torquemin
        if upsetbtm is not None:
            self.upsetbtm = upsetbtm
        if upsettop is not None:
            self.upsettop = upsettop
        if usedclass is not None:
            self.usedclass = usedclass
        if wtperlength is not None:
            self.wtperlength = wtperlength

    @property
    def coating(self):
        """Gets the coating of this JobDrillStringComp.  # noqa: E501


        :return: The coating of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._coating

    @coating.setter
    def coating(self, coating):
        """Sets the coating of this JobDrillStringComp.


        :param coating: The coating of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._coating = coating

    @property
    def com(self):
        """Gets the com of this JobDrillStringComp.  # noqa: E501


        :return: The com of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._com

    @com.setter
    def com(self, com):
        """Sets the com of this JobDrillStringComp.


        :param com: The com of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._com = com

    @property
    def compsubtyp(self):
        """Gets the compsubtyp of this JobDrillStringComp.  # noqa: E501


        :return: The compsubtyp of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._compsubtyp

    @compsubtyp.setter
    def compsubtyp(self, compsubtyp):
        """Sets the compsubtyp of this JobDrillStringComp.


        :param compsubtyp: The compsubtyp of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._compsubtyp = compsubtyp

    @property
    def conditionpull(self):
        """Gets the conditionpull of this JobDrillStringComp.  # noqa: E501


        :return: The conditionpull of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._conditionpull

    @conditionpull.setter
    def conditionpull(self, conditionpull):
        """Sets the conditionpull of this JobDrillStringComp.


        :param conditionpull: The conditionpull of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._conditionpull = conditionpull

    @property
    def conditionrun(self):
        """Gets the conditionrun of this JobDrillStringComp.  # noqa: E501


        :return: The conditionrun of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._conditionrun

    @conditionrun.setter
    def conditionrun(self, conditionrun):
        """Sets the conditionrun of this JobDrillStringComp.


        :param conditionrun: The conditionrun of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._conditionrun = conditionrun

    @property
    def connszbtm(self):
        """Gets the connszbtm of this JobDrillStringComp.  # noqa: E501


        :return: The connszbtm of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompConnszbtm
        """
        return self._connszbtm

    @connszbtm.setter
    def connszbtm(self, connszbtm):
        """Sets the connszbtm of this JobDrillStringComp.


        :param connszbtm: The connszbtm of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompConnszbtm
        """

        self._connszbtm = connszbtm

    @property
    def connsztop(self):
        """Gets the connsztop of this JobDrillStringComp.  # noqa: E501


        :return: The connsztop of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompConnsztop
        """
        return self._connsztop

    @connsztop.setter
    def connsztop(self, connsztop):
        """Sets the connsztop of this JobDrillStringComp.


        :param connsztop: The connsztop of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompConnsztop
        """

        self._connsztop = connsztop

    @property
    def connthrdbtm(self):
        """Gets the connthrdbtm of this JobDrillStringComp.  # noqa: E501


        :return: The connthrdbtm of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._connthrdbtm

    @connthrdbtm.setter
    def connthrdbtm(self, connthrdbtm):
        """Sets the connthrdbtm of this JobDrillStringComp.


        :param connthrdbtm: The connthrdbtm of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._connthrdbtm = connthrdbtm

    @property
    def connthrdtop(self):
        """Gets the connthrdtop of this JobDrillStringComp.  # noqa: E501


        :return: The connthrdtop of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._connthrdtop

    @connthrdtop.setter
    def connthrdtop(self, connthrdtop):
        """Sets the connthrdtop of this JobDrillStringComp.


        :param connthrdtop: The connthrdtop of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._connthrdtop = connthrdtop

    @property
    def conntypbtm(self):
        """Gets the conntypbtm of this JobDrillStringComp.  # noqa: E501


        :return: The conntypbtm of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._conntypbtm

    @conntypbtm.setter
    def conntypbtm(self, conntypbtm):
        """Sets the conntypbtm of this JobDrillStringComp.


        :param conntypbtm: The conntypbtm of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._conntypbtm = conntypbtm

    @property
    def conntyptop(self):
        """Gets the conntyptop of this JobDrillStringComp.  # noqa: E501


        :return: The conntyptop of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._conntyptop

    @conntyptop.setter
    def conntyptop(self, conntyptop):
        """Sets the conntyptop of this JobDrillStringComp.


        :param conntyptop: The conntyptop of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._conntyptop = conntyptop

    @property
    def cost(self):
        """Gets the cost of this JobDrillStringComp.  # noqa: E501


        :return: The cost of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompCost
        """
        return self._cost

    @cost.setter
    def cost(self, cost):
        """Sets the cost of this JobDrillStringComp.


        :param cost: The cost of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompCost
        """

        self._cost = cost

    @property
    def costunitlabel(self):
        """Gets the costunitlabel of this JobDrillStringComp.  # noqa: E501


        :return: The costunitlabel of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._costunitlabel

    @costunitlabel.setter
    def costunitlabel(self, costunitlabel):
        """Sets the costunitlabel of this JobDrillStringComp.


        :param costunitlabel: The costunitlabel of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._costunitlabel = costunitlabel

    @property
    def currentstatus(self):
        """Gets the currentstatus of this JobDrillStringComp.  # noqa: E501


        :return: The currentstatus of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._currentstatus

    @currentstatus.setter
    def currentstatus(self, currentstatus):
        """Sets the currentstatus of this JobDrillStringComp.


        :param currentstatus: The currentstatus of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._currentstatus = currentstatus

    @property
    def des(self):
        """Gets the des of this JobDrillStringComp.  # noqa: E501


        :return: The des of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._des

    @des.setter
    def des(self, des):
        """Sets the des of this JobDrillStringComp.


        :param des: The des of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._des = des

    @property
    def dttmlastinspect(self):
        """Gets the dttmlastinspect of this JobDrillStringComp.  # noqa: E501


        :return: The dttmlastinspect of this JobDrillStringComp.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmlastinspect

    @dttmlastinspect.setter
    def dttmlastinspect(self, dttmlastinspect):
        """Sets the dttmlastinspect of this JobDrillStringComp.


        :param dttmlastinspect: The dttmlastinspect of this JobDrillStringComp.  # noqa: E501
        :type: datetime
        """

        self._dttmlastinspect = dttmlastinspect

    @property
    def dttmmanufacture(self):
        """Gets the dttmmanufacture of this JobDrillStringComp.  # noqa: E501


        :return: The dttmmanufacture of this JobDrillStringComp.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmmanufacture

    @dttmmanufacture.setter
    def dttmmanufacture(self, dttmmanufacture):
        """Sets the dttmmanufacture of this JobDrillStringComp.


        :param dttmmanufacture: The dttmmanufacture of this JobDrillStringComp.  # noqa: E501
        :type: datetime
        """

        self._dttmmanufacture = dttmmanufacture

    @property
    def fishnecklength(self):
        """Gets the fishnecklength of this JobDrillStringComp.  # noqa: E501


        :return: The fishnecklength of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompFishnecklength
        """
        return self._fishnecklength

    @fishnecklength.setter
    def fishnecklength(self, fishnecklength):
        """Sets the fishnecklength of this JobDrillStringComp.


        :param fishnecklength: The fishnecklength of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompFishnecklength
        """

        self._fishnecklength = fishnecklength

    @property
    def fishneckod(self):
        """Gets the fishneckod of this JobDrillStringComp.  # noqa: E501


        :return: The fishneckod of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompFishneckod
        """
        return self._fishneckod

    @fishneckod.setter
    def fishneckod(self, fishneckod):
        """Sets the fishneckod of this JobDrillStringComp.


        :param fishneckod: The fishneckod of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompFishneckod
        """

        self._fishneckod = fishneckod

    @property
    def grade(self):
        """Gets the grade of this JobDrillStringComp.  # noqa: E501


        :return: The grade of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._grade

    @grade.setter
    def grade(self, grade):
        """Sets the grade of this JobDrillStringComp.


        :param grade: The grade of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._grade = grade

    @property
    def hoursstart(self):
        """Gets the hoursstart of this JobDrillStringComp.  # noqa: E501


        :return: The hoursstart of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompHoursstart
        """
        return self._hoursstart

    @hoursstart.setter
    def hoursstart(self, hoursstart):
        """Sets the hoursstart of this JobDrillStringComp.


        :param hoursstart: The hoursstart of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompHoursstart
        """

        self._hoursstart = hoursstart

    @property
    def iconname(self):
        """Gets the iconname of this JobDrillStringComp.  # noqa: E501


        :return: The iconname of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._iconname

    @iconname.setter
    def iconname(self, iconname):
        """Sets the iconname of this JobDrillStringComp.


        :param iconname: The iconname of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._iconname = iconname

    @property
    def idrec(self):
        """Gets the idrec of this JobDrillStringComp.  # noqa: E501


        :return: The idrec of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this JobDrillStringComp.


        :param idrec: The idrec of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecparent(self):
        """Gets the idrecparent of this JobDrillStringComp.  # noqa: E501


        :return: The idrecparent of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this JobDrillStringComp.


        :param idrecparent: The idrecparent of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idwell(self):
        """Gets the idwell of this JobDrillStringComp.  # noqa: E501


        :return: The idwell of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this JobDrillStringComp.


        :param idwell: The idwell of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def job_drill_string(self):
        """Gets the job_drill_string of this JobDrillStringComp.  # noqa: E501


        :return: The job_drill_string of this JobDrillStringComp.  # noqa: E501
        :rtype: AnyOfJobDrillStringCompJobDrillString
        """
        return self._job_drill_string

    @job_drill_string.setter
    def job_drill_string(self, job_drill_string):
        """Sets the job_drill_string of this JobDrillStringComp.


        :param job_drill_string: The job_drill_string of this JobDrillStringComp.  # noqa: E501
        :type: AnyOfJobDrillStringCompJobDrillString
        """

        self._job_drill_string = job_drill_string

    @property
    def job_drill_string_comp_accs(self):
        """Gets the job_drill_string_comp_accs of this JobDrillStringComp.  # noqa: E501


        :return: The job_drill_string_comp_accs of this JobDrillStringComp.  # noqa: E501
        :rtype: list[JobDrillStringCompAcc]
        """
        return self._job_drill_string_comp_accs

    @job_drill_string_comp_accs.setter
    def job_drill_string_comp_accs(self, job_drill_string_comp_accs):
        """Sets the job_drill_string_comp_accs of this JobDrillStringComp.


        :param job_drill_string_comp_accs: The job_drill_string_comp_accs of this JobDrillStringComp.  # noqa: E501
        :type: list[JobDrillStringCompAcc]
        """

        self._job_drill_string_comp_accs = job_drill_string_comp_accs

    @property
    def job_drill_string_comp_motors(self):
        """Gets the job_drill_string_comp_motors of this JobDrillStringComp.  # noqa: E501


        :return: The job_drill_string_comp_motors of this JobDrillStringComp.  # noqa: E501
        :rtype: list[JobDrillStringCompMotor]
        """
        return self._job_drill_string_comp_motors

    @job_drill_string_comp_motors.setter
    def job_drill_string_comp_motors(self, job_drill_string_comp_motors):
        """Sets the job_drill_string_comp_motors of this JobDrillStringComp.


        :param job_drill_string_comp_motors: The job_drill_string_comp_motors of this JobDrillStringComp.  # noqa: E501
        :type: list[JobDrillStringCompMotor]
        """

        self._job_drill_string_comp_motors = job_drill_string_comp_motors

    @property
    def job_drill_string_comp_statuses(self):
        """Gets the job_drill_string_comp_statuses of this JobDrillStringComp.  # noqa: E501


        :return: The job_drill_string_comp_statuses of this JobDrillStringComp.  # noqa: E501
        :rtype: list[JobDrillStringCompStatus]
        """
        return self._job_drill_string_comp_statuses

    @job_drill_string_comp_statuses.setter
    def job_drill_string_comp_statuses(self, job_drill_string_comp_statuses):
        """Sets the job_drill_string_comp_statuses of this JobDrillStringComp.


        :param job_drill_string_comp_statuses: The job_drill_string_comp_statuses of this JobDrillStringComp.  # noqa: E501
        :type: list[JobDrillStringCompStatus]
        """

        self._job_drill_string_comp_statuses = job_drill_string_comp_statuses

    @property
    def job_drill_string_comp_tallies(self):
        """Gets the job_drill_string_comp_tallies of this JobDrillStringComp.  # noqa: E501


        :return: The job_drill_string_comp_tallies of this JobDrillStringComp.  # noqa: E501
        :rtype: list[JobDrillStringCompTally]
        """
        return self._job_drill_string_comp_tallies

    @job_drill_string_comp_tallies.setter
    def job_drill_string_comp_tallies(self, job_drill_string_comp_tallies):
        """Sets the job_drill_string_comp_tallies of this JobDrillStringComp.


        :param job_drill_string_comp_tallies: The job_drill_string_comp_tallies of this JobDrillStringComp.  # noqa: E501
        :type: list[JobDrillStringCompTally]
        """

        self._job_drill_string_comp_tallies = job_drill_string_comp_tallies

    @property
    def job_drill_string_comp_vgs(self):
        """Gets the job_drill_string_comp_vgs of this JobDrillStringComp.  # noqa: E501


        :return: The job_drill_string_comp_vgs of this JobDrillStringComp.  # noqa: E501
        :rtype: list[JobDrillStringCompVgs]
        """
        return self._job_drill_string_comp_vgs

    @job_drill_string_comp_vgs.setter
    def job_drill_string_comp_vgs(self, job_drill_string_comp_vgs):
        """Sets the job_drill_string_comp_vgs of this JobDrillStringComp.


        :param job_drill_string_comp_vgs: The job_drill_string_comp_vgs of this JobDrillStringComp.  # noqa: E501
        :type: list[JobDrillStringCompVgs]
        """

        self._job_drill_string_comp_vgs = job_drill_string_comp_vgs

    @property
    def joints(self):
        """Gets the joints of this JobDrillStringComp.  # noqa: E501


        :return: The joints of this JobDrillStringComp.  # noqa: E501
        :rtype: int
        """
        return self._joints

    @joints.setter
    def joints(self, joints):
        """Sets the joints of this JobDrillStringComp.


        :param joints: The joints of this JobDrillStringComp.  # noqa: E501
        :type: int
        """

        self._joints = joints

    @property
    def length(self):
        """Gets the length of this JobDrillStringComp.  # noqa: E501


        :return: The length of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompLength
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this JobDrillStringComp.


        :param length: The length of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompLength
        """

        self._length = length

    @property
    def linetosurf(self):
        """Gets the linetosurf of this JobDrillStringComp.  # noqa: E501


        :return: The linetosurf of this JobDrillStringComp.  # noqa: E501
        :rtype: int
        """
        return self._linetosurf

    @linetosurf.setter
    def linetosurf(self, linetosurf):
        """Sets the linetosurf of this JobDrillStringComp.


        :param linetosurf: The linetosurf of this JobDrillStringComp.  # noqa: E501
        :type: int
        """

        self._linetosurf = linetosurf

    @property
    def make(self):
        """Gets the make of this JobDrillStringComp.  # noqa: E501


        :return: The make of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._make

    @make.setter
    def make(self, make):
        """Sets the make of this JobDrillStringComp.


        :param make: The make of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._make = make

    @property
    def material(self):
        """Gets the material of this JobDrillStringComp.  # noqa: E501


        :return: The material of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._material

    @material.setter
    def material(self, material):
        """Sets the material of this JobDrillStringComp.


        :param material: The material of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._material = material

    @property
    def model(self):
        """Gets the model of this JobDrillStringComp.  # noqa: E501


        :return: The model of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this JobDrillStringComp.


        :param model: The model of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._model = model

    @property
    def owner(self):
        """Gets the owner of this JobDrillStringComp.  # noqa: E501


        :return: The owner of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this JobDrillStringComp.


        :param owner: The owner of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._owner = owner

    @property
    def refid(self):
        """Gets the refid of this JobDrillStringComp.  # noqa: E501


        :return: The refid of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._refid

    @refid.setter
    def refid(self, refid):
        """Sets the refid of this JobDrillStringComp.


        :param refid: The refid of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._refid = refid

    @property
    def service(self):
        """Gets the service of this JobDrillStringComp.  # noqa: E501


        :return: The service of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this JobDrillStringComp.


        :param service: The service of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._service = service

    @property
    def sn(self):
        """Gets the sn of this JobDrillStringComp.  # noqa: E501


        :return: The sn of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._sn

    @sn.setter
    def sn(self, sn):
        """Sets the sn of this JobDrillStringComp.


        :param sn: The sn of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._sn = sn

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this JobDrillStringComp.  # noqa: E501


        :return: The syscreatedate of this JobDrillStringComp.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this JobDrillStringComp.


        :param syscreatedate: The syscreatedate of this JobDrillStringComp.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this JobDrillStringComp.  # noqa: E501


        :return: The syscreateuser of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this JobDrillStringComp.


        :param syscreateuser: The syscreateuser of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this JobDrillStringComp.  # noqa: E501


        :return: The syslockchildren of this JobDrillStringComp.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this JobDrillStringComp.


        :param syslockchildren: The syslockchildren of this JobDrillStringComp.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this JobDrillStringComp.  # noqa: E501


        :return: The syslockchildrenui of this JobDrillStringComp.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this JobDrillStringComp.


        :param syslockchildrenui: The syslockchildrenui of this JobDrillStringComp.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this JobDrillStringComp.  # noqa: E501


        :return: The syslockdate of this JobDrillStringComp.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this JobDrillStringComp.


        :param syslockdate: The syslockdate of this JobDrillStringComp.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this JobDrillStringComp.  # noqa: E501


        :return: The syslockme of this JobDrillStringComp.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this JobDrillStringComp.


        :param syslockme: The syslockme of this JobDrillStringComp.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this JobDrillStringComp.  # noqa: E501


        :return: The syslockmeui of this JobDrillStringComp.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this JobDrillStringComp.


        :param syslockmeui: The syslockmeui of this JobDrillStringComp.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this JobDrillStringComp.  # noqa: E501


        :return: The sysmoddate of this JobDrillStringComp.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this JobDrillStringComp.


        :param sysmoddate: The sysmoddate of this JobDrillStringComp.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this JobDrillStringComp.  # noqa: E501


        :return: The sysmoduser of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this JobDrillStringComp.


        :param sysmoduser: The sysmoduser of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def sysseq(self):
        """Gets the sysseq of this JobDrillStringComp.  # noqa: E501


        :return: The sysseq of this JobDrillStringComp.  # noqa: E501
        :rtype: int
        """
        return self._sysseq

    @sysseq.setter
    def sysseq(self, sysseq):
        """Sets the sysseq of this JobDrillStringComp.


        :param sysseq: The sysseq of this JobDrillStringComp.  # noqa: E501
        :type: int
        """

        self._sysseq = sysseq

    @property
    def systag(self):
        """Gets the systag of this JobDrillStringComp.  # noqa: E501


        :return: The systag of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this JobDrillStringComp.


        :param systag: The systag of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def szdrift(self):
        """Gets the szdrift of this JobDrillStringComp.  # noqa: E501


        :return: The szdrift of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompSzdrift
        """
        return self._szdrift

    @szdrift.setter
    def szdrift(self, szdrift):
        """Sets the szdrift of this JobDrillStringComp.


        :param szdrift: The szdrift of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompSzdrift
        """

        self._szdrift = szdrift

    @property
    def szidnom(self):
        """Gets the szidnom of this JobDrillStringComp.  # noqa: E501


        :return: The szidnom of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompSzidnom
        """
        return self._szidnom

    @szidnom.setter
    def szidnom(self, szidnom):
        """Sets the szidnom of this JobDrillStringComp.


        :param szidnom: The szidnom of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompSzidnom
        """

        self._szidnom = szidnom

    @property
    def szodmax(self):
        """Gets the szodmax of this JobDrillStringComp.  # noqa: E501


        :return: The szodmax of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompSzodmax
        """
        return self._szodmax

    @szodmax.setter
    def szodmax(self, szodmax):
        """Sets the szodmax of this JobDrillStringComp.


        :param szodmax: The szodmax of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompSzodmax
        """

        self._szodmax = szodmax

    @property
    def szodnom(self):
        """Gets the szodnom of this JobDrillStringComp.  # noqa: E501


        :return: The szodnom of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompSzodnom
        """
        return self._szodnom

    @szodnom.setter
    def szodnom(self, szodnom):
        """Sets the szodnom of this JobDrillStringComp.


        :param szodnom: The szodnom of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompSzodnom
        """

        self._szodnom = szodnom

    @property
    def temprating(self):
        """Gets the temprating of this JobDrillStringComp.  # noqa: E501


        :return: The temprating of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompTemprating
        """
        return self._temprating

    @temprating.setter
    def temprating(self, temprating):
        """Sets the temprating of this JobDrillStringComp.


        :param temprating: The temprating of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompTemprating
        """

        self._temprating = temprating

    @property
    def tensilemax(self):
        """Gets the tensilemax of this JobDrillStringComp.  # noqa: E501


        :return: The tensilemax of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompTensilemax
        """
        return self._tensilemax

    @tensilemax.setter
    def tensilemax(self, tensilemax):
        """Sets the tensilemax of this JobDrillStringComp.


        :param tensilemax: The tensilemax of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompTensilemax
        """

        self._tensilemax = tensilemax

    @property
    def torquemax(self):
        """Gets the torquemax of this JobDrillStringComp.  # noqa: E501


        :return: The torquemax of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompTorquemax
        """
        return self._torquemax

    @torquemax.setter
    def torquemax(self, torquemax):
        """Sets the torquemax of this JobDrillStringComp.


        :param torquemax: The torquemax of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompTorquemax
        """

        self._torquemax = torquemax

    @property
    def torquemin(self):
        """Gets the torquemin of this JobDrillStringComp.  # noqa: E501


        :return: The torquemin of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompTorquemin
        """
        return self._torquemin

    @torquemin.setter
    def torquemin(self, torquemin):
        """Sets the torquemin of this JobDrillStringComp.


        :param torquemin: The torquemin of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompTorquemin
        """

        self._torquemin = torquemin

    @property
    def upsetbtm(self):
        """Gets the upsetbtm of this JobDrillStringComp.  # noqa: E501


        :return: The upsetbtm of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._upsetbtm

    @upsetbtm.setter
    def upsetbtm(self, upsetbtm):
        """Sets the upsetbtm of this JobDrillStringComp.


        :param upsetbtm: The upsetbtm of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._upsetbtm = upsetbtm

    @property
    def upsettop(self):
        """Gets the upsettop of this JobDrillStringComp.  # noqa: E501


        :return: The upsettop of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._upsettop

    @upsettop.setter
    def upsettop(self, upsettop):
        """Sets the upsettop of this JobDrillStringComp.


        :param upsettop: The upsettop of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._upsettop = upsettop

    @property
    def usedclass(self):
        """Gets the usedclass of this JobDrillStringComp.  # noqa: E501


        :return: The usedclass of this JobDrillStringComp.  # noqa: E501
        :rtype: str
        """
        return self._usedclass

    @usedclass.setter
    def usedclass(self, usedclass):
        """Sets the usedclass of this JobDrillStringComp.


        :param usedclass: The usedclass of this JobDrillStringComp.  # noqa: E501
        :type: str
        """

        self._usedclass = usedclass

    @property
    def wtperlength(self):
        """Gets the wtperlength of this JobDrillStringComp.  # noqa: E501


        :return: The wtperlength of this JobDrillStringComp.  # noqa: E501
        :rtype: OneOfJobDrillStringCompWtperlength
        """
        return self._wtperlength

    @wtperlength.setter
    def wtperlength(self, wtperlength):
        """Sets the wtperlength of this JobDrillStringComp.


        :param wtperlength: The wtperlength of this JobDrillStringComp.  # noqa: E501
        :type: OneOfJobDrillStringCompWtperlength
        """

        self._wtperlength = wtperlength

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(JobDrillStringComp, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobDrillStringComp):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
