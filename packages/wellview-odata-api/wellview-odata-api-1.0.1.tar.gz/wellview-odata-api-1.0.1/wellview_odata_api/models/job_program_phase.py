# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class JobProgramPhase(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'activitydepthendmaxcalc': 'OneOfJobProgramPhaseActivitydepthendmaxcalc',
        'activitydepthstartmincalc': 'OneOfJobProgramPhaseActivitydepthstartmincalc',
        'activitydurationmaxcalc': 'OneOfJobProgramPhaseActivitydurationmaxcalc',
        'activitydurationmaxcumcalc': 'OneOfJobProgramPhaseActivitydurationmaxcumcalc',
        'activitydurationmincalc': 'OneOfJobProgramPhaseActivitydurationmincalc',
        'activitydurationmincumcalc': 'OneOfJobProgramPhaseActivitydurationmincumcalc',
        'activitydurationmlcalc': 'OneOfJobProgramPhaseActivitydurationmlcalc',
        'activitydurationmlcumcalc': 'OneOfJobProgramPhaseActivitydurationmlcumcalc',
        'bhatotalruncalc': 'OneOfJobProgramPhaseBhatotalruncalc',
        'bitrevscalc': 'OneOfJobProgramPhaseBitrevscalc',
        'code1': 'str',
        'code1234calc': 'str',
        'code2': 'str',
        'code3': 'str',
        'code4': 'str',
        'costactualcalc': 'OneOfJobProgramPhaseCostactualcalc',
        'costactualcumcalc': 'OneOfJobProgramPhaseCostactualcumcalc',
        'costactualcumnormcalc': 'OneOfJobProgramPhaseCostactualcumnormcalc',
        'costactualnormcalc': 'OneOfJobProgramPhaseCostactualnormcalc',
        'costmax': 'OneOfJobProgramPhaseCostmax',
        'costmaxcumcalc': 'OneOfJobProgramPhaseCostmaxcumcalc',
        'costmaxnormcalc': 'OneOfJobProgramPhaseCostmaxnormcalc',
        'costmaxnormcumcalc': 'OneOfJobProgramPhaseCostmaxnormcumcalc',
        'costmin': 'OneOfJobProgramPhaseCostmin',
        'costmincumcalc': 'OneOfJobProgramPhaseCostmincumcalc',
        'costminnormcalc': 'OneOfJobProgramPhaseCostminnormcalc',
        'costminnormcumcalc': 'OneOfJobProgramPhaseCostminnormcumcalc',
        'costml': 'OneOfJobProgramPhaseCostml',
        'costmlcumcalc': 'OneOfJobProgramPhaseCostmlcumcalc',
        'costmlcumnoexcludecalc': 'OneOfJobProgramPhaseCostmlcumnoexcludecalc',
        'costmlnormcalc': 'OneOfJobProgramPhaseCostmlnormcalc',
        'costmlnormcumcalc': 'OneOfJobProgramPhaseCostmlnormcumcalc',
        'costperdepthcalc': 'OneOfJobProgramPhaseCostperdepthcalc',
        'costperdepthnormcalc': 'OneOfJobProgramPhaseCostperdepthnormcalc',
        'costperdepthplancalc': 'OneOfJobProgramPhaseCostperdepthplancalc',
        'costperdepthplannormcalc': 'OneOfJobProgramPhaseCostperdepthplannormcalc',
        'costtechlimit': 'OneOfJobProgramPhaseCosttechlimit',
        'costtechlimitcumcalc': 'OneOfJobProgramPhaseCosttechlimitcumcalc',
        'costtechlimitnormcalc': 'OneOfJobProgramPhaseCosttechlimitnormcalc',
        'costtechlimitnormcumcalc': 'OneOfJobProgramPhaseCosttechlimitnormcumcalc',
        'costvariancecalc': 'OneOfJobProgramPhaseCostvariancecalc',
        'costvariancecumcalc': 'OneOfJobProgramPhaseCostvariancecumcalc',
        'costvariancemaxcalc': 'OneOfJobProgramPhaseCostvariancemaxcalc',
        'costvariancemaxcumcalc': 'OneOfJobProgramPhaseCostvariancemaxcumcalc',
        'costvariancemincalc': 'OneOfJobProgramPhaseCostvariancemincalc',
        'costvariancemincumcalc': 'OneOfJobProgramPhaseCostvariancemincumcalc',
        'costvariancetechlimitcalc': 'OneOfJobProgramPhaseCostvariancetechlimitcalc',
        'costvariancetechlimitcumcalc': 'OneOfJobProgramPhaseCostvariancetechlimitcumcalc',
        'dayjobactualcalc': 'OneOfJobProgramPhaseDayjobactualcalc',
        'dayjobmaxplanaltcalc': 'OneOfJobProgramPhaseDayjobmaxplanaltcalc',
        'dayjobmaxplancalc': 'OneOfJobProgramPhaseDayjobmaxplancalc',
        'dayjobminplanaltcalc': 'OneOfJobProgramPhaseDayjobminplanaltcalc',
        'dayjobminplancalc': 'OneOfJobProgramPhaseDayjobminplancalc',
        'dayjobmlplanaltcalc': 'OneOfJobProgramPhaseDayjobmlplanaltcalc',
        'dayjobmlplancalc': 'OneOfJobProgramPhaseDayjobmlplancalc',
        'dayjobtechlimitplancalc': 'OneOfJobProgramPhaseDayjobtechlimitplancalc',
        'dayjobtlplanaltcalc': 'OneOfJobProgramPhaseDayjobtlplanaltcalc',
        'daysfromspudcalc': 'OneOfJobProgramPhaseDaysfromspudcalc',
        'dayspudactualcalc': 'OneOfJobProgramPhaseDayspudactualcalc',
        'definitive': 'int',
        'depthendactualcalc': 'OneOfJobProgramPhaseDepthendactualcalc',
        'depthendplan': 'OneOfJobProgramPhaseDepthendplan',
        'depthprogressactualcalc': 'OneOfJobProgramPhaseDepthprogressactualcalc',
        'depthprogressplancalc': 'OneOfJobProgramPhaseDepthprogressplancalc',
        'depthstartactualcalc': 'OneOfJobProgramPhaseDepthstartactualcalc',
        'depthstartplan': 'OneOfJobProgramPhaseDepthstartplan',
        'depthtvdendactualcalc': 'OneOfJobProgramPhaseDepthtvdendactualcalc',
        'depthtvdendplancalc': 'OneOfJobProgramPhaseDepthtvdendplancalc',
        'depthtvdstartactualcalc': 'OneOfJobProgramPhaseDepthtvdstartactualcalc',
        'depthtvdstartplancalc': 'OneOfJobProgramPhaseDepthtvdstartplancalc',
        'des': 'str',
        'dttmendactual': 'datetime',
        'dttmendcalc': 'datetime',
        'dttmendplanmaxcalc': 'datetime',
        'dttmendplanmincalc': 'datetime',
        'dttmendplanmlcalc': 'datetime',
        'dttmendplantechlimitcalc': 'datetime',
        'dttmstartactual': 'datetime',
        'dttmstartplanmaxcalc': 'datetime',
        'dttmstartplanmincalc': 'datetime',
        'dttmstartplanmlcalc': 'datetime',
        'dttmstartplantechlimitcalc': 'datetime',
        'durationactualcalc': 'OneOfJobProgramPhaseDurationactualcalc',
        'durationmax': 'OneOfJobProgramPhaseDurationmax',
        'durationmin': 'OneOfJobProgramPhaseDurationmin',
        'durationml': 'OneOfJobProgramPhaseDurationml',
        'durationnoprobtimecalc': 'OneOfJobProgramPhaseDurationnoprobtimecalc',
        'durationnoprobtimecumcalc': 'OneOfJobProgramPhaseDurationnoprobtimecumcalc',
        'durationpersonnelotcalc': 'OneOfJobProgramPhaseDurationpersonnelotcalc',
        'durationpersonnelregcalc': 'OneOfJobProgramPhaseDurationpersonnelregcalc',
        'durationpersonneltotcalc': 'OneOfJobProgramPhaseDurationpersonneltotcalc',
        'durationproblemtimecalc': 'OneOfJobProgramPhaseDurationproblemtimecalc',
        'durationproblemtimecumcalc': 'OneOfJobProgramPhaseDurationproblemtimecumcalc',
        'durationspudtoplanmaxcalc': 'OneOfJobProgramPhaseDurationspudtoplanmaxcalc',
        'durationspudtoplanmincalc': 'OneOfJobProgramPhaseDurationspudtoplanmincalc',
        'durationspudtoplanmlcalc': 'OneOfJobProgramPhaseDurationspudtoplanmlcalc',
        'durationspudtoplantechlcalc': 'OneOfJobProgramPhaseDurationspudtoplantechlcalc',
        'durationtechlimit': 'OneOfJobProgramPhaseDurationtechlimit',
        'durationtimelogcumspudcalc': 'OneOfJobProgramPhaseDurationtimelogcumspudcalc',
        'durationtimelogtotalcalc': 'OneOfJobProgramPhaseDurationtimelogtotalcalc',
        'durationtimelogtotcumcalc': 'OneOfJobProgramPhaseDurationtimelogtotcumcalc',
        'durationvariancecalc': 'OneOfJobProgramPhaseDurationvariancecalc',
        'durationvariancecumcalc': 'OneOfJobProgramPhaseDurationvariancecumcalc',
        'durcumactualcalc': 'OneOfJobProgramPhaseDurcumactualcalc',
        'durcumactualstartphasecalc': 'OneOfJobProgramPhaseDurcumactualstartphasecalc',
        'durcumflatcalc': 'OneOfJobProgramPhaseDurcumflatcalc',
        'durcumslopecalc': 'OneOfJobProgramPhaseDurcumslopecalc',
        'durmlcumnoexcludecalc': 'OneOfJobProgramPhaseDurmlcumnoexcludecalc',
        'durnoprobtimecumdayscalc': 'OneOfJobProgramPhaseDurnoprobtimecumdayscalc',
        'duroffbtmcalc': 'OneOfJobProgramPhaseDuroffbtmcalc',
        'duronbtmcalc': 'OneOfJobProgramPhaseDuronbtmcalc',
        'durpersonnelotcumcalc': 'OneOfJobProgramPhaseDurpersonnelotcumcalc',
        'durpersonnelregcumcalc': 'OneOfJobProgramPhaseDurpersonnelregcumcalc',
        'durpersonneltotcumcalc': 'OneOfJobProgramPhaseDurpersonneltotcumcalc',
        'durpipemovingcalc': 'OneOfJobProgramPhaseDurpipemovingcalc',
        'durproblemtimecumdayscalc': 'OneOfJobProgramPhaseDurproblemtimecumdayscalc',
        'exclude': 'int',
        'flatorslopecalc': 'str',
        'hazards': 'str',
        'idrec': 'str',
        'idreclastcascalc': 'str',
        'idreclastcascalctk': 'str',
        'idreclastrigcalc': 'str',
        'idreclastrigcalctk': 'str',
        'idreclasttubcalc': 'str',
        'idreclasttubcalctk': 'str',
        'idrecparent': 'str',
        'idrecwellbore': 'str',
        'idrecwellboretk': 'str',
        'idwell': 'str',
        'inclbtmcalc': 'OneOfJobProgramPhaseInclbtmcalc',
        'inclmaxcalc': 'OneOfJobProgramPhaseInclmaxcalc',
        'incltopcalc': 'OneOfJobProgramPhaseIncltopcalc',
        'job': 'AnyOfJobProgramPhaseJob',
        'job_program_phase_activities': 'list[JobProgramPhaseActivity]',
        'job_program_phase_changes': 'list[JobProgramPhaseChange]',
        'job_program_phase_risks': 'list[JobProgramPhaseRisk]',
        'job_program_phase_steps': 'list[JobProgramPhaseSteps]',
        'job_program_phase_zone_allocs': 'list[JobProgramPhaseZoneAlloc]',
        'lengthactualcalc': 'OneOfJobProgramPhaseLengthactualcalc',
        'lengthplancalc': 'OneOfJobProgramPhaseLengthplancalc',
        'methodtyp1': 'str',
        'methodtyp2': 'str',
        'muddensitymaxcalc': 'OneOfJobProgramPhaseMuddensitymaxcalc',
        'muddensitymincalc': 'OneOfJobProgramPhaseMuddensitymincalc',
        'mudtypcalc': 'str',
        'pctproblemtimecalc': 'OneOfJobProgramPhasePctproblemtimecalc',
        'pctproblemtimecumcalc': 'OneOfJobProgramPhasePctproblemtimecumcalc',
        'percenttmrotatingcalc': 'OneOfJobProgramPhasePercenttmrotatingcalc',
        'percenttmslidingcalc': 'OneOfJobProgramPhasePercenttmslidingcalc',
        'phasemudcostcalc': 'OneOfJobProgramPhasePhasemudcostcalc',
        'phasemudcostnormcalc': 'OneOfJobProgramPhasePhasemudcostnormcalc',
        'phasemudcostperdepthcalc': 'OneOfJobProgramPhasePhasemudcostperdepthcalc',
        'phasemudcostperdepthnormcalc': 'OneOfJobProgramPhasePhasemudcostperdepthnormcalc',
        'planchange': 'int',
        'planphase': 'str',
        'ratiodepthactualplancalc': 'OneOfJobProgramPhaseRatiodepthactualplancalc',
        'refnocalc': 'int',
        'reportdaycalc': 'OneOfJobProgramPhaseReportdaycalc',
        'reportnocalc': 'OneOfJobProgramPhaseReportnocalc',
        'ropcalc': 'OneOfJobProgramPhaseRopcalc',
        'ropinstavgcalc': 'OneOfJobProgramPhaseRopinstavgcalc',
        'roprotatingcalc': 'OneOfJobProgramPhaseRoprotatingcalc',
        'ropslidingcalc': 'OneOfJobProgramPhaseRopslidingcalc',
        'source': 'str',
        'summary': 'str',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'sysseq': 'int',
        'systag': 'str',
        'tmcirccalc': 'OneOfJobProgramPhaseTmcirccalc',
        'tmcirccumcalc': 'OneOfJobProgramPhaseTmcirccumcalc',
        'tmcirctripothercalc': 'OneOfJobProgramPhaseTmcirctripothercalc',
        'tmcirctripothercumcalc': 'OneOfJobProgramPhaseTmcirctripothercumcalc',
        'tmdrillcalc': 'OneOfJobProgramPhaseTmdrillcalc',
        'tmdrillcumcalc': 'OneOfJobProgramPhaseTmdrillcumcalc',
        'tmdrillcumnoexccalc': 'OneOfJobProgramPhaseTmdrillcumnoexccalc',
        'tmdrillnoexccalc': 'OneOfJobProgramPhaseTmdrillnoexccalc',
        'tmothercalc': 'OneOfJobProgramPhaseTmothercalc',
        'tmothercumcalc': 'OneOfJobProgramPhaseTmothercumcalc',
        'tmrotatingcalc': 'OneOfJobProgramPhaseTmrotatingcalc',
        'tmslidingcalc': 'OneOfJobProgramPhaseTmslidingcalc',
        'tmtripcalc': 'OneOfJobProgramPhaseTmtripcalc',
        'tmtripcumcalc': 'OneOfJobProgramPhaseTmtripcumcalc',
        'usertxt1': 'str',
        'volkicksumcalc': 'OneOfJobProgramPhaseVolkicksumcalc',
        'vollosssumcalc': 'OneOfJobProgramPhaseVollosssumcalc',
        'volmudaddedcalc': 'OneOfJobProgramPhaseVolmudaddedcalc',
        'volmudaddedlossvarcalc': 'OneOfJobProgramPhaseVolmudaddedlossvarcalc',
        'volmudlosscalc': 'OneOfJobProgramPhaseVolmudlosscalc',
        'weightmetalrecovtotalcalc': 'OneOfJobProgramPhaseWeightmetalrecovtotalcalc',
        'wellboreszcalc': 'OneOfJobProgramPhaseWellboreszcalc'
    }

    attribute_map = {
        'activitydepthendmaxcalc': 'activitydepthendmaxcalc',
        'activitydepthstartmincalc': 'activitydepthstartmincalc',
        'activitydurationmaxcalc': 'activitydurationmaxcalc',
        'activitydurationmaxcumcalc': 'activitydurationmaxcumcalc',
        'activitydurationmincalc': 'activitydurationmincalc',
        'activitydurationmincumcalc': 'activitydurationmincumcalc',
        'activitydurationmlcalc': 'activitydurationmlcalc',
        'activitydurationmlcumcalc': 'activitydurationmlcumcalc',
        'bhatotalruncalc': 'bhatotalruncalc',
        'bitrevscalc': 'bitrevscalc',
        'code1': 'code1',
        'code1234calc': 'code1234calc',
        'code2': 'code2',
        'code3': 'code3',
        'code4': 'code4',
        'costactualcalc': 'costactualcalc',
        'costactualcumcalc': 'costactualcumcalc',
        'costactualcumnormcalc': 'costactualcumnormcalc',
        'costactualnormcalc': 'costactualnormcalc',
        'costmax': 'costmax',
        'costmaxcumcalc': 'costmaxcumcalc',
        'costmaxnormcalc': 'costmaxnormcalc',
        'costmaxnormcumcalc': 'costmaxnormcumcalc',
        'costmin': 'costmin',
        'costmincumcalc': 'costmincumcalc',
        'costminnormcalc': 'costminnormcalc',
        'costminnormcumcalc': 'costminnormcumcalc',
        'costml': 'costml',
        'costmlcumcalc': 'costmlcumcalc',
        'costmlcumnoexcludecalc': 'costmlcumnoexcludecalc',
        'costmlnormcalc': 'costmlnormcalc',
        'costmlnormcumcalc': 'costmlnormcumcalc',
        'costperdepthcalc': 'costperdepthcalc',
        'costperdepthnormcalc': 'costperdepthnormcalc',
        'costperdepthplancalc': 'costperdepthplancalc',
        'costperdepthplannormcalc': 'costperdepthplannormcalc',
        'costtechlimit': 'costtechlimit',
        'costtechlimitcumcalc': 'costtechlimitcumcalc',
        'costtechlimitnormcalc': 'costtechlimitnormcalc',
        'costtechlimitnormcumcalc': 'costtechlimitnormcumcalc',
        'costvariancecalc': 'costvariancecalc',
        'costvariancecumcalc': 'costvariancecumcalc',
        'costvariancemaxcalc': 'costvariancemaxcalc',
        'costvariancemaxcumcalc': 'costvariancemaxcumcalc',
        'costvariancemincalc': 'costvariancemincalc',
        'costvariancemincumcalc': 'costvariancemincumcalc',
        'costvariancetechlimitcalc': 'costvariancetechlimitcalc',
        'costvariancetechlimitcumcalc': 'costvariancetechlimitcumcalc',
        'dayjobactualcalc': 'dayjobactualcalc',
        'dayjobmaxplanaltcalc': 'dayjobmaxplanaltcalc',
        'dayjobmaxplancalc': 'dayjobmaxplancalc',
        'dayjobminplanaltcalc': 'dayjobminplanaltcalc',
        'dayjobminplancalc': 'dayjobminplancalc',
        'dayjobmlplanaltcalc': 'dayjobmlplanaltcalc',
        'dayjobmlplancalc': 'dayjobmlplancalc',
        'dayjobtechlimitplancalc': 'dayjobtechlimitplancalc',
        'dayjobtlplanaltcalc': 'dayjobtlplanaltcalc',
        'daysfromspudcalc': 'daysfromspudcalc',
        'dayspudactualcalc': 'dayspudactualcalc',
        'definitive': 'definitive',
        'depthendactualcalc': 'depthendactualcalc',
        'depthendplan': 'depthendplan',
        'depthprogressactualcalc': 'depthprogressactualcalc',
        'depthprogressplancalc': 'depthprogressplancalc',
        'depthstartactualcalc': 'depthstartactualcalc',
        'depthstartplan': 'depthstartplan',
        'depthtvdendactualcalc': 'depthtvdendactualcalc',
        'depthtvdendplancalc': 'depthtvdendplancalc',
        'depthtvdstartactualcalc': 'depthtvdstartactualcalc',
        'depthtvdstartplancalc': 'depthtvdstartplancalc',
        'des': 'des',
        'dttmendactual': 'dttmendactual',
        'dttmendcalc': 'dttmendcalc',
        'dttmendplanmaxcalc': 'dttmendplanmaxcalc',
        'dttmendplanmincalc': 'dttmendplanmincalc',
        'dttmendplanmlcalc': 'dttmendplanmlcalc',
        'dttmendplantechlimitcalc': 'dttmendplantechlimitcalc',
        'dttmstartactual': 'dttmstartactual',
        'dttmstartplanmaxcalc': 'dttmstartplanmaxcalc',
        'dttmstartplanmincalc': 'dttmstartplanmincalc',
        'dttmstartplanmlcalc': 'dttmstartplanmlcalc',
        'dttmstartplantechlimitcalc': 'dttmstartplantechlimitcalc',
        'durationactualcalc': 'durationactualcalc',
        'durationmax': 'durationmax',
        'durationmin': 'durationmin',
        'durationml': 'durationml',
        'durationnoprobtimecalc': 'durationnoprobtimecalc',
        'durationnoprobtimecumcalc': 'durationnoprobtimecumcalc',
        'durationpersonnelotcalc': 'durationpersonnelotcalc',
        'durationpersonnelregcalc': 'durationpersonnelregcalc',
        'durationpersonneltotcalc': 'durationpersonneltotcalc',
        'durationproblemtimecalc': 'durationproblemtimecalc',
        'durationproblemtimecumcalc': 'durationproblemtimecumcalc',
        'durationspudtoplanmaxcalc': 'durationspudtoplanmaxcalc',
        'durationspudtoplanmincalc': 'durationspudtoplanmincalc',
        'durationspudtoplanmlcalc': 'durationspudtoplanmlcalc',
        'durationspudtoplantechlcalc': 'durationspudtoplantechlcalc',
        'durationtechlimit': 'durationtechlimit',
        'durationtimelogcumspudcalc': 'durationtimelogcumspudcalc',
        'durationtimelogtotalcalc': 'durationtimelogtotalcalc',
        'durationtimelogtotcumcalc': 'durationtimelogtotcumcalc',
        'durationvariancecalc': 'durationvariancecalc',
        'durationvariancecumcalc': 'durationvariancecumcalc',
        'durcumactualcalc': 'durcumactualcalc',
        'durcumactualstartphasecalc': 'durcumactualstartphasecalc',
        'durcumflatcalc': 'durcumflatcalc',
        'durcumslopecalc': 'durcumslopecalc',
        'durmlcumnoexcludecalc': 'durmlcumnoexcludecalc',
        'durnoprobtimecumdayscalc': 'durnoprobtimecumdayscalc',
        'duroffbtmcalc': 'duroffbtmcalc',
        'duronbtmcalc': 'duronbtmcalc',
        'durpersonnelotcumcalc': 'durpersonnelotcumcalc',
        'durpersonnelregcumcalc': 'durpersonnelregcumcalc',
        'durpersonneltotcumcalc': 'durpersonneltotcumcalc',
        'durpipemovingcalc': 'durpipemovingcalc',
        'durproblemtimecumdayscalc': 'durproblemtimecumdayscalc',
        'exclude': 'exclude',
        'flatorslopecalc': 'flatorslopecalc',
        'hazards': 'hazards',
        'idrec': 'idrec',
        'idreclastcascalc': 'idreclastcascalc',
        'idreclastcascalctk': 'idreclastcascalctk',
        'idreclastrigcalc': 'idreclastrigcalc',
        'idreclastrigcalctk': 'idreclastrigcalctk',
        'idreclasttubcalc': 'idreclasttubcalc',
        'idreclasttubcalctk': 'idreclasttubcalctk',
        'idrecparent': 'idrecparent',
        'idrecwellbore': 'idrecwellbore',
        'idrecwellboretk': 'idrecwellboretk',
        'idwell': 'idwell',
        'inclbtmcalc': 'inclbtmcalc',
        'inclmaxcalc': 'inclmaxcalc',
        'incltopcalc': 'incltopcalc',
        'job': 'job',
        'job_program_phase_activities': 'jobProgramPhaseActivities',
        'job_program_phase_changes': 'jobProgramPhaseChanges',
        'job_program_phase_risks': 'jobProgramPhaseRisks',
        'job_program_phase_steps': 'jobProgramPhaseSteps',
        'job_program_phase_zone_allocs': 'jobProgramPhaseZoneAllocs',
        'lengthactualcalc': 'lengthactualcalc',
        'lengthplancalc': 'lengthplancalc',
        'methodtyp1': 'methodtyp1',
        'methodtyp2': 'methodtyp2',
        'muddensitymaxcalc': 'muddensitymaxcalc',
        'muddensitymincalc': 'muddensitymincalc',
        'mudtypcalc': 'mudtypcalc',
        'pctproblemtimecalc': 'pctproblemtimecalc',
        'pctproblemtimecumcalc': 'pctproblemtimecumcalc',
        'percenttmrotatingcalc': 'percenttmrotatingcalc',
        'percenttmslidingcalc': 'percenttmslidingcalc',
        'phasemudcostcalc': 'phasemudcostcalc',
        'phasemudcostnormcalc': 'phasemudcostnormcalc',
        'phasemudcostperdepthcalc': 'phasemudcostperdepthcalc',
        'phasemudcostperdepthnormcalc': 'phasemudcostperdepthnormcalc',
        'planchange': 'planchange',
        'planphase': 'planphase',
        'ratiodepthactualplancalc': 'ratiodepthactualplancalc',
        'refnocalc': 'refnocalc',
        'reportdaycalc': 'reportdaycalc',
        'reportnocalc': 'reportnocalc',
        'ropcalc': 'ropcalc',
        'ropinstavgcalc': 'ropinstavgcalc',
        'roprotatingcalc': 'roprotatingcalc',
        'ropslidingcalc': 'ropslidingcalc',
        'source': 'source',
        'summary': 'summary',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'sysseq': 'sysseq',
        'systag': 'systag',
        'tmcirccalc': 'tmcirccalc',
        'tmcirccumcalc': 'tmcirccumcalc',
        'tmcirctripothercalc': 'tmcirctripothercalc',
        'tmcirctripothercumcalc': 'tmcirctripothercumcalc',
        'tmdrillcalc': 'tmdrillcalc',
        'tmdrillcumcalc': 'tmdrillcumcalc',
        'tmdrillcumnoexccalc': 'tmdrillcumnoexccalc',
        'tmdrillnoexccalc': 'tmdrillnoexccalc',
        'tmothercalc': 'tmothercalc',
        'tmothercumcalc': 'tmothercumcalc',
        'tmrotatingcalc': 'tmrotatingcalc',
        'tmslidingcalc': 'tmslidingcalc',
        'tmtripcalc': 'tmtripcalc',
        'tmtripcumcalc': 'tmtripcumcalc',
        'usertxt1': 'usertxt1',
        'volkicksumcalc': 'volkicksumcalc',
        'vollosssumcalc': 'vollosssumcalc',
        'volmudaddedcalc': 'volmudaddedcalc',
        'volmudaddedlossvarcalc': 'volmudaddedlossvarcalc',
        'volmudlosscalc': 'volmudlosscalc',
        'weightmetalrecovtotalcalc': 'weightmetalrecovtotalcalc',
        'wellboreszcalc': 'wellboreszcalc'
    }

    def __init__(self, activitydepthendmaxcalc=None, activitydepthstartmincalc=None, activitydurationmaxcalc=None, activitydurationmaxcumcalc=None, activitydurationmincalc=None, activitydurationmincumcalc=None, activitydurationmlcalc=None, activitydurationmlcumcalc=None, bhatotalruncalc=None, bitrevscalc=None, code1=None, code1234calc=None, code2=None, code3=None, code4=None, costactualcalc=None, costactualcumcalc=None, costactualcumnormcalc=None, costactualnormcalc=None, costmax=None, costmaxcumcalc=None, costmaxnormcalc=None, costmaxnormcumcalc=None, costmin=None, costmincumcalc=None, costminnormcalc=None, costminnormcumcalc=None, costml=None, costmlcumcalc=None, costmlcumnoexcludecalc=None, costmlnormcalc=None, costmlnormcumcalc=None, costperdepthcalc=None, costperdepthnormcalc=None, costperdepthplancalc=None, costperdepthplannormcalc=None, costtechlimit=None, costtechlimitcumcalc=None, costtechlimitnormcalc=None, costtechlimitnormcumcalc=None, costvariancecalc=None, costvariancecumcalc=None, costvariancemaxcalc=None, costvariancemaxcumcalc=None, costvariancemincalc=None, costvariancemincumcalc=None, costvariancetechlimitcalc=None, costvariancetechlimitcumcalc=None, dayjobactualcalc=None, dayjobmaxplanaltcalc=None, dayjobmaxplancalc=None, dayjobminplanaltcalc=None, dayjobminplancalc=None, dayjobmlplanaltcalc=None, dayjobmlplancalc=None, dayjobtechlimitplancalc=None, dayjobtlplanaltcalc=None, daysfromspudcalc=None, dayspudactualcalc=None, definitive=None, depthendactualcalc=None, depthendplan=None, depthprogressactualcalc=None, depthprogressplancalc=None, depthstartactualcalc=None, depthstartplan=None, depthtvdendactualcalc=None, depthtvdendplancalc=None, depthtvdstartactualcalc=None, depthtvdstartplancalc=None, des=None, dttmendactual=None, dttmendcalc=None, dttmendplanmaxcalc=None, dttmendplanmincalc=None, dttmendplanmlcalc=None, dttmendplantechlimitcalc=None, dttmstartactual=None, dttmstartplanmaxcalc=None, dttmstartplanmincalc=None, dttmstartplanmlcalc=None, dttmstartplantechlimitcalc=None, durationactualcalc=None, durationmax=None, durationmin=None, durationml=None, durationnoprobtimecalc=None, durationnoprobtimecumcalc=None, durationpersonnelotcalc=None, durationpersonnelregcalc=None, durationpersonneltotcalc=None, durationproblemtimecalc=None, durationproblemtimecumcalc=None, durationspudtoplanmaxcalc=None, durationspudtoplanmincalc=None, durationspudtoplanmlcalc=None, durationspudtoplantechlcalc=None, durationtechlimit=None, durationtimelogcumspudcalc=None, durationtimelogtotalcalc=None, durationtimelogtotcumcalc=None, durationvariancecalc=None, durationvariancecumcalc=None, durcumactualcalc=None, durcumactualstartphasecalc=None, durcumflatcalc=None, durcumslopecalc=None, durmlcumnoexcludecalc=None, durnoprobtimecumdayscalc=None, duroffbtmcalc=None, duronbtmcalc=None, durpersonnelotcumcalc=None, durpersonnelregcumcalc=None, durpersonneltotcumcalc=None, durpipemovingcalc=None, durproblemtimecumdayscalc=None, exclude=None, flatorslopecalc=None, hazards=None, idrec=None, idreclastcascalc=None, idreclastcascalctk=None, idreclastrigcalc=None, idreclastrigcalctk=None, idreclasttubcalc=None, idreclasttubcalctk=None, idrecparent=None, idrecwellbore=None, idrecwellboretk=None, idwell=None, inclbtmcalc=None, inclmaxcalc=None, incltopcalc=None, job=None, job_program_phase_activities=None, job_program_phase_changes=None, job_program_phase_risks=None, job_program_phase_steps=None, job_program_phase_zone_allocs=None, lengthactualcalc=None, lengthplancalc=None, methodtyp1=None, methodtyp2=None, muddensitymaxcalc=None, muddensitymincalc=None, mudtypcalc=None, pctproblemtimecalc=None, pctproblemtimecumcalc=None, percenttmrotatingcalc=None, percenttmslidingcalc=None, phasemudcostcalc=None, phasemudcostnormcalc=None, phasemudcostperdepthcalc=None, phasemudcostperdepthnormcalc=None, planchange=None, planphase=None, ratiodepthactualplancalc=None, refnocalc=None, reportdaycalc=None, reportnocalc=None, ropcalc=None, ropinstavgcalc=None, roprotatingcalc=None, ropslidingcalc=None, source=None, summary=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, sysseq=None, systag=None, tmcirccalc=None, tmcirccumcalc=None, tmcirctripothercalc=None, tmcirctripothercumcalc=None, tmdrillcalc=None, tmdrillcumcalc=None, tmdrillcumnoexccalc=None, tmdrillnoexccalc=None, tmothercalc=None, tmothercumcalc=None, tmrotatingcalc=None, tmslidingcalc=None, tmtripcalc=None, tmtripcumcalc=None, usertxt1=None, volkicksumcalc=None, vollosssumcalc=None, volmudaddedcalc=None, volmudaddedlossvarcalc=None, volmudlosscalc=None, weightmetalrecovtotalcalc=None, wellboreszcalc=None):  # noqa: E501
        """JobProgramPhase - a model defined in Swagger"""  # noqa: E501
        self._activitydepthendmaxcalc = None
        self._activitydepthstartmincalc = None
        self._activitydurationmaxcalc = None
        self._activitydurationmaxcumcalc = None
        self._activitydurationmincalc = None
        self._activitydurationmincumcalc = None
        self._activitydurationmlcalc = None
        self._activitydurationmlcumcalc = None
        self._bhatotalruncalc = None
        self._bitrevscalc = None
        self._code1 = None
        self._code1234calc = None
        self._code2 = None
        self._code3 = None
        self._code4 = None
        self._costactualcalc = None
        self._costactualcumcalc = None
        self._costactualcumnormcalc = None
        self._costactualnormcalc = None
        self._costmax = None
        self._costmaxcumcalc = None
        self._costmaxnormcalc = None
        self._costmaxnormcumcalc = None
        self._costmin = None
        self._costmincumcalc = None
        self._costminnormcalc = None
        self._costminnormcumcalc = None
        self._costml = None
        self._costmlcumcalc = None
        self._costmlcumnoexcludecalc = None
        self._costmlnormcalc = None
        self._costmlnormcumcalc = None
        self._costperdepthcalc = None
        self._costperdepthnormcalc = None
        self._costperdepthplancalc = None
        self._costperdepthplannormcalc = None
        self._costtechlimit = None
        self._costtechlimitcumcalc = None
        self._costtechlimitnormcalc = None
        self._costtechlimitnormcumcalc = None
        self._costvariancecalc = None
        self._costvariancecumcalc = None
        self._costvariancemaxcalc = None
        self._costvariancemaxcumcalc = None
        self._costvariancemincalc = None
        self._costvariancemincumcalc = None
        self._costvariancetechlimitcalc = None
        self._costvariancetechlimitcumcalc = None
        self._dayjobactualcalc = None
        self._dayjobmaxplanaltcalc = None
        self._dayjobmaxplancalc = None
        self._dayjobminplanaltcalc = None
        self._dayjobminplancalc = None
        self._dayjobmlplanaltcalc = None
        self._dayjobmlplancalc = None
        self._dayjobtechlimitplancalc = None
        self._dayjobtlplanaltcalc = None
        self._daysfromspudcalc = None
        self._dayspudactualcalc = None
        self._definitive = None
        self._depthendactualcalc = None
        self._depthendplan = None
        self._depthprogressactualcalc = None
        self._depthprogressplancalc = None
        self._depthstartactualcalc = None
        self._depthstartplan = None
        self._depthtvdendactualcalc = None
        self._depthtvdendplancalc = None
        self._depthtvdstartactualcalc = None
        self._depthtvdstartplancalc = None
        self._des = None
        self._dttmendactual = None
        self._dttmendcalc = None
        self._dttmendplanmaxcalc = None
        self._dttmendplanmincalc = None
        self._dttmendplanmlcalc = None
        self._dttmendplantechlimitcalc = None
        self._dttmstartactual = None
        self._dttmstartplanmaxcalc = None
        self._dttmstartplanmincalc = None
        self._dttmstartplanmlcalc = None
        self._dttmstartplantechlimitcalc = None
        self._durationactualcalc = None
        self._durationmax = None
        self._durationmin = None
        self._durationml = None
        self._durationnoprobtimecalc = None
        self._durationnoprobtimecumcalc = None
        self._durationpersonnelotcalc = None
        self._durationpersonnelregcalc = None
        self._durationpersonneltotcalc = None
        self._durationproblemtimecalc = None
        self._durationproblemtimecumcalc = None
        self._durationspudtoplanmaxcalc = None
        self._durationspudtoplanmincalc = None
        self._durationspudtoplanmlcalc = None
        self._durationspudtoplantechlcalc = None
        self._durationtechlimit = None
        self._durationtimelogcumspudcalc = None
        self._durationtimelogtotalcalc = None
        self._durationtimelogtotcumcalc = None
        self._durationvariancecalc = None
        self._durationvariancecumcalc = None
        self._durcumactualcalc = None
        self._durcumactualstartphasecalc = None
        self._durcumflatcalc = None
        self._durcumslopecalc = None
        self._durmlcumnoexcludecalc = None
        self._durnoprobtimecumdayscalc = None
        self._duroffbtmcalc = None
        self._duronbtmcalc = None
        self._durpersonnelotcumcalc = None
        self._durpersonnelregcumcalc = None
        self._durpersonneltotcumcalc = None
        self._durpipemovingcalc = None
        self._durproblemtimecumdayscalc = None
        self._exclude = None
        self._flatorslopecalc = None
        self._hazards = None
        self._idrec = None
        self._idreclastcascalc = None
        self._idreclastcascalctk = None
        self._idreclastrigcalc = None
        self._idreclastrigcalctk = None
        self._idreclasttubcalc = None
        self._idreclasttubcalctk = None
        self._idrecparent = None
        self._idrecwellbore = None
        self._idrecwellboretk = None
        self._idwell = None
        self._inclbtmcalc = None
        self._inclmaxcalc = None
        self._incltopcalc = None
        self._job = None
        self._job_program_phase_activities = None
        self._job_program_phase_changes = None
        self._job_program_phase_risks = None
        self._job_program_phase_steps = None
        self._job_program_phase_zone_allocs = None
        self._lengthactualcalc = None
        self._lengthplancalc = None
        self._methodtyp1 = None
        self._methodtyp2 = None
        self._muddensitymaxcalc = None
        self._muddensitymincalc = None
        self._mudtypcalc = None
        self._pctproblemtimecalc = None
        self._pctproblemtimecumcalc = None
        self._percenttmrotatingcalc = None
        self._percenttmslidingcalc = None
        self._phasemudcostcalc = None
        self._phasemudcostnormcalc = None
        self._phasemudcostperdepthcalc = None
        self._phasemudcostperdepthnormcalc = None
        self._planchange = None
        self._planphase = None
        self._ratiodepthactualplancalc = None
        self._refnocalc = None
        self._reportdaycalc = None
        self._reportnocalc = None
        self._ropcalc = None
        self._ropinstavgcalc = None
        self._roprotatingcalc = None
        self._ropslidingcalc = None
        self._source = None
        self._summary = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._sysseq = None
        self._systag = None
        self._tmcirccalc = None
        self._tmcirccumcalc = None
        self._tmcirctripothercalc = None
        self._tmcirctripothercumcalc = None
        self._tmdrillcalc = None
        self._tmdrillcumcalc = None
        self._tmdrillcumnoexccalc = None
        self._tmdrillnoexccalc = None
        self._tmothercalc = None
        self._tmothercumcalc = None
        self._tmrotatingcalc = None
        self._tmslidingcalc = None
        self._tmtripcalc = None
        self._tmtripcumcalc = None
        self._usertxt1 = None
        self._volkicksumcalc = None
        self._vollosssumcalc = None
        self._volmudaddedcalc = None
        self._volmudaddedlossvarcalc = None
        self._volmudlosscalc = None
        self._weightmetalrecovtotalcalc = None
        self._wellboreszcalc = None
        self.discriminator = None
        if activitydepthendmaxcalc is not None:
            self.activitydepthendmaxcalc = activitydepthendmaxcalc
        if activitydepthstartmincalc is not None:
            self.activitydepthstartmincalc = activitydepthstartmincalc
        if activitydurationmaxcalc is not None:
            self.activitydurationmaxcalc = activitydurationmaxcalc
        if activitydurationmaxcumcalc is not None:
            self.activitydurationmaxcumcalc = activitydurationmaxcumcalc
        if activitydurationmincalc is not None:
            self.activitydurationmincalc = activitydurationmincalc
        if activitydurationmincumcalc is not None:
            self.activitydurationmincumcalc = activitydurationmincumcalc
        if activitydurationmlcalc is not None:
            self.activitydurationmlcalc = activitydurationmlcalc
        if activitydurationmlcumcalc is not None:
            self.activitydurationmlcumcalc = activitydurationmlcumcalc
        if bhatotalruncalc is not None:
            self.bhatotalruncalc = bhatotalruncalc
        if bitrevscalc is not None:
            self.bitrevscalc = bitrevscalc
        if code1 is not None:
            self.code1 = code1
        if code1234calc is not None:
            self.code1234calc = code1234calc
        if code2 is not None:
            self.code2 = code2
        if code3 is not None:
            self.code3 = code3
        if code4 is not None:
            self.code4 = code4
        if costactualcalc is not None:
            self.costactualcalc = costactualcalc
        if costactualcumcalc is not None:
            self.costactualcumcalc = costactualcumcalc
        if costactualcumnormcalc is not None:
            self.costactualcumnormcalc = costactualcumnormcalc
        if costactualnormcalc is not None:
            self.costactualnormcalc = costactualnormcalc
        if costmax is not None:
            self.costmax = costmax
        if costmaxcumcalc is not None:
            self.costmaxcumcalc = costmaxcumcalc
        if costmaxnormcalc is not None:
            self.costmaxnormcalc = costmaxnormcalc
        if costmaxnormcumcalc is not None:
            self.costmaxnormcumcalc = costmaxnormcumcalc
        if costmin is not None:
            self.costmin = costmin
        if costmincumcalc is not None:
            self.costmincumcalc = costmincumcalc
        if costminnormcalc is not None:
            self.costminnormcalc = costminnormcalc
        if costminnormcumcalc is not None:
            self.costminnormcumcalc = costminnormcumcalc
        if costml is not None:
            self.costml = costml
        if costmlcumcalc is not None:
            self.costmlcumcalc = costmlcumcalc
        if costmlcumnoexcludecalc is not None:
            self.costmlcumnoexcludecalc = costmlcumnoexcludecalc
        if costmlnormcalc is not None:
            self.costmlnormcalc = costmlnormcalc
        if costmlnormcumcalc is not None:
            self.costmlnormcumcalc = costmlnormcumcalc
        if costperdepthcalc is not None:
            self.costperdepthcalc = costperdepthcalc
        if costperdepthnormcalc is not None:
            self.costperdepthnormcalc = costperdepthnormcalc
        if costperdepthplancalc is not None:
            self.costperdepthplancalc = costperdepthplancalc
        if costperdepthplannormcalc is not None:
            self.costperdepthplannormcalc = costperdepthplannormcalc
        if costtechlimit is not None:
            self.costtechlimit = costtechlimit
        if costtechlimitcumcalc is not None:
            self.costtechlimitcumcalc = costtechlimitcumcalc
        if costtechlimitnormcalc is not None:
            self.costtechlimitnormcalc = costtechlimitnormcalc
        if costtechlimitnormcumcalc is not None:
            self.costtechlimitnormcumcalc = costtechlimitnormcumcalc
        if costvariancecalc is not None:
            self.costvariancecalc = costvariancecalc
        if costvariancecumcalc is not None:
            self.costvariancecumcalc = costvariancecumcalc
        if costvariancemaxcalc is not None:
            self.costvariancemaxcalc = costvariancemaxcalc
        if costvariancemaxcumcalc is not None:
            self.costvariancemaxcumcalc = costvariancemaxcumcalc
        if costvariancemincalc is not None:
            self.costvariancemincalc = costvariancemincalc
        if costvariancemincumcalc is not None:
            self.costvariancemincumcalc = costvariancemincumcalc
        if costvariancetechlimitcalc is not None:
            self.costvariancetechlimitcalc = costvariancetechlimitcalc
        if costvariancetechlimitcumcalc is not None:
            self.costvariancetechlimitcumcalc = costvariancetechlimitcumcalc
        if dayjobactualcalc is not None:
            self.dayjobactualcalc = dayjobactualcalc
        if dayjobmaxplanaltcalc is not None:
            self.dayjobmaxplanaltcalc = dayjobmaxplanaltcalc
        if dayjobmaxplancalc is not None:
            self.dayjobmaxplancalc = dayjobmaxplancalc
        if dayjobminplanaltcalc is not None:
            self.dayjobminplanaltcalc = dayjobminplanaltcalc
        if dayjobminplancalc is not None:
            self.dayjobminplancalc = dayjobminplancalc
        if dayjobmlplanaltcalc is not None:
            self.dayjobmlplanaltcalc = dayjobmlplanaltcalc
        if dayjobmlplancalc is not None:
            self.dayjobmlplancalc = dayjobmlplancalc
        if dayjobtechlimitplancalc is not None:
            self.dayjobtechlimitplancalc = dayjobtechlimitplancalc
        if dayjobtlplanaltcalc is not None:
            self.dayjobtlplanaltcalc = dayjobtlplanaltcalc
        if daysfromspudcalc is not None:
            self.daysfromspudcalc = daysfromspudcalc
        if dayspudactualcalc is not None:
            self.dayspudactualcalc = dayspudactualcalc
        if definitive is not None:
            self.definitive = definitive
        if depthendactualcalc is not None:
            self.depthendactualcalc = depthendactualcalc
        if depthendplan is not None:
            self.depthendplan = depthendplan
        if depthprogressactualcalc is not None:
            self.depthprogressactualcalc = depthprogressactualcalc
        if depthprogressplancalc is not None:
            self.depthprogressplancalc = depthprogressplancalc
        if depthstartactualcalc is not None:
            self.depthstartactualcalc = depthstartactualcalc
        if depthstartplan is not None:
            self.depthstartplan = depthstartplan
        if depthtvdendactualcalc is not None:
            self.depthtvdendactualcalc = depthtvdendactualcalc
        if depthtvdendplancalc is not None:
            self.depthtvdendplancalc = depthtvdendplancalc
        if depthtvdstartactualcalc is not None:
            self.depthtvdstartactualcalc = depthtvdstartactualcalc
        if depthtvdstartplancalc is not None:
            self.depthtvdstartplancalc = depthtvdstartplancalc
        if des is not None:
            self.des = des
        if dttmendactual is not None:
            self.dttmendactual = dttmendactual
        if dttmendcalc is not None:
            self.dttmendcalc = dttmendcalc
        if dttmendplanmaxcalc is not None:
            self.dttmendplanmaxcalc = dttmendplanmaxcalc
        if dttmendplanmincalc is not None:
            self.dttmendplanmincalc = dttmendplanmincalc
        if dttmendplanmlcalc is not None:
            self.dttmendplanmlcalc = dttmendplanmlcalc
        if dttmendplantechlimitcalc is not None:
            self.dttmendplantechlimitcalc = dttmendplantechlimitcalc
        if dttmstartactual is not None:
            self.dttmstartactual = dttmstartactual
        if dttmstartplanmaxcalc is not None:
            self.dttmstartplanmaxcalc = dttmstartplanmaxcalc
        if dttmstartplanmincalc is not None:
            self.dttmstartplanmincalc = dttmstartplanmincalc
        if dttmstartplanmlcalc is not None:
            self.dttmstartplanmlcalc = dttmstartplanmlcalc
        if dttmstartplantechlimitcalc is not None:
            self.dttmstartplantechlimitcalc = dttmstartplantechlimitcalc
        if durationactualcalc is not None:
            self.durationactualcalc = durationactualcalc
        if durationmax is not None:
            self.durationmax = durationmax
        if durationmin is not None:
            self.durationmin = durationmin
        if durationml is not None:
            self.durationml = durationml
        if durationnoprobtimecalc is not None:
            self.durationnoprobtimecalc = durationnoprobtimecalc
        if durationnoprobtimecumcalc is not None:
            self.durationnoprobtimecumcalc = durationnoprobtimecumcalc
        if durationpersonnelotcalc is not None:
            self.durationpersonnelotcalc = durationpersonnelotcalc
        if durationpersonnelregcalc is not None:
            self.durationpersonnelregcalc = durationpersonnelregcalc
        if durationpersonneltotcalc is not None:
            self.durationpersonneltotcalc = durationpersonneltotcalc
        if durationproblemtimecalc is not None:
            self.durationproblemtimecalc = durationproblemtimecalc
        if durationproblemtimecumcalc is not None:
            self.durationproblemtimecumcalc = durationproblemtimecumcalc
        if durationspudtoplanmaxcalc is not None:
            self.durationspudtoplanmaxcalc = durationspudtoplanmaxcalc
        if durationspudtoplanmincalc is not None:
            self.durationspudtoplanmincalc = durationspudtoplanmincalc
        if durationspudtoplanmlcalc is not None:
            self.durationspudtoplanmlcalc = durationspudtoplanmlcalc
        if durationspudtoplantechlcalc is not None:
            self.durationspudtoplantechlcalc = durationspudtoplantechlcalc
        if durationtechlimit is not None:
            self.durationtechlimit = durationtechlimit
        if durationtimelogcumspudcalc is not None:
            self.durationtimelogcumspudcalc = durationtimelogcumspudcalc
        if durationtimelogtotalcalc is not None:
            self.durationtimelogtotalcalc = durationtimelogtotalcalc
        if durationtimelogtotcumcalc is not None:
            self.durationtimelogtotcumcalc = durationtimelogtotcumcalc
        if durationvariancecalc is not None:
            self.durationvariancecalc = durationvariancecalc
        if durationvariancecumcalc is not None:
            self.durationvariancecumcalc = durationvariancecumcalc
        if durcumactualcalc is not None:
            self.durcumactualcalc = durcumactualcalc
        if durcumactualstartphasecalc is not None:
            self.durcumactualstartphasecalc = durcumactualstartphasecalc
        if durcumflatcalc is not None:
            self.durcumflatcalc = durcumflatcalc
        if durcumslopecalc is not None:
            self.durcumslopecalc = durcumslopecalc
        if durmlcumnoexcludecalc is not None:
            self.durmlcumnoexcludecalc = durmlcumnoexcludecalc
        if durnoprobtimecumdayscalc is not None:
            self.durnoprobtimecumdayscalc = durnoprobtimecumdayscalc
        if duroffbtmcalc is not None:
            self.duroffbtmcalc = duroffbtmcalc
        if duronbtmcalc is not None:
            self.duronbtmcalc = duronbtmcalc
        if durpersonnelotcumcalc is not None:
            self.durpersonnelotcumcalc = durpersonnelotcumcalc
        if durpersonnelregcumcalc is not None:
            self.durpersonnelregcumcalc = durpersonnelregcumcalc
        if durpersonneltotcumcalc is not None:
            self.durpersonneltotcumcalc = durpersonneltotcumcalc
        if durpipemovingcalc is not None:
            self.durpipemovingcalc = durpipemovingcalc
        if durproblemtimecumdayscalc is not None:
            self.durproblemtimecumdayscalc = durproblemtimecumdayscalc
        if exclude is not None:
            self.exclude = exclude
        if flatorslopecalc is not None:
            self.flatorslopecalc = flatorslopecalc
        if hazards is not None:
            self.hazards = hazards
        if idrec is not None:
            self.idrec = idrec
        if idreclastcascalc is not None:
            self.idreclastcascalc = idreclastcascalc
        if idreclastcascalctk is not None:
            self.idreclastcascalctk = idreclastcascalctk
        if idreclastrigcalc is not None:
            self.idreclastrigcalc = idreclastrigcalc
        if idreclastrigcalctk is not None:
            self.idreclastrigcalctk = idreclastrigcalctk
        if idreclasttubcalc is not None:
            self.idreclasttubcalc = idreclasttubcalc
        if idreclasttubcalctk is not None:
            self.idreclasttubcalctk = idreclasttubcalctk
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idrecwellbore is not None:
            self.idrecwellbore = idrecwellbore
        if idrecwellboretk is not None:
            self.idrecwellboretk = idrecwellboretk
        if idwell is not None:
            self.idwell = idwell
        if inclbtmcalc is not None:
            self.inclbtmcalc = inclbtmcalc
        if inclmaxcalc is not None:
            self.inclmaxcalc = inclmaxcalc
        if incltopcalc is not None:
            self.incltopcalc = incltopcalc
        if job is not None:
            self.job = job
        if job_program_phase_activities is not None:
            self.job_program_phase_activities = job_program_phase_activities
        if job_program_phase_changes is not None:
            self.job_program_phase_changes = job_program_phase_changes
        if job_program_phase_risks is not None:
            self.job_program_phase_risks = job_program_phase_risks
        if job_program_phase_steps is not None:
            self.job_program_phase_steps = job_program_phase_steps
        if job_program_phase_zone_allocs is not None:
            self.job_program_phase_zone_allocs = job_program_phase_zone_allocs
        if lengthactualcalc is not None:
            self.lengthactualcalc = lengthactualcalc
        if lengthplancalc is not None:
            self.lengthplancalc = lengthplancalc
        if methodtyp1 is not None:
            self.methodtyp1 = methodtyp1
        if methodtyp2 is not None:
            self.methodtyp2 = methodtyp2
        if muddensitymaxcalc is not None:
            self.muddensitymaxcalc = muddensitymaxcalc
        if muddensitymincalc is not None:
            self.muddensitymincalc = muddensitymincalc
        if mudtypcalc is not None:
            self.mudtypcalc = mudtypcalc
        if pctproblemtimecalc is not None:
            self.pctproblemtimecalc = pctproblemtimecalc
        if pctproblemtimecumcalc is not None:
            self.pctproblemtimecumcalc = pctproblemtimecumcalc
        if percenttmrotatingcalc is not None:
            self.percenttmrotatingcalc = percenttmrotatingcalc
        if percenttmslidingcalc is not None:
            self.percenttmslidingcalc = percenttmslidingcalc
        if phasemudcostcalc is not None:
            self.phasemudcostcalc = phasemudcostcalc
        if phasemudcostnormcalc is not None:
            self.phasemudcostnormcalc = phasemudcostnormcalc
        if phasemudcostperdepthcalc is not None:
            self.phasemudcostperdepthcalc = phasemudcostperdepthcalc
        if phasemudcostperdepthnormcalc is not None:
            self.phasemudcostperdepthnormcalc = phasemudcostperdepthnormcalc
        if planchange is not None:
            self.planchange = planchange
        if planphase is not None:
            self.planphase = planphase
        if ratiodepthactualplancalc is not None:
            self.ratiodepthactualplancalc = ratiodepthactualplancalc
        if refnocalc is not None:
            self.refnocalc = refnocalc
        if reportdaycalc is not None:
            self.reportdaycalc = reportdaycalc
        if reportnocalc is not None:
            self.reportnocalc = reportnocalc
        if ropcalc is not None:
            self.ropcalc = ropcalc
        if ropinstavgcalc is not None:
            self.ropinstavgcalc = ropinstavgcalc
        if roprotatingcalc is not None:
            self.roprotatingcalc = roprotatingcalc
        if ropslidingcalc is not None:
            self.ropslidingcalc = ropslidingcalc
        if source is not None:
            self.source = source
        if summary is not None:
            self.summary = summary
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if sysseq is not None:
            self.sysseq = sysseq
        if systag is not None:
            self.systag = systag
        if tmcirccalc is not None:
            self.tmcirccalc = tmcirccalc
        if tmcirccumcalc is not None:
            self.tmcirccumcalc = tmcirccumcalc
        if tmcirctripothercalc is not None:
            self.tmcirctripothercalc = tmcirctripothercalc
        if tmcirctripothercumcalc is not None:
            self.tmcirctripothercumcalc = tmcirctripothercumcalc
        if tmdrillcalc is not None:
            self.tmdrillcalc = tmdrillcalc
        if tmdrillcumcalc is not None:
            self.tmdrillcumcalc = tmdrillcumcalc
        if tmdrillcumnoexccalc is not None:
            self.tmdrillcumnoexccalc = tmdrillcumnoexccalc
        if tmdrillnoexccalc is not None:
            self.tmdrillnoexccalc = tmdrillnoexccalc
        if tmothercalc is not None:
            self.tmothercalc = tmothercalc
        if tmothercumcalc is not None:
            self.tmothercumcalc = tmothercumcalc
        if tmrotatingcalc is not None:
            self.tmrotatingcalc = tmrotatingcalc
        if tmslidingcalc is not None:
            self.tmslidingcalc = tmslidingcalc
        if tmtripcalc is not None:
            self.tmtripcalc = tmtripcalc
        if tmtripcumcalc is not None:
            self.tmtripcumcalc = tmtripcumcalc
        if usertxt1 is not None:
            self.usertxt1 = usertxt1
        if volkicksumcalc is not None:
            self.volkicksumcalc = volkicksumcalc
        if vollosssumcalc is not None:
            self.vollosssumcalc = vollosssumcalc
        if volmudaddedcalc is not None:
            self.volmudaddedcalc = volmudaddedcalc
        if volmudaddedlossvarcalc is not None:
            self.volmudaddedlossvarcalc = volmudaddedlossvarcalc
        if volmudlosscalc is not None:
            self.volmudlosscalc = volmudlosscalc
        if weightmetalrecovtotalcalc is not None:
            self.weightmetalrecovtotalcalc = weightmetalrecovtotalcalc
        if wellboreszcalc is not None:
            self.wellboreszcalc = wellboreszcalc

    @property
    def activitydepthendmaxcalc(self):
        """Gets the activitydepthendmaxcalc of this JobProgramPhase.  # noqa: E501


        :return: The activitydepthendmaxcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseActivitydepthendmaxcalc
        """
        return self._activitydepthendmaxcalc

    @activitydepthendmaxcalc.setter
    def activitydepthendmaxcalc(self, activitydepthendmaxcalc):
        """Sets the activitydepthendmaxcalc of this JobProgramPhase.


        :param activitydepthendmaxcalc: The activitydepthendmaxcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseActivitydepthendmaxcalc
        """

        self._activitydepthendmaxcalc = activitydepthendmaxcalc

    @property
    def activitydepthstartmincalc(self):
        """Gets the activitydepthstartmincalc of this JobProgramPhase.  # noqa: E501


        :return: The activitydepthstartmincalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseActivitydepthstartmincalc
        """
        return self._activitydepthstartmincalc

    @activitydepthstartmincalc.setter
    def activitydepthstartmincalc(self, activitydepthstartmincalc):
        """Sets the activitydepthstartmincalc of this JobProgramPhase.


        :param activitydepthstartmincalc: The activitydepthstartmincalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseActivitydepthstartmincalc
        """

        self._activitydepthstartmincalc = activitydepthstartmincalc

    @property
    def activitydurationmaxcalc(self):
        """Gets the activitydurationmaxcalc of this JobProgramPhase.  # noqa: E501


        :return: The activitydurationmaxcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseActivitydurationmaxcalc
        """
        return self._activitydurationmaxcalc

    @activitydurationmaxcalc.setter
    def activitydurationmaxcalc(self, activitydurationmaxcalc):
        """Sets the activitydurationmaxcalc of this JobProgramPhase.


        :param activitydurationmaxcalc: The activitydurationmaxcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseActivitydurationmaxcalc
        """

        self._activitydurationmaxcalc = activitydurationmaxcalc

    @property
    def activitydurationmaxcumcalc(self):
        """Gets the activitydurationmaxcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The activitydurationmaxcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseActivitydurationmaxcumcalc
        """
        return self._activitydurationmaxcumcalc

    @activitydurationmaxcumcalc.setter
    def activitydurationmaxcumcalc(self, activitydurationmaxcumcalc):
        """Sets the activitydurationmaxcumcalc of this JobProgramPhase.


        :param activitydurationmaxcumcalc: The activitydurationmaxcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseActivitydurationmaxcumcalc
        """

        self._activitydurationmaxcumcalc = activitydurationmaxcumcalc

    @property
    def activitydurationmincalc(self):
        """Gets the activitydurationmincalc of this JobProgramPhase.  # noqa: E501


        :return: The activitydurationmincalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseActivitydurationmincalc
        """
        return self._activitydurationmincalc

    @activitydurationmincalc.setter
    def activitydurationmincalc(self, activitydurationmincalc):
        """Sets the activitydurationmincalc of this JobProgramPhase.


        :param activitydurationmincalc: The activitydurationmincalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseActivitydurationmincalc
        """

        self._activitydurationmincalc = activitydurationmincalc

    @property
    def activitydurationmincumcalc(self):
        """Gets the activitydurationmincumcalc of this JobProgramPhase.  # noqa: E501


        :return: The activitydurationmincumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseActivitydurationmincumcalc
        """
        return self._activitydurationmincumcalc

    @activitydurationmincumcalc.setter
    def activitydurationmincumcalc(self, activitydurationmincumcalc):
        """Sets the activitydurationmincumcalc of this JobProgramPhase.


        :param activitydurationmincumcalc: The activitydurationmincumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseActivitydurationmincumcalc
        """

        self._activitydurationmincumcalc = activitydurationmincumcalc

    @property
    def activitydurationmlcalc(self):
        """Gets the activitydurationmlcalc of this JobProgramPhase.  # noqa: E501


        :return: The activitydurationmlcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseActivitydurationmlcalc
        """
        return self._activitydurationmlcalc

    @activitydurationmlcalc.setter
    def activitydurationmlcalc(self, activitydurationmlcalc):
        """Sets the activitydurationmlcalc of this JobProgramPhase.


        :param activitydurationmlcalc: The activitydurationmlcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseActivitydurationmlcalc
        """

        self._activitydurationmlcalc = activitydurationmlcalc

    @property
    def activitydurationmlcumcalc(self):
        """Gets the activitydurationmlcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The activitydurationmlcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseActivitydurationmlcumcalc
        """
        return self._activitydurationmlcumcalc

    @activitydurationmlcumcalc.setter
    def activitydurationmlcumcalc(self, activitydurationmlcumcalc):
        """Sets the activitydurationmlcumcalc of this JobProgramPhase.


        :param activitydurationmlcumcalc: The activitydurationmlcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseActivitydurationmlcumcalc
        """

        self._activitydurationmlcumcalc = activitydurationmlcumcalc

    @property
    def bhatotalruncalc(self):
        """Gets the bhatotalruncalc of this JobProgramPhase.  # noqa: E501


        :return: The bhatotalruncalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseBhatotalruncalc
        """
        return self._bhatotalruncalc

    @bhatotalruncalc.setter
    def bhatotalruncalc(self, bhatotalruncalc):
        """Sets the bhatotalruncalc of this JobProgramPhase.


        :param bhatotalruncalc: The bhatotalruncalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseBhatotalruncalc
        """

        self._bhatotalruncalc = bhatotalruncalc

    @property
    def bitrevscalc(self):
        """Gets the bitrevscalc of this JobProgramPhase.  # noqa: E501


        :return: The bitrevscalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseBitrevscalc
        """
        return self._bitrevscalc

    @bitrevscalc.setter
    def bitrevscalc(self, bitrevscalc):
        """Sets the bitrevscalc of this JobProgramPhase.


        :param bitrevscalc: The bitrevscalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseBitrevscalc
        """

        self._bitrevscalc = bitrevscalc

    @property
    def code1(self):
        """Gets the code1 of this JobProgramPhase.  # noqa: E501


        :return: The code1 of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._code1

    @code1.setter
    def code1(self, code1):
        """Sets the code1 of this JobProgramPhase.


        :param code1: The code1 of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._code1 = code1

    @property
    def code1234calc(self):
        """Gets the code1234calc of this JobProgramPhase.  # noqa: E501


        :return: The code1234calc of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._code1234calc

    @code1234calc.setter
    def code1234calc(self, code1234calc):
        """Sets the code1234calc of this JobProgramPhase.


        :param code1234calc: The code1234calc of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._code1234calc = code1234calc

    @property
    def code2(self):
        """Gets the code2 of this JobProgramPhase.  # noqa: E501


        :return: The code2 of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._code2

    @code2.setter
    def code2(self, code2):
        """Sets the code2 of this JobProgramPhase.


        :param code2: The code2 of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._code2 = code2

    @property
    def code3(self):
        """Gets the code3 of this JobProgramPhase.  # noqa: E501


        :return: The code3 of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._code3

    @code3.setter
    def code3(self, code3):
        """Sets the code3 of this JobProgramPhase.


        :param code3: The code3 of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._code3 = code3

    @property
    def code4(self):
        """Gets the code4 of this JobProgramPhase.  # noqa: E501


        :return: The code4 of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._code4

    @code4.setter
    def code4(self, code4):
        """Sets the code4 of this JobProgramPhase.


        :param code4: The code4 of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._code4 = code4

    @property
    def costactualcalc(self):
        """Gets the costactualcalc of this JobProgramPhase.  # noqa: E501


        :return: The costactualcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostactualcalc
        """
        return self._costactualcalc

    @costactualcalc.setter
    def costactualcalc(self, costactualcalc):
        """Sets the costactualcalc of this JobProgramPhase.


        :param costactualcalc: The costactualcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostactualcalc
        """

        self._costactualcalc = costactualcalc

    @property
    def costactualcumcalc(self):
        """Gets the costactualcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The costactualcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostactualcumcalc
        """
        return self._costactualcumcalc

    @costactualcumcalc.setter
    def costactualcumcalc(self, costactualcumcalc):
        """Sets the costactualcumcalc of this JobProgramPhase.


        :param costactualcumcalc: The costactualcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostactualcumcalc
        """

        self._costactualcumcalc = costactualcumcalc

    @property
    def costactualcumnormcalc(self):
        """Gets the costactualcumnormcalc of this JobProgramPhase.  # noqa: E501


        :return: The costactualcumnormcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostactualcumnormcalc
        """
        return self._costactualcumnormcalc

    @costactualcumnormcalc.setter
    def costactualcumnormcalc(self, costactualcumnormcalc):
        """Sets the costactualcumnormcalc of this JobProgramPhase.


        :param costactualcumnormcalc: The costactualcumnormcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostactualcumnormcalc
        """

        self._costactualcumnormcalc = costactualcumnormcalc

    @property
    def costactualnormcalc(self):
        """Gets the costactualnormcalc of this JobProgramPhase.  # noqa: E501


        :return: The costactualnormcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostactualnormcalc
        """
        return self._costactualnormcalc

    @costactualnormcalc.setter
    def costactualnormcalc(self, costactualnormcalc):
        """Sets the costactualnormcalc of this JobProgramPhase.


        :param costactualnormcalc: The costactualnormcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostactualnormcalc
        """

        self._costactualnormcalc = costactualnormcalc

    @property
    def costmax(self):
        """Gets the costmax of this JobProgramPhase.  # noqa: E501


        :return: The costmax of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostmax
        """
        return self._costmax

    @costmax.setter
    def costmax(self, costmax):
        """Sets the costmax of this JobProgramPhase.


        :param costmax: The costmax of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostmax
        """

        self._costmax = costmax

    @property
    def costmaxcumcalc(self):
        """Gets the costmaxcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The costmaxcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostmaxcumcalc
        """
        return self._costmaxcumcalc

    @costmaxcumcalc.setter
    def costmaxcumcalc(self, costmaxcumcalc):
        """Sets the costmaxcumcalc of this JobProgramPhase.


        :param costmaxcumcalc: The costmaxcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostmaxcumcalc
        """

        self._costmaxcumcalc = costmaxcumcalc

    @property
    def costmaxnormcalc(self):
        """Gets the costmaxnormcalc of this JobProgramPhase.  # noqa: E501


        :return: The costmaxnormcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostmaxnormcalc
        """
        return self._costmaxnormcalc

    @costmaxnormcalc.setter
    def costmaxnormcalc(self, costmaxnormcalc):
        """Sets the costmaxnormcalc of this JobProgramPhase.


        :param costmaxnormcalc: The costmaxnormcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostmaxnormcalc
        """

        self._costmaxnormcalc = costmaxnormcalc

    @property
    def costmaxnormcumcalc(self):
        """Gets the costmaxnormcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The costmaxnormcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostmaxnormcumcalc
        """
        return self._costmaxnormcumcalc

    @costmaxnormcumcalc.setter
    def costmaxnormcumcalc(self, costmaxnormcumcalc):
        """Sets the costmaxnormcumcalc of this JobProgramPhase.


        :param costmaxnormcumcalc: The costmaxnormcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostmaxnormcumcalc
        """

        self._costmaxnormcumcalc = costmaxnormcumcalc

    @property
    def costmin(self):
        """Gets the costmin of this JobProgramPhase.  # noqa: E501


        :return: The costmin of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostmin
        """
        return self._costmin

    @costmin.setter
    def costmin(self, costmin):
        """Sets the costmin of this JobProgramPhase.


        :param costmin: The costmin of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostmin
        """

        self._costmin = costmin

    @property
    def costmincumcalc(self):
        """Gets the costmincumcalc of this JobProgramPhase.  # noqa: E501


        :return: The costmincumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostmincumcalc
        """
        return self._costmincumcalc

    @costmincumcalc.setter
    def costmincumcalc(self, costmincumcalc):
        """Sets the costmincumcalc of this JobProgramPhase.


        :param costmincumcalc: The costmincumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostmincumcalc
        """

        self._costmincumcalc = costmincumcalc

    @property
    def costminnormcalc(self):
        """Gets the costminnormcalc of this JobProgramPhase.  # noqa: E501


        :return: The costminnormcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostminnormcalc
        """
        return self._costminnormcalc

    @costminnormcalc.setter
    def costminnormcalc(self, costminnormcalc):
        """Sets the costminnormcalc of this JobProgramPhase.


        :param costminnormcalc: The costminnormcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostminnormcalc
        """

        self._costminnormcalc = costminnormcalc

    @property
    def costminnormcumcalc(self):
        """Gets the costminnormcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The costminnormcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostminnormcumcalc
        """
        return self._costminnormcumcalc

    @costminnormcumcalc.setter
    def costminnormcumcalc(self, costminnormcumcalc):
        """Sets the costminnormcumcalc of this JobProgramPhase.


        :param costminnormcumcalc: The costminnormcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostminnormcumcalc
        """

        self._costminnormcumcalc = costminnormcumcalc

    @property
    def costml(self):
        """Gets the costml of this JobProgramPhase.  # noqa: E501


        :return: The costml of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostml
        """
        return self._costml

    @costml.setter
    def costml(self, costml):
        """Sets the costml of this JobProgramPhase.


        :param costml: The costml of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostml
        """

        self._costml = costml

    @property
    def costmlcumcalc(self):
        """Gets the costmlcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The costmlcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostmlcumcalc
        """
        return self._costmlcumcalc

    @costmlcumcalc.setter
    def costmlcumcalc(self, costmlcumcalc):
        """Sets the costmlcumcalc of this JobProgramPhase.


        :param costmlcumcalc: The costmlcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostmlcumcalc
        """

        self._costmlcumcalc = costmlcumcalc

    @property
    def costmlcumnoexcludecalc(self):
        """Gets the costmlcumnoexcludecalc of this JobProgramPhase.  # noqa: E501


        :return: The costmlcumnoexcludecalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostmlcumnoexcludecalc
        """
        return self._costmlcumnoexcludecalc

    @costmlcumnoexcludecalc.setter
    def costmlcumnoexcludecalc(self, costmlcumnoexcludecalc):
        """Sets the costmlcumnoexcludecalc of this JobProgramPhase.


        :param costmlcumnoexcludecalc: The costmlcumnoexcludecalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostmlcumnoexcludecalc
        """

        self._costmlcumnoexcludecalc = costmlcumnoexcludecalc

    @property
    def costmlnormcalc(self):
        """Gets the costmlnormcalc of this JobProgramPhase.  # noqa: E501


        :return: The costmlnormcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostmlnormcalc
        """
        return self._costmlnormcalc

    @costmlnormcalc.setter
    def costmlnormcalc(self, costmlnormcalc):
        """Sets the costmlnormcalc of this JobProgramPhase.


        :param costmlnormcalc: The costmlnormcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostmlnormcalc
        """

        self._costmlnormcalc = costmlnormcalc

    @property
    def costmlnormcumcalc(self):
        """Gets the costmlnormcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The costmlnormcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostmlnormcumcalc
        """
        return self._costmlnormcumcalc

    @costmlnormcumcalc.setter
    def costmlnormcumcalc(self, costmlnormcumcalc):
        """Sets the costmlnormcumcalc of this JobProgramPhase.


        :param costmlnormcumcalc: The costmlnormcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostmlnormcumcalc
        """

        self._costmlnormcumcalc = costmlnormcumcalc

    @property
    def costperdepthcalc(self):
        """Gets the costperdepthcalc of this JobProgramPhase.  # noqa: E501


        :return: The costperdepthcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostperdepthcalc
        """
        return self._costperdepthcalc

    @costperdepthcalc.setter
    def costperdepthcalc(self, costperdepthcalc):
        """Sets the costperdepthcalc of this JobProgramPhase.


        :param costperdepthcalc: The costperdepthcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostperdepthcalc
        """

        self._costperdepthcalc = costperdepthcalc

    @property
    def costperdepthnormcalc(self):
        """Gets the costperdepthnormcalc of this JobProgramPhase.  # noqa: E501


        :return: The costperdepthnormcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostperdepthnormcalc
        """
        return self._costperdepthnormcalc

    @costperdepthnormcalc.setter
    def costperdepthnormcalc(self, costperdepthnormcalc):
        """Sets the costperdepthnormcalc of this JobProgramPhase.


        :param costperdepthnormcalc: The costperdepthnormcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostperdepthnormcalc
        """

        self._costperdepthnormcalc = costperdepthnormcalc

    @property
    def costperdepthplancalc(self):
        """Gets the costperdepthplancalc of this JobProgramPhase.  # noqa: E501


        :return: The costperdepthplancalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostperdepthplancalc
        """
        return self._costperdepthplancalc

    @costperdepthplancalc.setter
    def costperdepthplancalc(self, costperdepthplancalc):
        """Sets the costperdepthplancalc of this JobProgramPhase.


        :param costperdepthplancalc: The costperdepthplancalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostperdepthplancalc
        """

        self._costperdepthplancalc = costperdepthplancalc

    @property
    def costperdepthplannormcalc(self):
        """Gets the costperdepthplannormcalc of this JobProgramPhase.  # noqa: E501


        :return: The costperdepthplannormcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostperdepthplannormcalc
        """
        return self._costperdepthplannormcalc

    @costperdepthplannormcalc.setter
    def costperdepthplannormcalc(self, costperdepthplannormcalc):
        """Sets the costperdepthplannormcalc of this JobProgramPhase.


        :param costperdepthplannormcalc: The costperdepthplannormcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostperdepthplannormcalc
        """

        self._costperdepthplannormcalc = costperdepthplannormcalc

    @property
    def costtechlimit(self):
        """Gets the costtechlimit of this JobProgramPhase.  # noqa: E501


        :return: The costtechlimit of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCosttechlimit
        """
        return self._costtechlimit

    @costtechlimit.setter
    def costtechlimit(self, costtechlimit):
        """Sets the costtechlimit of this JobProgramPhase.


        :param costtechlimit: The costtechlimit of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCosttechlimit
        """

        self._costtechlimit = costtechlimit

    @property
    def costtechlimitcumcalc(self):
        """Gets the costtechlimitcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The costtechlimitcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCosttechlimitcumcalc
        """
        return self._costtechlimitcumcalc

    @costtechlimitcumcalc.setter
    def costtechlimitcumcalc(self, costtechlimitcumcalc):
        """Sets the costtechlimitcumcalc of this JobProgramPhase.


        :param costtechlimitcumcalc: The costtechlimitcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCosttechlimitcumcalc
        """

        self._costtechlimitcumcalc = costtechlimitcumcalc

    @property
    def costtechlimitnormcalc(self):
        """Gets the costtechlimitnormcalc of this JobProgramPhase.  # noqa: E501


        :return: The costtechlimitnormcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCosttechlimitnormcalc
        """
        return self._costtechlimitnormcalc

    @costtechlimitnormcalc.setter
    def costtechlimitnormcalc(self, costtechlimitnormcalc):
        """Sets the costtechlimitnormcalc of this JobProgramPhase.


        :param costtechlimitnormcalc: The costtechlimitnormcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCosttechlimitnormcalc
        """

        self._costtechlimitnormcalc = costtechlimitnormcalc

    @property
    def costtechlimitnormcumcalc(self):
        """Gets the costtechlimitnormcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The costtechlimitnormcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCosttechlimitnormcumcalc
        """
        return self._costtechlimitnormcumcalc

    @costtechlimitnormcumcalc.setter
    def costtechlimitnormcumcalc(self, costtechlimitnormcumcalc):
        """Sets the costtechlimitnormcumcalc of this JobProgramPhase.


        :param costtechlimitnormcumcalc: The costtechlimitnormcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCosttechlimitnormcumcalc
        """

        self._costtechlimitnormcumcalc = costtechlimitnormcumcalc

    @property
    def costvariancecalc(self):
        """Gets the costvariancecalc of this JobProgramPhase.  # noqa: E501


        :return: The costvariancecalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostvariancecalc
        """
        return self._costvariancecalc

    @costvariancecalc.setter
    def costvariancecalc(self, costvariancecalc):
        """Sets the costvariancecalc of this JobProgramPhase.


        :param costvariancecalc: The costvariancecalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostvariancecalc
        """

        self._costvariancecalc = costvariancecalc

    @property
    def costvariancecumcalc(self):
        """Gets the costvariancecumcalc of this JobProgramPhase.  # noqa: E501


        :return: The costvariancecumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostvariancecumcalc
        """
        return self._costvariancecumcalc

    @costvariancecumcalc.setter
    def costvariancecumcalc(self, costvariancecumcalc):
        """Sets the costvariancecumcalc of this JobProgramPhase.


        :param costvariancecumcalc: The costvariancecumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostvariancecumcalc
        """

        self._costvariancecumcalc = costvariancecumcalc

    @property
    def costvariancemaxcalc(self):
        """Gets the costvariancemaxcalc of this JobProgramPhase.  # noqa: E501


        :return: The costvariancemaxcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostvariancemaxcalc
        """
        return self._costvariancemaxcalc

    @costvariancemaxcalc.setter
    def costvariancemaxcalc(self, costvariancemaxcalc):
        """Sets the costvariancemaxcalc of this JobProgramPhase.


        :param costvariancemaxcalc: The costvariancemaxcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostvariancemaxcalc
        """

        self._costvariancemaxcalc = costvariancemaxcalc

    @property
    def costvariancemaxcumcalc(self):
        """Gets the costvariancemaxcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The costvariancemaxcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostvariancemaxcumcalc
        """
        return self._costvariancemaxcumcalc

    @costvariancemaxcumcalc.setter
    def costvariancemaxcumcalc(self, costvariancemaxcumcalc):
        """Sets the costvariancemaxcumcalc of this JobProgramPhase.


        :param costvariancemaxcumcalc: The costvariancemaxcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostvariancemaxcumcalc
        """

        self._costvariancemaxcumcalc = costvariancemaxcumcalc

    @property
    def costvariancemincalc(self):
        """Gets the costvariancemincalc of this JobProgramPhase.  # noqa: E501


        :return: The costvariancemincalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostvariancemincalc
        """
        return self._costvariancemincalc

    @costvariancemincalc.setter
    def costvariancemincalc(self, costvariancemincalc):
        """Sets the costvariancemincalc of this JobProgramPhase.


        :param costvariancemincalc: The costvariancemincalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostvariancemincalc
        """

        self._costvariancemincalc = costvariancemincalc

    @property
    def costvariancemincumcalc(self):
        """Gets the costvariancemincumcalc of this JobProgramPhase.  # noqa: E501


        :return: The costvariancemincumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostvariancemincumcalc
        """
        return self._costvariancemincumcalc

    @costvariancemincumcalc.setter
    def costvariancemincumcalc(self, costvariancemincumcalc):
        """Sets the costvariancemincumcalc of this JobProgramPhase.


        :param costvariancemincumcalc: The costvariancemincumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostvariancemincumcalc
        """

        self._costvariancemincumcalc = costvariancemincumcalc

    @property
    def costvariancetechlimitcalc(self):
        """Gets the costvariancetechlimitcalc of this JobProgramPhase.  # noqa: E501


        :return: The costvariancetechlimitcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostvariancetechlimitcalc
        """
        return self._costvariancetechlimitcalc

    @costvariancetechlimitcalc.setter
    def costvariancetechlimitcalc(self, costvariancetechlimitcalc):
        """Sets the costvariancetechlimitcalc of this JobProgramPhase.


        :param costvariancetechlimitcalc: The costvariancetechlimitcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostvariancetechlimitcalc
        """

        self._costvariancetechlimitcalc = costvariancetechlimitcalc

    @property
    def costvariancetechlimitcumcalc(self):
        """Gets the costvariancetechlimitcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The costvariancetechlimitcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseCostvariancetechlimitcumcalc
        """
        return self._costvariancetechlimitcumcalc

    @costvariancetechlimitcumcalc.setter
    def costvariancetechlimitcumcalc(self, costvariancetechlimitcumcalc):
        """Sets the costvariancetechlimitcumcalc of this JobProgramPhase.


        :param costvariancetechlimitcumcalc: The costvariancetechlimitcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseCostvariancetechlimitcumcalc
        """

        self._costvariancetechlimitcumcalc = costvariancetechlimitcumcalc

    @property
    def dayjobactualcalc(self):
        """Gets the dayjobactualcalc of this JobProgramPhase.  # noqa: E501


        :return: The dayjobactualcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDayjobactualcalc
        """
        return self._dayjobactualcalc

    @dayjobactualcalc.setter
    def dayjobactualcalc(self, dayjobactualcalc):
        """Sets the dayjobactualcalc of this JobProgramPhase.


        :param dayjobactualcalc: The dayjobactualcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDayjobactualcalc
        """

        self._dayjobactualcalc = dayjobactualcalc

    @property
    def dayjobmaxplanaltcalc(self):
        """Gets the dayjobmaxplanaltcalc of this JobProgramPhase.  # noqa: E501


        :return: The dayjobmaxplanaltcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDayjobmaxplanaltcalc
        """
        return self._dayjobmaxplanaltcalc

    @dayjobmaxplanaltcalc.setter
    def dayjobmaxplanaltcalc(self, dayjobmaxplanaltcalc):
        """Sets the dayjobmaxplanaltcalc of this JobProgramPhase.


        :param dayjobmaxplanaltcalc: The dayjobmaxplanaltcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDayjobmaxplanaltcalc
        """

        self._dayjobmaxplanaltcalc = dayjobmaxplanaltcalc

    @property
    def dayjobmaxplancalc(self):
        """Gets the dayjobmaxplancalc of this JobProgramPhase.  # noqa: E501


        :return: The dayjobmaxplancalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDayjobmaxplancalc
        """
        return self._dayjobmaxplancalc

    @dayjobmaxplancalc.setter
    def dayjobmaxplancalc(self, dayjobmaxplancalc):
        """Sets the dayjobmaxplancalc of this JobProgramPhase.


        :param dayjobmaxplancalc: The dayjobmaxplancalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDayjobmaxplancalc
        """

        self._dayjobmaxplancalc = dayjobmaxplancalc

    @property
    def dayjobminplanaltcalc(self):
        """Gets the dayjobminplanaltcalc of this JobProgramPhase.  # noqa: E501


        :return: The dayjobminplanaltcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDayjobminplanaltcalc
        """
        return self._dayjobminplanaltcalc

    @dayjobminplanaltcalc.setter
    def dayjobminplanaltcalc(self, dayjobminplanaltcalc):
        """Sets the dayjobminplanaltcalc of this JobProgramPhase.


        :param dayjobminplanaltcalc: The dayjobminplanaltcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDayjobminplanaltcalc
        """

        self._dayjobminplanaltcalc = dayjobminplanaltcalc

    @property
    def dayjobminplancalc(self):
        """Gets the dayjobminplancalc of this JobProgramPhase.  # noqa: E501


        :return: The dayjobminplancalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDayjobminplancalc
        """
        return self._dayjobminplancalc

    @dayjobminplancalc.setter
    def dayjobminplancalc(self, dayjobminplancalc):
        """Sets the dayjobminplancalc of this JobProgramPhase.


        :param dayjobminplancalc: The dayjobminplancalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDayjobminplancalc
        """

        self._dayjobminplancalc = dayjobminplancalc

    @property
    def dayjobmlplanaltcalc(self):
        """Gets the dayjobmlplanaltcalc of this JobProgramPhase.  # noqa: E501


        :return: The dayjobmlplanaltcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDayjobmlplanaltcalc
        """
        return self._dayjobmlplanaltcalc

    @dayjobmlplanaltcalc.setter
    def dayjobmlplanaltcalc(self, dayjobmlplanaltcalc):
        """Sets the dayjobmlplanaltcalc of this JobProgramPhase.


        :param dayjobmlplanaltcalc: The dayjobmlplanaltcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDayjobmlplanaltcalc
        """

        self._dayjobmlplanaltcalc = dayjobmlplanaltcalc

    @property
    def dayjobmlplancalc(self):
        """Gets the dayjobmlplancalc of this JobProgramPhase.  # noqa: E501


        :return: The dayjobmlplancalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDayjobmlplancalc
        """
        return self._dayjobmlplancalc

    @dayjobmlplancalc.setter
    def dayjobmlplancalc(self, dayjobmlplancalc):
        """Sets the dayjobmlplancalc of this JobProgramPhase.


        :param dayjobmlplancalc: The dayjobmlplancalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDayjobmlplancalc
        """

        self._dayjobmlplancalc = dayjobmlplancalc

    @property
    def dayjobtechlimitplancalc(self):
        """Gets the dayjobtechlimitplancalc of this JobProgramPhase.  # noqa: E501


        :return: The dayjobtechlimitplancalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDayjobtechlimitplancalc
        """
        return self._dayjobtechlimitplancalc

    @dayjobtechlimitplancalc.setter
    def dayjobtechlimitplancalc(self, dayjobtechlimitplancalc):
        """Sets the dayjobtechlimitplancalc of this JobProgramPhase.


        :param dayjobtechlimitplancalc: The dayjobtechlimitplancalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDayjobtechlimitplancalc
        """

        self._dayjobtechlimitplancalc = dayjobtechlimitplancalc

    @property
    def dayjobtlplanaltcalc(self):
        """Gets the dayjobtlplanaltcalc of this JobProgramPhase.  # noqa: E501


        :return: The dayjobtlplanaltcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDayjobtlplanaltcalc
        """
        return self._dayjobtlplanaltcalc

    @dayjobtlplanaltcalc.setter
    def dayjobtlplanaltcalc(self, dayjobtlplanaltcalc):
        """Sets the dayjobtlplanaltcalc of this JobProgramPhase.


        :param dayjobtlplanaltcalc: The dayjobtlplanaltcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDayjobtlplanaltcalc
        """

        self._dayjobtlplanaltcalc = dayjobtlplanaltcalc

    @property
    def daysfromspudcalc(self):
        """Gets the daysfromspudcalc of this JobProgramPhase.  # noqa: E501


        :return: The daysfromspudcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDaysfromspudcalc
        """
        return self._daysfromspudcalc

    @daysfromspudcalc.setter
    def daysfromspudcalc(self, daysfromspudcalc):
        """Sets the daysfromspudcalc of this JobProgramPhase.


        :param daysfromspudcalc: The daysfromspudcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDaysfromspudcalc
        """

        self._daysfromspudcalc = daysfromspudcalc

    @property
    def dayspudactualcalc(self):
        """Gets the dayspudactualcalc of this JobProgramPhase.  # noqa: E501


        :return: The dayspudactualcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDayspudactualcalc
        """
        return self._dayspudactualcalc

    @dayspudactualcalc.setter
    def dayspudactualcalc(self, dayspudactualcalc):
        """Sets the dayspudactualcalc of this JobProgramPhase.


        :param dayspudactualcalc: The dayspudactualcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDayspudactualcalc
        """

        self._dayspudactualcalc = dayspudactualcalc

    @property
    def definitive(self):
        """Gets the definitive of this JobProgramPhase.  # noqa: E501


        :return: The definitive of this JobProgramPhase.  # noqa: E501
        :rtype: int
        """
        return self._definitive

    @definitive.setter
    def definitive(self, definitive):
        """Sets the definitive of this JobProgramPhase.


        :param definitive: The definitive of this JobProgramPhase.  # noqa: E501
        :type: int
        """

        self._definitive = definitive

    @property
    def depthendactualcalc(self):
        """Gets the depthendactualcalc of this JobProgramPhase.  # noqa: E501


        :return: The depthendactualcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDepthendactualcalc
        """
        return self._depthendactualcalc

    @depthendactualcalc.setter
    def depthendactualcalc(self, depthendactualcalc):
        """Sets the depthendactualcalc of this JobProgramPhase.


        :param depthendactualcalc: The depthendactualcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDepthendactualcalc
        """

        self._depthendactualcalc = depthendactualcalc

    @property
    def depthendplan(self):
        """Gets the depthendplan of this JobProgramPhase.  # noqa: E501


        :return: The depthendplan of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDepthendplan
        """
        return self._depthendplan

    @depthendplan.setter
    def depthendplan(self, depthendplan):
        """Sets the depthendplan of this JobProgramPhase.


        :param depthendplan: The depthendplan of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDepthendplan
        """

        self._depthendplan = depthendplan

    @property
    def depthprogressactualcalc(self):
        """Gets the depthprogressactualcalc of this JobProgramPhase.  # noqa: E501


        :return: The depthprogressactualcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDepthprogressactualcalc
        """
        return self._depthprogressactualcalc

    @depthprogressactualcalc.setter
    def depthprogressactualcalc(self, depthprogressactualcalc):
        """Sets the depthprogressactualcalc of this JobProgramPhase.


        :param depthprogressactualcalc: The depthprogressactualcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDepthprogressactualcalc
        """

        self._depthprogressactualcalc = depthprogressactualcalc

    @property
    def depthprogressplancalc(self):
        """Gets the depthprogressplancalc of this JobProgramPhase.  # noqa: E501


        :return: The depthprogressplancalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDepthprogressplancalc
        """
        return self._depthprogressplancalc

    @depthprogressplancalc.setter
    def depthprogressplancalc(self, depthprogressplancalc):
        """Sets the depthprogressplancalc of this JobProgramPhase.


        :param depthprogressplancalc: The depthprogressplancalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDepthprogressplancalc
        """

        self._depthprogressplancalc = depthprogressplancalc

    @property
    def depthstartactualcalc(self):
        """Gets the depthstartactualcalc of this JobProgramPhase.  # noqa: E501


        :return: The depthstartactualcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDepthstartactualcalc
        """
        return self._depthstartactualcalc

    @depthstartactualcalc.setter
    def depthstartactualcalc(self, depthstartactualcalc):
        """Sets the depthstartactualcalc of this JobProgramPhase.


        :param depthstartactualcalc: The depthstartactualcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDepthstartactualcalc
        """

        self._depthstartactualcalc = depthstartactualcalc

    @property
    def depthstartplan(self):
        """Gets the depthstartplan of this JobProgramPhase.  # noqa: E501


        :return: The depthstartplan of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDepthstartplan
        """
        return self._depthstartplan

    @depthstartplan.setter
    def depthstartplan(self, depthstartplan):
        """Sets the depthstartplan of this JobProgramPhase.


        :param depthstartplan: The depthstartplan of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDepthstartplan
        """

        self._depthstartplan = depthstartplan

    @property
    def depthtvdendactualcalc(self):
        """Gets the depthtvdendactualcalc of this JobProgramPhase.  # noqa: E501


        :return: The depthtvdendactualcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDepthtvdendactualcalc
        """
        return self._depthtvdendactualcalc

    @depthtvdendactualcalc.setter
    def depthtvdendactualcalc(self, depthtvdendactualcalc):
        """Sets the depthtvdendactualcalc of this JobProgramPhase.


        :param depthtvdendactualcalc: The depthtvdendactualcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDepthtvdendactualcalc
        """

        self._depthtvdendactualcalc = depthtvdendactualcalc

    @property
    def depthtvdendplancalc(self):
        """Gets the depthtvdendplancalc of this JobProgramPhase.  # noqa: E501


        :return: The depthtvdendplancalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDepthtvdendplancalc
        """
        return self._depthtvdendplancalc

    @depthtvdendplancalc.setter
    def depthtvdendplancalc(self, depthtvdendplancalc):
        """Sets the depthtvdendplancalc of this JobProgramPhase.


        :param depthtvdendplancalc: The depthtvdendplancalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDepthtvdendplancalc
        """

        self._depthtvdendplancalc = depthtvdendplancalc

    @property
    def depthtvdstartactualcalc(self):
        """Gets the depthtvdstartactualcalc of this JobProgramPhase.  # noqa: E501


        :return: The depthtvdstartactualcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDepthtvdstartactualcalc
        """
        return self._depthtvdstartactualcalc

    @depthtvdstartactualcalc.setter
    def depthtvdstartactualcalc(self, depthtvdstartactualcalc):
        """Sets the depthtvdstartactualcalc of this JobProgramPhase.


        :param depthtvdstartactualcalc: The depthtvdstartactualcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDepthtvdstartactualcalc
        """

        self._depthtvdstartactualcalc = depthtvdstartactualcalc

    @property
    def depthtvdstartplancalc(self):
        """Gets the depthtvdstartplancalc of this JobProgramPhase.  # noqa: E501


        :return: The depthtvdstartplancalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDepthtvdstartplancalc
        """
        return self._depthtvdstartplancalc

    @depthtvdstartplancalc.setter
    def depthtvdstartplancalc(self, depthtvdstartplancalc):
        """Sets the depthtvdstartplancalc of this JobProgramPhase.


        :param depthtvdstartplancalc: The depthtvdstartplancalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDepthtvdstartplancalc
        """

        self._depthtvdstartplancalc = depthtvdstartplancalc

    @property
    def des(self):
        """Gets the des of this JobProgramPhase.  # noqa: E501


        :return: The des of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._des

    @des.setter
    def des(self, des):
        """Sets the des of this JobProgramPhase.


        :param des: The des of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._des = des

    @property
    def dttmendactual(self):
        """Gets the dttmendactual of this JobProgramPhase.  # noqa: E501


        :return: The dttmendactual of this JobProgramPhase.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmendactual

    @dttmendactual.setter
    def dttmendactual(self, dttmendactual):
        """Sets the dttmendactual of this JobProgramPhase.


        :param dttmendactual: The dttmendactual of this JobProgramPhase.  # noqa: E501
        :type: datetime
        """

        self._dttmendactual = dttmendactual

    @property
    def dttmendcalc(self):
        """Gets the dttmendcalc of this JobProgramPhase.  # noqa: E501


        :return: The dttmendcalc of this JobProgramPhase.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmendcalc

    @dttmendcalc.setter
    def dttmendcalc(self, dttmendcalc):
        """Sets the dttmendcalc of this JobProgramPhase.


        :param dttmendcalc: The dttmendcalc of this JobProgramPhase.  # noqa: E501
        :type: datetime
        """

        self._dttmendcalc = dttmendcalc

    @property
    def dttmendplanmaxcalc(self):
        """Gets the dttmendplanmaxcalc of this JobProgramPhase.  # noqa: E501


        :return: The dttmendplanmaxcalc of this JobProgramPhase.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmendplanmaxcalc

    @dttmendplanmaxcalc.setter
    def dttmendplanmaxcalc(self, dttmendplanmaxcalc):
        """Sets the dttmendplanmaxcalc of this JobProgramPhase.


        :param dttmendplanmaxcalc: The dttmendplanmaxcalc of this JobProgramPhase.  # noqa: E501
        :type: datetime
        """

        self._dttmendplanmaxcalc = dttmendplanmaxcalc

    @property
    def dttmendplanmincalc(self):
        """Gets the dttmendplanmincalc of this JobProgramPhase.  # noqa: E501


        :return: The dttmendplanmincalc of this JobProgramPhase.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmendplanmincalc

    @dttmendplanmincalc.setter
    def dttmendplanmincalc(self, dttmendplanmincalc):
        """Sets the dttmendplanmincalc of this JobProgramPhase.


        :param dttmendplanmincalc: The dttmendplanmincalc of this JobProgramPhase.  # noqa: E501
        :type: datetime
        """

        self._dttmendplanmincalc = dttmendplanmincalc

    @property
    def dttmendplanmlcalc(self):
        """Gets the dttmendplanmlcalc of this JobProgramPhase.  # noqa: E501


        :return: The dttmendplanmlcalc of this JobProgramPhase.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmendplanmlcalc

    @dttmendplanmlcalc.setter
    def dttmendplanmlcalc(self, dttmendplanmlcalc):
        """Sets the dttmendplanmlcalc of this JobProgramPhase.


        :param dttmendplanmlcalc: The dttmendplanmlcalc of this JobProgramPhase.  # noqa: E501
        :type: datetime
        """

        self._dttmendplanmlcalc = dttmendplanmlcalc

    @property
    def dttmendplantechlimitcalc(self):
        """Gets the dttmendplantechlimitcalc of this JobProgramPhase.  # noqa: E501


        :return: The dttmendplantechlimitcalc of this JobProgramPhase.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmendplantechlimitcalc

    @dttmendplantechlimitcalc.setter
    def dttmendplantechlimitcalc(self, dttmendplantechlimitcalc):
        """Sets the dttmendplantechlimitcalc of this JobProgramPhase.


        :param dttmendplantechlimitcalc: The dttmendplantechlimitcalc of this JobProgramPhase.  # noqa: E501
        :type: datetime
        """

        self._dttmendplantechlimitcalc = dttmendplantechlimitcalc

    @property
    def dttmstartactual(self):
        """Gets the dttmstartactual of this JobProgramPhase.  # noqa: E501


        :return: The dttmstartactual of this JobProgramPhase.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmstartactual

    @dttmstartactual.setter
    def dttmstartactual(self, dttmstartactual):
        """Sets the dttmstartactual of this JobProgramPhase.


        :param dttmstartactual: The dttmstartactual of this JobProgramPhase.  # noqa: E501
        :type: datetime
        """

        self._dttmstartactual = dttmstartactual

    @property
    def dttmstartplanmaxcalc(self):
        """Gets the dttmstartplanmaxcalc of this JobProgramPhase.  # noqa: E501


        :return: The dttmstartplanmaxcalc of this JobProgramPhase.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmstartplanmaxcalc

    @dttmstartplanmaxcalc.setter
    def dttmstartplanmaxcalc(self, dttmstartplanmaxcalc):
        """Sets the dttmstartplanmaxcalc of this JobProgramPhase.


        :param dttmstartplanmaxcalc: The dttmstartplanmaxcalc of this JobProgramPhase.  # noqa: E501
        :type: datetime
        """

        self._dttmstartplanmaxcalc = dttmstartplanmaxcalc

    @property
    def dttmstartplanmincalc(self):
        """Gets the dttmstartplanmincalc of this JobProgramPhase.  # noqa: E501


        :return: The dttmstartplanmincalc of this JobProgramPhase.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmstartplanmincalc

    @dttmstartplanmincalc.setter
    def dttmstartplanmincalc(self, dttmstartplanmincalc):
        """Sets the dttmstartplanmincalc of this JobProgramPhase.


        :param dttmstartplanmincalc: The dttmstartplanmincalc of this JobProgramPhase.  # noqa: E501
        :type: datetime
        """

        self._dttmstartplanmincalc = dttmstartplanmincalc

    @property
    def dttmstartplanmlcalc(self):
        """Gets the dttmstartplanmlcalc of this JobProgramPhase.  # noqa: E501


        :return: The dttmstartplanmlcalc of this JobProgramPhase.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmstartplanmlcalc

    @dttmstartplanmlcalc.setter
    def dttmstartplanmlcalc(self, dttmstartplanmlcalc):
        """Sets the dttmstartplanmlcalc of this JobProgramPhase.


        :param dttmstartplanmlcalc: The dttmstartplanmlcalc of this JobProgramPhase.  # noqa: E501
        :type: datetime
        """

        self._dttmstartplanmlcalc = dttmstartplanmlcalc

    @property
    def dttmstartplantechlimitcalc(self):
        """Gets the dttmstartplantechlimitcalc of this JobProgramPhase.  # noqa: E501


        :return: The dttmstartplantechlimitcalc of this JobProgramPhase.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmstartplantechlimitcalc

    @dttmstartplantechlimitcalc.setter
    def dttmstartplantechlimitcalc(self, dttmstartplantechlimitcalc):
        """Sets the dttmstartplantechlimitcalc of this JobProgramPhase.


        :param dttmstartplantechlimitcalc: The dttmstartplantechlimitcalc of this JobProgramPhase.  # noqa: E501
        :type: datetime
        """

        self._dttmstartplantechlimitcalc = dttmstartplantechlimitcalc

    @property
    def durationactualcalc(self):
        """Gets the durationactualcalc of this JobProgramPhase.  # noqa: E501


        :return: The durationactualcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationactualcalc
        """
        return self._durationactualcalc

    @durationactualcalc.setter
    def durationactualcalc(self, durationactualcalc):
        """Sets the durationactualcalc of this JobProgramPhase.


        :param durationactualcalc: The durationactualcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationactualcalc
        """

        self._durationactualcalc = durationactualcalc

    @property
    def durationmax(self):
        """Gets the durationmax of this JobProgramPhase.  # noqa: E501


        :return: The durationmax of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationmax
        """
        return self._durationmax

    @durationmax.setter
    def durationmax(self, durationmax):
        """Sets the durationmax of this JobProgramPhase.


        :param durationmax: The durationmax of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationmax
        """

        self._durationmax = durationmax

    @property
    def durationmin(self):
        """Gets the durationmin of this JobProgramPhase.  # noqa: E501


        :return: The durationmin of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationmin
        """
        return self._durationmin

    @durationmin.setter
    def durationmin(self, durationmin):
        """Sets the durationmin of this JobProgramPhase.


        :param durationmin: The durationmin of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationmin
        """

        self._durationmin = durationmin

    @property
    def durationml(self):
        """Gets the durationml of this JobProgramPhase.  # noqa: E501


        :return: The durationml of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationml
        """
        return self._durationml

    @durationml.setter
    def durationml(self, durationml):
        """Sets the durationml of this JobProgramPhase.


        :param durationml: The durationml of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationml
        """

        self._durationml = durationml

    @property
    def durationnoprobtimecalc(self):
        """Gets the durationnoprobtimecalc of this JobProgramPhase.  # noqa: E501


        :return: The durationnoprobtimecalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationnoprobtimecalc
        """
        return self._durationnoprobtimecalc

    @durationnoprobtimecalc.setter
    def durationnoprobtimecalc(self, durationnoprobtimecalc):
        """Sets the durationnoprobtimecalc of this JobProgramPhase.


        :param durationnoprobtimecalc: The durationnoprobtimecalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationnoprobtimecalc
        """

        self._durationnoprobtimecalc = durationnoprobtimecalc

    @property
    def durationnoprobtimecumcalc(self):
        """Gets the durationnoprobtimecumcalc of this JobProgramPhase.  # noqa: E501


        :return: The durationnoprobtimecumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationnoprobtimecumcalc
        """
        return self._durationnoprobtimecumcalc

    @durationnoprobtimecumcalc.setter
    def durationnoprobtimecumcalc(self, durationnoprobtimecumcalc):
        """Sets the durationnoprobtimecumcalc of this JobProgramPhase.


        :param durationnoprobtimecumcalc: The durationnoprobtimecumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationnoprobtimecumcalc
        """

        self._durationnoprobtimecumcalc = durationnoprobtimecumcalc

    @property
    def durationpersonnelotcalc(self):
        """Gets the durationpersonnelotcalc of this JobProgramPhase.  # noqa: E501


        :return: The durationpersonnelotcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationpersonnelotcalc
        """
        return self._durationpersonnelotcalc

    @durationpersonnelotcalc.setter
    def durationpersonnelotcalc(self, durationpersonnelotcalc):
        """Sets the durationpersonnelotcalc of this JobProgramPhase.


        :param durationpersonnelotcalc: The durationpersonnelotcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationpersonnelotcalc
        """

        self._durationpersonnelotcalc = durationpersonnelotcalc

    @property
    def durationpersonnelregcalc(self):
        """Gets the durationpersonnelregcalc of this JobProgramPhase.  # noqa: E501


        :return: The durationpersonnelregcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationpersonnelregcalc
        """
        return self._durationpersonnelregcalc

    @durationpersonnelregcalc.setter
    def durationpersonnelregcalc(self, durationpersonnelregcalc):
        """Sets the durationpersonnelregcalc of this JobProgramPhase.


        :param durationpersonnelregcalc: The durationpersonnelregcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationpersonnelregcalc
        """

        self._durationpersonnelregcalc = durationpersonnelregcalc

    @property
    def durationpersonneltotcalc(self):
        """Gets the durationpersonneltotcalc of this JobProgramPhase.  # noqa: E501


        :return: The durationpersonneltotcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationpersonneltotcalc
        """
        return self._durationpersonneltotcalc

    @durationpersonneltotcalc.setter
    def durationpersonneltotcalc(self, durationpersonneltotcalc):
        """Sets the durationpersonneltotcalc of this JobProgramPhase.


        :param durationpersonneltotcalc: The durationpersonneltotcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationpersonneltotcalc
        """

        self._durationpersonneltotcalc = durationpersonneltotcalc

    @property
    def durationproblemtimecalc(self):
        """Gets the durationproblemtimecalc of this JobProgramPhase.  # noqa: E501


        :return: The durationproblemtimecalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationproblemtimecalc
        """
        return self._durationproblemtimecalc

    @durationproblemtimecalc.setter
    def durationproblemtimecalc(self, durationproblemtimecalc):
        """Sets the durationproblemtimecalc of this JobProgramPhase.


        :param durationproblemtimecalc: The durationproblemtimecalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationproblemtimecalc
        """

        self._durationproblemtimecalc = durationproblemtimecalc

    @property
    def durationproblemtimecumcalc(self):
        """Gets the durationproblemtimecumcalc of this JobProgramPhase.  # noqa: E501


        :return: The durationproblemtimecumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationproblemtimecumcalc
        """
        return self._durationproblemtimecumcalc

    @durationproblemtimecumcalc.setter
    def durationproblemtimecumcalc(self, durationproblemtimecumcalc):
        """Sets the durationproblemtimecumcalc of this JobProgramPhase.


        :param durationproblemtimecumcalc: The durationproblemtimecumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationproblemtimecumcalc
        """

        self._durationproblemtimecumcalc = durationproblemtimecumcalc

    @property
    def durationspudtoplanmaxcalc(self):
        """Gets the durationspudtoplanmaxcalc of this JobProgramPhase.  # noqa: E501


        :return: The durationspudtoplanmaxcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationspudtoplanmaxcalc
        """
        return self._durationspudtoplanmaxcalc

    @durationspudtoplanmaxcalc.setter
    def durationspudtoplanmaxcalc(self, durationspudtoplanmaxcalc):
        """Sets the durationspudtoplanmaxcalc of this JobProgramPhase.


        :param durationspudtoplanmaxcalc: The durationspudtoplanmaxcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationspudtoplanmaxcalc
        """

        self._durationspudtoplanmaxcalc = durationspudtoplanmaxcalc

    @property
    def durationspudtoplanmincalc(self):
        """Gets the durationspudtoplanmincalc of this JobProgramPhase.  # noqa: E501


        :return: The durationspudtoplanmincalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationspudtoplanmincalc
        """
        return self._durationspudtoplanmincalc

    @durationspudtoplanmincalc.setter
    def durationspudtoplanmincalc(self, durationspudtoplanmincalc):
        """Sets the durationspudtoplanmincalc of this JobProgramPhase.


        :param durationspudtoplanmincalc: The durationspudtoplanmincalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationspudtoplanmincalc
        """

        self._durationspudtoplanmincalc = durationspudtoplanmincalc

    @property
    def durationspudtoplanmlcalc(self):
        """Gets the durationspudtoplanmlcalc of this JobProgramPhase.  # noqa: E501


        :return: The durationspudtoplanmlcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationspudtoplanmlcalc
        """
        return self._durationspudtoplanmlcalc

    @durationspudtoplanmlcalc.setter
    def durationspudtoplanmlcalc(self, durationspudtoplanmlcalc):
        """Sets the durationspudtoplanmlcalc of this JobProgramPhase.


        :param durationspudtoplanmlcalc: The durationspudtoplanmlcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationspudtoplanmlcalc
        """

        self._durationspudtoplanmlcalc = durationspudtoplanmlcalc

    @property
    def durationspudtoplantechlcalc(self):
        """Gets the durationspudtoplantechlcalc of this JobProgramPhase.  # noqa: E501


        :return: The durationspudtoplantechlcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationspudtoplantechlcalc
        """
        return self._durationspudtoplantechlcalc

    @durationspudtoplantechlcalc.setter
    def durationspudtoplantechlcalc(self, durationspudtoplantechlcalc):
        """Sets the durationspudtoplantechlcalc of this JobProgramPhase.


        :param durationspudtoplantechlcalc: The durationspudtoplantechlcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationspudtoplantechlcalc
        """

        self._durationspudtoplantechlcalc = durationspudtoplantechlcalc

    @property
    def durationtechlimit(self):
        """Gets the durationtechlimit of this JobProgramPhase.  # noqa: E501


        :return: The durationtechlimit of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationtechlimit
        """
        return self._durationtechlimit

    @durationtechlimit.setter
    def durationtechlimit(self, durationtechlimit):
        """Sets the durationtechlimit of this JobProgramPhase.


        :param durationtechlimit: The durationtechlimit of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationtechlimit
        """

        self._durationtechlimit = durationtechlimit

    @property
    def durationtimelogcumspudcalc(self):
        """Gets the durationtimelogcumspudcalc of this JobProgramPhase.  # noqa: E501


        :return: The durationtimelogcumspudcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationtimelogcumspudcalc
        """
        return self._durationtimelogcumspudcalc

    @durationtimelogcumspudcalc.setter
    def durationtimelogcumspudcalc(self, durationtimelogcumspudcalc):
        """Sets the durationtimelogcumspudcalc of this JobProgramPhase.


        :param durationtimelogcumspudcalc: The durationtimelogcumspudcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationtimelogcumspudcalc
        """

        self._durationtimelogcumspudcalc = durationtimelogcumspudcalc

    @property
    def durationtimelogtotalcalc(self):
        """Gets the durationtimelogtotalcalc of this JobProgramPhase.  # noqa: E501


        :return: The durationtimelogtotalcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationtimelogtotalcalc
        """
        return self._durationtimelogtotalcalc

    @durationtimelogtotalcalc.setter
    def durationtimelogtotalcalc(self, durationtimelogtotalcalc):
        """Sets the durationtimelogtotalcalc of this JobProgramPhase.


        :param durationtimelogtotalcalc: The durationtimelogtotalcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationtimelogtotalcalc
        """

        self._durationtimelogtotalcalc = durationtimelogtotalcalc

    @property
    def durationtimelogtotcumcalc(self):
        """Gets the durationtimelogtotcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The durationtimelogtotcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationtimelogtotcumcalc
        """
        return self._durationtimelogtotcumcalc

    @durationtimelogtotcumcalc.setter
    def durationtimelogtotcumcalc(self, durationtimelogtotcumcalc):
        """Sets the durationtimelogtotcumcalc of this JobProgramPhase.


        :param durationtimelogtotcumcalc: The durationtimelogtotcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationtimelogtotcumcalc
        """

        self._durationtimelogtotcumcalc = durationtimelogtotcumcalc

    @property
    def durationvariancecalc(self):
        """Gets the durationvariancecalc of this JobProgramPhase.  # noqa: E501


        :return: The durationvariancecalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationvariancecalc
        """
        return self._durationvariancecalc

    @durationvariancecalc.setter
    def durationvariancecalc(self, durationvariancecalc):
        """Sets the durationvariancecalc of this JobProgramPhase.


        :param durationvariancecalc: The durationvariancecalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationvariancecalc
        """

        self._durationvariancecalc = durationvariancecalc

    @property
    def durationvariancecumcalc(self):
        """Gets the durationvariancecumcalc of this JobProgramPhase.  # noqa: E501


        :return: The durationvariancecumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurationvariancecumcalc
        """
        return self._durationvariancecumcalc

    @durationvariancecumcalc.setter
    def durationvariancecumcalc(self, durationvariancecumcalc):
        """Sets the durationvariancecumcalc of this JobProgramPhase.


        :param durationvariancecumcalc: The durationvariancecumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurationvariancecumcalc
        """

        self._durationvariancecumcalc = durationvariancecumcalc

    @property
    def durcumactualcalc(self):
        """Gets the durcumactualcalc of this JobProgramPhase.  # noqa: E501


        :return: The durcumactualcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurcumactualcalc
        """
        return self._durcumactualcalc

    @durcumactualcalc.setter
    def durcumactualcalc(self, durcumactualcalc):
        """Sets the durcumactualcalc of this JobProgramPhase.


        :param durcumactualcalc: The durcumactualcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurcumactualcalc
        """

        self._durcumactualcalc = durcumactualcalc

    @property
    def durcumactualstartphasecalc(self):
        """Gets the durcumactualstartphasecalc of this JobProgramPhase.  # noqa: E501


        :return: The durcumactualstartphasecalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurcumactualstartphasecalc
        """
        return self._durcumactualstartphasecalc

    @durcumactualstartphasecalc.setter
    def durcumactualstartphasecalc(self, durcumactualstartphasecalc):
        """Sets the durcumactualstartphasecalc of this JobProgramPhase.


        :param durcumactualstartphasecalc: The durcumactualstartphasecalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurcumactualstartphasecalc
        """

        self._durcumactualstartphasecalc = durcumactualstartphasecalc

    @property
    def durcumflatcalc(self):
        """Gets the durcumflatcalc of this JobProgramPhase.  # noqa: E501


        :return: The durcumflatcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurcumflatcalc
        """
        return self._durcumflatcalc

    @durcumflatcalc.setter
    def durcumflatcalc(self, durcumflatcalc):
        """Sets the durcumflatcalc of this JobProgramPhase.


        :param durcumflatcalc: The durcumflatcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurcumflatcalc
        """

        self._durcumflatcalc = durcumflatcalc

    @property
    def durcumslopecalc(self):
        """Gets the durcumslopecalc of this JobProgramPhase.  # noqa: E501


        :return: The durcumslopecalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurcumslopecalc
        """
        return self._durcumslopecalc

    @durcumslopecalc.setter
    def durcumslopecalc(self, durcumslopecalc):
        """Sets the durcumslopecalc of this JobProgramPhase.


        :param durcumslopecalc: The durcumslopecalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurcumslopecalc
        """

        self._durcumslopecalc = durcumslopecalc

    @property
    def durmlcumnoexcludecalc(self):
        """Gets the durmlcumnoexcludecalc of this JobProgramPhase.  # noqa: E501


        :return: The durmlcumnoexcludecalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurmlcumnoexcludecalc
        """
        return self._durmlcumnoexcludecalc

    @durmlcumnoexcludecalc.setter
    def durmlcumnoexcludecalc(self, durmlcumnoexcludecalc):
        """Sets the durmlcumnoexcludecalc of this JobProgramPhase.


        :param durmlcumnoexcludecalc: The durmlcumnoexcludecalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurmlcumnoexcludecalc
        """

        self._durmlcumnoexcludecalc = durmlcumnoexcludecalc

    @property
    def durnoprobtimecumdayscalc(self):
        """Gets the durnoprobtimecumdayscalc of this JobProgramPhase.  # noqa: E501


        :return: The durnoprobtimecumdayscalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurnoprobtimecumdayscalc
        """
        return self._durnoprobtimecumdayscalc

    @durnoprobtimecumdayscalc.setter
    def durnoprobtimecumdayscalc(self, durnoprobtimecumdayscalc):
        """Sets the durnoprobtimecumdayscalc of this JobProgramPhase.


        :param durnoprobtimecumdayscalc: The durnoprobtimecumdayscalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurnoprobtimecumdayscalc
        """

        self._durnoprobtimecumdayscalc = durnoprobtimecumdayscalc

    @property
    def duroffbtmcalc(self):
        """Gets the duroffbtmcalc of this JobProgramPhase.  # noqa: E501


        :return: The duroffbtmcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDuroffbtmcalc
        """
        return self._duroffbtmcalc

    @duroffbtmcalc.setter
    def duroffbtmcalc(self, duroffbtmcalc):
        """Sets the duroffbtmcalc of this JobProgramPhase.


        :param duroffbtmcalc: The duroffbtmcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDuroffbtmcalc
        """

        self._duroffbtmcalc = duroffbtmcalc

    @property
    def duronbtmcalc(self):
        """Gets the duronbtmcalc of this JobProgramPhase.  # noqa: E501


        :return: The duronbtmcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDuronbtmcalc
        """
        return self._duronbtmcalc

    @duronbtmcalc.setter
    def duronbtmcalc(self, duronbtmcalc):
        """Sets the duronbtmcalc of this JobProgramPhase.


        :param duronbtmcalc: The duronbtmcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDuronbtmcalc
        """

        self._duronbtmcalc = duronbtmcalc

    @property
    def durpersonnelotcumcalc(self):
        """Gets the durpersonnelotcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The durpersonnelotcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurpersonnelotcumcalc
        """
        return self._durpersonnelotcumcalc

    @durpersonnelotcumcalc.setter
    def durpersonnelotcumcalc(self, durpersonnelotcumcalc):
        """Sets the durpersonnelotcumcalc of this JobProgramPhase.


        :param durpersonnelotcumcalc: The durpersonnelotcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurpersonnelotcumcalc
        """

        self._durpersonnelotcumcalc = durpersonnelotcumcalc

    @property
    def durpersonnelregcumcalc(self):
        """Gets the durpersonnelregcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The durpersonnelregcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurpersonnelregcumcalc
        """
        return self._durpersonnelregcumcalc

    @durpersonnelregcumcalc.setter
    def durpersonnelregcumcalc(self, durpersonnelregcumcalc):
        """Sets the durpersonnelregcumcalc of this JobProgramPhase.


        :param durpersonnelregcumcalc: The durpersonnelregcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurpersonnelregcumcalc
        """

        self._durpersonnelregcumcalc = durpersonnelregcumcalc

    @property
    def durpersonneltotcumcalc(self):
        """Gets the durpersonneltotcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The durpersonneltotcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurpersonneltotcumcalc
        """
        return self._durpersonneltotcumcalc

    @durpersonneltotcumcalc.setter
    def durpersonneltotcumcalc(self, durpersonneltotcumcalc):
        """Sets the durpersonneltotcumcalc of this JobProgramPhase.


        :param durpersonneltotcumcalc: The durpersonneltotcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurpersonneltotcumcalc
        """

        self._durpersonneltotcumcalc = durpersonneltotcumcalc

    @property
    def durpipemovingcalc(self):
        """Gets the durpipemovingcalc of this JobProgramPhase.  # noqa: E501


        :return: The durpipemovingcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurpipemovingcalc
        """
        return self._durpipemovingcalc

    @durpipemovingcalc.setter
    def durpipemovingcalc(self, durpipemovingcalc):
        """Sets the durpipemovingcalc of this JobProgramPhase.


        :param durpipemovingcalc: The durpipemovingcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurpipemovingcalc
        """

        self._durpipemovingcalc = durpipemovingcalc

    @property
    def durproblemtimecumdayscalc(self):
        """Gets the durproblemtimecumdayscalc of this JobProgramPhase.  # noqa: E501


        :return: The durproblemtimecumdayscalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseDurproblemtimecumdayscalc
        """
        return self._durproblemtimecumdayscalc

    @durproblemtimecumdayscalc.setter
    def durproblemtimecumdayscalc(self, durproblemtimecumdayscalc):
        """Sets the durproblemtimecumdayscalc of this JobProgramPhase.


        :param durproblemtimecumdayscalc: The durproblemtimecumdayscalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseDurproblemtimecumdayscalc
        """

        self._durproblemtimecumdayscalc = durproblemtimecumdayscalc

    @property
    def exclude(self):
        """Gets the exclude of this JobProgramPhase.  # noqa: E501


        :return: The exclude of this JobProgramPhase.  # noqa: E501
        :rtype: int
        """
        return self._exclude

    @exclude.setter
    def exclude(self, exclude):
        """Sets the exclude of this JobProgramPhase.


        :param exclude: The exclude of this JobProgramPhase.  # noqa: E501
        :type: int
        """

        self._exclude = exclude

    @property
    def flatorslopecalc(self):
        """Gets the flatorslopecalc of this JobProgramPhase.  # noqa: E501


        :return: The flatorslopecalc of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._flatorslopecalc

    @flatorslopecalc.setter
    def flatorslopecalc(self, flatorslopecalc):
        """Sets the flatorslopecalc of this JobProgramPhase.


        :param flatorslopecalc: The flatorslopecalc of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._flatorslopecalc = flatorslopecalc

    @property
    def hazards(self):
        """Gets the hazards of this JobProgramPhase.  # noqa: E501


        :return: The hazards of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._hazards

    @hazards.setter
    def hazards(self, hazards):
        """Sets the hazards of this JobProgramPhase.


        :param hazards: The hazards of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._hazards = hazards

    @property
    def idrec(self):
        """Gets the idrec of this JobProgramPhase.  # noqa: E501


        :return: The idrec of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this JobProgramPhase.


        :param idrec: The idrec of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idreclastcascalc(self):
        """Gets the idreclastcascalc of this JobProgramPhase.  # noqa: E501


        :return: The idreclastcascalc of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._idreclastcascalc

    @idreclastcascalc.setter
    def idreclastcascalc(self, idreclastcascalc):
        """Sets the idreclastcascalc of this JobProgramPhase.


        :param idreclastcascalc: The idreclastcascalc of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._idreclastcascalc = idreclastcascalc

    @property
    def idreclastcascalctk(self):
        """Gets the idreclastcascalctk of this JobProgramPhase.  # noqa: E501


        :return: The idreclastcascalctk of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._idreclastcascalctk

    @idreclastcascalctk.setter
    def idreclastcascalctk(self, idreclastcascalctk):
        """Sets the idreclastcascalctk of this JobProgramPhase.


        :param idreclastcascalctk: The idreclastcascalctk of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._idreclastcascalctk = idreclastcascalctk

    @property
    def idreclastrigcalc(self):
        """Gets the idreclastrigcalc of this JobProgramPhase.  # noqa: E501


        :return: The idreclastrigcalc of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._idreclastrigcalc

    @idreclastrigcalc.setter
    def idreclastrigcalc(self, idreclastrigcalc):
        """Sets the idreclastrigcalc of this JobProgramPhase.


        :param idreclastrigcalc: The idreclastrigcalc of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._idreclastrigcalc = idreclastrigcalc

    @property
    def idreclastrigcalctk(self):
        """Gets the idreclastrigcalctk of this JobProgramPhase.  # noqa: E501


        :return: The idreclastrigcalctk of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._idreclastrigcalctk

    @idreclastrigcalctk.setter
    def idreclastrigcalctk(self, idreclastrigcalctk):
        """Sets the idreclastrigcalctk of this JobProgramPhase.


        :param idreclastrigcalctk: The idreclastrigcalctk of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._idreclastrigcalctk = idreclastrigcalctk

    @property
    def idreclasttubcalc(self):
        """Gets the idreclasttubcalc of this JobProgramPhase.  # noqa: E501


        :return: The idreclasttubcalc of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._idreclasttubcalc

    @idreclasttubcalc.setter
    def idreclasttubcalc(self, idreclasttubcalc):
        """Sets the idreclasttubcalc of this JobProgramPhase.


        :param idreclasttubcalc: The idreclasttubcalc of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._idreclasttubcalc = idreclasttubcalc

    @property
    def idreclasttubcalctk(self):
        """Gets the idreclasttubcalctk of this JobProgramPhase.  # noqa: E501


        :return: The idreclasttubcalctk of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._idreclasttubcalctk

    @idreclasttubcalctk.setter
    def idreclasttubcalctk(self, idreclasttubcalctk):
        """Sets the idreclasttubcalctk of this JobProgramPhase.


        :param idreclasttubcalctk: The idreclasttubcalctk of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._idreclasttubcalctk = idreclasttubcalctk

    @property
    def idrecparent(self):
        """Gets the idrecparent of this JobProgramPhase.  # noqa: E501


        :return: The idrecparent of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this JobProgramPhase.


        :param idrecparent: The idrecparent of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idrecwellbore(self):
        """Gets the idrecwellbore of this JobProgramPhase.  # noqa: E501


        :return: The idrecwellbore of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellbore

    @idrecwellbore.setter
    def idrecwellbore(self, idrecwellbore):
        """Sets the idrecwellbore of this JobProgramPhase.


        :param idrecwellbore: The idrecwellbore of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._idrecwellbore = idrecwellbore

    @property
    def idrecwellboretk(self):
        """Gets the idrecwellboretk of this JobProgramPhase.  # noqa: E501


        :return: The idrecwellboretk of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellboretk

    @idrecwellboretk.setter
    def idrecwellboretk(self, idrecwellboretk):
        """Sets the idrecwellboretk of this JobProgramPhase.


        :param idrecwellboretk: The idrecwellboretk of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._idrecwellboretk = idrecwellboretk

    @property
    def idwell(self):
        """Gets the idwell of this JobProgramPhase.  # noqa: E501


        :return: The idwell of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this JobProgramPhase.


        :param idwell: The idwell of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def inclbtmcalc(self):
        """Gets the inclbtmcalc of this JobProgramPhase.  # noqa: E501


        :return: The inclbtmcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseInclbtmcalc
        """
        return self._inclbtmcalc

    @inclbtmcalc.setter
    def inclbtmcalc(self, inclbtmcalc):
        """Sets the inclbtmcalc of this JobProgramPhase.


        :param inclbtmcalc: The inclbtmcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseInclbtmcalc
        """

        self._inclbtmcalc = inclbtmcalc

    @property
    def inclmaxcalc(self):
        """Gets the inclmaxcalc of this JobProgramPhase.  # noqa: E501


        :return: The inclmaxcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseInclmaxcalc
        """
        return self._inclmaxcalc

    @inclmaxcalc.setter
    def inclmaxcalc(self, inclmaxcalc):
        """Sets the inclmaxcalc of this JobProgramPhase.


        :param inclmaxcalc: The inclmaxcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseInclmaxcalc
        """

        self._inclmaxcalc = inclmaxcalc

    @property
    def incltopcalc(self):
        """Gets the incltopcalc of this JobProgramPhase.  # noqa: E501


        :return: The incltopcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseIncltopcalc
        """
        return self._incltopcalc

    @incltopcalc.setter
    def incltopcalc(self, incltopcalc):
        """Sets the incltopcalc of this JobProgramPhase.


        :param incltopcalc: The incltopcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseIncltopcalc
        """

        self._incltopcalc = incltopcalc

    @property
    def job(self):
        """Gets the job of this JobProgramPhase.  # noqa: E501


        :return: The job of this JobProgramPhase.  # noqa: E501
        :rtype: AnyOfJobProgramPhaseJob
        """
        return self._job

    @job.setter
    def job(self, job):
        """Sets the job of this JobProgramPhase.


        :param job: The job of this JobProgramPhase.  # noqa: E501
        :type: AnyOfJobProgramPhaseJob
        """

        self._job = job

    @property
    def job_program_phase_activities(self):
        """Gets the job_program_phase_activities of this JobProgramPhase.  # noqa: E501


        :return: The job_program_phase_activities of this JobProgramPhase.  # noqa: E501
        :rtype: list[JobProgramPhaseActivity]
        """
        return self._job_program_phase_activities

    @job_program_phase_activities.setter
    def job_program_phase_activities(self, job_program_phase_activities):
        """Sets the job_program_phase_activities of this JobProgramPhase.


        :param job_program_phase_activities: The job_program_phase_activities of this JobProgramPhase.  # noqa: E501
        :type: list[JobProgramPhaseActivity]
        """

        self._job_program_phase_activities = job_program_phase_activities

    @property
    def job_program_phase_changes(self):
        """Gets the job_program_phase_changes of this JobProgramPhase.  # noqa: E501


        :return: The job_program_phase_changes of this JobProgramPhase.  # noqa: E501
        :rtype: list[JobProgramPhaseChange]
        """
        return self._job_program_phase_changes

    @job_program_phase_changes.setter
    def job_program_phase_changes(self, job_program_phase_changes):
        """Sets the job_program_phase_changes of this JobProgramPhase.


        :param job_program_phase_changes: The job_program_phase_changes of this JobProgramPhase.  # noqa: E501
        :type: list[JobProgramPhaseChange]
        """

        self._job_program_phase_changes = job_program_phase_changes

    @property
    def job_program_phase_risks(self):
        """Gets the job_program_phase_risks of this JobProgramPhase.  # noqa: E501


        :return: The job_program_phase_risks of this JobProgramPhase.  # noqa: E501
        :rtype: list[JobProgramPhaseRisk]
        """
        return self._job_program_phase_risks

    @job_program_phase_risks.setter
    def job_program_phase_risks(self, job_program_phase_risks):
        """Sets the job_program_phase_risks of this JobProgramPhase.


        :param job_program_phase_risks: The job_program_phase_risks of this JobProgramPhase.  # noqa: E501
        :type: list[JobProgramPhaseRisk]
        """

        self._job_program_phase_risks = job_program_phase_risks

    @property
    def job_program_phase_steps(self):
        """Gets the job_program_phase_steps of this JobProgramPhase.  # noqa: E501


        :return: The job_program_phase_steps of this JobProgramPhase.  # noqa: E501
        :rtype: list[JobProgramPhaseSteps]
        """
        return self._job_program_phase_steps

    @job_program_phase_steps.setter
    def job_program_phase_steps(self, job_program_phase_steps):
        """Sets the job_program_phase_steps of this JobProgramPhase.


        :param job_program_phase_steps: The job_program_phase_steps of this JobProgramPhase.  # noqa: E501
        :type: list[JobProgramPhaseSteps]
        """

        self._job_program_phase_steps = job_program_phase_steps

    @property
    def job_program_phase_zone_allocs(self):
        """Gets the job_program_phase_zone_allocs of this JobProgramPhase.  # noqa: E501


        :return: The job_program_phase_zone_allocs of this JobProgramPhase.  # noqa: E501
        :rtype: list[JobProgramPhaseZoneAlloc]
        """
        return self._job_program_phase_zone_allocs

    @job_program_phase_zone_allocs.setter
    def job_program_phase_zone_allocs(self, job_program_phase_zone_allocs):
        """Sets the job_program_phase_zone_allocs of this JobProgramPhase.


        :param job_program_phase_zone_allocs: The job_program_phase_zone_allocs of this JobProgramPhase.  # noqa: E501
        :type: list[JobProgramPhaseZoneAlloc]
        """

        self._job_program_phase_zone_allocs = job_program_phase_zone_allocs

    @property
    def lengthactualcalc(self):
        """Gets the lengthactualcalc of this JobProgramPhase.  # noqa: E501


        :return: The lengthactualcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseLengthactualcalc
        """
        return self._lengthactualcalc

    @lengthactualcalc.setter
    def lengthactualcalc(self, lengthactualcalc):
        """Sets the lengthactualcalc of this JobProgramPhase.


        :param lengthactualcalc: The lengthactualcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseLengthactualcalc
        """

        self._lengthactualcalc = lengthactualcalc

    @property
    def lengthplancalc(self):
        """Gets the lengthplancalc of this JobProgramPhase.  # noqa: E501


        :return: The lengthplancalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseLengthplancalc
        """
        return self._lengthplancalc

    @lengthplancalc.setter
    def lengthplancalc(self, lengthplancalc):
        """Sets the lengthplancalc of this JobProgramPhase.


        :param lengthplancalc: The lengthplancalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseLengthplancalc
        """

        self._lengthplancalc = lengthplancalc

    @property
    def methodtyp1(self):
        """Gets the methodtyp1 of this JobProgramPhase.  # noqa: E501


        :return: The methodtyp1 of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._methodtyp1

    @methodtyp1.setter
    def methodtyp1(self, methodtyp1):
        """Sets the methodtyp1 of this JobProgramPhase.


        :param methodtyp1: The methodtyp1 of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._methodtyp1 = methodtyp1

    @property
    def methodtyp2(self):
        """Gets the methodtyp2 of this JobProgramPhase.  # noqa: E501


        :return: The methodtyp2 of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._methodtyp2

    @methodtyp2.setter
    def methodtyp2(self, methodtyp2):
        """Sets the methodtyp2 of this JobProgramPhase.


        :param methodtyp2: The methodtyp2 of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._methodtyp2 = methodtyp2

    @property
    def muddensitymaxcalc(self):
        """Gets the muddensitymaxcalc of this JobProgramPhase.  # noqa: E501


        :return: The muddensitymaxcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseMuddensitymaxcalc
        """
        return self._muddensitymaxcalc

    @muddensitymaxcalc.setter
    def muddensitymaxcalc(self, muddensitymaxcalc):
        """Sets the muddensitymaxcalc of this JobProgramPhase.


        :param muddensitymaxcalc: The muddensitymaxcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseMuddensitymaxcalc
        """

        self._muddensitymaxcalc = muddensitymaxcalc

    @property
    def muddensitymincalc(self):
        """Gets the muddensitymincalc of this JobProgramPhase.  # noqa: E501


        :return: The muddensitymincalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseMuddensitymincalc
        """
        return self._muddensitymincalc

    @muddensitymincalc.setter
    def muddensitymincalc(self, muddensitymincalc):
        """Sets the muddensitymincalc of this JobProgramPhase.


        :param muddensitymincalc: The muddensitymincalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseMuddensitymincalc
        """

        self._muddensitymincalc = muddensitymincalc

    @property
    def mudtypcalc(self):
        """Gets the mudtypcalc of this JobProgramPhase.  # noqa: E501


        :return: The mudtypcalc of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._mudtypcalc

    @mudtypcalc.setter
    def mudtypcalc(self, mudtypcalc):
        """Sets the mudtypcalc of this JobProgramPhase.


        :param mudtypcalc: The mudtypcalc of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._mudtypcalc = mudtypcalc

    @property
    def pctproblemtimecalc(self):
        """Gets the pctproblemtimecalc of this JobProgramPhase.  # noqa: E501


        :return: The pctproblemtimecalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhasePctproblemtimecalc
        """
        return self._pctproblemtimecalc

    @pctproblemtimecalc.setter
    def pctproblemtimecalc(self, pctproblemtimecalc):
        """Sets the pctproblemtimecalc of this JobProgramPhase.


        :param pctproblemtimecalc: The pctproblemtimecalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhasePctproblemtimecalc
        """

        self._pctproblemtimecalc = pctproblemtimecalc

    @property
    def pctproblemtimecumcalc(self):
        """Gets the pctproblemtimecumcalc of this JobProgramPhase.  # noqa: E501


        :return: The pctproblemtimecumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhasePctproblemtimecumcalc
        """
        return self._pctproblemtimecumcalc

    @pctproblemtimecumcalc.setter
    def pctproblemtimecumcalc(self, pctproblemtimecumcalc):
        """Sets the pctproblemtimecumcalc of this JobProgramPhase.


        :param pctproblemtimecumcalc: The pctproblemtimecumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhasePctproblemtimecumcalc
        """

        self._pctproblemtimecumcalc = pctproblemtimecumcalc

    @property
    def percenttmrotatingcalc(self):
        """Gets the percenttmrotatingcalc of this JobProgramPhase.  # noqa: E501


        :return: The percenttmrotatingcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhasePercenttmrotatingcalc
        """
        return self._percenttmrotatingcalc

    @percenttmrotatingcalc.setter
    def percenttmrotatingcalc(self, percenttmrotatingcalc):
        """Sets the percenttmrotatingcalc of this JobProgramPhase.


        :param percenttmrotatingcalc: The percenttmrotatingcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhasePercenttmrotatingcalc
        """

        self._percenttmrotatingcalc = percenttmrotatingcalc

    @property
    def percenttmslidingcalc(self):
        """Gets the percenttmslidingcalc of this JobProgramPhase.  # noqa: E501


        :return: The percenttmslidingcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhasePercenttmslidingcalc
        """
        return self._percenttmslidingcalc

    @percenttmslidingcalc.setter
    def percenttmslidingcalc(self, percenttmslidingcalc):
        """Sets the percenttmslidingcalc of this JobProgramPhase.


        :param percenttmslidingcalc: The percenttmslidingcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhasePercenttmslidingcalc
        """

        self._percenttmslidingcalc = percenttmslidingcalc

    @property
    def phasemudcostcalc(self):
        """Gets the phasemudcostcalc of this JobProgramPhase.  # noqa: E501


        :return: The phasemudcostcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhasePhasemudcostcalc
        """
        return self._phasemudcostcalc

    @phasemudcostcalc.setter
    def phasemudcostcalc(self, phasemudcostcalc):
        """Sets the phasemudcostcalc of this JobProgramPhase.


        :param phasemudcostcalc: The phasemudcostcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhasePhasemudcostcalc
        """

        self._phasemudcostcalc = phasemudcostcalc

    @property
    def phasemudcostnormcalc(self):
        """Gets the phasemudcostnormcalc of this JobProgramPhase.  # noqa: E501


        :return: The phasemudcostnormcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhasePhasemudcostnormcalc
        """
        return self._phasemudcostnormcalc

    @phasemudcostnormcalc.setter
    def phasemudcostnormcalc(self, phasemudcostnormcalc):
        """Sets the phasemudcostnormcalc of this JobProgramPhase.


        :param phasemudcostnormcalc: The phasemudcostnormcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhasePhasemudcostnormcalc
        """

        self._phasemudcostnormcalc = phasemudcostnormcalc

    @property
    def phasemudcostperdepthcalc(self):
        """Gets the phasemudcostperdepthcalc of this JobProgramPhase.  # noqa: E501


        :return: The phasemudcostperdepthcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhasePhasemudcostperdepthcalc
        """
        return self._phasemudcostperdepthcalc

    @phasemudcostperdepthcalc.setter
    def phasemudcostperdepthcalc(self, phasemudcostperdepthcalc):
        """Sets the phasemudcostperdepthcalc of this JobProgramPhase.


        :param phasemudcostperdepthcalc: The phasemudcostperdepthcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhasePhasemudcostperdepthcalc
        """

        self._phasemudcostperdepthcalc = phasemudcostperdepthcalc

    @property
    def phasemudcostperdepthnormcalc(self):
        """Gets the phasemudcostperdepthnormcalc of this JobProgramPhase.  # noqa: E501


        :return: The phasemudcostperdepthnormcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhasePhasemudcostperdepthnormcalc
        """
        return self._phasemudcostperdepthnormcalc

    @phasemudcostperdepthnormcalc.setter
    def phasemudcostperdepthnormcalc(self, phasemudcostperdepthnormcalc):
        """Sets the phasemudcostperdepthnormcalc of this JobProgramPhase.


        :param phasemudcostperdepthnormcalc: The phasemudcostperdepthnormcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhasePhasemudcostperdepthnormcalc
        """

        self._phasemudcostperdepthnormcalc = phasemudcostperdepthnormcalc

    @property
    def planchange(self):
        """Gets the planchange of this JobProgramPhase.  # noqa: E501


        :return: The planchange of this JobProgramPhase.  # noqa: E501
        :rtype: int
        """
        return self._planchange

    @planchange.setter
    def planchange(self, planchange):
        """Sets the planchange of this JobProgramPhase.


        :param planchange: The planchange of this JobProgramPhase.  # noqa: E501
        :type: int
        """

        self._planchange = planchange

    @property
    def planphase(self):
        """Gets the planphase of this JobProgramPhase.  # noqa: E501


        :return: The planphase of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._planphase

    @planphase.setter
    def planphase(self, planphase):
        """Sets the planphase of this JobProgramPhase.


        :param planphase: The planphase of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._planphase = planphase

    @property
    def ratiodepthactualplancalc(self):
        """Gets the ratiodepthactualplancalc of this JobProgramPhase.  # noqa: E501


        :return: The ratiodepthactualplancalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseRatiodepthactualplancalc
        """
        return self._ratiodepthactualplancalc

    @ratiodepthactualplancalc.setter
    def ratiodepthactualplancalc(self, ratiodepthactualplancalc):
        """Sets the ratiodepthactualplancalc of this JobProgramPhase.


        :param ratiodepthactualplancalc: The ratiodepthactualplancalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseRatiodepthactualplancalc
        """

        self._ratiodepthactualplancalc = ratiodepthactualplancalc

    @property
    def refnocalc(self):
        """Gets the refnocalc of this JobProgramPhase.  # noqa: E501


        :return: The refnocalc of this JobProgramPhase.  # noqa: E501
        :rtype: int
        """
        return self._refnocalc

    @refnocalc.setter
    def refnocalc(self, refnocalc):
        """Sets the refnocalc of this JobProgramPhase.


        :param refnocalc: The refnocalc of this JobProgramPhase.  # noqa: E501
        :type: int
        """

        self._refnocalc = refnocalc

    @property
    def reportdaycalc(self):
        """Gets the reportdaycalc of this JobProgramPhase.  # noqa: E501


        :return: The reportdaycalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseReportdaycalc
        """
        return self._reportdaycalc

    @reportdaycalc.setter
    def reportdaycalc(self, reportdaycalc):
        """Sets the reportdaycalc of this JobProgramPhase.


        :param reportdaycalc: The reportdaycalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseReportdaycalc
        """

        self._reportdaycalc = reportdaycalc

    @property
    def reportnocalc(self):
        """Gets the reportnocalc of this JobProgramPhase.  # noqa: E501


        :return: The reportnocalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseReportnocalc
        """
        return self._reportnocalc

    @reportnocalc.setter
    def reportnocalc(self, reportnocalc):
        """Sets the reportnocalc of this JobProgramPhase.


        :param reportnocalc: The reportnocalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseReportnocalc
        """

        self._reportnocalc = reportnocalc

    @property
    def ropcalc(self):
        """Gets the ropcalc of this JobProgramPhase.  # noqa: E501


        :return: The ropcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseRopcalc
        """
        return self._ropcalc

    @ropcalc.setter
    def ropcalc(self, ropcalc):
        """Sets the ropcalc of this JobProgramPhase.


        :param ropcalc: The ropcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseRopcalc
        """

        self._ropcalc = ropcalc

    @property
    def ropinstavgcalc(self):
        """Gets the ropinstavgcalc of this JobProgramPhase.  # noqa: E501


        :return: The ropinstavgcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseRopinstavgcalc
        """
        return self._ropinstavgcalc

    @ropinstavgcalc.setter
    def ropinstavgcalc(self, ropinstavgcalc):
        """Sets the ropinstavgcalc of this JobProgramPhase.


        :param ropinstavgcalc: The ropinstavgcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseRopinstavgcalc
        """

        self._ropinstavgcalc = ropinstavgcalc

    @property
    def roprotatingcalc(self):
        """Gets the roprotatingcalc of this JobProgramPhase.  # noqa: E501


        :return: The roprotatingcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseRoprotatingcalc
        """
        return self._roprotatingcalc

    @roprotatingcalc.setter
    def roprotatingcalc(self, roprotatingcalc):
        """Sets the roprotatingcalc of this JobProgramPhase.


        :param roprotatingcalc: The roprotatingcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseRoprotatingcalc
        """

        self._roprotatingcalc = roprotatingcalc

    @property
    def ropslidingcalc(self):
        """Gets the ropslidingcalc of this JobProgramPhase.  # noqa: E501


        :return: The ropslidingcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseRopslidingcalc
        """
        return self._ropslidingcalc

    @ropslidingcalc.setter
    def ropslidingcalc(self, ropslidingcalc):
        """Sets the ropslidingcalc of this JobProgramPhase.


        :param ropslidingcalc: The ropslidingcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseRopslidingcalc
        """

        self._ropslidingcalc = ropslidingcalc

    @property
    def source(self):
        """Gets the source of this JobProgramPhase.  # noqa: E501


        :return: The source of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this JobProgramPhase.


        :param source: The source of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._source = source

    @property
    def summary(self):
        """Gets the summary of this JobProgramPhase.  # noqa: E501


        :return: The summary of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this JobProgramPhase.


        :param summary: The summary of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._summary = summary

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this JobProgramPhase.  # noqa: E501


        :return: The syscreatedate of this JobProgramPhase.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this JobProgramPhase.


        :param syscreatedate: The syscreatedate of this JobProgramPhase.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this JobProgramPhase.  # noqa: E501


        :return: The syscreateuser of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this JobProgramPhase.


        :param syscreateuser: The syscreateuser of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this JobProgramPhase.  # noqa: E501


        :return: The syslockchildren of this JobProgramPhase.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this JobProgramPhase.


        :param syslockchildren: The syslockchildren of this JobProgramPhase.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this JobProgramPhase.  # noqa: E501


        :return: The syslockchildrenui of this JobProgramPhase.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this JobProgramPhase.


        :param syslockchildrenui: The syslockchildrenui of this JobProgramPhase.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this JobProgramPhase.  # noqa: E501


        :return: The syslockdate of this JobProgramPhase.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this JobProgramPhase.


        :param syslockdate: The syslockdate of this JobProgramPhase.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this JobProgramPhase.  # noqa: E501


        :return: The syslockme of this JobProgramPhase.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this JobProgramPhase.


        :param syslockme: The syslockme of this JobProgramPhase.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this JobProgramPhase.  # noqa: E501


        :return: The syslockmeui of this JobProgramPhase.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this JobProgramPhase.


        :param syslockmeui: The syslockmeui of this JobProgramPhase.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this JobProgramPhase.  # noqa: E501


        :return: The sysmoddate of this JobProgramPhase.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this JobProgramPhase.


        :param sysmoddate: The sysmoddate of this JobProgramPhase.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this JobProgramPhase.  # noqa: E501


        :return: The sysmoduser of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this JobProgramPhase.


        :param sysmoduser: The sysmoduser of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def sysseq(self):
        """Gets the sysseq of this JobProgramPhase.  # noqa: E501


        :return: The sysseq of this JobProgramPhase.  # noqa: E501
        :rtype: int
        """
        return self._sysseq

    @sysseq.setter
    def sysseq(self, sysseq):
        """Sets the sysseq of this JobProgramPhase.


        :param sysseq: The sysseq of this JobProgramPhase.  # noqa: E501
        :type: int
        """

        self._sysseq = sysseq

    @property
    def systag(self):
        """Gets the systag of this JobProgramPhase.  # noqa: E501


        :return: The systag of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this JobProgramPhase.


        :param systag: The systag of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def tmcirccalc(self):
        """Gets the tmcirccalc of this JobProgramPhase.  # noqa: E501


        :return: The tmcirccalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseTmcirccalc
        """
        return self._tmcirccalc

    @tmcirccalc.setter
    def tmcirccalc(self, tmcirccalc):
        """Sets the tmcirccalc of this JobProgramPhase.


        :param tmcirccalc: The tmcirccalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseTmcirccalc
        """

        self._tmcirccalc = tmcirccalc

    @property
    def tmcirccumcalc(self):
        """Gets the tmcirccumcalc of this JobProgramPhase.  # noqa: E501


        :return: The tmcirccumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseTmcirccumcalc
        """
        return self._tmcirccumcalc

    @tmcirccumcalc.setter
    def tmcirccumcalc(self, tmcirccumcalc):
        """Sets the tmcirccumcalc of this JobProgramPhase.


        :param tmcirccumcalc: The tmcirccumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseTmcirccumcalc
        """

        self._tmcirccumcalc = tmcirccumcalc

    @property
    def tmcirctripothercalc(self):
        """Gets the tmcirctripothercalc of this JobProgramPhase.  # noqa: E501


        :return: The tmcirctripothercalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseTmcirctripothercalc
        """
        return self._tmcirctripothercalc

    @tmcirctripothercalc.setter
    def tmcirctripothercalc(self, tmcirctripothercalc):
        """Sets the tmcirctripothercalc of this JobProgramPhase.


        :param tmcirctripothercalc: The tmcirctripothercalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseTmcirctripothercalc
        """

        self._tmcirctripothercalc = tmcirctripothercalc

    @property
    def tmcirctripothercumcalc(self):
        """Gets the tmcirctripothercumcalc of this JobProgramPhase.  # noqa: E501


        :return: The tmcirctripothercumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseTmcirctripothercumcalc
        """
        return self._tmcirctripothercumcalc

    @tmcirctripothercumcalc.setter
    def tmcirctripothercumcalc(self, tmcirctripothercumcalc):
        """Sets the tmcirctripothercumcalc of this JobProgramPhase.


        :param tmcirctripothercumcalc: The tmcirctripothercumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseTmcirctripothercumcalc
        """

        self._tmcirctripothercumcalc = tmcirctripothercumcalc

    @property
    def tmdrillcalc(self):
        """Gets the tmdrillcalc of this JobProgramPhase.  # noqa: E501


        :return: The tmdrillcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseTmdrillcalc
        """
        return self._tmdrillcalc

    @tmdrillcalc.setter
    def tmdrillcalc(self, tmdrillcalc):
        """Sets the tmdrillcalc of this JobProgramPhase.


        :param tmdrillcalc: The tmdrillcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseTmdrillcalc
        """

        self._tmdrillcalc = tmdrillcalc

    @property
    def tmdrillcumcalc(self):
        """Gets the tmdrillcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The tmdrillcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseTmdrillcumcalc
        """
        return self._tmdrillcumcalc

    @tmdrillcumcalc.setter
    def tmdrillcumcalc(self, tmdrillcumcalc):
        """Sets the tmdrillcumcalc of this JobProgramPhase.


        :param tmdrillcumcalc: The tmdrillcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseTmdrillcumcalc
        """

        self._tmdrillcumcalc = tmdrillcumcalc

    @property
    def tmdrillcumnoexccalc(self):
        """Gets the tmdrillcumnoexccalc of this JobProgramPhase.  # noqa: E501


        :return: The tmdrillcumnoexccalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseTmdrillcumnoexccalc
        """
        return self._tmdrillcumnoexccalc

    @tmdrillcumnoexccalc.setter
    def tmdrillcumnoexccalc(self, tmdrillcumnoexccalc):
        """Sets the tmdrillcumnoexccalc of this JobProgramPhase.


        :param tmdrillcumnoexccalc: The tmdrillcumnoexccalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseTmdrillcumnoexccalc
        """

        self._tmdrillcumnoexccalc = tmdrillcumnoexccalc

    @property
    def tmdrillnoexccalc(self):
        """Gets the tmdrillnoexccalc of this JobProgramPhase.  # noqa: E501


        :return: The tmdrillnoexccalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseTmdrillnoexccalc
        """
        return self._tmdrillnoexccalc

    @tmdrillnoexccalc.setter
    def tmdrillnoexccalc(self, tmdrillnoexccalc):
        """Sets the tmdrillnoexccalc of this JobProgramPhase.


        :param tmdrillnoexccalc: The tmdrillnoexccalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseTmdrillnoexccalc
        """

        self._tmdrillnoexccalc = tmdrillnoexccalc

    @property
    def tmothercalc(self):
        """Gets the tmothercalc of this JobProgramPhase.  # noqa: E501


        :return: The tmothercalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseTmothercalc
        """
        return self._tmothercalc

    @tmothercalc.setter
    def tmothercalc(self, tmothercalc):
        """Sets the tmothercalc of this JobProgramPhase.


        :param tmothercalc: The tmothercalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseTmothercalc
        """

        self._tmothercalc = tmothercalc

    @property
    def tmothercumcalc(self):
        """Gets the tmothercumcalc of this JobProgramPhase.  # noqa: E501


        :return: The tmothercumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseTmothercumcalc
        """
        return self._tmothercumcalc

    @tmothercumcalc.setter
    def tmothercumcalc(self, tmothercumcalc):
        """Sets the tmothercumcalc of this JobProgramPhase.


        :param tmothercumcalc: The tmothercumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseTmothercumcalc
        """

        self._tmothercumcalc = tmothercumcalc

    @property
    def tmrotatingcalc(self):
        """Gets the tmrotatingcalc of this JobProgramPhase.  # noqa: E501


        :return: The tmrotatingcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseTmrotatingcalc
        """
        return self._tmrotatingcalc

    @tmrotatingcalc.setter
    def tmrotatingcalc(self, tmrotatingcalc):
        """Sets the tmrotatingcalc of this JobProgramPhase.


        :param tmrotatingcalc: The tmrotatingcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseTmrotatingcalc
        """

        self._tmrotatingcalc = tmrotatingcalc

    @property
    def tmslidingcalc(self):
        """Gets the tmslidingcalc of this JobProgramPhase.  # noqa: E501


        :return: The tmslidingcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseTmslidingcalc
        """
        return self._tmslidingcalc

    @tmslidingcalc.setter
    def tmslidingcalc(self, tmslidingcalc):
        """Sets the tmslidingcalc of this JobProgramPhase.


        :param tmslidingcalc: The tmslidingcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseTmslidingcalc
        """

        self._tmslidingcalc = tmslidingcalc

    @property
    def tmtripcalc(self):
        """Gets the tmtripcalc of this JobProgramPhase.  # noqa: E501


        :return: The tmtripcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseTmtripcalc
        """
        return self._tmtripcalc

    @tmtripcalc.setter
    def tmtripcalc(self, tmtripcalc):
        """Sets the tmtripcalc of this JobProgramPhase.


        :param tmtripcalc: The tmtripcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseTmtripcalc
        """

        self._tmtripcalc = tmtripcalc

    @property
    def tmtripcumcalc(self):
        """Gets the tmtripcumcalc of this JobProgramPhase.  # noqa: E501


        :return: The tmtripcumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseTmtripcumcalc
        """
        return self._tmtripcumcalc

    @tmtripcumcalc.setter
    def tmtripcumcalc(self, tmtripcumcalc):
        """Sets the tmtripcumcalc of this JobProgramPhase.


        :param tmtripcumcalc: The tmtripcumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseTmtripcumcalc
        """

        self._tmtripcumcalc = tmtripcumcalc

    @property
    def usertxt1(self):
        """Gets the usertxt1 of this JobProgramPhase.  # noqa: E501


        :return: The usertxt1 of this JobProgramPhase.  # noqa: E501
        :rtype: str
        """
        return self._usertxt1

    @usertxt1.setter
    def usertxt1(self, usertxt1):
        """Sets the usertxt1 of this JobProgramPhase.


        :param usertxt1: The usertxt1 of this JobProgramPhase.  # noqa: E501
        :type: str
        """

        self._usertxt1 = usertxt1

    @property
    def volkicksumcalc(self):
        """Gets the volkicksumcalc of this JobProgramPhase.  # noqa: E501


        :return: The volkicksumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseVolkicksumcalc
        """
        return self._volkicksumcalc

    @volkicksumcalc.setter
    def volkicksumcalc(self, volkicksumcalc):
        """Sets the volkicksumcalc of this JobProgramPhase.


        :param volkicksumcalc: The volkicksumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseVolkicksumcalc
        """

        self._volkicksumcalc = volkicksumcalc

    @property
    def vollosssumcalc(self):
        """Gets the vollosssumcalc of this JobProgramPhase.  # noqa: E501


        :return: The vollosssumcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseVollosssumcalc
        """
        return self._vollosssumcalc

    @vollosssumcalc.setter
    def vollosssumcalc(self, vollosssumcalc):
        """Sets the vollosssumcalc of this JobProgramPhase.


        :param vollosssumcalc: The vollosssumcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseVollosssumcalc
        """

        self._vollosssumcalc = vollosssumcalc

    @property
    def volmudaddedcalc(self):
        """Gets the volmudaddedcalc of this JobProgramPhase.  # noqa: E501


        :return: The volmudaddedcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseVolmudaddedcalc
        """
        return self._volmudaddedcalc

    @volmudaddedcalc.setter
    def volmudaddedcalc(self, volmudaddedcalc):
        """Sets the volmudaddedcalc of this JobProgramPhase.


        :param volmudaddedcalc: The volmudaddedcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseVolmudaddedcalc
        """

        self._volmudaddedcalc = volmudaddedcalc

    @property
    def volmudaddedlossvarcalc(self):
        """Gets the volmudaddedlossvarcalc of this JobProgramPhase.  # noqa: E501


        :return: The volmudaddedlossvarcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseVolmudaddedlossvarcalc
        """
        return self._volmudaddedlossvarcalc

    @volmudaddedlossvarcalc.setter
    def volmudaddedlossvarcalc(self, volmudaddedlossvarcalc):
        """Sets the volmudaddedlossvarcalc of this JobProgramPhase.


        :param volmudaddedlossvarcalc: The volmudaddedlossvarcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseVolmudaddedlossvarcalc
        """

        self._volmudaddedlossvarcalc = volmudaddedlossvarcalc

    @property
    def volmudlosscalc(self):
        """Gets the volmudlosscalc of this JobProgramPhase.  # noqa: E501


        :return: The volmudlosscalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseVolmudlosscalc
        """
        return self._volmudlosscalc

    @volmudlosscalc.setter
    def volmudlosscalc(self, volmudlosscalc):
        """Sets the volmudlosscalc of this JobProgramPhase.


        :param volmudlosscalc: The volmudlosscalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseVolmudlosscalc
        """

        self._volmudlosscalc = volmudlosscalc

    @property
    def weightmetalrecovtotalcalc(self):
        """Gets the weightmetalrecovtotalcalc of this JobProgramPhase.  # noqa: E501


        :return: The weightmetalrecovtotalcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseWeightmetalrecovtotalcalc
        """
        return self._weightmetalrecovtotalcalc

    @weightmetalrecovtotalcalc.setter
    def weightmetalrecovtotalcalc(self, weightmetalrecovtotalcalc):
        """Sets the weightmetalrecovtotalcalc of this JobProgramPhase.


        :param weightmetalrecovtotalcalc: The weightmetalrecovtotalcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseWeightmetalrecovtotalcalc
        """

        self._weightmetalrecovtotalcalc = weightmetalrecovtotalcalc

    @property
    def wellboreszcalc(self):
        """Gets the wellboreszcalc of this JobProgramPhase.  # noqa: E501


        :return: The wellboreszcalc of this JobProgramPhase.  # noqa: E501
        :rtype: OneOfJobProgramPhaseWellboreszcalc
        """
        return self._wellboreszcalc

    @wellboreszcalc.setter
    def wellboreszcalc(self, wellboreszcalc):
        """Sets the wellboreszcalc of this JobProgramPhase.


        :param wellboreszcalc: The wellboreszcalc of this JobProgramPhase.  # noqa: E501
        :type: OneOfJobProgramPhaseWellboreszcalc
        """

        self._wellboreszcalc = wellboreszcalc

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(JobProgramPhase, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobProgramPhase):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
