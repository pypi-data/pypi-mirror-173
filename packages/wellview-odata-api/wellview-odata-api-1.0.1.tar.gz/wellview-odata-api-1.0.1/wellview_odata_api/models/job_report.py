# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class JobReport(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'bhatotalruncalc': 'OneOfJobReportBhatotalruncalc',
        'bitrevscalc': 'OneOfJobReportBitrevscalc',
        'condhole': 'str',
        'condlease': 'str',
        'condroad': 'str',
        'condtemp': 'OneOfJobReportCondtemp',
        'condwave': 'str',
        'condweather': 'str',
        'condwind': 'str',
        'contactcalc': 'str',
        'costforecastfieldvarcalc': 'OneOfJobReportCostforecastfieldvarcalc',
        'costjobsupplyamtcalc': 'OneOfJobReportCostjobsupplyamtcalc',
        'costjobsupplyamtnormcalc': 'OneOfJobReportCostjobsupplyamtnormcalc',
        'costjobsupplyamttodatecalc': 'OneOfJobReportCostjobsupplyamttodatecalc',
        'costjobsupplyamttodtncalc': 'OneOfJobReportCostjobsupplyamttodtncalc',
        'costmudaddcalc': 'OneOfJobReportCostmudaddcalc',
        'costmudaddnormcalc': 'OneOfJobReportCostmudaddnormcalc',
        'costmudaddtodatecalc': 'OneOfJobReportCostmudaddtodatecalc',
        'costmudaddtodatenormcalc': 'OneOfJobReportCostmudaddtodatenormcalc',
        'costnormforecastfieldvarcalc': 'OneOfJobReportCostnormforecastfieldvarcalc',
        'costperdepthcalc': 'OneOfJobReportCostperdepthcalc',
        'costperdepthcumcalc': 'OneOfJobReportCostperdepthcumcalc',
        'costperdepthnormcalc': 'OneOfJobReportCostperdepthnormcalc',
        'costperdepthvarcalc': 'OneOfJobReportCostperdepthvarcalc',
        'costpertldurcalc': 'OneOfJobReportCostpertldurcalc',
        'costpertldurnormcalc': 'OneOfJobReportCostpertldurnormcalc',
        'costprojectedmaxjobcalc': 'OneOfJobReportCostprojectedmaxjobcalc',
        'costprojectedmaxjobnormcalc': 'OneOfJobReportCostprojectedmaxjobnormcalc',
        'costprojectedmaxphasecalc': 'OneOfJobReportCostprojectedmaxphasecalc',
        'costprojectedmaxphasenormcalc': 'OneOfJobReportCostprojectedmaxphasenormcalc',
        'costprojectedminjobcalc': 'OneOfJobReportCostprojectedminjobcalc',
        'costprojectedminjobnormcalc': 'OneOfJobReportCostprojectedminjobnormcalc',
        'costprojectedminphasecalc': 'OneOfJobReportCostprojectedminphasecalc',
        'costprojectedminphasenormcalc': 'OneOfJobReportCostprojectedminphasenormcalc',
        'costprojectedmljobcalc': 'OneOfJobReportCostprojectedmljobcalc',
        'costprojectedmljobnormcalc': 'OneOfJobReportCostprojectedmljobnormcalc',
        'costprojectedmlphasecalc': 'OneOfJobReportCostprojectedmlphasecalc',
        'costprojectedmlphasenormcalc': 'OneOfJobReportCostprojectedmlphasenormcalc',
        'costprojectedtljobcalc': 'OneOfJobReportCostprojectedtljobcalc',
        'costprojectedtljobnormcalc': 'OneOfJobReportCostprojectedtljobnormcalc',
        'costprojectedtlphasecalc': 'OneOfJobReportCostprojectedtlphasecalc',
        'costprojectedtlphasenormcalc': 'OneOfJobReportCostprojectedtlphasenormcalc',
        'costtodatecalc': 'OneOfJobReportCosttodatecalc',
        'costtodatenormcalc': 'OneOfJobReportCosttodatenormcalc',
        'costtotalcalc': 'OneOfJobReportCosttotalcalc',
        'costtotalnormcalc': 'OneOfJobReportCosttotalnormcalc',
        'daysfromspudcalc': 'OneOfJobReportDaysfromspudcalc',
        'daysfromspudtorrcalc': 'OneOfJobReportDaysfromspudtorrcalc',
        'depthenddpcalc': 'OneOfJobReportDepthenddpcalc',
        'depthenddpcumcalc': 'OneOfJobReportDepthenddpcumcalc',
        'depthenddpnullcalc': 'OneOfJobReportDepthenddpnullcalc',
        'depthnetprogressdpcalc': 'OneOfJobReportDepthnetprogressdpcalc',
        'depthperdurcalc': 'OneOfJobReportDepthperdurcalc',
        'depthperdurvarcalc': 'OneOfJobReportDepthperdurvarcalc',
        'depthprogressdpcalc': 'OneOfJobReportDepthprogressdpcalc',
        'depthrotatingcalc': 'OneOfJobReportDepthrotatingcalc',
        'depthslidingcalc': 'OneOfJobReportDepthslidingcalc',
        'depthstartdpcalc': 'OneOfJobReportDepthstartdpcalc',
        'depthstartdpnullcalc': 'OneOfJobReportDepthstartdpnullcalc',
        'depthtvdenddpcalc': 'OneOfJobReportDepthtvdenddpcalc',
        'depthtvdendprojmethod': 'str',
        'depthtvdstartdpcalc': 'OneOfJobReportDepthtvdstartdpcalc',
        'dttmend': 'datetime',
        'dttmprojendmaxjobcalc': 'datetime',
        'dttmprojendmaxphasecalc': 'datetime',
        'dttmprojendminjobcalc': 'datetime',
        'dttmprojendminphasecalc': 'datetime',
        'dttmprojendmljobcalc': 'datetime',
        'dttmprojendmlphasecalc': 'datetime',
        'dttmprojendtljobcalc': 'datetime',
        'dttmprojendtlphasecalc': 'datetime',
        'dttmstart': 'datetime',
        'durationnoprobtimecalc': 'OneOfJobReportDurationnoprobtimecalc',
        'durationnoprobtimecumcalc': 'OneOfJobReportDurationnoprobtimecumcalc',
        'durationpersonnelotcalc': 'OneOfJobReportDurationpersonnelotcalc',
        'durationpersonnelregcalc': 'OneOfJobReportDurationpersonnelregcalc',
        'durationpersonneltotcalc': 'OneOfJobReportDurationpersonneltotcalc',
        'durationproblemtimecalc': 'OneOfJobReportDurationproblemtimecalc',
        'durationproblemtimecumcalc': 'OneOfJobReportDurationproblemtimecumcalc',
        'durationsinceltinc': 'OneOfJobReportDurationsinceltinc',
        'durationsincerptinc': 'OneOfJobReportDurationsincerptinc',
        'durationtimelogcum12hrcalc': 'OneOfJobReportDurationtimelogcum12hrcalc',
        'durationtimelogcumspudcalc': 'OneOfJobReportDurationtimelogcumspudcalc',
        'durationtimelogcumspudrrcalc': 'OneOfJobReportDurationtimelogcumspudrrcalc',
        'durationtimelogtotalcalc': 'OneOfJobReportDurationtimelogtotalcalc',
        'durationtimelogtotcumcalc': 'OneOfJobReportDurationtimelogtotcumcalc',
        'durlastsinccalc': 'OneOfJobReportDurlastsinccalc',
        'durlastsincreportcalc': 'OneOfJobReportDurlastsincreportcalc',
        'durlastsincreportrptdaycalc': 'OneOfJobReportDurlastsincreportrptdaycalc',
        'durlastsincrptdaycalc': 'OneOfJobReportDurlastsincrptdaycalc',
        'durnoprobtimecumdayscalc': 'OneOfJobReportDurnoprobtimecumdayscalc',
        'duroffbtmcalc': 'OneOfJobReportDuroffbtmcalc',
        'duronbtmcalc': 'OneOfJobReportDuronbtmcalc',
        'durpersonnelotcumcalc': 'OneOfJobReportDurpersonnelotcumcalc',
        'durpersonnelregcumcalc': 'OneOfJobReportDurpersonnelregcumcalc',
        'durpersonneltotcumcalc': 'OneOfJobReportDurpersonneltotcumcalc',
        'durpipemovingcalc': 'OneOfJobReportDurpipemovingcalc',
        'durproblemtimecumdayscalc': 'OneOfJobReportDurproblemtimecumdayscalc',
        'durprojectedmaxjobcalc': 'OneOfJobReportDurprojectedmaxjobcalc',
        'durprojectedmaxphasecalc': 'OneOfJobReportDurprojectedmaxphasecalc',
        'durprojectedminjobcalc': 'OneOfJobReportDurprojectedminjobcalc',
        'durprojectedminphasecalc': 'OneOfJobReportDurprojectedminphasecalc',
        'durprojectedmljobcalc': 'OneOfJobReportDurprojectedmljobcalc',
        'durprojectedmlphasecalc': 'OneOfJobReportDurprojectedmlphasecalc',
        'durprojectedtljobcalc': 'OneOfJobReportDurprojectedtljobcalc',
        'durprojectedtlphasecalc': 'OneOfJobReportDurprojectedtlphasecalc',
        'gasbackgroundavg': 'OneOfJobReportGasbackgroundavg',
        'gasbackgroundmax': 'OneOfJobReportGasbackgroundmax',
        'gasconnectionavg': 'OneOfJobReportGasconnectionavg',
        'gasconnectionmax': 'OneOfJobReportGasconnectionmax',
        'gasdrillavg': 'OneOfJobReportGasdrillavg',
        'gasdrillmax': 'OneOfJobReportGasdrillmax',
        'gastripavg': 'OneOfJobReportGastripavg',
        'gastripmax': 'OneOfJobReportGastripmax',
        'h2smax': 'OneOfJobReportH2smax',
        'hazardidnorptcalc': 'int',
        'hazardidnorptcumcalc': 'int',
        'headcountcalc': 'OneOfJobReportHeadcountcalc',
        'idrec': 'str',
        'idrecjobprogramphasecalc': 'str',
        'idrecjobprogramphasecalctk': 'str',
        'idreclastcascalc': 'str',
        'idreclastcascalctk': 'str',
        'idreclastrigcalc': 'str',
        'idreclastrigcalctk': 'str',
        'idrecnextcas': 'str',
        'idrecnextcastk': 'str',
        'idrecparent': 'str',
        'idrecwellborecalc': 'str',
        'idrecwellborecalctk': 'str',
        'idwell': 'str',
        'intlessoncalc': 'int',
        'intproblemcalc': 'int',
        'job': 'AnyOfJobReportJob',
        'job_report_contacts': 'list[JobReportContacts]',
        'job_report_cost_gens': 'list[JobReportCostGen]',
        'job_report_cost_rentals': 'list[JobReportCostRental]',
        'job_report_discharges': 'list[JobReportDischarge]',
        'job_report_emissions': 'list[JobReportEmission]',
        'job_report_fluids_leases': 'list[JobReportFluidsLease]',
        'job_report_fluids_wells': 'list[JobReportFluidsWell]',
        'job_report_geo_ops': 'list[JobReportGeoOps]',
        'job_report_hazard_ids': 'list[JobReportHazardId]',
        'job_report_mud_chks': 'list[JobReportMudChk]',
        'job_report_mud_vols': 'list[JobReportMudVol]',
        'job_report_offshores': 'list[JobReportOffshore]',
        'job_report_personnel_counts': 'list[JobReportPersonnelCount]',
        'job_report_pressures': 'list[JobReportPressure]',
        'job_report_rig_crews': 'list[JobReportRigCrew]',
        'job_report_time_logs': 'list[JobReportTimeLog]',
        'lastmuddensitycalc': 'OneOfJobReportLastmuddensitycalc',
        'mudcostperdepthcalc': 'OneOfJobReportMudcostperdepthcalc',
        'mudcostperdepthcumcalc': 'OneOfJobReportMudcostperdepthcumcalc',
        'mudcostperdepthcumnormcalc': 'OneOfJobReportMudcostperdepthcumnormcalc',
        'mudcostperdepthnormcalc': 'OneOfJobReportMudcostperdepthnormcalc',
        'pctproblemtimecalc': 'OneOfJobReportPctproblemtimecalc',
        'pctproblemtimecumcalc': 'OneOfJobReportPctproblemtimecumcalc',
        'percentcompletemaxjobcalc': 'OneOfJobReportPercentcompletemaxjobcalc',
        'percentcompletemaxphasecalc': 'OneOfJobReportPercentcompletemaxphasecalc',
        'percentcompleteminjobcalc': 'OneOfJobReportPercentcompleteminjobcalc',
        'percentcompleteminphasecalc': 'OneOfJobReportPercentcompleteminphasecalc',
        'percentcompletemljobcalc': 'OneOfJobReportPercentcompletemljobcalc',
        'percentcompletemlphasecalc': 'OneOfJobReportPercentcompletemlphasecalc',
        'percentcompletetljobcalc': 'OneOfJobReportPercentcompletetljobcalc',
        'percentcompletetlphasecalc': 'OneOfJobReportPercentcompletetlphasecalc',
        'percentdepthrotatingcalc': 'OneOfJobReportPercentdepthrotatingcalc',
        'percentdepthslidingcalc': 'OneOfJobReportPercentdepthslidingcalc',
        'percentfieldafecalc': 'OneOfJobReportPercentfieldafecalc',
        'percenttmrotatingcalc': 'OneOfJobReportPercenttmrotatingcalc',
        'percenttmslidingcalc': 'OneOfJobReportPercenttmslidingcalc',
        'plannextrptops': 'str',
        'ratiodurprojmaxplancalc': 'OneOfJobReportRatiodurprojmaxplancalc',
        'ratiodurprojminplancalc': 'OneOfJobReportRatiodurprojminplancalc',
        'ratiodurprojmlplancalc': 'OneOfJobReportRatiodurprojmlplancalc',
        'ratiodurprojtlplancalc': 'OneOfJobReportRatiodurprojtlplancalc',
        'remarks': 'str',
        'reportdaycalc': 'OneOfJobReportReportdaycalc',
        'reportnocalc': 'OneOfJobReportReportnocalc',
        'rigdayscalc': 'OneOfJobReportRigdayscalc',
        'rigdayscumcalc': 'OneOfJobReportRigdayscumcalc',
        'rigscalc': 'str',
        'rigtime': 'OneOfJobReportRigtime',
        'rigtimecumcalc': 'OneOfJobReportRigtimecumcalc',
        'ropcalc': 'OneOfJobReportRopcalc',
        'roprotatingcalc': 'OneOfJobReportRoprotatingcalc',
        'ropslidingcalc': 'OneOfJobReportRopslidingcalc',
        'rpttmactops': 'str',
        'safetyinccalc': 'int',
        'safetyincnocalc': 'int',
        'safetyincnocumcalc': 'int',
        'safetyincratecalc': 'OneOfJobReportSafetyincratecalc',
        'safetyincreportcalc': 'int',
        'safetyincreportnocalc': 'int',
        'safetyincreportnocumcalc': 'int',
        'safetyincreportratecalc': 'OneOfJobReportSafetyincreportratecalc',
        'statusend': 'str',
        'summaryops': 'str',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'systag': 'str',
        'timeaheadmaxjobcalc': 'OneOfJobReportTimeaheadmaxjobcalc',
        'timeaheadmaxphasecalc': 'OneOfJobReportTimeaheadmaxphasecalc',
        'timeaheadminjobcalc': 'OneOfJobReportTimeaheadminjobcalc',
        'timeaheadminphasecalc': 'OneOfJobReportTimeaheadminphasecalc',
        'timeaheadmljobcalc': 'OneOfJobReportTimeaheadmljobcalc',
        'timeaheadmlphasecalc': 'OneOfJobReportTimeaheadmlphasecalc',
        'timeaheadtljobcalc': 'OneOfJobReportTimeaheadtljobcalc',
        'timeaheadtlphasecalc': 'OneOfJobReportTimeaheadtlphasecalc',
        'timelogcode1calc': 'str',
        'timelogcode2calc': 'str',
        'timelogcode3calc': 'str',
        'timelogcode4calc': 'str',
        'tmcirccalc': 'OneOfJobReportTmcirccalc',
        'tmcirccumcalc': 'OneOfJobReportTmcirccumcalc',
        'tmcirctripothercalc': 'OneOfJobReportTmcirctripothercalc',
        'tmcirctripothercumcalc': 'OneOfJobReportTmcirctripothercumcalc',
        'tmdrillcalc': 'OneOfJobReportTmdrillcalc',
        'tmdrillcumcalc': 'OneOfJobReportTmdrillcumcalc',
        'tmdrillcumnoexccalc': 'OneOfJobReportTmdrillcumnoexccalc',
        'tmdrillnoexccalc': 'OneOfJobReportTmdrillnoexccalc',
        'tmothercalc': 'OneOfJobReportTmothercalc',
        'tmothercumcalc': 'OneOfJobReportTmothercumcalc',
        'tmrotatingcalc': 'OneOfJobReportTmrotatingcalc',
        'tmslidingcalc': 'OneOfJobReportTmslidingcalc',
        'tmtripcalc': 'OneOfJobReportTmtripcalc',
        'tmtripcumcalc': 'OneOfJobReportTmtripcumcalc',
        'userboolean1': 'int',
        'userboolean2': 'int',
        'usernum1': 'OneOfJobReportUsernum1',
        'usernum2': 'OneOfJobReportUsernum2',
        'usernum3': 'OneOfJobReportUsernum3',
        'usernum4': 'OneOfJobReportUsernum4',
        'usernum5': 'OneOfJobReportUsernum5',
        'usertxt1': 'str',
        'usertxt2': 'str',
        'usertxt3': 'str',
        'usertxt4': 'str',
        'usertxt5': 'str',
        'volbittoshoecalc': 'OneOfJobReportVolbittoshoecalc',
        'volcastoptorisertopcalc': 'OneOfJobReportVolcastoptorisertopcalc',
        'volholecalc': 'OneOfJobReportVolholecalc',
        'volholevarcalc': 'OneOfJobReportVolholevarcalc',
        'volmudactivecalc': 'OneOfJobReportVolmudactivecalc',
        'volmudactivevarcalc': 'OneOfJobReportVolmudactivevarcalc',
        'volmudaddedcalc': 'OneOfJobReportVolmudaddedcalc',
        'volmudaddedcumcalc': 'OneOfJobReportVolmudaddedcumcalc',
        'volmudaddedlossvarcalc': 'OneOfJobReportVolmudaddedlossvarcalc',
        'volmudaddedlossvarcumcalc': 'OneOfJobReportVolmudaddedlossvarcumcalc',
        'volmudbalancecalc': 'OneOfJobReportVolmudbalancecalc',
        'volmudlosscalc': 'OneOfJobReportVolmudlosscalc',
        'volmudlosscumcalc': 'OneOfJobReportVolmudlosscumcalc',
        'volmudtankcalc': 'OneOfJobReportVolmudtankcalc',
        'volpumptobitcalc': 'OneOfJobReportVolpumptobitcalc',
        'volshoetocastopcalc': 'OneOfJobReportVolshoetocastopcalc',
        'weightmetalrecovtotalcalc': 'OneOfJobReportWeightmetalrecovtotalcalc'
    }

    attribute_map = {
        'bhatotalruncalc': 'bhatotalruncalc',
        'bitrevscalc': 'bitrevscalc',
        'condhole': 'condhole',
        'condlease': 'condlease',
        'condroad': 'condroad',
        'condtemp': 'condtemp',
        'condwave': 'condwave',
        'condweather': 'condweather',
        'condwind': 'condwind',
        'contactcalc': 'contactcalc',
        'costforecastfieldvarcalc': 'costforecastfieldvarcalc',
        'costjobsupplyamtcalc': 'costjobsupplyamtcalc',
        'costjobsupplyamtnormcalc': 'costjobsupplyamtnormcalc',
        'costjobsupplyamttodatecalc': 'costjobsupplyamttodatecalc',
        'costjobsupplyamttodtncalc': 'costjobsupplyamttodtncalc',
        'costmudaddcalc': 'costmudaddcalc',
        'costmudaddnormcalc': 'costmudaddnormcalc',
        'costmudaddtodatecalc': 'costmudaddtodatecalc',
        'costmudaddtodatenormcalc': 'costmudaddtodatenormcalc',
        'costnormforecastfieldvarcalc': 'costnormforecastfieldvarcalc',
        'costperdepthcalc': 'costperdepthcalc',
        'costperdepthcumcalc': 'costperdepthcumcalc',
        'costperdepthnormcalc': 'costperdepthnormcalc',
        'costperdepthvarcalc': 'costperdepthvarcalc',
        'costpertldurcalc': 'costpertldurcalc',
        'costpertldurnormcalc': 'costpertldurnormcalc',
        'costprojectedmaxjobcalc': 'costprojectedmaxjobcalc',
        'costprojectedmaxjobnormcalc': 'costprojectedmaxjobnormcalc',
        'costprojectedmaxphasecalc': 'costprojectedmaxphasecalc',
        'costprojectedmaxphasenormcalc': 'costprojectedmaxphasenormcalc',
        'costprojectedminjobcalc': 'costprojectedminjobcalc',
        'costprojectedminjobnormcalc': 'costprojectedminjobnormcalc',
        'costprojectedminphasecalc': 'costprojectedminphasecalc',
        'costprojectedminphasenormcalc': 'costprojectedminphasenormcalc',
        'costprojectedmljobcalc': 'costprojectedmljobcalc',
        'costprojectedmljobnormcalc': 'costprojectedmljobnormcalc',
        'costprojectedmlphasecalc': 'costprojectedmlphasecalc',
        'costprojectedmlphasenormcalc': 'costprojectedmlphasenormcalc',
        'costprojectedtljobcalc': 'costprojectedtljobcalc',
        'costprojectedtljobnormcalc': 'costprojectedtljobnormcalc',
        'costprojectedtlphasecalc': 'costprojectedtlphasecalc',
        'costprojectedtlphasenormcalc': 'costprojectedtlphasenormcalc',
        'costtodatecalc': 'costtodatecalc',
        'costtodatenormcalc': 'costtodatenormcalc',
        'costtotalcalc': 'costtotalcalc',
        'costtotalnormcalc': 'costtotalnormcalc',
        'daysfromspudcalc': 'daysfromspudcalc',
        'daysfromspudtorrcalc': 'daysfromspudtorrcalc',
        'depthenddpcalc': 'depthenddpcalc',
        'depthenddpcumcalc': 'depthenddpcumcalc',
        'depthenddpnullcalc': 'depthenddpnullcalc',
        'depthnetprogressdpcalc': 'depthnetprogressdpcalc',
        'depthperdurcalc': 'depthperdurcalc',
        'depthperdurvarcalc': 'depthperdurvarcalc',
        'depthprogressdpcalc': 'depthprogressdpcalc',
        'depthrotatingcalc': 'depthrotatingcalc',
        'depthslidingcalc': 'depthslidingcalc',
        'depthstartdpcalc': 'depthstartdpcalc',
        'depthstartdpnullcalc': 'depthstartdpnullcalc',
        'depthtvdenddpcalc': 'depthtvdenddpcalc',
        'depthtvdendprojmethod': 'depthtvdendprojmethod',
        'depthtvdstartdpcalc': 'depthtvdstartdpcalc',
        'dttmend': 'dttmend',
        'dttmprojendmaxjobcalc': 'dttmprojendmaxjobcalc',
        'dttmprojendmaxphasecalc': 'dttmprojendmaxphasecalc',
        'dttmprojendminjobcalc': 'dttmprojendminjobcalc',
        'dttmprojendminphasecalc': 'dttmprojendminphasecalc',
        'dttmprojendmljobcalc': 'dttmprojendmljobcalc',
        'dttmprojendmlphasecalc': 'dttmprojendmlphasecalc',
        'dttmprojendtljobcalc': 'dttmprojendtljobcalc',
        'dttmprojendtlphasecalc': 'dttmprojendtlphasecalc',
        'dttmstart': 'dttmstart',
        'durationnoprobtimecalc': 'durationnoprobtimecalc',
        'durationnoprobtimecumcalc': 'durationnoprobtimecumcalc',
        'durationpersonnelotcalc': 'durationpersonnelotcalc',
        'durationpersonnelregcalc': 'durationpersonnelregcalc',
        'durationpersonneltotcalc': 'durationpersonneltotcalc',
        'durationproblemtimecalc': 'durationproblemtimecalc',
        'durationproblemtimecumcalc': 'durationproblemtimecumcalc',
        'durationsinceltinc': 'durationsinceltinc',
        'durationsincerptinc': 'durationsincerptinc',
        'durationtimelogcum12hrcalc': 'durationtimelogcum12hrcalc',
        'durationtimelogcumspudcalc': 'durationtimelogcumspudcalc',
        'durationtimelogcumspudrrcalc': 'durationtimelogcumspudrrcalc',
        'durationtimelogtotalcalc': 'durationtimelogtotalcalc',
        'durationtimelogtotcumcalc': 'durationtimelogtotcumcalc',
        'durlastsinccalc': 'durlastsinccalc',
        'durlastsincreportcalc': 'durlastsincreportcalc',
        'durlastsincreportrptdaycalc': 'durlastsincreportrptdaycalc',
        'durlastsincrptdaycalc': 'durlastsincrptdaycalc',
        'durnoprobtimecumdayscalc': 'durnoprobtimecumdayscalc',
        'duroffbtmcalc': 'duroffbtmcalc',
        'duronbtmcalc': 'duronbtmcalc',
        'durpersonnelotcumcalc': 'durpersonnelotcumcalc',
        'durpersonnelregcumcalc': 'durpersonnelregcumcalc',
        'durpersonneltotcumcalc': 'durpersonneltotcumcalc',
        'durpipemovingcalc': 'durpipemovingcalc',
        'durproblemtimecumdayscalc': 'durproblemtimecumdayscalc',
        'durprojectedmaxjobcalc': 'durprojectedmaxjobcalc',
        'durprojectedmaxphasecalc': 'durprojectedmaxphasecalc',
        'durprojectedminjobcalc': 'durprojectedminjobcalc',
        'durprojectedminphasecalc': 'durprojectedminphasecalc',
        'durprojectedmljobcalc': 'durprojectedmljobcalc',
        'durprojectedmlphasecalc': 'durprojectedmlphasecalc',
        'durprojectedtljobcalc': 'durprojectedtljobcalc',
        'durprojectedtlphasecalc': 'durprojectedtlphasecalc',
        'gasbackgroundavg': 'gasbackgroundavg',
        'gasbackgroundmax': 'gasbackgroundmax',
        'gasconnectionavg': 'gasconnectionavg',
        'gasconnectionmax': 'gasconnectionmax',
        'gasdrillavg': 'gasdrillavg',
        'gasdrillmax': 'gasdrillmax',
        'gastripavg': 'gastripavg',
        'gastripmax': 'gastripmax',
        'h2smax': 'h2smax',
        'hazardidnorptcalc': 'hazardidnorptcalc',
        'hazardidnorptcumcalc': 'hazardidnorptcumcalc',
        'headcountcalc': 'headcountcalc',
        'idrec': 'idrec',
        'idrecjobprogramphasecalc': 'idrecjobprogramphasecalc',
        'idrecjobprogramphasecalctk': 'idrecjobprogramphasecalctk',
        'idreclastcascalc': 'idreclastcascalc',
        'idreclastcascalctk': 'idreclastcascalctk',
        'idreclastrigcalc': 'idreclastrigcalc',
        'idreclastrigcalctk': 'idreclastrigcalctk',
        'idrecnextcas': 'idrecnextcas',
        'idrecnextcastk': 'idrecnextcastk',
        'idrecparent': 'idrecparent',
        'idrecwellborecalc': 'idrecwellborecalc',
        'idrecwellborecalctk': 'idrecwellborecalctk',
        'idwell': 'idwell',
        'intlessoncalc': 'intlessoncalc',
        'intproblemcalc': 'intproblemcalc',
        'job': 'job',
        'job_report_contacts': 'jobReportContacts',
        'job_report_cost_gens': 'jobReportCostGens',
        'job_report_cost_rentals': 'jobReportCostRentals',
        'job_report_discharges': 'jobReportDischarges',
        'job_report_emissions': 'jobReportEmissions',
        'job_report_fluids_leases': 'jobReportFluidsLeases',
        'job_report_fluids_wells': 'jobReportFluidsWells',
        'job_report_geo_ops': 'jobReportGeoOps',
        'job_report_hazard_ids': 'jobReportHazardIds',
        'job_report_mud_chks': 'jobReportMudChks',
        'job_report_mud_vols': 'jobReportMudVols',
        'job_report_offshores': 'jobReportOffshores',
        'job_report_personnel_counts': 'jobReportPersonnelCounts',
        'job_report_pressures': 'jobReportPressures',
        'job_report_rig_crews': 'jobReportRigCrews',
        'job_report_time_logs': 'jobReportTimeLogs',
        'lastmuddensitycalc': 'lastmuddensitycalc',
        'mudcostperdepthcalc': 'mudcostperdepthcalc',
        'mudcostperdepthcumcalc': 'mudcostperdepthcumcalc',
        'mudcostperdepthcumnormcalc': 'mudcostperdepthcumnormcalc',
        'mudcostperdepthnormcalc': 'mudcostperdepthnormcalc',
        'pctproblemtimecalc': 'pctproblemtimecalc',
        'pctproblemtimecumcalc': 'pctproblemtimecumcalc',
        'percentcompletemaxjobcalc': 'percentcompletemaxjobcalc',
        'percentcompletemaxphasecalc': 'percentcompletemaxphasecalc',
        'percentcompleteminjobcalc': 'percentcompleteminjobcalc',
        'percentcompleteminphasecalc': 'percentcompleteminphasecalc',
        'percentcompletemljobcalc': 'percentcompletemljobcalc',
        'percentcompletemlphasecalc': 'percentcompletemlphasecalc',
        'percentcompletetljobcalc': 'percentcompletetljobcalc',
        'percentcompletetlphasecalc': 'percentcompletetlphasecalc',
        'percentdepthrotatingcalc': 'percentdepthrotatingcalc',
        'percentdepthslidingcalc': 'percentdepthslidingcalc',
        'percentfieldafecalc': 'percentfieldafecalc',
        'percenttmrotatingcalc': 'percenttmrotatingcalc',
        'percenttmslidingcalc': 'percenttmslidingcalc',
        'plannextrptops': 'plannextrptops',
        'ratiodurprojmaxplancalc': 'ratiodurprojmaxplancalc',
        'ratiodurprojminplancalc': 'ratiodurprojminplancalc',
        'ratiodurprojmlplancalc': 'ratiodurprojmlplancalc',
        'ratiodurprojtlplancalc': 'ratiodurprojtlplancalc',
        'remarks': 'remarks',
        'reportdaycalc': 'reportdaycalc',
        'reportnocalc': 'reportnocalc',
        'rigdayscalc': 'rigdayscalc',
        'rigdayscumcalc': 'rigdayscumcalc',
        'rigscalc': 'rigscalc',
        'rigtime': 'rigtime',
        'rigtimecumcalc': 'rigtimecumcalc',
        'ropcalc': 'ropcalc',
        'roprotatingcalc': 'roprotatingcalc',
        'ropslidingcalc': 'ropslidingcalc',
        'rpttmactops': 'rpttmactops',
        'safetyinccalc': 'safetyinccalc',
        'safetyincnocalc': 'safetyincnocalc',
        'safetyincnocumcalc': 'safetyincnocumcalc',
        'safetyincratecalc': 'safetyincratecalc',
        'safetyincreportcalc': 'safetyincreportcalc',
        'safetyincreportnocalc': 'safetyincreportnocalc',
        'safetyincreportnocumcalc': 'safetyincreportnocumcalc',
        'safetyincreportratecalc': 'safetyincreportratecalc',
        'statusend': 'statusend',
        'summaryops': 'summaryops',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'systag': 'systag',
        'timeaheadmaxjobcalc': 'timeaheadmaxjobcalc',
        'timeaheadmaxphasecalc': 'timeaheadmaxphasecalc',
        'timeaheadminjobcalc': 'timeaheadminjobcalc',
        'timeaheadminphasecalc': 'timeaheadminphasecalc',
        'timeaheadmljobcalc': 'timeaheadmljobcalc',
        'timeaheadmlphasecalc': 'timeaheadmlphasecalc',
        'timeaheadtljobcalc': 'timeaheadtljobcalc',
        'timeaheadtlphasecalc': 'timeaheadtlphasecalc',
        'timelogcode1calc': 'timelogcode1calc',
        'timelogcode2calc': 'timelogcode2calc',
        'timelogcode3calc': 'timelogcode3calc',
        'timelogcode4calc': 'timelogcode4calc',
        'tmcirccalc': 'tmcirccalc',
        'tmcirccumcalc': 'tmcirccumcalc',
        'tmcirctripothercalc': 'tmcirctripothercalc',
        'tmcirctripothercumcalc': 'tmcirctripothercumcalc',
        'tmdrillcalc': 'tmdrillcalc',
        'tmdrillcumcalc': 'tmdrillcumcalc',
        'tmdrillcumnoexccalc': 'tmdrillcumnoexccalc',
        'tmdrillnoexccalc': 'tmdrillnoexccalc',
        'tmothercalc': 'tmothercalc',
        'tmothercumcalc': 'tmothercumcalc',
        'tmrotatingcalc': 'tmrotatingcalc',
        'tmslidingcalc': 'tmslidingcalc',
        'tmtripcalc': 'tmtripcalc',
        'tmtripcumcalc': 'tmtripcumcalc',
        'userboolean1': 'userboolean1',
        'userboolean2': 'userboolean2',
        'usernum1': 'usernum1',
        'usernum2': 'usernum2',
        'usernum3': 'usernum3',
        'usernum4': 'usernum4',
        'usernum5': 'usernum5',
        'usertxt1': 'usertxt1',
        'usertxt2': 'usertxt2',
        'usertxt3': 'usertxt3',
        'usertxt4': 'usertxt4',
        'usertxt5': 'usertxt5',
        'volbittoshoecalc': 'volbittoshoecalc',
        'volcastoptorisertopcalc': 'volcastoptorisertopcalc',
        'volholecalc': 'volholecalc',
        'volholevarcalc': 'volholevarcalc',
        'volmudactivecalc': 'volmudactivecalc',
        'volmudactivevarcalc': 'volmudactivevarcalc',
        'volmudaddedcalc': 'volmudaddedcalc',
        'volmudaddedcumcalc': 'volmudaddedcumcalc',
        'volmudaddedlossvarcalc': 'volmudaddedlossvarcalc',
        'volmudaddedlossvarcumcalc': 'volmudaddedlossvarcumcalc',
        'volmudbalancecalc': 'volmudbalancecalc',
        'volmudlosscalc': 'volmudlosscalc',
        'volmudlosscumcalc': 'volmudlosscumcalc',
        'volmudtankcalc': 'volmudtankcalc',
        'volpumptobitcalc': 'volpumptobitcalc',
        'volshoetocastopcalc': 'volshoetocastopcalc',
        'weightmetalrecovtotalcalc': 'weightmetalrecovtotalcalc'
    }

    def __init__(self, bhatotalruncalc=None, bitrevscalc=None, condhole=None, condlease=None, condroad=None, condtemp=None, condwave=None, condweather=None, condwind=None, contactcalc=None, costforecastfieldvarcalc=None, costjobsupplyamtcalc=None, costjobsupplyamtnormcalc=None, costjobsupplyamttodatecalc=None, costjobsupplyamttodtncalc=None, costmudaddcalc=None, costmudaddnormcalc=None, costmudaddtodatecalc=None, costmudaddtodatenormcalc=None, costnormforecastfieldvarcalc=None, costperdepthcalc=None, costperdepthcumcalc=None, costperdepthnormcalc=None, costperdepthvarcalc=None, costpertldurcalc=None, costpertldurnormcalc=None, costprojectedmaxjobcalc=None, costprojectedmaxjobnormcalc=None, costprojectedmaxphasecalc=None, costprojectedmaxphasenormcalc=None, costprojectedminjobcalc=None, costprojectedminjobnormcalc=None, costprojectedminphasecalc=None, costprojectedminphasenormcalc=None, costprojectedmljobcalc=None, costprojectedmljobnormcalc=None, costprojectedmlphasecalc=None, costprojectedmlphasenormcalc=None, costprojectedtljobcalc=None, costprojectedtljobnormcalc=None, costprojectedtlphasecalc=None, costprojectedtlphasenormcalc=None, costtodatecalc=None, costtodatenormcalc=None, costtotalcalc=None, costtotalnormcalc=None, daysfromspudcalc=None, daysfromspudtorrcalc=None, depthenddpcalc=None, depthenddpcumcalc=None, depthenddpnullcalc=None, depthnetprogressdpcalc=None, depthperdurcalc=None, depthperdurvarcalc=None, depthprogressdpcalc=None, depthrotatingcalc=None, depthslidingcalc=None, depthstartdpcalc=None, depthstartdpnullcalc=None, depthtvdenddpcalc=None, depthtvdendprojmethod=None, depthtvdstartdpcalc=None, dttmend=None, dttmprojendmaxjobcalc=None, dttmprojendmaxphasecalc=None, dttmprojendminjobcalc=None, dttmprojendminphasecalc=None, dttmprojendmljobcalc=None, dttmprojendmlphasecalc=None, dttmprojendtljobcalc=None, dttmprojendtlphasecalc=None, dttmstart=None, durationnoprobtimecalc=None, durationnoprobtimecumcalc=None, durationpersonnelotcalc=None, durationpersonnelregcalc=None, durationpersonneltotcalc=None, durationproblemtimecalc=None, durationproblemtimecumcalc=None, durationsinceltinc=None, durationsincerptinc=None, durationtimelogcum12hrcalc=None, durationtimelogcumspudcalc=None, durationtimelogcumspudrrcalc=None, durationtimelogtotalcalc=None, durationtimelogtotcumcalc=None, durlastsinccalc=None, durlastsincreportcalc=None, durlastsincreportrptdaycalc=None, durlastsincrptdaycalc=None, durnoprobtimecumdayscalc=None, duroffbtmcalc=None, duronbtmcalc=None, durpersonnelotcumcalc=None, durpersonnelregcumcalc=None, durpersonneltotcumcalc=None, durpipemovingcalc=None, durproblemtimecumdayscalc=None, durprojectedmaxjobcalc=None, durprojectedmaxphasecalc=None, durprojectedminjobcalc=None, durprojectedminphasecalc=None, durprojectedmljobcalc=None, durprojectedmlphasecalc=None, durprojectedtljobcalc=None, durprojectedtlphasecalc=None, gasbackgroundavg=None, gasbackgroundmax=None, gasconnectionavg=None, gasconnectionmax=None, gasdrillavg=None, gasdrillmax=None, gastripavg=None, gastripmax=None, h2smax=None, hazardidnorptcalc=None, hazardidnorptcumcalc=None, headcountcalc=None, idrec=None, idrecjobprogramphasecalc=None, idrecjobprogramphasecalctk=None, idreclastcascalc=None, idreclastcascalctk=None, idreclastrigcalc=None, idreclastrigcalctk=None, idrecnextcas=None, idrecnextcastk=None, idrecparent=None, idrecwellborecalc=None, idrecwellborecalctk=None, idwell=None, intlessoncalc=None, intproblemcalc=None, job=None, job_report_contacts=None, job_report_cost_gens=None, job_report_cost_rentals=None, job_report_discharges=None, job_report_emissions=None, job_report_fluids_leases=None, job_report_fluids_wells=None, job_report_geo_ops=None, job_report_hazard_ids=None, job_report_mud_chks=None, job_report_mud_vols=None, job_report_offshores=None, job_report_personnel_counts=None, job_report_pressures=None, job_report_rig_crews=None, job_report_time_logs=None, lastmuddensitycalc=None, mudcostperdepthcalc=None, mudcostperdepthcumcalc=None, mudcostperdepthcumnormcalc=None, mudcostperdepthnormcalc=None, pctproblemtimecalc=None, pctproblemtimecumcalc=None, percentcompletemaxjobcalc=None, percentcompletemaxphasecalc=None, percentcompleteminjobcalc=None, percentcompleteminphasecalc=None, percentcompletemljobcalc=None, percentcompletemlphasecalc=None, percentcompletetljobcalc=None, percentcompletetlphasecalc=None, percentdepthrotatingcalc=None, percentdepthslidingcalc=None, percentfieldafecalc=None, percenttmrotatingcalc=None, percenttmslidingcalc=None, plannextrptops=None, ratiodurprojmaxplancalc=None, ratiodurprojminplancalc=None, ratiodurprojmlplancalc=None, ratiodurprojtlplancalc=None, remarks=None, reportdaycalc=None, reportnocalc=None, rigdayscalc=None, rigdayscumcalc=None, rigscalc=None, rigtime=None, rigtimecumcalc=None, ropcalc=None, roprotatingcalc=None, ropslidingcalc=None, rpttmactops=None, safetyinccalc=None, safetyincnocalc=None, safetyincnocumcalc=None, safetyincratecalc=None, safetyincreportcalc=None, safetyincreportnocalc=None, safetyincreportnocumcalc=None, safetyincreportratecalc=None, statusend=None, summaryops=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, systag=None, timeaheadmaxjobcalc=None, timeaheadmaxphasecalc=None, timeaheadminjobcalc=None, timeaheadminphasecalc=None, timeaheadmljobcalc=None, timeaheadmlphasecalc=None, timeaheadtljobcalc=None, timeaheadtlphasecalc=None, timelogcode1calc=None, timelogcode2calc=None, timelogcode3calc=None, timelogcode4calc=None, tmcirccalc=None, tmcirccumcalc=None, tmcirctripothercalc=None, tmcirctripothercumcalc=None, tmdrillcalc=None, tmdrillcumcalc=None, tmdrillcumnoexccalc=None, tmdrillnoexccalc=None, tmothercalc=None, tmothercumcalc=None, tmrotatingcalc=None, tmslidingcalc=None, tmtripcalc=None, tmtripcumcalc=None, userboolean1=None, userboolean2=None, usernum1=None, usernum2=None, usernum3=None, usernum4=None, usernum5=None, usertxt1=None, usertxt2=None, usertxt3=None, usertxt4=None, usertxt5=None, volbittoshoecalc=None, volcastoptorisertopcalc=None, volholecalc=None, volholevarcalc=None, volmudactivecalc=None, volmudactivevarcalc=None, volmudaddedcalc=None, volmudaddedcumcalc=None, volmudaddedlossvarcalc=None, volmudaddedlossvarcumcalc=None, volmudbalancecalc=None, volmudlosscalc=None, volmudlosscumcalc=None, volmudtankcalc=None, volpumptobitcalc=None, volshoetocastopcalc=None, weightmetalrecovtotalcalc=None):  # noqa: E501
        """JobReport - a model defined in Swagger"""  # noqa: E501
        self._bhatotalruncalc = None
        self._bitrevscalc = None
        self._condhole = None
        self._condlease = None
        self._condroad = None
        self._condtemp = None
        self._condwave = None
        self._condweather = None
        self._condwind = None
        self._contactcalc = None
        self._costforecastfieldvarcalc = None
        self._costjobsupplyamtcalc = None
        self._costjobsupplyamtnormcalc = None
        self._costjobsupplyamttodatecalc = None
        self._costjobsupplyamttodtncalc = None
        self._costmudaddcalc = None
        self._costmudaddnormcalc = None
        self._costmudaddtodatecalc = None
        self._costmudaddtodatenormcalc = None
        self._costnormforecastfieldvarcalc = None
        self._costperdepthcalc = None
        self._costperdepthcumcalc = None
        self._costperdepthnormcalc = None
        self._costperdepthvarcalc = None
        self._costpertldurcalc = None
        self._costpertldurnormcalc = None
        self._costprojectedmaxjobcalc = None
        self._costprojectedmaxjobnormcalc = None
        self._costprojectedmaxphasecalc = None
        self._costprojectedmaxphasenormcalc = None
        self._costprojectedminjobcalc = None
        self._costprojectedminjobnormcalc = None
        self._costprojectedminphasecalc = None
        self._costprojectedminphasenormcalc = None
        self._costprojectedmljobcalc = None
        self._costprojectedmljobnormcalc = None
        self._costprojectedmlphasecalc = None
        self._costprojectedmlphasenormcalc = None
        self._costprojectedtljobcalc = None
        self._costprojectedtljobnormcalc = None
        self._costprojectedtlphasecalc = None
        self._costprojectedtlphasenormcalc = None
        self._costtodatecalc = None
        self._costtodatenormcalc = None
        self._costtotalcalc = None
        self._costtotalnormcalc = None
        self._daysfromspudcalc = None
        self._daysfromspudtorrcalc = None
        self._depthenddpcalc = None
        self._depthenddpcumcalc = None
        self._depthenddpnullcalc = None
        self._depthnetprogressdpcalc = None
        self._depthperdurcalc = None
        self._depthperdurvarcalc = None
        self._depthprogressdpcalc = None
        self._depthrotatingcalc = None
        self._depthslidingcalc = None
        self._depthstartdpcalc = None
        self._depthstartdpnullcalc = None
        self._depthtvdenddpcalc = None
        self._depthtvdendprojmethod = None
        self._depthtvdstartdpcalc = None
        self._dttmend = None
        self._dttmprojendmaxjobcalc = None
        self._dttmprojendmaxphasecalc = None
        self._dttmprojendminjobcalc = None
        self._dttmprojendminphasecalc = None
        self._dttmprojendmljobcalc = None
        self._dttmprojendmlphasecalc = None
        self._dttmprojendtljobcalc = None
        self._dttmprojendtlphasecalc = None
        self._dttmstart = None
        self._durationnoprobtimecalc = None
        self._durationnoprobtimecumcalc = None
        self._durationpersonnelotcalc = None
        self._durationpersonnelregcalc = None
        self._durationpersonneltotcalc = None
        self._durationproblemtimecalc = None
        self._durationproblemtimecumcalc = None
        self._durationsinceltinc = None
        self._durationsincerptinc = None
        self._durationtimelogcum12hrcalc = None
        self._durationtimelogcumspudcalc = None
        self._durationtimelogcumspudrrcalc = None
        self._durationtimelogtotalcalc = None
        self._durationtimelogtotcumcalc = None
        self._durlastsinccalc = None
        self._durlastsincreportcalc = None
        self._durlastsincreportrptdaycalc = None
        self._durlastsincrptdaycalc = None
        self._durnoprobtimecumdayscalc = None
        self._duroffbtmcalc = None
        self._duronbtmcalc = None
        self._durpersonnelotcumcalc = None
        self._durpersonnelregcumcalc = None
        self._durpersonneltotcumcalc = None
        self._durpipemovingcalc = None
        self._durproblemtimecumdayscalc = None
        self._durprojectedmaxjobcalc = None
        self._durprojectedmaxphasecalc = None
        self._durprojectedminjobcalc = None
        self._durprojectedminphasecalc = None
        self._durprojectedmljobcalc = None
        self._durprojectedmlphasecalc = None
        self._durprojectedtljobcalc = None
        self._durprojectedtlphasecalc = None
        self._gasbackgroundavg = None
        self._gasbackgroundmax = None
        self._gasconnectionavg = None
        self._gasconnectionmax = None
        self._gasdrillavg = None
        self._gasdrillmax = None
        self._gastripavg = None
        self._gastripmax = None
        self._h2smax = None
        self._hazardidnorptcalc = None
        self._hazardidnorptcumcalc = None
        self._headcountcalc = None
        self._idrec = None
        self._idrecjobprogramphasecalc = None
        self._idrecjobprogramphasecalctk = None
        self._idreclastcascalc = None
        self._idreclastcascalctk = None
        self._idreclastrigcalc = None
        self._idreclastrigcalctk = None
        self._idrecnextcas = None
        self._idrecnextcastk = None
        self._idrecparent = None
        self._idrecwellborecalc = None
        self._idrecwellborecalctk = None
        self._idwell = None
        self._intlessoncalc = None
        self._intproblemcalc = None
        self._job = None
        self._job_report_contacts = None
        self._job_report_cost_gens = None
        self._job_report_cost_rentals = None
        self._job_report_discharges = None
        self._job_report_emissions = None
        self._job_report_fluids_leases = None
        self._job_report_fluids_wells = None
        self._job_report_geo_ops = None
        self._job_report_hazard_ids = None
        self._job_report_mud_chks = None
        self._job_report_mud_vols = None
        self._job_report_offshores = None
        self._job_report_personnel_counts = None
        self._job_report_pressures = None
        self._job_report_rig_crews = None
        self._job_report_time_logs = None
        self._lastmuddensitycalc = None
        self._mudcostperdepthcalc = None
        self._mudcostperdepthcumcalc = None
        self._mudcostperdepthcumnormcalc = None
        self._mudcostperdepthnormcalc = None
        self._pctproblemtimecalc = None
        self._pctproblemtimecumcalc = None
        self._percentcompletemaxjobcalc = None
        self._percentcompletemaxphasecalc = None
        self._percentcompleteminjobcalc = None
        self._percentcompleteminphasecalc = None
        self._percentcompletemljobcalc = None
        self._percentcompletemlphasecalc = None
        self._percentcompletetljobcalc = None
        self._percentcompletetlphasecalc = None
        self._percentdepthrotatingcalc = None
        self._percentdepthslidingcalc = None
        self._percentfieldafecalc = None
        self._percenttmrotatingcalc = None
        self._percenttmslidingcalc = None
        self._plannextrptops = None
        self._ratiodurprojmaxplancalc = None
        self._ratiodurprojminplancalc = None
        self._ratiodurprojmlplancalc = None
        self._ratiodurprojtlplancalc = None
        self._remarks = None
        self._reportdaycalc = None
        self._reportnocalc = None
        self._rigdayscalc = None
        self._rigdayscumcalc = None
        self._rigscalc = None
        self._rigtime = None
        self._rigtimecumcalc = None
        self._ropcalc = None
        self._roprotatingcalc = None
        self._ropslidingcalc = None
        self._rpttmactops = None
        self._safetyinccalc = None
        self._safetyincnocalc = None
        self._safetyincnocumcalc = None
        self._safetyincratecalc = None
        self._safetyincreportcalc = None
        self._safetyincreportnocalc = None
        self._safetyincreportnocumcalc = None
        self._safetyincreportratecalc = None
        self._statusend = None
        self._summaryops = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._systag = None
        self._timeaheadmaxjobcalc = None
        self._timeaheadmaxphasecalc = None
        self._timeaheadminjobcalc = None
        self._timeaheadminphasecalc = None
        self._timeaheadmljobcalc = None
        self._timeaheadmlphasecalc = None
        self._timeaheadtljobcalc = None
        self._timeaheadtlphasecalc = None
        self._timelogcode1calc = None
        self._timelogcode2calc = None
        self._timelogcode3calc = None
        self._timelogcode4calc = None
        self._tmcirccalc = None
        self._tmcirccumcalc = None
        self._tmcirctripothercalc = None
        self._tmcirctripothercumcalc = None
        self._tmdrillcalc = None
        self._tmdrillcumcalc = None
        self._tmdrillcumnoexccalc = None
        self._tmdrillnoexccalc = None
        self._tmothercalc = None
        self._tmothercumcalc = None
        self._tmrotatingcalc = None
        self._tmslidingcalc = None
        self._tmtripcalc = None
        self._tmtripcumcalc = None
        self._userboolean1 = None
        self._userboolean2 = None
        self._usernum1 = None
        self._usernum2 = None
        self._usernum3 = None
        self._usernum4 = None
        self._usernum5 = None
        self._usertxt1 = None
        self._usertxt2 = None
        self._usertxt3 = None
        self._usertxt4 = None
        self._usertxt5 = None
        self._volbittoshoecalc = None
        self._volcastoptorisertopcalc = None
        self._volholecalc = None
        self._volholevarcalc = None
        self._volmudactivecalc = None
        self._volmudactivevarcalc = None
        self._volmudaddedcalc = None
        self._volmudaddedcumcalc = None
        self._volmudaddedlossvarcalc = None
        self._volmudaddedlossvarcumcalc = None
        self._volmudbalancecalc = None
        self._volmudlosscalc = None
        self._volmudlosscumcalc = None
        self._volmudtankcalc = None
        self._volpumptobitcalc = None
        self._volshoetocastopcalc = None
        self._weightmetalrecovtotalcalc = None
        self.discriminator = None
        if bhatotalruncalc is not None:
            self.bhatotalruncalc = bhatotalruncalc
        if bitrevscalc is not None:
            self.bitrevscalc = bitrevscalc
        if condhole is not None:
            self.condhole = condhole
        if condlease is not None:
            self.condlease = condlease
        if condroad is not None:
            self.condroad = condroad
        if condtemp is not None:
            self.condtemp = condtemp
        if condwave is not None:
            self.condwave = condwave
        if condweather is not None:
            self.condweather = condweather
        if condwind is not None:
            self.condwind = condwind
        if contactcalc is not None:
            self.contactcalc = contactcalc
        if costforecastfieldvarcalc is not None:
            self.costforecastfieldvarcalc = costforecastfieldvarcalc
        if costjobsupplyamtcalc is not None:
            self.costjobsupplyamtcalc = costjobsupplyamtcalc
        if costjobsupplyamtnormcalc is not None:
            self.costjobsupplyamtnormcalc = costjobsupplyamtnormcalc
        if costjobsupplyamttodatecalc is not None:
            self.costjobsupplyamttodatecalc = costjobsupplyamttodatecalc
        if costjobsupplyamttodtncalc is not None:
            self.costjobsupplyamttodtncalc = costjobsupplyamttodtncalc
        if costmudaddcalc is not None:
            self.costmudaddcalc = costmudaddcalc
        if costmudaddnormcalc is not None:
            self.costmudaddnormcalc = costmudaddnormcalc
        if costmudaddtodatecalc is not None:
            self.costmudaddtodatecalc = costmudaddtodatecalc
        if costmudaddtodatenormcalc is not None:
            self.costmudaddtodatenormcalc = costmudaddtodatenormcalc
        if costnormforecastfieldvarcalc is not None:
            self.costnormforecastfieldvarcalc = costnormforecastfieldvarcalc
        if costperdepthcalc is not None:
            self.costperdepthcalc = costperdepthcalc
        if costperdepthcumcalc is not None:
            self.costperdepthcumcalc = costperdepthcumcalc
        if costperdepthnormcalc is not None:
            self.costperdepthnormcalc = costperdepthnormcalc
        if costperdepthvarcalc is not None:
            self.costperdepthvarcalc = costperdepthvarcalc
        if costpertldurcalc is not None:
            self.costpertldurcalc = costpertldurcalc
        if costpertldurnormcalc is not None:
            self.costpertldurnormcalc = costpertldurnormcalc
        if costprojectedmaxjobcalc is not None:
            self.costprojectedmaxjobcalc = costprojectedmaxjobcalc
        if costprojectedmaxjobnormcalc is not None:
            self.costprojectedmaxjobnormcalc = costprojectedmaxjobnormcalc
        if costprojectedmaxphasecalc is not None:
            self.costprojectedmaxphasecalc = costprojectedmaxphasecalc
        if costprojectedmaxphasenormcalc is not None:
            self.costprojectedmaxphasenormcalc = costprojectedmaxphasenormcalc
        if costprojectedminjobcalc is not None:
            self.costprojectedminjobcalc = costprojectedminjobcalc
        if costprojectedminjobnormcalc is not None:
            self.costprojectedminjobnormcalc = costprojectedminjobnormcalc
        if costprojectedminphasecalc is not None:
            self.costprojectedminphasecalc = costprojectedminphasecalc
        if costprojectedminphasenormcalc is not None:
            self.costprojectedminphasenormcalc = costprojectedminphasenormcalc
        if costprojectedmljobcalc is not None:
            self.costprojectedmljobcalc = costprojectedmljobcalc
        if costprojectedmljobnormcalc is not None:
            self.costprojectedmljobnormcalc = costprojectedmljobnormcalc
        if costprojectedmlphasecalc is not None:
            self.costprojectedmlphasecalc = costprojectedmlphasecalc
        if costprojectedmlphasenormcalc is not None:
            self.costprojectedmlphasenormcalc = costprojectedmlphasenormcalc
        if costprojectedtljobcalc is not None:
            self.costprojectedtljobcalc = costprojectedtljobcalc
        if costprojectedtljobnormcalc is not None:
            self.costprojectedtljobnormcalc = costprojectedtljobnormcalc
        if costprojectedtlphasecalc is not None:
            self.costprojectedtlphasecalc = costprojectedtlphasecalc
        if costprojectedtlphasenormcalc is not None:
            self.costprojectedtlphasenormcalc = costprojectedtlphasenormcalc
        if costtodatecalc is not None:
            self.costtodatecalc = costtodatecalc
        if costtodatenormcalc is not None:
            self.costtodatenormcalc = costtodatenormcalc
        if costtotalcalc is not None:
            self.costtotalcalc = costtotalcalc
        if costtotalnormcalc is not None:
            self.costtotalnormcalc = costtotalnormcalc
        if daysfromspudcalc is not None:
            self.daysfromspudcalc = daysfromspudcalc
        if daysfromspudtorrcalc is not None:
            self.daysfromspudtorrcalc = daysfromspudtorrcalc
        if depthenddpcalc is not None:
            self.depthenddpcalc = depthenddpcalc
        if depthenddpcumcalc is not None:
            self.depthenddpcumcalc = depthenddpcumcalc
        if depthenddpnullcalc is not None:
            self.depthenddpnullcalc = depthenddpnullcalc
        if depthnetprogressdpcalc is not None:
            self.depthnetprogressdpcalc = depthnetprogressdpcalc
        if depthperdurcalc is not None:
            self.depthperdurcalc = depthperdurcalc
        if depthperdurvarcalc is not None:
            self.depthperdurvarcalc = depthperdurvarcalc
        if depthprogressdpcalc is not None:
            self.depthprogressdpcalc = depthprogressdpcalc
        if depthrotatingcalc is not None:
            self.depthrotatingcalc = depthrotatingcalc
        if depthslidingcalc is not None:
            self.depthslidingcalc = depthslidingcalc
        if depthstartdpcalc is not None:
            self.depthstartdpcalc = depthstartdpcalc
        if depthstartdpnullcalc is not None:
            self.depthstartdpnullcalc = depthstartdpnullcalc
        if depthtvdenddpcalc is not None:
            self.depthtvdenddpcalc = depthtvdenddpcalc
        if depthtvdendprojmethod is not None:
            self.depthtvdendprojmethod = depthtvdendprojmethod
        if depthtvdstartdpcalc is not None:
            self.depthtvdstartdpcalc = depthtvdstartdpcalc
        if dttmend is not None:
            self.dttmend = dttmend
        if dttmprojendmaxjobcalc is not None:
            self.dttmprojendmaxjobcalc = dttmprojendmaxjobcalc
        if dttmprojendmaxphasecalc is not None:
            self.dttmprojendmaxphasecalc = dttmprojendmaxphasecalc
        if dttmprojendminjobcalc is not None:
            self.dttmprojendminjobcalc = dttmprojendminjobcalc
        if dttmprojendminphasecalc is not None:
            self.dttmprojendminphasecalc = dttmprojendminphasecalc
        if dttmprojendmljobcalc is not None:
            self.dttmprojendmljobcalc = dttmprojendmljobcalc
        if dttmprojendmlphasecalc is not None:
            self.dttmprojendmlphasecalc = dttmprojendmlphasecalc
        if dttmprojendtljobcalc is not None:
            self.dttmprojendtljobcalc = dttmprojendtljobcalc
        if dttmprojendtlphasecalc is not None:
            self.dttmprojendtlphasecalc = dttmprojendtlphasecalc
        if dttmstart is not None:
            self.dttmstart = dttmstart
        if durationnoprobtimecalc is not None:
            self.durationnoprobtimecalc = durationnoprobtimecalc
        if durationnoprobtimecumcalc is not None:
            self.durationnoprobtimecumcalc = durationnoprobtimecumcalc
        if durationpersonnelotcalc is not None:
            self.durationpersonnelotcalc = durationpersonnelotcalc
        if durationpersonnelregcalc is not None:
            self.durationpersonnelregcalc = durationpersonnelregcalc
        if durationpersonneltotcalc is not None:
            self.durationpersonneltotcalc = durationpersonneltotcalc
        if durationproblemtimecalc is not None:
            self.durationproblemtimecalc = durationproblemtimecalc
        if durationproblemtimecumcalc is not None:
            self.durationproblemtimecumcalc = durationproblemtimecumcalc
        if durationsinceltinc is not None:
            self.durationsinceltinc = durationsinceltinc
        if durationsincerptinc is not None:
            self.durationsincerptinc = durationsincerptinc
        if durationtimelogcum12hrcalc is not None:
            self.durationtimelogcum12hrcalc = durationtimelogcum12hrcalc
        if durationtimelogcumspudcalc is not None:
            self.durationtimelogcumspudcalc = durationtimelogcumspudcalc
        if durationtimelogcumspudrrcalc is not None:
            self.durationtimelogcumspudrrcalc = durationtimelogcumspudrrcalc
        if durationtimelogtotalcalc is not None:
            self.durationtimelogtotalcalc = durationtimelogtotalcalc
        if durationtimelogtotcumcalc is not None:
            self.durationtimelogtotcumcalc = durationtimelogtotcumcalc
        if durlastsinccalc is not None:
            self.durlastsinccalc = durlastsinccalc
        if durlastsincreportcalc is not None:
            self.durlastsincreportcalc = durlastsincreportcalc
        if durlastsincreportrptdaycalc is not None:
            self.durlastsincreportrptdaycalc = durlastsincreportrptdaycalc
        if durlastsincrptdaycalc is not None:
            self.durlastsincrptdaycalc = durlastsincrptdaycalc
        if durnoprobtimecumdayscalc is not None:
            self.durnoprobtimecumdayscalc = durnoprobtimecumdayscalc
        if duroffbtmcalc is not None:
            self.duroffbtmcalc = duroffbtmcalc
        if duronbtmcalc is not None:
            self.duronbtmcalc = duronbtmcalc
        if durpersonnelotcumcalc is not None:
            self.durpersonnelotcumcalc = durpersonnelotcumcalc
        if durpersonnelregcumcalc is not None:
            self.durpersonnelregcumcalc = durpersonnelregcumcalc
        if durpersonneltotcumcalc is not None:
            self.durpersonneltotcumcalc = durpersonneltotcumcalc
        if durpipemovingcalc is not None:
            self.durpipemovingcalc = durpipemovingcalc
        if durproblemtimecumdayscalc is not None:
            self.durproblemtimecumdayscalc = durproblemtimecumdayscalc
        if durprojectedmaxjobcalc is not None:
            self.durprojectedmaxjobcalc = durprojectedmaxjobcalc
        if durprojectedmaxphasecalc is not None:
            self.durprojectedmaxphasecalc = durprojectedmaxphasecalc
        if durprojectedminjobcalc is not None:
            self.durprojectedminjobcalc = durprojectedminjobcalc
        if durprojectedminphasecalc is not None:
            self.durprojectedminphasecalc = durprojectedminphasecalc
        if durprojectedmljobcalc is not None:
            self.durprojectedmljobcalc = durprojectedmljobcalc
        if durprojectedmlphasecalc is not None:
            self.durprojectedmlphasecalc = durprojectedmlphasecalc
        if durprojectedtljobcalc is not None:
            self.durprojectedtljobcalc = durprojectedtljobcalc
        if durprojectedtlphasecalc is not None:
            self.durprojectedtlphasecalc = durprojectedtlphasecalc
        if gasbackgroundavg is not None:
            self.gasbackgroundavg = gasbackgroundavg
        if gasbackgroundmax is not None:
            self.gasbackgroundmax = gasbackgroundmax
        if gasconnectionavg is not None:
            self.gasconnectionavg = gasconnectionavg
        if gasconnectionmax is not None:
            self.gasconnectionmax = gasconnectionmax
        if gasdrillavg is not None:
            self.gasdrillavg = gasdrillavg
        if gasdrillmax is not None:
            self.gasdrillmax = gasdrillmax
        if gastripavg is not None:
            self.gastripavg = gastripavg
        if gastripmax is not None:
            self.gastripmax = gastripmax
        if h2smax is not None:
            self.h2smax = h2smax
        if hazardidnorptcalc is not None:
            self.hazardidnorptcalc = hazardidnorptcalc
        if hazardidnorptcumcalc is not None:
            self.hazardidnorptcumcalc = hazardidnorptcumcalc
        if headcountcalc is not None:
            self.headcountcalc = headcountcalc
        if idrec is not None:
            self.idrec = idrec
        if idrecjobprogramphasecalc is not None:
            self.idrecjobprogramphasecalc = idrecjobprogramphasecalc
        if idrecjobprogramphasecalctk is not None:
            self.idrecjobprogramphasecalctk = idrecjobprogramphasecalctk
        if idreclastcascalc is not None:
            self.idreclastcascalc = idreclastcascalc
        if idreclastcascalctk is not None:
            self.idreclastcascalctk = idreclastcascalctk
        if idreclastrigcalc is not None:
            self.idreclastrigcalc = idreclastrigcalc
        if idreclastrigcalctk is not None:
            self.idreclastrigcalctk = idreclastrigcalctk
        if idrecnextcas is not None:
            self.idrecnextcas = idrecnextcas
        if idrecnextcastk is not None:
            self.idrecnextcastk = idrecnextcastk
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idrecwellborecalc is not None:
            self.idrecwellborecalc = idrecwellborecalc
        if idrecwellborecalctk is not None:
            self.idrecwellborecalctk = idrecwellborecalctk
        if idwell is not None:
            self.idwell = idwell
        if intlessoncalc is not None:
            self.intlessoncalc = intlessoncalc
        if intproblemcalc is not None:
            self.intproblemcalc = intproblemcalc
        if job is not None:
            self.job = job
        if job_report_contacts is not None:
            self.job_report_contacts = job_report_contacts
        if job_report_cost_gens is not None:
            self.job_report_cost_gens = job_report_cost_gens
        if job_report_cost_rentals is not None:
            self.job_report_cost_rentals = job_report_cost_rentals
        if job_report_discharges is not None:
            self.job_report_discharges = job_report_discharges
        if job_report_emissions is not None:
            self.job_report_emissions = job_report_emissions
        if job_report_fluids_leases is not None:
            self.job_report_fluids_leases = job_report_fluids_leases
        if job_report_fluids_wells is not None:
            self.job_report_fluids_wells = job_report_fluids_wells
        if job_report_geo_ops is not None:
            self.job_report_geo_ops = job_report_geo_ops
        if job_report_hazard_ids is not None:
            self.job_report_hazard_ids = job_report_hazard_ids
        if job_report_mud_chks is not None:
            self.job_report_mud_chks = job_report_mud_chks
        if job_report_mud_vols is not None:
            self.job_report_mud_vols = job_report_mud_vols
        if job_report_offshores is not None:
            self.job_report_offshores = job_report_offshores
        if job_report_personnel_counts is not None:
            self.job_report_personnel_counts = job_report_personnel_counts
        if job_report_pressures is not None:
            self.job_report_pressures = job_report_pressures
        if job_report_rig_crews is not None:
            self.job_report_rig_crews = job_report_rig_crews
        if job_report_time_logs is not None:
            self.job_report_time_logs = job_report_time_logs
        if lastmuddensitycalc is not None:
            self.lastmuddensitycalc = lastmuddensitycalc
        if mudcostperdepthcalc is not None:
            self.mudcostperdepthcalc = mudcostperdepthcalc
        if mudcostperdepthcumcalc is not None:
            self.mudcostperdepthcumcalc = mudcostperdepthcumcalc
        if mudcostperdepthcumnormcalc is not None:
            self.mudcostperdepthcumnormcalc = mudcostperdepthcumnormcalc
        if mudcostperdepthnormcalc is not None:
            self.mudcostperdepthnormcalc = mudcostperdepthnormcalc
        if pctproblemtimecalc is not None:
            self.pctproblemtimecalc = pctproblemtimecalc
        if pctproblemtimecumcalc is not None:
            self.pctproblemtimecumcalc = pctproblemtimecumcalc
        if percentcompletemaxjobcalc is not None:
            self.percentcompletemaxjobcalc = percentcompletemaxjobcalc
        if percentcompletemaxphasecalc is not None:
            self.percentcompletemaxphasecalc = percentcompletemaxphasecalc
        if percentcompleteminjobcalc is not None:
            self.percentcompleteminjobcalc = percentcompleteminjobcalc
        if percentcompleteminphasecalc is not None:
            self.percentcompleteminphasecalc = percentcompleteminphasecalc
        if percentcompletemljobcalc is not None:
            self.percentcompletemljobcalc = percentcompletemljobcalc
        if percentcompletemlphasecalc is not None:
            self.percentcompletemlphasecalc = percentcompletemlphasecalc
        if percentcompletetljobcalc is not None:
            self.percentcompletetljobcalc = percentcompletetljobcalc
        if percentcompletetlphasecalc is not None:
            self.percentcompletetlphasecalc = percentcompletetlphasecalc
        if percentdepthrotatingcalc is not None:
            self.percentdepthrotatingcalc = percentdepthrotatingcalc
        if percentdepthslidingcalc is not None:
            self.percentdepthslidingcalc = percentdepthslidingcalc
        if percentfieldafecalc is not None:
            self.percentfieldafecalc = percentfieldafecalc
        if percenttmrotatingcalc is not None:
            self.percenttmrotatingcalc = percenttmrotatingcalc
        if percenttmslidingcalc is not None:
            self.percenttmslidingcalc = percenttmslidingcalc
        if plannextrptops is not None:
            self.plannextrptops = plannextrptops
        if ratiodurprojmaxplancalc is not None:
            self.ratiodurprojmaxplancalc = ratiodurprojmaxplancalc
        if ratiodurprojminplancalc is not None:
            self.ratiodurprojminplancalc = ratiodurprojminplancalc
        if ratiodurprojmlplancalc is not None:
            self.ratiodurprojmlplancalc = ratiodurprojmlplancalc
        if ratiodurprojtlplancalc is not None:
            self.ratiodurprojtlplancalc = ratiodurprojtlplancalc
        if remarks is not None:
            self.remarks = remarks
        if reportdaycalc is not None:
            self.reportdaycalc = reportdaycalc
        if reportnocalc is not None:
            self.reportnocalc = reportnocalc
        if rigdayscalc is not None:
            self.rigdayscalc = rigdayscalc
        if rigdayscumcalc is not None:
            self.rigdayscumcalc = rigdayscumcalc
        if rigscalc is not None:
            self.rigscalc = rigscalc
        if rigtime is not None:
            self.rigtime = rigtime
        if rigtimecumcalc is not None:
            self.rigtimecumcalc = rigtimecumcalc
        if ropcalc is not None:
            self.ropcalc = ropcalc
        if roprotatingcalc is not None:
            self.roprotatingcalc = roprotatingcalc
        if ropslidingcalc is not None:
            self.ropslidingcalc = ropslidingcalc
        if rpttmactops is not None:
            self.rpttmactops = rpttmactops
        if safetyinccalc is not None:
            self.safetyinccalc = safetyinccalc
        if safetyincnocalc is not None:
            self.safetyincnocalc = safetyincnocalc
        if safetyincnocumcalc is not None:
            self.safetyincnocumcalc = safetyincnocumcalc
        if safetyincratecalc is not None:
            self.safetyincratecalc = safetyincratecalc
        if safetyincreportcalc is not None:
            self.safetyincreportcalc = safetyincreportcalc
        if safetyincreportnocalc is not None:
            self.safetyincreportnocalc = safetyincreportnocalc
        if safetyincreportnocumcalc is not None:
            self.safetyincreportnocumcalc = safetyincreportnocumcalc
        if safetyincreportratecalc is not None:
            self.safetyincreportratecalc = safetyincreportratecalc
        if statusend is not None:
            self.statusend = statusend
        if summaryops is not None:
            self.summaryops = summaryops
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if systag is not None:
            self.systag = systag
        if timeaheadmaxjobcalc is not None:
            self.timeaheadmaxjobcalc = timeaheadmaxjobcalc
        if timeaheadmaxphasecalc is not None:
            self.timeaheadmaxphasecalc = timeaheadmaxphasecalc
        if timeaheadminjobcalc is not None:
            self.timeaheadminjobcalc = timeaheadminjobcalc
        if timeaheadminphasecalc is not None:
            self.timeaheadminphasecalc = timeaheadminphasecalc
        if timeaheadmljobcalc is not None:
            self.timeaheadmljobcalc = timeaheadmljobcalc
        if timeaheadmlphasecalc is not None:
            self.timeaheadmlphasecalc = timeaheadmlphasecalc
        if timeaheadtljobcalc is not None:
            self.timeaheadtljobcalc = timeaheadtljobcalc
        if timeaheadtlphasecalc is not None:
            self.timeaheadtlphasecalc = timeaheadtlphasecalc
        if timelogcode1calc is not None:
            self.timelogcode1calc = timelogcode1calc
        if timelogcode2calc is not None:
            self.timelogcode2calc = timelogcode2calc
        if timelogcode3calc is not None:
            self.timelogcode3calc = timelogcode3calc
        if timelogcode4calc is not None:
            self.timelogcode4calc = timelogcode4calc
        if tmcirccalc is not None:
            self.tmcirccalc = tmcirccalc
        if tmcirccumcalc is not None:
            self.tmcirccumcalc = tmcirccumcalc
        if tmcirctripothercalc is not None:
            self.tmcirctripothercalc = tmcirctripothercalc
        if tmcirctripothercumcalc is not None:
            self.tmcirctripothercumcalc = tmcirctripothercumcalc
        if tmdrillcalc is not None:
            self.tmdrillcalc = tmdrillcalc
        if tmdrillcumcalc is not None:
            self.tmdrillcumcalc = tmdrillcumcalc
        if tmdrillcumnoexccalc is not None:
            self.tmdrillcumnoexccalc = tmdrillcumnoexccalc
        if tmdrillnoexccalc is not None:
            self.tmdrillnoexccalc = tmdrillnoexccalc
        if tmothercalc is not None:
            self.tmothercalc = tmothercalc
        if tmothercumcalc is not None:
            self.tmothercumcalc = tmothercumcalc
        if tmrotatingcalc is not None:
            self.tmrotatingcalc = tmrotatingcalc
        if tmslidingcalc is not None:
            self.tmslidingcalc = tmslidingcalc
        if tmtripcalc is not None:
            self.tmtripcalc = tmtripcalc
        if tmtripcumcalc is not None:
            self.tmtripcumcalc = tmtripcumcalc
        if userboolean1 is not None:
            self.userboolean1 = userboolean1
        if userboolean2 is not None:
            self.userboolean2 = userboolean2
        if usernum1 is not None:
            self.usernum1 = usernum1
        if usernum2 is not None:
            self.usernum2 = usernum2
        if usernum3 is not None:
            self.usernum3 = usernum3
        if usernum4 is not None:
            self.usernum4 = usernum4
        if usernum5 is not None:
            self.usernum5 = usernum5
        if usertxt1 is not None:
            self.usertxt1 = usertxt1
        if usertxt2 is not None:
            self.usertxt2 = usertxt2
        if usertxt3 is not None:
            self.usertxt3 = usertxt3
        if usertxt4 is not None:
            self.usertxt4 = usertxt4
        if usertxt5 is not None:
            self.usertxt5 = usertxt5
        if volbittoshoecalc is not None:
            self.volbittoshoecalc = volbittoshoecalc
        if volcastoptorisertopcalc is not None:
            self.volcastoptorisertopcalc = volcastoptorisertopcalc
        if volholecalc is not None:
            self.volholecalc = volholecalc
        if volholevarcalc is not None:
            self.volholevarcalc = volholevarcalc
        if volmudactivecalc is not None:
            self.volmudactivecalc = volmudactivecalc
        if volmudactivevarcalc is not None:
            self.volmudactivevarcalc = volmudactivevarcalc
        if volmudaddedcalc is not None:
            self.volmudaddedcalc = volmudaddedcalc
        if volmudaddedcumcalc is not None:
            self.volmudaddedcumcalc = volmudaddedcumcalc
        if volmudaddedlossvarcalc is not None:
            self.volmudaddedlossvarcalc = volmudaddedlossvarcalc
        if volmudaddedlossvarcumcalc is not None:
            self.volmudaddedlossvarcumcalc = volmudaddedlossvarcumcalc
        if volmudbalancecalc is not None:
            self.volmudbalancecalc = volmudbalancecalc
        if volmudlosscalc is not None:
            self.volmudlosscalc = volmudlosscalc
        if volmudlosscumcalc is not None:
            self.volmudlosscumcalc = volmudlosscumcalc
        if volmudtankcalc is not None:
            self.volmudtankcalc = volmudtankcalc
        if volpumptobitcalc is not None:
            self.volpumptobitcalc = volpumptobitcalc
        if volshoetocastopcalc is not None:
            self.volshoetocastopcalc = volshoetocastopcalc
        if weightmetalrecovtotalcalc is not None:
            self.weightmetalrecovtotalcalc = weightmetalrecovtotalcalc

    @property
    def bhatotalruncalc(self):
        """Gets the bhatotalruncalc of this JobReport.  # noqa: E501


        :return: The bhatotalruncalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportBhatotalruncalc
        """
        return self._bhatotalruncalc

    @bhatotalruncalc.setter
    def bhatotalruncalc(self, bhatotalruncalc):
        """Sets the bhatotalruncalc of this JobReport.


        :param bhatotalruncalc: The bhatotalruncalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportBhatotalruncalc
        """

        self._bhatotalruncalc = bhatotalruncalc

    @property
    def bitrevscalc(self):
        """Gets the bitrevscalc of this JobReport.  # noqa: E501


        :return: The bitrevscalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportBitrevscalc
        """
        return self._bitrevscalc

    @bitrevscalc.setter
    def bitrevscalc(self, bitrevscalc):
        """Sets the bitrevscalc of this JobReport.


        :param bitrevscalc: The bitrevscalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportBitrevscalc
        """

        self._bitrevscalc = bitrevscalc

    @property
    def condhole(self):
        """Gets the condhole of this JobReport.  # noqa: E501


        :return: The condhole of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._condhole

    @condhole.setter
    def condhole(self, condhole):
        """Sets the condhole of this JobReport.


        :param condhole: The condhole of this JobReport.  # noqa: E501
        :type: str
        """

        self._condhole = condhole

    @property
    def condlease(self):
        """Gets the condlease of this JobReport.  # noqa: E501


        :return: The condlease of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._condlease

    @condlease.setter
    def condlease(self, condlease):
        """Sets the condlease of this JobReport.


        :param condlease: The condlease of this JobReport.  # noqa: E501
        :type: str
        """

        self._condlease = condlease

    @property
    def condroad(self):
        """Gets the condroad of this JobReport.  # noqa: E501


        :return: The condroad of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._condroad

    @condroad.setter
    def condroad(self, condroad):
        """Sets the condroad of this JobReport.


        :param condroad: The condroad of this JobReport.  # noqa: E501
        :type: str
        """

        self._condroad = condroad

    @property
    def condtemp(self):
        """Gets the condtemp of this JobReport.  # noqa: E501


        :return: The condtemp of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCondtemp
        """
        return self._condtemp

    @condtemp.setter
    def condtemp(self, condtemp):
        """Sets the condtemp of this JobReport.


        :param condtemp: The condtemp of this JobReport.  # noqa: E501
        :type: OneOfJobReportCondtemp
        """

        self._condtemp = condtemp

    @property
    def condwave(self):
        """Gets the condwave of this JobReport.  # noqa: E501


        :return: The condwave of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._condwave

    @condwave.setter
    def condwave(self, condwave):
        """Sets the condwave of this JobReport.


        :param condwave: The condwave of this JobReport.  # noqa: E501
        :type: str
        """

        self._condwave = condwave

    @property
    def condweather(self):
        """Gets the condweather of this JobReport.  # noqa: E501


        :return: The condweather of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._condweather

    @condweather.setter
    def condweather(self, condweather):
        """Sets the condweather of this JobReport.


        :param condweather: The condweather of this JobReport.  # noqa: E501
        :type: str
        """

        self._condweather = condweather

    @property
    def condwind(self):
        """Gets the condwind of this JobReport.  # noqa: E501


        :return: The condwind of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._condwind

    @condwind.setter
    def condwind(self, condwind):
        """Sets the condwind of this JobReport.


        :param condwind: The condwind of this JobReport.  # noqa: E501
        :type: str
        """

        self._condwind = condwind

    @property
    def contactcalc(self):
        """Gets the contactcalc of this JobReport.  # noqa: E501


        :return: The contactcalc of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._contactcalc

    @contactcalc.setter
    def contactcalc(self, contactcalc):
        """Sets the contactcalc of this JobReport.


        :param contactcalc: The contactcalc of this JobReport.  # noqa: E501
        :type: str
        """

        self._contactcalc = contactcalc

    @property
    def costforecastfieldvarcalc(self):
        """Gets the costforecastfieldvarcalc of this JobReport.  # noqa: E501


        :return: The costforecastfieldvarcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostforecastfieldvarcalc
        """
        return self._costforecastfieldvarcalc

    @costforecastfieldvarcalc.setter
    def costforecastfieldvarcalc(self, costforecastfieldvarcalc):
        """Sets the costforecastfieldvarcalc of this JobReport.


        :param costforecastfieldvarcalc: The costforecastfieldvarcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostforecastfieldvarcalc
        """

        self._costforecastfieldvarcalc = costforecastfieldvarcalc

    @property
    def costjobsupplyamtcalc(self):
        """Gets the costjobsupplyamtcalc of this JobReport.  # noqa: E501


        :return: The costjobsupplyamtcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostjobsupplyamtcalc
        """
        return self._costjobsupplyamtcalc

    @costjobsupplyamtcalc.setter
    def costjobsupplyamtcalc(self, costjobsupplyamtcalc):
        """Sets the costjobsupplyamtcalc of this JobReport.


        :param costjobsupplyamtcalc: The costjobsupplyamtcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostjobsupplyamtcalc
        """

        self._costjobsupplyamtcalc = costjobsupplyamtcalc

    @property
    def costjobsupplyamtnormcalc(self):
        """Gets the costjobsupplyamtnormcalc of this JobReport.  # noqa: E501


        :return: The costjobsupplyamtnormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostjobsupplyamtnormcalc
        """
        return self._costjobsupplyamtnormcalc

    @costjobsupplyamtnormcalc.setter
    def costjobsupplyamtnormcalc(self, costjobsupplyamtnormcalc):
        """Sets the costjobsupplyamtnormcalc of this JobReport.


        :param costjobsupplyamtnormcalc: The costjobsupplyamtnormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostjobsupplyamtnormcalc
        """

        self._costjobsupplyamtnormcalc = costjobsupplyamtnormcalc

    @property
    def costjobsupplyamttodatecalc(self):
        """Gets the costjobsupplyamttodatecalc of this JobReport.  # noqa: E501


        :return: The costjobsupplyamttodatecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostjobsupplyamttodatecalc
        """
        return self._costjobsupplyamttodatecalc

    @costjobsupplyamttodatecalc.setter
    def costjobsupplyamttodatecalc(self, costjobsupplyamttodatecalc):
        """Sets the costjobsupplyamttodatecalc of this JobReport.


        :param costjobsupplyamttodatecalc: The costjobsupplyamttodatecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostjobsupplyamttodatecalc
        """

        self._costjobsupplyamttodatecalc = costjobsupplyamttodatecalc

    @property
    def costjobsupplyamttodtncalc(self):
        """Gets the costjobsupplyamttodtncalc of this JobReport.  # noqa: E501


        :return: The costjobsupplyamttodtncalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostjobsupplyamttodtncalc
        """
        return self._costjobsupplyamttodtncalc

    @costjobsupplyamttodtncalc.setter
    def costjobsupplyamttodtncalc(self, costjobsupplyamttodtncalc):
        """Sets the costjobsupplyamttodtncalc of this JobReport.


        :param costjobsupplyamttodtncalc: The costjobsupplyamttodtncalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostjobsupplyamttodtncalc
        """

        self._costjobsupplyamttodtncalc = costjobsupplyamttodtncalc

    @property
    def costmudaddcalc(self):
        """Gets the costmudaddcalc of this JobReport.  # noqa: E501


        :return: The costmudaddcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostmudaddcalc
        """
        return self._costmudaddcalc

    @costmudaddcalc.setter
    def costmudaddcalc(self, costmudaddcalc):
        """Sets the costmudaddcalc of this JobReport.


        :param costmudaddcalc: The costmudaddcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostmudaddcalc
        """

        self._costmudaddcalc = costmudaddcalc

    @property
    def costmudaddnormcalc(self):
        """Gets the costmudaddnormcalc of this JobReport.  # noqa: E501


        :return: The costmudaddnormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostmudaddnormcalc
        """
        return self._costmudaddnormcalc

    @costmudaddnormcalc.setter
    def costmudaddnormcalc(self, costmudaddnormcalc):
        """Sets the costmudaddnormcalc of this JobReport.


        :param costmudaddnormcalc: The costmudaddnormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostmudaddnormcalc
        """

        self._costmudaddnormcalc = costmudaddnormcalc

    @property
    def costmudaddtodatecalc(self):
        """Gets the costmudaddtodatecalc of this JobReport.  # noqa: E501


        :return: The costmudaddtodatecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostmudaddtodatecalc
        """
        return self._costmudaddtodatecalc

    @costmudaddtodatecalc.setter
    def costmudaddtodatecalc(self, costmudaddtodatecalc):
        """Sets the costmudaddtodatecalc of this JobReport.


        :param costmudaddtodatecalc: The costmudaddtodatecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostmudaddtodatecalc
        """

        self._costmudaddtodatecalc = costmudaddtodatecalc

    @property
    def costmudaddtodatenormcalc(self):
        """Gets the costmudaddtodatenormcalc of this JobReport.  # noqa: E501


        :return: The costmudaddtodatenormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostmudaddtodatenormcalc
        """
        return self._costmudaddtodatenormcalc

    @costmudaddtodatenormcalc.setter
    def costmudaddtodatenormcalc(self, costmudaddtodatenormcalc):
        """Sets the costmudaddtodatenormcalc of this JobReport.


        :param costmudaddtodatenormcalc: The costmudaddtodatenormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostmudaddtodatenormcalc
        """

        self._costmudaddtodatenormcalc = costmudaddtodatenormcalc

    @property
    def costnormforecastfieldvarcalc(self):
        """Gets the costnormforecastfieldvarcalc of this JobReport.  # noqa: E501


        :return: The costnormforecastfieldvarcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostnormforecastfieldvarcalc
        """
        return self._costnormforecastfieldvarcalc

    @costnormforecastfieldvarcalc.setter
    def costnormforecastfieldvarcalc(self, costnormforecastfieldvarcalc):
        """Sets the costnormforecastfieldvarcalc of this JobReport.


        :param costnormforecastfieldvarcalc: The costnormforecastfieldvarcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostnormforecastfieldvarcalc
        """

        self._costnormforecastfieldvarcalc = costnormforecastfieldvarcalc

    @property
    def costperdepthcalc(self):
        """Gets the costperdepthcalc of this JobReport.  # noqa: E501


        :return: The costperdepthcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostperdepthcalc
        """
        return self._costperdepthcalc

    @costperdepthcalc.setter
    def costperdepthcalc(self, costperdepthcalc):
        """Sets the costperdepthcalc of this JobReport.


        :param costperdepthcalc: The costperdepthcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostperdepthcalc
        """

        self._costperdepthcalc = costperdepthcalc

    @property
    def costperdepthcumcalc(self):
        """Gets the costperdepthcumcalc of this JobReport.  # noqa: E501


        :return: The costperdepthcumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostperdepthcumcalc
        """
        return self._costperdepthcumcalc

    @costperdepthcumcalc.setter
    def costperdepthcumcalc(self, costperdepthcumcalc):
        """Sets the costperdepthcumcalc of this JobReport.


        :param costperdepthcumcalc: The costperdepthcumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostperdepthcumcalc
        """

        self._costperdepthcumcalc = costperdepthcumcalc

    @property
    def costperdepthnormcalc(self):
        """Gets the costperdepthnormcalc of this JobReport.  # noqa: E501


        :return: The costperdepthnormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostperdepthnormcalc
        """
        return self._costperdepthnormcalc

    @costperdepthnormcalc.setter
    def costperdepthnormcalc(self, costperdepthnormcalc):
        """Sets the costperdepthnormcalc of this JobReport.


        :param costperdepthnormcalc: The costperdepthnormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostperdepthnormcalc
        """

        self._costperdepthnormcalc = costperdepthnormcalc

    @property
    def costperdepthvarcalc(self):
        """Gets the costperdepthvarcalc of this JobReport.  # noqa: E501


        :return: The costperdepthvarcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostperdepthvarcalc
        """
        return self._costperdepthvarcalc

    @costperdepthvarcalc.setter
    def costperdepthvarcalc(self, costperdepthvarcalc):
        """Sets the costperdepthvarcalc of this JobReport.


        :param costperdepthvarcalc: The costperdepthvarcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostperdepthvarcalc
        """

        self._costperdepthvarcalc = costperdepthvarcalc

    @property
    def costpertldurcalc(self):
        """Gets the costpertldurcalc of this JobReport.  # noqa: E501


        :return: The costpertldurcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostpertldurcalc
        """
        return self._costpertldurcalc

    @costpertldurcalc.setter
    def costpertldurcalc(self, costpertldurcalc):
        """Sets the costpertldurcalc of this JobReport.


        :param costpertldurcalc: The costpertldurcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostpertldurcalc
        """

        self._costpertldurcalc = costpertldurcalc

    @property
    def costpertldurnormcalc(self):
        """Gets the costpertldurnormcalc of this JobReport.  # noqa: E501


        :return: The costpertldurnormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostpertldurnormcalc
        """
        return self._costpertldurnormcalc

    @costpertldurnormcalc.setter
    def costpertldurnormcalc(self, costpertldurnormcalc):
        """Sets the costpertldurnormcalc of this JobReport.


        :param costpertldurnormcalc: The costpertldurnormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostpertldurnormcalc
        """

        self._costpertldurnormcalc = costpertldurnormcalc

    @property
    def costprojectedmaxjobcalc(self):
        """Gets the costprojectedmaxjobcalc of this JobReport.  # noqa: E501


        :return: The costprojectedmaxjobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedmaxjobcalc
        """
        return self._costprojectedmaxjobcalc

    @costprojectedmaxjobcalc.setter
    def costprojectedmaxjobcalc(self, costprojectedmaxjobcalc):
        """Sets the costprojectedmaxjobcalc of this JobReport.


        :param costprojectedmaxjobcalc: The costprojectedmaxjobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedmaxjobcalc
        """

        self._costprojectedmaxjobcalc = costprojectedmaxjobcalc

    @property
    def costprojectedmaxjobnormcalc(self):
        """Gets the costprojectedmaxjobnormcalc of this JobReport.  # noqa: E501


        :return: The costprojectedmaxjobnormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedmaxjobnormcalc
        """
        return self._costprojectedmaxjobnormcalc

    @costprojectedmaxjobnormcalc.setter
    def costprojectedmaxjobnormcalc(self, costprojectedmaxjobnormcalc):
        """Sets the costprojectedmaxjobnormcalc of this JobReport.


        :param costprojectedmaxjobnormcalc: The costprojectedmaxjobnormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedmaxjobnormcalc
        """

        self._costprojectedmaxjobnormcalc = costprojectedmaxjobnormcalc

    @property
    def costprojectedmaxphasecalc(self):
        """Gets the costprojectedmaxphasecalc of this JobReport.  # noqa: E501


        :return: The costprojectedmaxphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedmaxphasecalc
        """
        return self._costprojectedmaxphasecalc

    @costprojectedmaxphasecalc.setter
    def costprojectedmaxphasecalc(self, costprojectedmaxphasecalc):
        """Sets the costprojectedmaxphasecalc of this JobReport.


        :param costprojectedmaxphasecalc: The costprojectedmaxphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedmaxphasecalc
        """

        self._costprojectedmaxphasecalc = costprojectedmaxphasecalc

    @property
    def costprojectedmaxphasenormcalc(self):
        """Gets the costprojectedmaxphasenormcalc of this JobReport.  # noqa: E501


        :return: The costprojectedmaxphasenormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedmaxphasenormcalc
        """
        return self._costprojectedmaxphasenormcalc

    @costprojectedmaxphasenormcalc.setter
    def costprojectedmaxphasenormcalc(self, costprojectedmaxphasenormcalc):
        """Sets the costprojectedmaxphasenormcalc of this JobReport.


        :param costprojectedmaxphasenormcalc: The costprojectedmaxphasenormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedmaxphasenormcalc
        """

        self._costprojectedmaxphasenormcalc = costprojectedmaxphasenormcalc

    @property
    def costprojectedminjobcalc(self):
        """Gets the costprojectedminjobcalc of this JobReport.  # noqa: E501


        :return: The costprojectedminjobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedminjobcalc
        """
        return self._costprojectedminjobcalc

    @costprojectedminjobcalc.setter
    def costprojectedminjobcalc(self, costprojectedminjobcalc):
        """Sets the costprojectedminjobcalc of this JobReport.


        :param costprojectedminjobcalc: The costprojectedminjobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedminjobcalc
        """

        self._costprojectedminjobcalc = costprojectedminjobcalc

    @property
    def costprojectedminjobnormcalc(self):
        """Gets the costprojectedminjobnormcalc of this JobReport.  # noqa: E501


        :return: The costprojectedminjobnormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedminjobnormcalc
        """
        return self._costprojectedminjobnormcalc

    @costprojectedminjobnormcalc.setter
    def costprojectedminjobnormcalc(self, costprojectedminjobnormcalc):
        """Sets the costprojectedminjobnormcalc of this JobReport.


        :param costprojectedminjobnormcalc: The costprojectedminjobnormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedminjobnormcalc
        """

        self._costprojectedminjobnormcalc = costprojectedminjobnormcalc

    @property
    def costprojectedminphasecalc(self):
        """Gets the costprojectedminphasecalc of this JobReport.  # noqa: E501


        :return: The costprojectedminphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedminphasecalc
        """
        return self._costprojectedminphasecalc

    @costprojectedminphasecalc.setter
    def costprojectedminphasecalc(self, costprojectedminphasecalc):
        """Sets the costprojectedminphasecalc of this JobReport.


        :param costprojectedminphasecalc: The costprojectedminphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedminphasecalc
        """

        self._costprojectedminphasecalc = costprojectedminphasecalc

    @property
    def costprojectedminphasenormcalc(self):
        """Gets the costprojectedminphasenormcalc of this JobReport.  # noqa: E501


        :return: The costprojectedminphasenormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedminphasenormcalc
        """
        return self._costprojectedminphasenormcalc

    @costprojectedminphasenormcalc.setter
    def costprojectedminphasenormcalc(self, costprojectedminphasenormcalc):
        """Sets the costprojectedminphasenormcalc of this JobReport.


        :param costprojectedminphasenormcalc: The costprojectedminphasenormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedminphasenormcalc
        """

        self._costprojectedminphasenormcalc = costprojectedminphasenormcalc

    @property
    def costprojectedmljobcalc(self):
        """Gets the costprojectedmljobcalc of this JobReport.  # noqa: E501


        :return: The costprojectedmljobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedmljobcalc
        """
        return self._costprojectedmljobcalc

    @costprojectedmljobcalc.setter
    def costprojectedmljobcalc(self, costprojectedmljobcalc):
        """Sets the costprojectedmljobcalc of this JobReport.


        :param costprojectedmljobcalc: The costprojectedmljobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedmljobcalc
        """

        self._costprojectedmljobcalc = costprojectedmljobcalc

    @property
    def costprojectedmljobnormcalc(self):
        """Gets the costprojectedmljobnormcalc of this JobReport.  # noqa: E501


        :return: The costprojectedmljobnormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedmljobnormcalc
        """
        return self._costprojectedmljobnormcalc

    @costprojectedmljobnormcalc.setter
    def costprojectedmljobnormcalc(self, costprojectedmljobnormcalc):
        """Sets the costprojectedmljobnormcalc of this JobReport.


        :param costprojectedmljobnormcalc: The costprojectedmljobnormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedmljobnormcalc
        """

        self._costprojectedmljobnormcalc = costprojectedmljobnormcalc

    @property
    def costprojectedmlphasecalc(self):
        """Gets the costprojectedmlphasecalc of this JobReport.  # noqa: E501


        :return: The costprojectedmlphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedmlphasecalc
        """
        return self._costprojectedmlphasecalc

    @costprojectedmlphasecalc.setter
    def costprojectedmlphasecalc(self, costprojectedmlphasecalc):
        """Sets the costprojectedmlphasecalc of this JobReport.


        :param costprojectedmlphasecalc: The costprojectedmlphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedmlphasecalc
        """

        self._costprojectedmlphasecalc = costprojectedmlphasecalc

    @property
    def costprojectedmlphasenormcalc(self):
        """Gets the costprojectedmlphasenormcalc of this JobReport.  # noqa: E501


        :return: The costprojectedmlphasenormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedmlphasenormcalc
        """
        return self._costprojectedmlphasenormcalc

    @costprojectedmlphasenormcalc.setter
    def costprojectedmlphasenormcalc(self, costprojectedmlphasenormcalc):
        """Sets the costprojectedmlphasenormcalc of this JobReport.


        :param costprojectedmlphasenormcalc: The costprojectedmlphasenormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedmlphasenormcalc
        """

        self._costprojectedmlphasenormcalc = costprojectedmlphasenormcalc

    @property
    def costprojectedtljobcalc(self):
        """Gets the costprojectedtljobcalc of this JobReport.  # noqa: E501


        :return: The costprojectedtljobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedtljobcalc
        """
        return self._costprojectedtljobcalc

    @costprojectedtljobcalc.setter
    def costprojectedtljobcalc(self, costprojectedtljobcalc):
        """Sets the costprojectedtljobcalc of this JobReport.


        :param costprojectedtljobcalc: The costprojectedtljobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedtljobcalc
        """

        self._costprojectedtljobcalc = costprojectedtljobcalc

    @property
    def costprojectedtljobnormcalc(self):
        """Gets the costprojectedtljobnormcalc of this JobReport.  # noqa: E501


        :return: The costprojectedtljobnormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedtljobnormcalc
        """
        return self._costprojectedtljobnormcalc

    @costprojectedtljobnormcalc.setter
    def costprojectedtljobnormcalc(self, costprojectedtljobnormcalc):
        """Sets the costprojectedtljobnormcalc of this JobReport.


        :param costprojectedtljobnormcalc: The costprojectedtljobnormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedtljobnormcalc
        """

        self._costprojectedtljobnormcalc = costprojectedtljobnormcalc

    @property
    def costprojectedtlphasecalc(self):
        """Gets the costprojectedtlphasecalc of this JobReport.  # noqa: E501


        :return: The costprojectedtlphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedtlphasecalc
        """
        return self._costprojectedtlphasecalc

    @costprojectedtlphasecalc.setter
    def costprojectedtlphasecalc(self, costprojectedtlphasecalc):
        """Sets the costprojectedtlphasecalc of this JobReport.


        :param costprojectedtlphasecalc: The costprojectedtlphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedtlphasecalc
        """

        self._costprojectedtlphasecalc = costprojectedtlphasecalc

    @property
    def costprojectedtlphasenormcalc(self):
        """Gets the costprojectedtlphasenormcalc of this JobReport.  # noqa: E501


        :return: The costprojectedtlphasenormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCostprojectedtlphasenormcalc
        """
        return self._costprojectedtlphasenormcalc

    @costprojectedtlphasenormcalc.setter
    def costprojectedtlphasenormcalc(self, costprojectedtlphasenormcalc):
        """Sets the costprojectedtlphasenormcalc of this JobReport.


        :param costprojectedtlphasenormcalc: The costprojectedtlphasenormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCostprojectedtlphasenormcalc
        """

        self._costprojectedtlphasenormcalc = costprojectedtlphasenormcalc

    @property
    def costtodatecalc(self):
        """Gets the costtodatecalc of this JobReport.  # noqa: E501


        :return: The costtodatecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCosttodatecalc
        """
        return self._costtodatecalc

    @costtodatecalc.setter
    def costtodatecalc(self, costtodatecalc):
        """Sets the costtodatecalc of this JobReport.


        :param costtodatecalc: The costtodatecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCosttodatecalc
        """

        self._costtodatecalc = costtodatecalc

    @property
    def costtodatenormcalc(self):
        """Gets the costtodatenormcalc of this JobReport.  # noqa: E501


        :return: The costtodatenormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCosttodatenormcalc
        """
        return self._costtodatenormcalc

    @costtodatenormcalc.setter
    def costtodatenormcalc(self, costtodatenormcalc):
        """Sets the costtodatenormcalc of this JobReport.


        :param costtodatenormcalc: The costtodatenormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCosttodatenormcalc
        """

        self._costtodatenormcalc = costtodatenormcalc

    @property
    def costtotalcalc(self):
        """Gets the costtotalcalc of this JobReport.  # noqa: E501


        :return: The costtotalcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCosttotalcalc
        """
        return self._costtotalcalc

    @costtotalcalc.setter
    def costtotalcalc(self, costtotalcalc):
        """Sets the costtotalcalc of this JobReport.


        :param costtotalcalc: The costtotalcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCosttotalcalc
        """

        self._costtotalcalc = costtotalcalc

    @property
    def costtotalnormcalc(self):
        """Gets the costtotalnormcalc of this JobReport.  # noqa: E501


        :return: The costtotalnormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportCosttotalnormcalc
        """
        return self._costtotalnormcalc

    @costtotalnormcalc.setter
    def costtotalnormcalc(self, costtotalnormcalc):
        """Sets the costtotalnormcalc of this JobReport.


        :param costtotalnormcalc: The costtotalnormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportCosttotalnormcalc
        """

        self._costtotalnormcalc = costtotalnormcalc

    @property
    def daysfromspudcalc(self):
        """Gets the daysfromspudcalc of this JobReport.  # noqa: E501


        :return: The daysfromspudcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDaysfromspudcalc
        """
        return self._daysfromspudcalc

    @daysfromspudcalc.setter
    def daysfromspudcalc(self, daysfromspudcalc):
        """Sets the daysfromspudcalc of this JobReport.


        :param daysfromspudcalc: The daysfromspudcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDaysfromspudcalc
        """

        self._daysfromspudcalc = daysfromspudcalc

    @property
    def daysfromspudtorrcalc(self):
        """Gets the daysfromspudtorrcalc of this JobReport.  # noqa: E501


        :return: The daysfromspudtorrcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDaysfromspudtorrcalc
        """
        return self._daysfromspudtorrcalc

    @daysfromspudtorrcalc.setter
    def daysfromspudtorrcalc(self, daysfromspudtorrcalc):
        """Sets the daysfromspudtorrcalc of this JobReport.


        :param daysfromspudtorrcalc: The daysfromspudtorrcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDaysfromspudtorrcalc
        """

        self._daysfromspudtorrcalc = daysfromspudtorrcalc

    @property
    def depthenddpcalc(self):
        """Gets the depthenddpcalc of this JobReport.  # noqa: E501


        :return: The depthenddpcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDepthenddpcalc
        """
        return self._depthenddpcalc

    @depthenddpcalc.setter
    def depthenddpcalc(self, depthenddpcalc):
        """Sets the depthenddpcalc of this JobReport.


        :param depthenddpcalc: The depthenddpcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDepthenddpcalc
        """

        self._depthenddpcalc = depthenddpcalc

    @property
    def depthenddpcumcalc(self):
        """Gets the depthenddpcumcalc of this JobReport.  # noqa: E501


        :return: The depthenddpcumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDepthenddpcumcalc
        """
        return self._depthenddpcumcalc

    @depthenddpcumcalc.setter
    def depthenddpcumcalc(self, depthenddpcumcalc):
        """Sets the depthenddpcumcalc of this JobReport.


        :param depthenddpcumcalc: The depthenddpcumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDepthenddpcumcalc
        """

        self._depthenddpcumcalc = depthenddpcumcalc

    @property
    def depthenddpnullcalc(self):
        """Gets the depthenddpnullcalc of this JobReport.  # noqa: E501


        :return: The depthenddpnullcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDepthenddpnullcalc
        """
        return self._depthenddpnullcalc

    @depthenddpnullcalc.setter
    def depthenddpnullcalc(self, depthenddpnullcalc):
        """Sets the depthenddpnullcalc of this JobReport.


        :param depthenddpnullcalc: The depthenddpnullcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDepthenddpnullcalc
        """

        self._depthenddpnullcalc = depthenddpnullcalc

    @property
    def depthnetprogressdpcalc(self):
        """Gets the depthnetprogressdpcalc of this JobReport.  # noqa: E501


        :return: The depthnetprogressdpcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDepthnetprogressdpcalc
        """
        return self._depthnetprogressdpcalc

    @depthnetprogressdpcalc.setter
    def depthnetprogressdpcalc(self, depthnetprogressdpcalc):
        """Sets the depthnetprogressdpcalc of this JobReport.


        :param depthnetprogressdpcalc: The depthnetprogressdpcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDepthnetprogressdpcalc
        """

        self._depthnetprogressdpcalc = depthnetprogressdpcalc

    @property
    def depthperdurcalc(self):
        """Gets the depthperdurcalc of this JobReport.  # noqa: E501


        :return: The depthperdurcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDepthperdurcalc
        """
        return self._depthperdurcalc

    @depthperdurcalc.setter
    def depthperdurcalc(self, depthperdurcalc):
        """Sets the depthperdurcalc of this JobReport.


        :param depthperdurcalc: The depthperdurcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDepthperdurcalc
        """

        self._depthperdurcalc = depthperdurcalc

    @property
    def depthperdurvarcalc(self):
        """Gets the depthperdurvarcalc of this JobReport.  # noqa: E501


        :return: The depthperdurvarcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDepthperdurvarcalc
        """
        return self._depthperdurvarcalc

    @depthperdurvarcalc.setter
    def depthperdurvarcalc(self, depthperdurvarcalc):
        """Sets the depthperdurvarcalc of this JobReport.


        :param depthperdurvarcalc: The depthperdurvarcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDepthperdurvarcalc
        """

        self._depthperdurvarcalc = depthperdurvarcalc

    @property
    def depthprogressdpcalc(self):
        """Gets the depthprogressdpcalc of this JobReport.  # noqa: E501


        :return: The depthprogressdpcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDepthprogressdpcalc
        """
        return self._depthprogressdpcalc

    @depthprogressdpcalc.setter
    def depthprogressdpcalc(self, depthprogressdpcalc):
        """Sets the depthprogressdpcalc of this JobReport.


        :param depthprogressdpcalc: The depthprogressdpcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDepthprogressdpcalc
        """

        self._depthprogressdpcalc = depthprogressdpcalc

    @property
    def depthrotatingcalc(self):
        """Gets the depthrotatingcalc of this JobReport.  # noqa: E501


        :return: The depthrotatingcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDepthrotatingcalc
        """
        return self._depthrotatingcalc

    @depthrotatingcalc.setter
    def depthrotatingcalc(self, depthrotatingcalc):
        """Sets the depthrotatingcalc of this JobReport.


        :param depthrotatingcalc: The depthrotatingcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDepthrotatingcalc
        """

        self._depthrotatingcalc = depthrotatingcalc

    @property
    def depthslidingcalc(self):
        """Gets the depthslidingcalc of this JobReport.  # noqa: E501


        :return: The depthslidingcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDepthslidingcalc
        """
        return self._depthslidingcalc

    @depthslidingcalc.setter
    def depthslidingcalc(self, depthslidingcalc):
        """Sets the depthslidingcalc of this JobReport.


        :param depthslidingcalc: The depthslidingcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDepthslidingcalc
        """

        self._depthslidingcalc = depthslidingcalc

    @property
    def depthstartdpcalc(self):
        """Gets the depthstartdpcalc of this JobReport.  # noqa: E501


        :return: The depthstartdpcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDepthstartdpcalc
        """
        return self._depthstartdpcalc

    @depthstartdpcalc.setter
    def depthstartdpcalc(self, depthstartdpcalc):
        """Sets the depthstartdpcalc of this JobReport.


        :param depthstartdpcalc: The depthstartdpcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDepthstartdpcalc
        """

        self._depthstartdpcalc = depthstartdpcalc

    @property
    def depthstartdpnullcalc(self):
        """Gets the depthstartdpnullcalc of this JobReport.  # noqa: E501


        :return: The depthstartdpnullcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDepthstartdpnullcalc
        """
        return self._depthstartdpnullcalc

    @depthstartdpnullcalc.setter
    def depthstartdpnullcalc(self, depthstartdpnullcalc):
        """Sets the depthstartdpnullcalc of this JobReport.


        :param depthstartdpnullcalc: The depthstartdpnullcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDepthstartdpnullcalc
        """

        self._depthstartdpnullcalc = depthstartdpnullcalc

    @property
    def depthtvdenddpcalc(self):
        """Gets the depthtvdenddpcalc of this JobReport.  # noqa: E501


        :return: The depthtvdenddpcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDepthtvdenddpcalc
        """
        return self._depthtvdenddpcalc

    @depthtvdenddpcalc.setter
    def depthtvdenddpcalc(self, depthtvdenddpcalc):
        """Sets the depthtvdenddpcalc of this JobReport.


        :param depthtvdenddpcalc: The depthtvdenddpcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDepthtvdenddpcalc
        """

        self._depthtvdenddpcalc = depthtvdenddpcalc

    @property
    def depthtvdendprojmethod(self):
        """Gets the depthtvdendprojmethod of this JobReport.  # noqa: E501


        :return: The depthtvdendprojmethod of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._depthtvdendprojmethod

    @depthtvdendprojmethod.setter
    def depthtvdendprojmethod(self, depthtvdendprojmethod):
        """Sets the depthtvdendprojmethod of this JobReport.


        :param depthtvdendprojmethod: The depthtvdendprojmethod of this JobReport.  # noqa: E501
        :type: str
        """

        self._depthtvdendprojmethod = depthtvdendprojmethod

    @property
    def depthtvdstartdpcalc(self):
        """Gets the depthtvdstartdpcalc of this JobReport.  # noqa: E501


        :return: The depthtvdstartdpcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDepthtvdstartdpcalc
        """
        return self._depthtvdstartdpcalc

    @depthtvdstartdpcalc.setter
    def depthtvdstartdpcalc(self, depthtvdstartdpcalc):
        """Sets the depthtvdstartdpcalc of this JobReport.


        :param depthtvdstartdpcalc: The depthtvdstartdpcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDepthtvdstartdpcalc
        """

        self._depthtvdstartdpcalc = depthtvdstartdpcalc

    @property
    def dttmend(self):
        """Gets the dttmend of this JobReport.  # noqa: E501


        :return: The dttmend of this JobReport.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmend

    @dttmend.setter
    def dttmend(self, dttmend):
        """Sets the dttmend of this JobReport.


        :param dttmend: The dttmend of this JobReport.  # noqa: E501
        :type: datetime
        """

        self._dttmend = dttmend

    @property
    def dttmprojendmaxjobcalc(self):
        """Gets the dttmprojendmaxjobcalc of this JobReport.  # noqa: E501


        :return: The dttmprojendmaxjobcalc of this JobReport.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmprojendmaxjobcalc

    @dttmprojendmaxjobcalc.setter
    def dttmprojendmaxjobcalc(self, dttmprojendmaxjobcalc):
        """Sets the dttmprojendmaxjobcalc of this JobReport.


        :param dttmprojendmaxjobcalc: The dttmprojendmaxjobcalc of this JobReport.  # noqa: E501
        :type: datetime
        """

        self._dttmprojendmaxjobcalc = dttmprojendmaxjobcalc

    @property
    def dttmprojendmaxphasecalc(self):
        """Gets the dttmprojendmaxphasecalc of this JobReport.  # noqa: E501


        :return: The dttmprojendmaxphasecalc of this JobReport.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmprojendmaxphasecalc

    @dttmprojendmaxphasecalc.setter
    def dttmprojendmaxphasecalc(self, dttmprojendmaxphasecalc):
        """Sets the dttmprojendmaxphasecalc of this JobReport.


        :param dttmprojendmaxphasecalc: The dttmprojendmaxphasecalc of this JobReport.  # noqa: E501
        :type: datetime
        """

        self._dttmprojendmaxphasecalc = dttmprojendmaxphasecalc

    @property
    def dttmprojendminjobcalc(self):
        """Gets the dttmprojendminjobcalc of this JobReport.  # noqa: E501


        :return: The dttmprojendminjobcalc of this JobReport.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmprojendminjobcalc

    @dttmprojendminjobcalc.setter
    def dttmprojendminjobcalc(self, dttmprojendminjobcalc):
        """Sets the dttmprojendminjobcalc of this JobReport.


        :param dttmprojendminjobcalc: The dttmprojendminjobcalc of this JobReport.  # noqa: E501
        :type: datetime
        """

        self._dttmprojendminjobcalc = dttmprojendminjobcalc

    @property
    def dttmprojendminphasecalc(self):
        """Gets the dttmprojendminphasecalc of this JobReport.  # noqa: E501


        :return: The dttmprojendminphasecalc of this JobReport.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmprojendminphasecalc

    @dttmprojendminphasecalc.setter
    def dttmprojendminphasecalc(self, dttmprojendminphasecalc):
        """Sets the dttmprojendminphasecalc of this JobReport.


        :param dttmprojendminphasecalc: The dttmprojendminphasecalc of this JobReport.  # noqa: E501
        :type: datetime
        """

        self._dttmprojendminphasecalc = dttmprojendminphasecalc

    @property
    def dttmprojendmljobcalc(self):
        """Gets the dttmprojendmljobcalc of this JobReport.  # noqa: E501


        :return: The dttmprojendmljobcalc of this JobReport.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmprojendmljobcalc

    @dttmprojendmljobcalc.setter
    def dttmprojendmljobcalc(self, dttmprojendmljobcalc):
        """Sets the dttmprojendmljobcalc of this JobReport.


        :param dttmprojendmljobcalc: The dttmprojendmljobcalc of this JobReport.  # noqa: E501
        :type: datetime
        """

        self._dttmprojendmljobcalc = dttmprojendmljobcalc

    @property
    def dttmprojendmlphasecalc(self):
        """Gets the dttmprojendmlphasecalc of this JobReport.  # noqa: E501


        :return: The dttmprojendmlphasecalc of this JobReport.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmprojendmlphasecalc

    @dttmprojendmlphasecalc.setter
    def dttmprojendmlphasecalc(self, dttmprojendmlphasecalc):
        """Sets the dttmprojendmlphasecalc of this JobReport.


        :param dttmprojendmlphasecalc: The dttmprojendmlphasecalc of this JobReport.  # noqa: E501
        :type: datetime
        """

        self._dttmprojendmlphasecalc = dttmprojendmlphasecalc

    @property
    def dttmprojendtljobcalc(self):
        """Gets the dttmprojendtljobcalc of this JobReport.  # noqa: E501


        :return: The dttmprojendtljobcalc of this JobReport.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmprojendtljobcalc

    @dttmprojendtljobcalc.setter
    def dttmprojendtljobcalc(self, dttmprojendtljobcalc):
        """Sets the dttmprojendtljobcalc of this JobReport.


        :param dttmprojendtljobcalc: The dttmprojendtljobcalc of this JobReport.  # noqa: E501
        :type: datetime
        """

        self._dttmprojendtljobcalc = dttmprojendtljobcalc

    @property
    def dttmprojendtlphasecalc(self):
        """Gets the dttmprojendtlphasecalc of this JobReport.  # noqa: E501


        :return: The dttmprojendtlphasecalc of this JobReport.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmprojendtlphasecalc

    @dttmprojendtlphasecalc.setter
    def dttmprojendtlphasecalc(self, dttmprojendtlphasecalc):
        """Sets the dttmprojendtlphasecalc of this JobReport.


        :param dttmprojendtlphasecalc: The dttmprojendtlphasecalc of this JobReport.  # noqa: E501
        :type: datetime
        """

        self._dttmprojendtlphasecalc = dttmprojendtlphasecalc

    @property
    def dttmstart(self):
        """Gets the dttmstart of this JobReport.  # noqa: E501


        :return: The dttmstart of this JobReport.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmstart

    @dttmstart.setter
    def dttmstart(self, dttmstart):
        """Sets the dttmstart of this JobReport.


        :param dttmstart: The dttmstart of this JobReport.  # noqa: E501
        :type: datetime
        """

        self._dttmstart = dttmstart

    @property
    def durationnoprobtimecalc(self):
        """Gets the durationnoprobtimecalc of this JobReport.  # noqa: E501


        :return: The durationnoprobtimecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurationnoprobtimecalc
        """
        return self._durationnoprobtimecalc

    @durationnoprobtimecalc.setter
    def durationnoprobtimecalc(self, durationnoprobtimecalc):
        """Sets the durationnoprobtimecalc of this JobReport.


        :param durationnoprobtimecalc: The durationnoprobtimecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurationnoprobtimecalc
        """

        self._durationnoprobtimecalc = durationnoprobtimecalc

    @property
    def durationnoprobtimecumcalc(self):
        """Gets the durationnoprobtimecumcalc of this JobReport.  # noqa: E501


        :return: The durationnoprobtimecumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurationnoprobtimecumcalc
        """
        return self._durationnoprobtimecumcalc

    @durationnoprobtimecumcalc.setter
    def durationnoprobtimecumcalc(self, durationnoprobtimecumcalc):
        """Sets the durationnoprobtimecumcalc of this JobReport.


        :param durationnoprobtimecumcalc: The durationnoprobtimecumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurationnoprobtimecumcalc
        """

        self._durationnoprobtimecumcalc = durationnoprobtimecumcalc

    @property
    def durationpersonnelotcalc(self):
        """Gets the durationpersonnelotcalc of this JobReport.  # noqa: E501


        :return: The durationpersonnelotcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurationpersonnelotcalc
        """
        return self._durationpersonnelotcalc

    @durationpersonnelotcalc.setter
    def durationpersonnelotcalc(self, durationpersonnelotcalc):
        """Sets the durationpersonnelotcalc of this JobReport.


        :param durationpersonnelotcalc: The durationpersonnelotcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurationpersonnelotcalc
        """

        self._durationpersonnelotcalc = durationpersonnelotcalc

    @property
    def durationpersonnelregcalc(self):
        """Gets the durationpersonnelregcalc of this JobReport.  # noqa: E501


        :return: The durationpersonnelregcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurationpersonnelregcalc
        """
        return self._durationpersonnelregcalc

    @durationpersonnelregcalc.setter
    def durationpersonnelregcalc(self, durationpersonnelregcalc):
        """Sets the durationpersonnelregcalc of this JobReport.


        :param durationpersonnelregcalc: The durationpersonnelregcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurationpersonnelregcalc
        """

        self._durationpersonnelregcalc = durationpersonnelregcalc

    @property
    def durationpersonneltotcalc(self):
        """Gets the durationpersonneltotcalc of this JobReport.  # noqa: E501


        :return: The durationpersonneltotcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurationpersonneltotcalc
        """
        return self._durationpersonneltotcalc

    @durationpersonneltotcalc.setter
    def durationpersonneltotcalc(self, durationpersonneltotcalc):
        """Sets the durationpersonneltotcalc of this JobReport.


        :param durationpersonneltotcalc: The durationpersonneltotcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurationpersonneltotcalc
        """

        self._durationpersonneltotcalc = durationpersonneltotcalc

    @property
    def durationproblemtimecalc(self):
        """Gets the durationproblemtimecalc of this JobReport.  # noqa: E501


        :return: The durationproblemtimecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurationproblemtimecalc
        """
        return self._durationproblemtimecalc

    @durationproblemtimecalc.setter
    def durationproblemtimecalc(self, durationproblemtimecalc):
        """Sets the durationproblemtimecalc of this JobReport.


        :param durationproblemtimecalc: The durationproblemtimecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurationproblemtimecalc
        """

        self._durationproblemtimecalc = durationproblemtimecalc

    @property
    def durationproblemtimecumcalc(self):
        """Gets the durationproblemtimecumcalc of this JobReport.  # noqa: E501


        :return: The durationproblemtimecumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurationproblemtimecumcalc
        """
        return self._durationproblemtimecumcalc

    @durationproblemtimecumcalc.setter
    def durationproblemtimecumcalc(self, durationproblemtimecumcalc):
        """Sets the durationproblemtimecumcalc of this JobReport.


        :param durationproblemtimecumcalc: The durationproblemtimecumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurationproblemtimecumcalc
        """

        self._durationproblemtimecumcalc = durationproblemtimecumcalc

    @property
    def durationsinceltinc(self):
        """Gets the durationsinceltinc of this JobReport.  # noqa: E501


        :return: The durationsinceltinc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurationsinceltinc
        """
        return self._durationsinceltinc

    @durationsinceltinc.setter
    def durationsinceltinc(self, durationsinceltinc):
        """Sets the durationsinceltinc of this JobReport.


        :param durationsinceltinc: The durationsinceltinc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurationsinceltinc
        """

        self._durationsinceltinc = durationsinceltinc

    @property
    def durationsincerptinc(self):
        """Gets the durationsincerptinc of this JobReport.  # noqa: E501


        :return: The durationsincerptinc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurationsincerptinc
        """
        return self._durationsincerptinc

    @durationsincerptinc.setter
    def durationsincerptinc(self, durationsincerptinc):
        """Sets the durationsincerptinc of this JobReport.


        :param durationsincerptinc: The durationsincerptinc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurationsincerptinc
        """

        self._durationsincerptinc = durationsincerptinc

    @property
    def durationtimelogcum12hrcalc(self):
        """Gets the durationtimelogcum12hrcalc of this JobReport.  # noqa: E501


        :return: The durationtimelogcum12hrcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurationtimelogcum12hrcalc
        """
        return self._durationtimelogcum12hrcalc

    @durationtimelogcum12hrcalc.setter
    def durationtimelogcum12hrcalc(self, durationtimelogcum12hrcalc):
        """Sets the durationtimelogcum12hrcalc of this JobReport.


        :param durationtimelogcum12hrcalc: The durationtimelogcum12hrcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurationtimelogcum12hrcalc
        """

        self._durationtimelogcum12hrcalc = durationtimelogcum12hrcalc

    @property
    def durationtimelogcumspudcalc(self):
        """Gets the durationtimelogcumspudcalc of this JobReport.  # noqa: E501


        :return: The durationtimelogcumspudcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurationtimelogcumspudcalc
        """
        return self._durationtimelogcumspudcalc

    @durationtimelogcumspudcalc.setter
    def durationtimelogcumspudcalc(self, durationtimelogcumspudcalc):
        """Sets the durationtimelogcumspudcalc of this JobReport.


        :param durationtimelogcumspudcalc: The durationtimelogcumspudcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurationtimelogcumspudcalc
        """

        self._durationtimelogcumspudcalc = durationtimelogcumspudcalc

    @property
    def durationtimelogcumspudrrcalc(self):
        """Gets the durationtimelogcumspudrrcalc of this JobReport.  # noqa: E501


        :return: The durationtimelogcumspudrrcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurationtimelogcumspudrrcalc
        """
        return self._durationtimelogcumspudrrcalc

    @durationtimelogcumspudrrcalc.setter
    def durationtimelogcumspudrrcalc(self, durationtimelogcumspudrrcalc):
        """Sets the durationtimelogcumspudrrcalc of this JobReport.


        :param durationtimelogcumspudrrcalc: The durationtimelogcumspudrrcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurationtimelogcumspudrrcalc
        """

        self._durationtimelogcumspudrrcalc = durationtimelogcumspudrrcalc

    @property
    def durationtimelogtotalcalc(self):
        """Gets the durationtimelogtotalcalc of this JobReport.  # noqa: E501


        :return: The durationtimelogtotalcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurationtimelogtotalcalc
        """
        return self._durationtimelogtotalcalc

    @durationtimelogtotalcalc.setter
    def durationtimelogtotalcalc(self, durationtimelogtotalcalc):
        """Sets the durationtimelogtotalcalc of this JobReport.


        :param durationtimelogtotalcalc: The durationtimelogtotalcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurationtimelogtotalcalc
        """

        self._durationtimelogtotalcalc = durationtimelogtotalcalc

    @property
    def durationtimelogtotcumcalc(self):
        """Gets the durationtimelogtotcumcalc of this JobReport.  # noqa: E501


        :return: The durationtimelogtotcumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurationtimelogtotcumcalc
        """
        return self._durationtimelogtotcumcalc

    @durationtimelogtotcumcalc.setter
    def durationtimelogtotcumcalc(self, durationtimelogtotcumcalc):
        """Sets the durationtimelogtotcumcalc of this JobReport.


        :param durationtimelogtotcumcalc: The durationtimelogtotcumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurationtimelogtotcumcalc
        """

        self._durationtimelogtotcumcalc = durationtimelogtotcumcalc

    @property
    def durlastsinccalc(self):
        """Gets the durlastsinccalc of this JobReport.  # noqa: E501


        :return: The durlastsinccalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurlastsinccalc
        """
        return self._durlastsinccalc

    @durlastsinccalc.setter
    def durlastsinccalc(self, durlastsinccalc):
        """Sets the durlastsinccalc of this JobReport.


        :param durlastsinccalc: The durlastsinccalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurlastsinccalc
        """

        self._durlastsinccalc = durlastsinccalc

    @property
    def durlastsincreportcalc(self):
        """Gets the durlastsincreportcalc of this JobReport.  # noqa: E501


        :return: The durlastsincreportcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurlastsincreportcalc
        """
        return self._durlastsincreportcalc

    @durlastsincreportcalc.setter
    def durlastsincreportcalc(self, durlastsincreportcalc):
        """Sets the durlastsincreportcalc of this JobReport.


        :param durlastsincreportcalc: The durlastsincreportcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurlastsincreportcalc
        """

        self._durlastsincreportcalc = durlastsincreportcalc

    @property
    def durlastsincreportrptdaycalc(self):
        """Gets the durlastsincreportrptdaycalc of this JobReport.  # noqa: E501


        :return: The durlastsincreportrptdaycalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurlastsincreportrptdaycalc
        """
        return self._durlastsincreportrptdaycalc

    @durlastsincreportrptdaycalc.setter
    def durlastsincreportrptdaycalc(self, durlastsincreportrptdaycalc):
        """Sets the durlastsincreportrptdaycalc of this JobReport.


        :param durlastsincreportrptdaycalc: The durlastsincreportrptdaycalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurlastsincreportrptdaycalc
        """

        self._durlastsincreportrptdaycalc = durlastsincreportrptdaycalc

    @property
    def durlastsincrptdaycalc(self):
        """Gets the durlastsincrptdaycalc of this JobReport.  # noqa: E501


        :return: The durlastsincrptdaycalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurlastsincrptdaycalc
        """
        return self._durlastsincrptdaycalc

    @durlastsincrptdaycalc.setter
    def durlastsincrptdaycalc(self, durlastsincrptdaycalc):
        """Sets the durlastsincrptdaycalc of this JobReport.


        :param durlastsincrptdaycalc: The durlastsincrptdaycalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurlastsincrptdaycalc
        """

        self._durlastsincrptdaycalc = durlastsincrptdaycalc

    @property
    def durnoprobtimecumdayscalc(self):
        """Gets the durnoprobtimecumdayscalc of this JobReport.  # noqa: E501


        :return: The durnoprobtimecumdayscalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurnoprobtimecumdayscalc
        """
        return self._durnoprobtimecumdayscalc

    @durnoprobtimecumdayscalc.setter
    def durnoprobtimecumdayscalc(self, durnoprobtimecumdayscalc):
        """Sets the durnoprobtimecumdayscalc of this JobReport.


        :param durnoprobtimecumdayscalc: The durnoprobtimecumdayscalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurnoprobtimecumdayscalc
        """

        self._durnoprobtimecumdayscalc = durnoprobtimecumdayscalc

    @property
    def duroffbtmcalc(self):
        """Gets the duroffbtmcalc of this JobReport.  # noqa: E501


        :return: The duroffbtmcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDuroffbtmcalc
        """
        return self._duroffbtmcalc

    @duroffbtmcalc.setter
    def duroffbtmcalc(self, duroffbtmcalc):
        """Sets the duroffbtmcalc of this JobReport.


        :param duroffbtmcalc: The duroffbtmcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDuroffbtmcalc
        """

        self._duroffbtmcalc = duroffbtmcalc

    @property
    def duronbtmcalc(self):
        """Gets the duronbtmcalc of this JobReport.  # noqa: E501


        :return: The duronbtmcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDuronbtmcalc
        """
        return self._duronbtmcalc

    @duronbtmcalc.setter
    def duronbtmcalc(self, duronbtmcalc):
        """Sets the duronbtmcalc of this JobReport.


        :param duronbtmcalc: The duronbtmcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDuronbtmcalc
        """

        self._duronbtmcalc = duronbtmcalc

    @property
    def durpersonnelotcumcalc(self):
        """Gets the durpersonnelotcumcalc of this JobReport.  # noqa: E501


        :return: The durpersonnelotcumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurpersonnelotcumcalc
        """
        return self._durpersonnelotcumcalc

    @durpersonnelotcumcalc.setter
    def durpersonnelotcumcalc(self, durpersonnelotcumcalc):
        """Sets the durpersonnelotcumcalc of this JobReport.


        :param durpersonnelotcumcalc: The durpersonnelotcumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurpersonnelotcumcalc
        """

        self._durpersonnelotcumcalc = durpersonnelotcumcalc

    @property
    def durpersonnelregcumcalc(self):
        """Gets the durpersonnelregcumcalc of this JobReport.  # noqa: E501


        :return: The durpersonnelregcumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurpersonnelregcumcalc
        """
        return self._durpersonnelregcumcalc

    @durpersonnelregcumcalc.setter
    def durpersonnelregcumcalc(self, durpersonnelregcumcalc):
        """Sets the durpersonnelregcumcalc of this JobReport.


        :param durpersonnelregcumcalc: The durpersonnelregcumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurpersonnelregcumcalc
        """

        self._durpersonnelregcumcalc = durpersonnelregcumcalc

    @property
    def durpersonneltotcumcalc(self):
        """Gets the durpersonneltotcumcalc of this JobReport.  # noqa: E501


        :return: The durpersonneltotcumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurpersonneltotcumcalc
        """
        return self._durpersonneltotcumcalc

    @durpersonneltotcumcalc.setter
    def durpersonneltotcumcalc(self, durpersonneltotcumcalc):
        """Sets the durpersonneltotcumcalc of this JobReport.


        :param durpersonneltotcumcalc: The durpersonneltotcumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurpersonneltotcumcalc
        """

        self._durpersonneltotcumcalc = durpersonneltotcumcalc

    @property
    def durpipemovingcalc(self):
        """Gets the durpipemovingcalc of this JobReport.  # noqa: E501


        :return: The durpipemovingcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurpipemovingcalc
        """
        return self._durpipemovingcalc

    @durpipemovingcalc.setter
    def durpipemovingcalc(self, durpipemovingcalc):
        """Sets the durpipemovingcalc of this JobReport.


        :param durpipemovingcalc: The durpipemovingcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurpipemovingcalc
        """

        self._durpipemovingcalc = durpipemovingcalc

    @property
    def durproblemtimecumdayscalc(self):
        """Gets the durproblemtimecumdayscalc of this JobReport.  # noqa: E501


        :return: The durproblemtimecumdayscalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurproblemtimecumdayscalc
        """
        return self._durproblemtimecumdayscalc

    @durproblemtimecumdayscalc.setter
    def durproblemtimecumdayscalc(self, durproblemtimecumdayscalc):
        """Sets the durproblemtimecumdayscalc of this JobReport.


        :param durproblemtimecumdayscalc: The durproblemtimecumdayscalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurproblemtimecumdayscalc
        """

        self._durproblemtimecumdayscalc = durproblemtimecumdayscalc

    @property
    def durprojectedmaxjobcalc(self):
        """Gets the durprojectedmaxjobcalc of this JobReport.  # noqa: E501


        :return: The durprojectedmaxjobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurprojectedmaxjobcalc
        """
        return self._durprojectedmaxjobcalc

    @durprojectedmaxjobcalc.setter
    def durprojectedmaxjobcalc(self, durprojectedmaxjobcalc):
        """Sets the durprojectedmaxjobcalc of this JobReport.


        :param durprojectedmaxjobcalc: The durprojectedmaxjobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurprojectedmaxjobcalc
        """

        self._durprojectedmaxjobcalc = durprojectedmaxjobcalc

    @property
    def durprojectedmaxphasecalc(self):
        """Gets the durprojectedmaxphasecalc of this JobReport.  # noqa: E501


        :return: The durprojectedmaxphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurprojectedmaxphasecalc
        """
        return self._durprojectedmaxphasecalc

    @durprojectedmaxphasecalc.setter
    def durprojectedmaxphasecalc(self, durprojectedmaxphasecalc):
        """Sets the durprojectedmaxphasecalc of this JobReport.


        :param durprojectedmaxphasecalc: The durprojectedmaxphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurprojectedmaxphasecalc
        """

        self._durprojectedmaxphasecalc = durprojectedmaxphasecalc

    @property
    def durprojectedminjobcalc(self):
        """Gets the durprojectedminjobcalc of this JobReport.  # noqa: E501


        :return: The durprojectedminjobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurprojectedminjobcalc
        """
        return self._durprojectedminjobcalc

    @durprojectedminjobcalc.setter
    def durprojectedminjobcalc(self, durprojectedminjobcalc):
        """Sets the durprojectedminjobcalc of this JobReport.


        :param durprojectedminjobcalc: The durprojectedminjobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurprojectedminjobcalc
        """

        self._durprojectedminjobcalc = durprojectedminjobcalc

    @property
    def durprojectedminphasecalc(self):
        """Gets the durprojectedminphasecalc of this JobReport.  # noqa: E501


        :return: The durprojectedminphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurprojectedminphasecalc
        """
        return self._durprojectedminphasecalc

    @durprojectedminphasecalc.setter
    def durprojectedminphasecalc(self, durprojectedminphasecalc):
        """Sets the durprojectedminphasecalc of this JobReport.


        :param durprojectedminphasecalc: The durprojectedminphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurprojectedminphasecalc
        """

        self._durprojectedminphasecalc = durprojectedminphasecalc

    @property
    def durprojectedmljobcalc(self):
        """Gets the durprojectedmljobcalc of this JobReport.  # noqa: E501


        :return: The durprojectedmljobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurprojectedmljobcalc
        """
        return self._durprojectedmljobcalc

    @durprojectedmljobcalc.setter
    def durprojectedmljobcalc(self, durprojectedmljobcalc):
        """Sets the durprojectedmljobcalc of this JobReport.


        :param durprojectedmljobcalc: The durprojectedmljobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurprojectedmljobcalc
        """

        self._durprojectedmljobcalc = durprojectedmljobcalc

    @property
    def durprojectedmlphasecalc(self):
        """Gets the durprojectedmlphasecalc of this JobReport.  # noqa: E501


        :return: The durprojectedmlphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurprojectedmlphasecalc
        """
        return self._durprojectedmlphasecalc

    @durprojectedmlphasecalc.setter
    def durprojectedmlphasecalc(self, durprojectedmlphasecalc):
        """Sets the durprojectedmlphasecalc of this JobReport.


        :param durprojectedmlphasecalc: The durprojectedmlphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurprojectedmlphasecalc
        """

        self._durprojectedmlphasecalc = durprojectedmlphasecalc

    @property
    def durprojectedtljobcalc(self):
        """Gets the durprojectedtljobcalc of this JobReport.  # noqa: E501


        :return: The durprojectedtljobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurprojectedtljobcalc
        """
        return self._durprojectedtljobcalc

    @durprojectedtljobcalc.setter
    def durprojectedtljobcalc(self, durprojectedtljobcalc):
        """Sets the durprojectedtljobcalc of this JobReport.


        :param durprojectedtljobcalc: The durprojectedtljobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurprojectedtljobcalc
        """

        self._durprojectedtljobcalc = durprojectedtljobcalc

    @property
    def durprojectedtlphasecalc(self):
        """Gets the durprojectedtlphasecalc of this JobReport.  # noqa: E501


        :return: The durprojectedtlphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportDurprojectedtlphasecalc
        """
        return self._durprojectedtlphasecalc

    @durprojectedtlphasecalc.setter
    def durprojectedtlphasecalc(self, durprojectedtlphasecalc):
        """Sets the durprojectedtlphasecalc of this JobReport.


        :param durprojectedtlphasecalc: The durprojectedtlphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportDurprojectedtlphasecalc
        """

        self._durprojectedtlphasecalc = durprojectedtlphasecalc

    @property
    def gasbackgroundavg(self):
        """Gets the gasbackgroundavg of this JobReport.  # noqa: E501


        :return: The gasbackgroundavg of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportGasbackgroundavg
        """
        return self._gasbackgroundavg

    @gasbackgroundavg.setter
    def gasbackgroundavg(self, gasbackgroundavg):
        """Sets the gasbackgroundavg of this JobReport.


        :param gasbackgroundavg: The gasbackgroundavg of this JobReport.  # noqa: E501
        :type: OneOfJobReportGasbackgroundavg
        """

        self._gasbackgroundavg = gasbackgroundavg

    @property
    def gasbackgroundmax(self):
        """Gets the gasbackgroundmax of this JobReport.  # noqa: E501


        :return: The gasbackgroundmax of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportGasbackgroundmax
        """
        return self._gasbackgroundmax

    @gasbackgroundmax.setter
    def gasbackgroundmax(self, gasbackgroundmax):
        """Sets the gasbackgroundmax of this JobReport.


        :param gasbackgroundmax: The gasbackgroundmax of this JobReport.  # noqa: E501
        :type: OneOfJobReportGasbackgroundmax
        """

        self._gasbackgroundmax = gasbackgroundmax

    @property
    def gasconnectionavg(self):
        """Gets the gasconnectionavg of this JobReport.  # noqa: E501


        :return: The gasconnectionavg of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportGasconnectionavg
        """
        return self._gasconnectionavg

    @gasconnectionavg.setter
    def gasconnectionavg(self, gasconnectionavg):
        """Sets the gasconnectionavg of this JobReport.


        :param gasconnectionavg: The gasconnectionavg of this JobReport.  # noqa: E501
        :type: OneOfJobReportGasconnectionavg
        """

        self._gasconnectionavg = gasconnectionavg

    @property
    def gasconnectionmax(self):
        """Gets the gasconnectionmax of this JobReport.  # noqa: E501


        :return: The gasconnectionmax of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportGasconnectionmax
        """
        return self._gasconnectionmax

    @gasconnectionmax.setter
    def gasconnectionmax(self, gasconnectionmax):
        """Sets the gasconnectionmax of this JobReport.


        :param gasconnectionmax: The gasconnectionmax of this JobReport.  # noqa: E501
        :type: OneOfJobReportGasconnectionmax
        """

        self._gasconnectionmax = gasconnectionmax

    @property
    def gasdrillavg(self):
        """Gets the gasdrillavg of this JobReport.  # noqa: E501


        :return: The gasdrillavg of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportGasdrillavg
        """
        return self._gasdrillavg

    @gasdrillavg.setter
    def gasdrillavg(self, gasdrillavg):
        """Sets the gasdrillavg of this JobReport.


        :param gasdrillavg: The gasdrillavg of this JobReport.  # noqa: E501
        :type: OneOfJobReportGasdrillavg
        """

        self._gasdrillavg = gasdrillavg

    @property
    def gasdrillmax(self):
        """Gets the gasdrillmax of this JobReport.  # noqa: E501


        :return: The gasdrillmax of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportGasdrillmax
        """
        return self._gasdrillmax

    @gasdrillmax.setter
    def gasdrillmax(self, gasdrillmax):
        """Sets the gasdrillmax of this JobReport.


        :param gasdrillmax: The gasdrillmax of this JobReport.  # noqa: E501
        :type: OneOfJobReportGasdrillmax
        """

        self._gasdrillmax = gasdrillmax

    @property
    def gastripavg(self):
        """Gets the gastripavg of this JobReport.  # noqa: E501


        :return: The gastripavg of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportGastripavg
        """
        return self._gastripavg

    @gastripavg.setter
    def gastripavg(self, gastripavg):
        """Sets the gastripavg of this JobReport.


        :param gastripavg: The gastripavg of this JobReport.  # noqa: E501
        :type: OneOfJobReportGastripavg
        """

        self._gastripavg = gastripavg

    @property
    def gastripmax(self):
        """Gets the gastripmax of this JobReport.  # noqa: E501


        :return: The gastripmax of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportGastripmax
        """
        return self._gastripmax

    @gastripmax.setter
    def gastripmax(self, gastripmax):
        """Sets the gastripmax of this JobReport.


        :param gastripmax: The gastripmax of this JobReport.  # noqa: E501
        :type: OneOfJobReportGastripmax
        """

        self._gastripmax = gastripmax

    @property
    def h2smax(self):
        """Gets the h2smax of this JobReport.  # noqa: E501


        :return: The h2smax of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportH2smax
        """
        return self._h2smax

    @h2smax.setter
    def h2smax(self, h2smax):
        """Sets the h2smax of this JobReport.


        :param h2smax: The h2smax of this JobReport.  # noqa: E501
        :type: OneOfJobReportH2smax
        """

        self._h2smax = h2smax

    @property
    def hazardidnorptcalc(self):
        """Gets the hazardidnorptcalc of this JobReport.  # noqa: E501


        :return: The hazardidnorptcalc of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._hazardidnorptcalc

    @hazardidnorptcalc.setter
    def hazardidnorptcalc(self, hazardidnorptcalc):
        """Sets the hazardidnorptcalc of this JobReport.


        :param hazardidnorptcalc: The hazardidnorptcalc of this JobReport.  # noqa: E501
        :type: int
        """

        self._hazardidnorptcalc = hazardidnorptcalc

    @property
    def hazardidnorptcumcalc(self):
        """Gets the hazardidnorptcumcalc of this JobReport.  # noqa: E501


        :return: The hazardidnorptcumcalc of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._hazardidnorptcumcalc

    @hazardidnorptcumcalc.setter
    def hazardidnorptcumcalc(self, hazardidnorptcumcalc):
        """Sets the hazardidnorptcumcalc of this JobReport.


        :param hazardidnorptcumcalc: The hazardidnorptcumcalc of this JobReport.  # noqa: E501
        :type: int
        """

        self._hazardidnorptcumcalc = hazardidnorptcumcalc

    @property
    def headcountcalc(self):
        """Gets the headcountcalc of this JobReport.  # noqa: E501


        :return: The headcountcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportHeadcountcalc
        """
        return self._headcountcalc

    @headcountcalc.setter
    def headcountcalc(self, headcountcalc):
        """Sets the headcountcalc of this JobReport.


        :param headcountcalc: The headcountcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportHeadcountcalc
        """

        self._headcountcalc = headcountcalc

    @property
    def idrec(self):
        """Gets the idrec of this JobReport.  # noqa: E501


        :return: The idrec of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this JobReport.


        :param idrec: The idrec of this JobReport.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecjobprogramphasecalc(self):
        """Gets the idrecjobprogramphasecalc of this JobReport.  # noqa: E501


        :return: The idrecjobprogramphasecalc of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._idrecjobprogramphasecalc

    @idrecjobprogramphasecalc.setter
    def idrecjobprogramphasecalc(self, idrecjobprogramphasecalc):
        """Sets the idrecjobprogramphasecalc of this JobReport.


        :param idrecjobprogramphasecalc: The idrecjobprogramphasecalc of this JobReport.  # noqa: E501
        :type: str
        """

        self._idrecjobprogramphasecalc = idrecjobprogramphasecalc

    @property
    def idrecjobprogramphasecalctk(self):
        """Gets the idrecjobprogramphasecalctk of this JobReport.  # noqa: E501


        :return: The idrecjobprogramphasecalctk of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._idrecjobprogramphasecalctk

    @idrecjobprogramphasecalctk.setter
    def idrecjobprogramphasecalctk(self, idrecjobprogramphasecalctk):
        """Sets the idrecjobprogramphasecalctk of this JobReport.


        :param idrecjobprogramphasecalctk: The idrecjobprogramphasecalctk of this JobReport.  # noqa: E501
        :type: str
        """

        self._idrecjobprogramphasecalctk = idrecjobprogramphasecalctk

    @property
    def idreclastcascalc(self):
        """Gets the idreclastcascalc of this JobReport.  # noqa: E501


        :return: The idreclastcascalc of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._idreclastcascalc

    @idreclastcascalc.setter
    def idreclastcascalc(self, idreclastcascalc):
        """Sets the idreclastcascalc of this JobReport.


        :param idreclastcascalc: The idreclastcascalc of this JobReport.  # noqa: E501
        :type: str
        """

        self._idreclastcascalc = idreclastcascalc

    @property
    def idreclastcascalctk(self):
        """Gets the idreclastcascalctk of this JobReport.  # noqa: E501


        :return: The idreclastcascalctk of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._idreclastcascalctk

    @idreclastcascalctk.setter
    def idreclastcascalctk(self, idreclastcascalctk):
        """Sets the idreclastcascalctk of this JobReport.


        :param idreclastcascalctk: The idreclastcascalctk of this JobReport.  # noqa: E501
        :type: str
        """

        self._idreclastcascalctk = idreclastcascalctk

    @property
    def idreclastrigcalc(self):
        """Gets the idreclastrigcalc of this JobReport.  # noqa: E501


        :return: The idreclastrigcalc of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._idreclastrigcalc

    @idreclastrigcalc.setter
    def idreclastrigcalc(self, idreclastrigcalc):
        """Sets the idreclastrigcalc of this JobReport.


        :param idreclastrigcalc: The idreclastrigcalc of this JobReport.  # noqa: E501
        :type: str
        """

        self._idreclastrigcalc = idreclastrigcalc

    @property
    def idreclastrigcalctk(self):
        """Gets the idreclastrigcalctk of this JobReport.  # noqa: E501


        :return: The idreclastrigcalctk of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._idreclastrigcalctk

    @idreclastrigcalctk.setter
    def idreclastrigcalctk(self, idreclastrigcalctk):
        """Sets the idreclastrigcalctk of this JobReport.


        :param idreclastrigcalctk: The idreclastrigcalctk of this JobReport.  # noqa: E501
        :type: str
        """

        self._idreclastrigcalctk = idreclastrigcalctk

    @property
    def idrecnextcas(self):
        """Gets the idrecnextcas of this JobReport.  # noqa: E501


        :return: The idrecnextcas of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._idrecnextcas

    @idrecnextcas.setter
    def idrecnextcas(self, idrecnextcas):
        """Sets the idrecnextcas of this JobReport.


        :param idrecnextcas: The idrecnextcas of this JobReport.  # noqa: E501
        :type: str
        """

        self._idrecnextcas = idrecnextcas

    @property
    def idrecnextcastk(self):
        """Gets the idrecnextcastk of this JobReport.  # noqa: E501


        :return: The idrecnextcastk of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._idrecnextcastk

    @idrecnextcastk.setter
    def idrecnextcastk(self, idrecnextcastk):
        """Sets the idrecnextcastk of this JobReport.


        :param idrecnextcastk: The idrecnextcastk of this JobReport.  # noqa: E501
        :type: str
        """

        self._idrecnextcastk = idrecnextcastk

    @property
    def idrecparent(self):
        """Gets the idrecparent of this JobReport.  # noqa: E501


        :return: The idrecparent of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this JobReport.


        :param idrecparent: The idrecparent of this JobReport.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idrecwellborecalc(self):
        """Gets the idrecwellborecalc of this JobReport.  # noqa: E501


        :return: The idrecwellborecalc of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellborecalc

    @idrecwellborecalc.setter
    def idrecwellborecalc(self, idrecwellborecalc):
        """Sets the idrecwellborecalc of this JobReport.


        :param idrecwellborecalc: The idrecwellborecalc of this JobReport.  # noqa: E501
        :type: str
        """

        self._idrecwellborecalc = idrecwellborecalc

    @property
    def idrecwellborecalctk(self):
        """Gets the idrecwellborecalctk of this JobReport.  # noqa: E501


        :return: The idrecwellborecalctk of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellborecalctk

    @idrecwellborecalctk.setter
    def idrecwellborecalctk(self, idrecwellborecalctk):
        """Sets the idrecwellborecalctk of this JobReport.


        :param idrecwellborecalctk: The idrecwellborecalctk of this JobReport.  # noqa: E501
        :type: str
        """

        self._idrecwellborecalctk = idrecwellborecalctk

    @property
    def idwell(self):
        """Gets the idwell of this JobReport.  # noqa: E501


        :return: The idwell of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this JobReport.


        :param idwell: The idwell of this JobReport.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def intlessoncalc(self):
        """Gets the intlessoncalc of this JobReport.  # noqa: E501


        :return: The intlessoncalc of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._intlessoncalc

    @intlessoncalc.setter
    def intlessoncalc(self, intlessoncalc):
        """Sets the intlessoncalc of this JobReport.


        :param intlessoncalc: The intlessoncalc of this JobReport.  # noqa: E501
        :type: int
        """

        self._intlessoncalc = intlessoncalc

    @property
    def intproblemcalc(self):
        """Gets the intproblemcalc of this JobReport.  # noqa: E501


        :return: The intproblemcalc of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._intproblemcalc

    @intproblemcalc.setter
    def intproblemcalc(self, intproblemcalc):
        """Sets the intproblemcalc of this JobReport.


        :param intproblemcalc: The intproblemcalc of this JobReport.  # noqa: E501
        :type: int
        """

        self._intproblemcalc = intproblemcalc

    @property
    def job(self):
        """Gets the job of this JobReport.  # noqa: E501


        :return: The job of this JobReport.  # noqa: E501
        :rtype: AnyOfJobReportJob
        """
        return self._job

    @job.setter
    def job(self, job):
        """Sets the job of this JobReport.


        :param job: The job of this JobReport.  # noqa: E501
        :type: AnyOfJobReportJob
        """

        self._job = job

    @property
    def job_report_contacts(self):
        """Gets the job_report_contacts of this JobReport.  # noqa: E501


        :return: The job_report_contacts of this JobReport.  # noqa: E501
        :rtype: list[JobReportContacts]
        """
        return self._job_report_contacts

    @job_report_contacts.setter
    def job_report_contacts(self, job_report_contacts):
        """Sets the job_report_contacts of this JobReport.


        :param job_report_contacts: The job_report_contacts of this JobReport.  # noqa: E501
        :type: list[JobReportContacts]
        """

        self._job_report_contacts = job_report_contacts

    @property
    def job_report_cost_gens(self):
        """Gets the job_report_cost_gens of this JobReport.  # noqa: E501


        :return: The job_report_cost_gens of this JobReport.  # noqa: E501
        :rtype: list[JobReportCostGen]
        """
        return self._job_report_cost_gens

    @job_report_cost_gens.setter
    def job_report_cost_gens(self, job_report_cost_gens):
        """Sets the job_report_cost_gens of this JobReport.


        :param job_report_cost_gens: The job_report_cost_gens of this JobReport.  # noqa: E501
        :type: list[JobReportCostGen]
        """

        self._job_report_cost_gens = job_report_cost_gens

    @property
    def job_report_cost_rentals(self):
        """Gets the job_report_cost_rentals of this JobReport.  # noqa: E501


        :return: The job_report_cost_rentals of this JobReport.  # noqa: E501
        :rtype: list[JobReportCostRental]
        """
        return self._job_report_cost_rentals

    @job_report_cost_rentals.setter
    def job_report_cost_rentals(self, job_report_cost_rentals):
        """Sets the job_report_cost_rentals of this JobReport.


        :param job_report_cost_rentals: The job_report_cost_rentals of this JobReport.  # noqa: E501
        :type: list[JobReportCostRental]
        """

        self._job_report_cost_rentals = job_report_cost_rentals

    @property
    def job_report_discharges(self):
        """Gets the job_report_discharges of this JobReport.  # noqa: E501


        :return: The job_report_discharges of this JobReport.  # noqa: E501
        :rtype: list[JobReportDischarge]
        """
        return self._job_report_discharges

    @job_report_discharges.setter
    def job_report_discharges(self, job_report_discharges):
        """Sets the job_report_discharges of this JobReport.


        :param job_report_discharges: The job_report_discharges of this JobReport.  # noqa: E501
        :type: list[JobReportDischarge]
        """

        self._job_report_discharges = job_report_discharges

    @property
    def job_report_emissions(self):
        """Gets the job_report_emissions of this JobReport.  # noqa: E501


        :return: The job_report_emissions of this JobReport.  # noqa: E501
        :rtype: list[JobReportEmission]
        """
        return self._job_report_emissions

    @job_report_emissions.setter
    def job_report_emissions(self, job_report_emissions):
        """Sets the job_report_emissions of this JobReport.


        :param job_report_emissions: The job_report_emissions of this JobReport.  # noqa: E501
        :type: list[JobReportEmission]
        """

        self._job_report_emissions = job_report_emissions

    @property
    def job_report_fluids_leases(self):
        """Gets the job_report_fluids_leases of this JobReport.  # noqa: E501


        :return: The job_report_fluids_leases of this JobReport.  # noqa: E501
        :rtype: list[JobReportFluidsLease]
        """
        return self._job_report_fluids_leases

    @job_report_fluids_leases.setter
    def job_report_fluids_leases(self, job_report_fluids_leases):
        """Sets the job_report_fluids_leases of this JobReport.


        :param job_report_fluids_leases: The job_report_fluids_leases of this JobReport.  # noqa: E501
        :type: list[JobReportFluidsLease]
        """

        self._job_report_fluids_leases = job_report_fluids_leases

    @property
    def job_report_fluids_wells(self):
        """Gets the job_report_fluids_wells of this JobReport.  # noqa: E501


        :return: The job_report_fluids_wells of this JobReport.  # noqa: E501
        :rtype: list[JobReportFluidsWell]
        """
        return self._job_report_fluids_wells

    @job_report_fluids_wells.setter
    def job_report_fluids_wells(self, job_report_fluids_wells):
        """Sets the job_report_fluids_wells of this JobReport.


        :param job_report_fluids_wells: The job_report_fluids_wells of this JobReport.  # noqa: E501
        :type: list[JobReportFluidsWell]
        """

        self._job_report_fluids_wells = job_report_fluids_wells

    @property
    def job_report_geo_ops(self):
        """Gets the job_report_geo_ops of this JobReport.  # noqa: E501


        :return: The job_report_geo_ops of this JobReport.  # noqa: E501
        :rtype: list[JobReportGeoOps]
        """
        return self._job_report_geo_ops

    @job_report_geo_ops.setter
    def job_report_geo_ops(self, job_report_geo_ops):
        """Sets the job_report_geo_ops of this JobReport.


        :param job_report_geo_ops: The job_report_geo_ops of this JobReport.  # noqa: E501
        :type: list[JobReportGeoOps]
        """

        self._job_report_geo_ops = job_report_geo_ops

    @property
    def job_report_hazard_ids(self):
        """Gets the job_report_hazard_ids of this JobReport.  # noqa: E501


        :return: The job_report_hazard_ids of this JobReport.  # noqa: E501
        :rtype: list[JobReportHazardId]
        """
        return self._job_report_hazard_ids

    @job_report_hazard_ids.setter
    def job_report_hazard_ids(self, job_report_hazard_ids):
        """Sets the job_report_hazard_ids of this JobReport.


        :param job_report_hazard_ids: The job_report_hazard_ids of this JobReport.  # noqa: E501
        :type: list[JobReportHazardId]
        """

        self._job_report_hazard_ids = job_report_hazard_ids

    @property
    def job_report_mud_chks(self):
        """Gets the job_report_mud_chks of this JobReport.  # noqa: E501


        :return: The job_report_mud_chks of this JobReport.  # noqa: E501
        :rtype: list[JobReportMudChk]
        """
        return self._job_report_mud_chks

    @job_report_mud_chks.setter
    def job_report_mud_chks(self, job_report_mud_chks):
        """Sets the job_report_mud_chks of this JobReport.


        :param job_report_mud_chks: The job_report_mud_chks of this JobReport.  # noqa: E501
        :type: list[JobReportMudChk]
        """

        self._job_report_mud_chks = job_report_mud_chks

    @property
    def job_report_mud_vols(self):
        """Gets the job_report_mud_vols of this JobReport.  # noqa: E501


        :return: The job_report_mud_vols of this JobReport.  # noqa: E501
        :rtype: list[JobReportMudVol]
        """
        return self._job_report_mud_vols

    @job_report_mud_vols.setter
    def job_report_mud_vols(self, job_report_mud_vols):
        """Sets the job_report_mud_vols of this JobReport.


        :param job_report_mud_vols: The job_report_mud_vols of this JobReport.  # noqa: E501
        :type: list[JobReportMudVol]
        """

        self._job_report_mud_vols = job_report_mud_vols

    @property
    def job_report_offshores(self):
        """Gets the job_report_offshores of this JobReport.  # noqa: E501


        :return: The job_report_offshores of this JobReport.  # noqa: E501
        :rtype: list[JobReportOffshore]
        """
        return self._job_report_offshores

    @job_report_offshores.setter
    def job_report_offshores(self, job_report_offshores):
        """Sets the job_report_offshores of this JobReport.


        :param job_report_offshores: The job_report_offshores of this JobReport.  # noqa: E501
        :type: list[JobReportOffshore]
        """

        self._job_report_offshores = job_report_offshores

    @property
    def job_report_personnel_counts(self):
        """Gets the job_report_personnel_counts of this JobReport.  # noqa: E501


        :return: The job_report_personnel_counts of this JobReport.  # noqa: E501
        :rtype: list[JobReportPersonnelCount]
        """
        return self._job_report_personnel_counts

    @job_report_personnel_counts.setter
    def job_report_personnel_counts(self, job_report_personnel_counts):
        """Sets the job_report_personnel_counts of this JobReport.


        :param job_report_personnel_counts: The job_report_personnel_counts of this JobReport.  # noqa: E501
        :type: list[JobReportPersonnelCount]
        """

        self._job_report_personnel_counts = job_report_personnel_counts

    @property
    def job_report_pressures(self):
        """Gets the job_report_pressures of this JobReport.  # noqa: E501


        :return: The job_report_pressures of this JobReport.  # noqa: E501
        :rtype: list[JobReportPressure]
        """
        return self._job_report_pressures

    @job_report_pressures.setter
    def job_report_pressures(self, job_report_pressures):
        """Sets the job_report_pressures of this JobReport.


        :param job_report_pressures: The job_report_pressures of this JobReport.  # noqa: E501
        :type: list[JobReportPressure]
        """

        self._job_report_pressures = job_report_pressures

    @property
    def job_report_rig_crews(self):
        """Gets the job_report_rig_crews of this JobReport.  # noqa: E501


        :return: The job_report_rig_crews of this JobReport.  # noqa: E501
        :rtype: list[JobReportRigCrew]
        """
        return self._job_report_rig_crews

    @job_report_rig_crews.setter
    def job_report_rig_crews(self, job_report_rig_crews):
        """Sets the job_report_rig_crews of this JobReport.


        :param job_report_rig_crews: The job_report_rig_crews of this JobReport.  # noqa: E501
        :type: list[JobReportRigCrew]
        """

        self._job_report_rig_crews = job_report_rig_crews

    @property
    def job_report_time_logs(self):
        """Gets the job_report_time_logs of this JobReport.  # noqa: E501


        :return: The job_report_time_logs of this JobReport.  # noqa: E501
        :rtype: list[JobReportTimeLog]
        """
        return self._job_report_time_logs

    @job_report_time_logs.setter
    def job_report_time_logs(self, job_report_time_logs):
        """Sets the job_report_time_logs of this JobReport.


        :param job_report_time_logs: The job_report_time_logs of this JobReport.  # noqa: E501
        :type: list[JobReportTimeLog]
        """

        self._job_report_time_logs = job_report_time_logs

    @property
    def lastmuddensitycalc(self):
        """Gets the lastmuddensitycalc of this JobReport.  # noqa: E501


        :return: The lastmuddensitycalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportLastmuddensitycalc
        """
        return self._lastmuddensitycalc

    @lastmuddensitycalc.setter
    def lastmuddensitycalc(self, lastmuddensitycalc):
        """Sets the lastmuddensitycalc of this JobReport.


        :param lastmuddensitycalc: The lastmuddensitycalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportLastmuddensitycalc
        """

        self._lastmuddensitycalc = lastmuddensitycalc

    @property
    def mudcostperdepthcalc(self):
        """Gets the mudcostperdepthcalc of this JobReport.  # noqa: E501


        :return: The mudcostperdepthcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportMudcostperdepthcalc
        """
        return self._mudcostperdepthcalc

    @mudcostperdepthcalc.setter
    def mudcostperdepthcalc(self, mudcostperdepthcalc):
        """Sets the mudcostperdepthcalc of this JobReport.


        :param mudcostperdepthcalc: The mudcostperdepthcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportMudcostperdepthcalc
        """

        self._mudcostperdepthcalc = mudcostperdepthcalc

    @property
    def mudcostperdepthcumcalc(self):
        """Gets the mudcostperdepthcumcalc of this JobReport.  # noqa: E501


        :return: The mudcostperdepthcumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportMudcostperdepthcumcalc
        """
        return self._mudcostperdepthcumcalc

    @mudcostperdepthcumcalc.setter
    def mudcostperdepthcumcalc(self, mudcostperdepthcumcalc):
        """Sets the mudcostperdepthcumcalc of this JobReport.


        :param mudcostperdepthcumcalc: The mudcostperdepthcumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportMudcostperdepthcumcalc
        """

        self._mudcostperdepthcumcalc = mudcostperdepthcumcalc

    @property
    def mudcostperdepthcumnormcalc(self):
        """Gets the mudcostperdepthcumnormcalc of this JobReport.  # noqa: E501


        :return: The mudcostperdepthcumnormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportMudcostperdepthcumnormcalc
        """
        return self._mudcostperdepthcumnormcalc

    @mudcostperdepthcumnormcalc.setter
    def mudcostperdepthcumnormcalc(self, mudcostperdepthcumnormcalc):
        """Sets the mudcostperdepthcumnormcalc of this JobReport.


        :param mudcostperdepthcumnormcalc: The mudcostperdepthcumnormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportMudcostperdepthcumnormcalc
        """

        self._mudcostperdepthcumnormcalc = mudcostperdepthcumnormcalc

    @property
    def mudcostperdepthnormcalc(self):
        """Gets the mudcostperdepthnormcalc of this JobReport.  # noqa: E501


        :return: The mudcostperdepthnormcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportMudcostperdepthnormcalc
        """
        return self._mudcostperdepthnormcalc

    @mudcostperdepthnormcalc.setter
    def mudcostperdepthnormcalc(self, mudcostperdepthnormcalc):
        """Sets the mudcostperdepthnormcalc of this JobReport.


        :param mudcostperdepthnormcalc: The mudcostperdepthnormcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportMudcostperdepthnormcalc
        """

        self._mudcostperdepthnormcalc = mudcostperdepthnormcalc

    @property
    def pctproblemtimecalc(self):
        """Gets the pctproblemtimecalc of this JobReport.  # noqa: E501


        :return: The pctproblemtimecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPctproblemtimecalc
        """
        return self._pctproblemtimecalc

    @pctproblemtimecalc.setter
    def pctproblemtimecalc(self, pctproblemtimecalc):
        """Sets the pctproblemtimecalc of this JobReport.


        :param pctproblemtimecalc: The pctproblemtimecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPctproblemtimecalc
        """

        self._pctproblemtimecalc = pctproblemtimecalc

    @property
    def pctproblemtimecumcalc(self):
        """Gets the pctproblemtimecumcalc of this JobReport.  # noqa: E501


        :return: The pctproblemtimecumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPctproblemtimecumcalc
        """
        return self._pctproblemtimecumcalc

    @pctproblemtimecumcalc.setter
    def pctproblemtimecumcalc(self, pctproblemtimecumcalc):
        """Sets the pctproblemtimecumcalc of this JobReport.


        :param pctproblemtimecumcalc: The pctproblemtimecumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPctproblemtimecumcalc
        """

        self._pctproblemtimecumcalc = pctproblemtimecumcalc

    @property
    def percentcompletemaxjobcalc(self):
        """Gets the percentcompletemaxjobcalc of this JobReport.  # noqa: E501


        :return: The percentcompletemaxjobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPercentcompletemaxjobcalc
        """
        return self._percentcompletemaxjobcalc

    @percentcompletemaxjobcalc.setter
    def percentcompletemaxjobcalc(self, percentcompletemaxjobcalc):
        """Sets the percentcompletemaxjobcalc of this JobReport.


        :param percentcompletemaxjobcalc: The percentcompletemaxjobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPercentcompletemaxjobcalc
        """

        self._percentcompletemaxjobcalc = percentcompletemaxjobcalc

    @property
    def percentcompletemaxphasecalc(self):
        """Gets the percentcompletemaxphasecalc of this JobReport.  # noqa: E501


        :return: The percentcompletemaxphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPercentcompletemaxphasecalc
        """
        return self._percentcompletemaxphasecalc

    @percentcompletemaxphasecalc.setter
    def percentcompletemaxphasecalc(self, percentcompletemaxphasecalc):
        """Sets the percentcompletemaxphasecalc of this JobReport.


        :param percentcompletemaxphasecalc: The percentcompletemaxphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPercentcompletemaxphasecalc
        """

        self._percentcompletemaxphasecalc = percentcompletemaxphasecalc

    @property
    def percentcompleteminjobcalc(self):
        """Gets the percentcompleteminjobcalc of this JobReport.  # noqa: E501


        :return: The percentcompleteminjobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPercentcompleteminjobcalc
        """
        return self._percentcompleteminjobcalc

    @percentcompleteminjobcalc.setter
    def percentcompleteminjobcalc(self, percentcompleteminjobcalc):
        """Sets the percentcompleteminjobcalc of this JobReport.


        :param percentcompleteminjobcalc: The percentcompleteminjobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPercentcompleteminjobcalc
        """

        self._percentcompleteminjobcalc = percentcompleteminjobcalc

    @property
    def percentcompleteminphasecalc(self):
        """Gets the percentcompleteminphasecalc of this JobReport.  # noqa: E501


        :return: The percentcompleteminphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPercentcompleteminphasecalc
        """
        return self._percentcompleteminphasecalc

    @percentcompleteminphasecalc.setter
    def percentcompleteminphasecalc(self, percentcompleteminphasecalc):
        """Sets the percentcompleteminphasecalc of this JobReport.


        :param percentcompleteminphasecalc: The percentcompleteminphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPercentcompleteminphasecalc
        """

        self._percentcompleteminphasecalc = percentcompleteminphasecalc

    @property
    def percentcompletemljobcalc(self):
        """Gets the percentcompletemljobcalc of this JobReport.  # noqa: E501


        :return: The percentcompletemljobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPercentcompletemljobcalc
        """
        return self._percentcompletemljobcalc

    @percentcompletemljobcalc.setter
    def percentcompletemljobcalc(self, percentcompletemljobcalc):
        """Sets the percentcompletemljobcalc of this JobReport.


        :param percentcompletemljobcalc: The percentcompletemljobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPercentcompletemljobcalc
        """

        self._percentcompletemljobcalc = percentcompletemljobcalc

    @property
    def percentcompletemlphasecalc(self):
        """Gets the percentcompletemlphasecalc of this JobReport.  # noqa: E501


        :return: The percentcompletemlphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPercentcompletemlphasecalc
        """
        return self._percentcompletemlphasecalc

    @percentcompletemlphasecalc.setter
    def percentcompletemlphasecalc(self, percentcompletemlphasecalc):
        """Sets the percentcompletemlphasecalc of this JobReport.


        :param percentcompletemlphasecalc: The percentcompletemlphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPercentcompletemlphasecalc
        """

        self._percentcompletemlphasecalc = percentcompletemlphasecalc

    @property
    def percentcompletetljobcalc(self):
        """Gets the percentcompletetljobcalc of this JobReport.  # noqa: E501


        :return: The percentcompletetljobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPercentcompletetljobcalc
        """
        return self._percentcompletetljobcalc

    @percentcompletetljobcalc.setter
    def percentcompletetljobcalc(self, percentcompletetljobcalc):
        """Sets the percentcompletetljobcalc of this JobReport.


        :param percentcompletetljobcalc: The percentcompletetljobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPercentcompletetljobcalc
        """

        self._percentcompletetljobcalc = percentcompletetljobcalc

    @property
    def percentcompletetlphasecalc(self):
        """Gets the percentcompletetlphasecalc of this JobReport.  # noqa: E501


        :return: The percentcompletetlphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPercentcompletetlphasecalc
        """
        return self._percentcompletetlphasecalc

    @percentcompletetlphasecalc.setter
    def percentcompletetlphasecalc(self, percentcompletetlphasecalc):
        """Sets the percentcompletetlphasecalc of this JobReport.


        :param percentcompletetlphasecalc: The percentcompletetlphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPercentcompletetlphasecalc
        """

        self._percentcompletetlphasecalc = percentcompletetlphasecalc

    @property
    def percentdepthrotatingcalc(self):
        """Gets the percentdepthrotatingcalc of this JobReport.  # noqa: E501


        :return: The percentdepthrotatingcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPercentdepthrotatingcalc
        """
        return self._percentdepthrotatingcalc

    @percentdepthrotatingcalc.setter
    def percentdepthrotatingcalc(self, percentdepthrotatingcalc):
        """Sets the percentdepthrotatingcalc of this JobReport.


        :param percentdepthrotatingcalc: The percentdepthrotatingcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPercentdepthrotatingcalc
        """

        self._percentdepthrotatingcalc = percentdepthrotatingcalc

    @property
    def percentdepthslidingcalc(self):
        """Gets the percentdepthslidingcalc of this JobReport.  # noqa: E501


        :return: The percentdepthslidingcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPercentdepthslidingcalc
        """
        return self._percentdepthslidingcalc

    @percentdepthslidingcalc.setter
    def percentdepthslidingcalc(self, percentdepthslidingcalc):
        """Sets the percentdepthslidingcalc of this JobReport.


        :param percentdepthslidingcalc: The percentdepthslidingcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPercentdepthslidingcalc
        """

        self._percentdepthslidingcalc = percentdepthslidingcalc

    @property
    def percentfieldafecalc(self):
        """Gets the percentfieldafecalc of this JobReport.  # noqa: E501


        :return: The percentfieldafecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPercentfieldafecalc
        """
        return self._percentfieldafecalc

    @percentfieldafecalc.setter
    def percentfieldafecalc(self, percentfieldafecalc):
        """Sets the percentfieldafecalc of this JobReport.


        :param percentfieldafecalc: The percentfieldafecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPercentfieldafecalc
        """

        self._percentfieldafecalc = percentfieldafecalc

    @property
    def percenttmrotatingcalc(self):
        """Gets the percenttmrotatingcalc of this JobReport.  # noqa: E501


        :return: The percenttmrotatingcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPercenttmrotatingcalc
        """
        return self._percenttmrotatingcalc

    @percenttmrotatingcalc.setter
    def percenttmrotatingcalc(self, percenttmrotatingcalc):
        """Sets the percenttmrotatingcalc of this JobReport.


        :param percenttmrotatingcalc: The percenttmrotatingcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPercenttmrotatingcalc
        """

        self._percenttmrotatingcalc = percenttmrotatingcalc

    @property
    def percenttmslidingcalc(self):
        """Gets the percenttmslidingcalc of this JobReport.  # noqa: E501


        :return: The percenttmslidingcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportPercenttmslidingcalc
        """
        return self._percenttmslidingcalc

    @percenttmslidingcalc.setter
    def percenttmslidingcalc(self, percenttmslidingcalc):
        """Sets the percenttmslidingcalc of this JobReport.


        :param percenttmslidingcalc: The percenttmslidingcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportPercenttmslidingcalc
        """

        self._percenttmslidingcalc = percenttmslidingcalc

    @property
    def plannextrptops(self):
        """Gets the plannextrptops of this JobReport.  # noqa: E501


        :return: The plannextrptops of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._plannextrptops

    @plannextrptops.setter
    def plannextrptops(self, plannextrptops):
        """Sets the plannextrptops of this JobReport.


        :param plannextrptops: The plannextrptops of this JobReport.  # noqa: E501
        :type: str
        """

        self._plannextrptops = plannextrptops

    @property
    def ratiodurprojmaxplancalc(self):
        """Gets the ratiodurprojmaxplancalc of this JobReport.  # noqa: E501


        :return: The ratiodurprojmaxplancalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportRatiodurprojmaxplancalc
        """
        return self._ratiodurprojmaxplancalc

    @ratiodurprojmaxplancalc.setter
    def ratiodurprojmaxplancalc(self, ratiodurprojmaxplancalc):
        """Sets the ratiodurprojmaxplancalc of this JobReport.


        :param ratiodurprojmaxplancalc: The ratiodurprojmaxplancalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportRatiodurprojmaxplancalc
        """

        self._ratiodurprojmaxplancalc = ratiodurprojmaxplancalc

    @property
    def ratiodurprojminplancalc(self):
        """Gets the ratiodurprojminplancalc of this JobReport.  # noqa: E501


        :return: The ratiodurprojminplancalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportRatiodurprojminplancalc
        """
        return self._ratiodurprojminplancalc

    @ratiodurprojminplancalc.setter
    def ratiodurprojminplancalc(self, ratiodurprojminplancalc):
        """Sets the ratiodurprojminplancalc of this JobReport.


        :param ratiodurprojminplancalc: The ratiodurprojminplancalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportRatiodurprojminplancalc
        """

        self._ratiodurprojminplancalc = ratiodurprojminplancalc

    @property
    def ratiodurprojmlplancalc(self):
        """Gets the ratiodurprojmlplancalc of this JobReport.  # noqa: E501


        :return: The ratiodurprojmlplancalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportRatiodurprojmlplancalc
        """
        return self._ratiodurprojmlplancalc

    @ratiodurprojmlplancalc.setter
    def ratiodurprojmlplancalc(self, ratiodurprojmlplancalc):
        """Sets the ratiodurprojmlplancalc of this JobReport.


        :param ratiodurprojmlplancalc: The ratiodurprojmlplancalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportRatiodurprojmlplancalc
        """

        self._ratiodurprojmlplancalc = ratiodurprojmlplancalc

    @property
    def ratiodurprojtlplancalc(self):
        """Gets the ratiodurprojtlplancalc of this JobReport.  # noqa: E501


        :return: The ratiodurprojtlplancalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportRatiodurprojtlplancalc
        """
        return self._ratiodurprojtlplancalc

    @ratiodurprojtlplancalc.setter
    def ratiodurprojtlplancalc(self, ratiodurprojtlplancalc):
        """Sets the ratiodurprojtlplancalc of this JobReport.


        :param ratiodurprojtlplancalc: The ratiodurprojtlplancalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportRatiodurprojtlplancalc
        """

        self._ratiodurprojtlplancalc = ratiodurprojtlplancalc

    @property
    def remarks(self):
        """Gets the remarks of this JobReport.  # noqa: E501


        :return: The remarks of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._remarks

    @remarks.setter
    def remarks(self, remarks):
        """Sets the remarks of this JobReport.


        :param remarks: The remarks of this JobReport.  # noqa: E501
        :type: str
        """

        self._remarks = remarks

    @property
    def reportdaycalc(self):
        """Gets the reportdaycalc of this JobReport.  # noqa: E501


        :return: The reportdaycalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportReportdaycalc
        """
        return self._reportdaycalc

    @reportdaycalc.setter
    def reportdaycalc(self, reportdaycalc):
        """Sets the reportdaycalc of this JobReport.


        :param reportdaycalc: The reportdaycalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportReportdaycalc
        """

        self._reportdaycalc = reportdaycalc

    @property
    def reportnocalc(self):
        """Gets the reportnocalc of this JobReport.  # noqa: E501


        :return: The reportnocalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportReportnocalc
        """
        return self._reportnocalc

    @reportnocalc.setter
    def reportnocalc(self, reportnocalc):
        """Sets the reportnocalc of this JobReport.


        :param reportnocalc: The reportnocalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportReportnocalc
        """

        self._reportnocalc = reportnocalc

    @property
    def rigdayscalc(self):
        """Gets the rigdayscalc of this JobReport.  # noqa: E501


        :return: The rigdayscalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportRigdayscalc
        """
        return self._rigdayscalc

    @rigdayscalc.setter
    def rigdayscalc(self, rigdayscalc):
        """Sets the rigdayscalc of this JobReport.


        :param rigdayscalc: The rigdayscalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportRigdayscalc
        """

        self._rigdayscalc = rigdayscalc

    @property
    def rigdayscumcalc(self):
        """Gets the rigdayscumcalc of this JobReport.  # noqa: E501


        :return: The rigdayscumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportRigdayscumcalc
        """
        return self._rigdayscumcalc

    @rigdayscumcalc.setter
    def rigdayscumcalc(self, rigdayscumcalc):
        """Sets the rigdayscumcalc of this JobReport.


        :param rigdayscumcalc: The rigdayscumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportRigdayscumcalc
        """

        self._rigdayscumcalc = rigdayscumcalc

    @property
    def rigscalc(self):
        """Gets the rigscalc of this JobReport.  # noqa: E501


        :return: The rigscalc of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._rigscalc

    @rigscalc.setter
    def rigscalc(self, rigscalc):
        """Sets the rigscalc of this JobReport.


        :param rigscalc: The rigscalc of this JobReport.  # noqa: E501
        :type: str
        """

        self._rigscalc = rigscalc

    @property
    def rigtime(self):
        """Gets the rigtime of this JobReport.  # noqa: E501


        :return: The rigtime of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportRigtime
        """
        return self._rigtime

    @rigtime.setter
    def rigtime(self, rigtime):
        """Sets the rigtime of this JobReport.


        :param rigtime: The rigtime of this JobReport.  # noqa: E501
        :type: OneOfJobReportRigtime
        """

        self._rigtime = rigtime

    @property
    def rigtimecumcalc(self):
        """Gets the rigtimecumcalc of this JobReport.  # noqa: E501


        :return: The rigtimecumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportRigtimecumcalc
        """
        return self._rigtimecumcalc

    @rigtimecumcalc.setter
    def rigtimecumcalc(self, rigtimecumcalc):
        """Sets the rigtimecumcalc of this JobReport.


        :param rigtimecumcalc: The rigtimecumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportRigtimecumcalc
        """

        self._rigtimecumcalc = rigtimecumcalc

    @property
    def ropcalc(self):
        """Gets the ropcalc of this JobReport.  # noqa: E501


        :return: The ropcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportRopcalc
        """
        return self._ropcalc

    @ropcalc.setter
    def ropcalc(self, ropcalc):
        """Sets the ropcalc of this JobReport.


        :param ropcalc: The ropcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportRopcalc
        """

        self._ropcalc = ropcalc

    @property
    def roprotatingcalc(self):
        """Gets the roprotatingcalc of this JobReport.  # noqa: E501


        :return: The roprotatingcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportRoprotatingcalc
        """
        return self._roprotatingcalc

    @roprotatingcalc.setter
    def roprotatingcalc(self, roprotatingcalc):
        """Sets the roprotatingcalc of this JobReport.


        :param roprotatingcalc: The roprotatingcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportRoprotatingcalc
        """

        self._roprotatingcalc = roprotatingcalc

    @property
    def ropslidingcalc(self):
        """Gets the ropslidingcalc of this JobReport.  # noqa: E501


        :return: The ropslidingcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportRopslidingcalc
        """
        return self._ropslidingcalc

    @ropslidingcalc.setter
    def ropslidingcalc(self, ropslidingcalc):
        """Sets the ropslidingcalc of this JobReport.


        :param ropslidingcalc: The ropslidingcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportRopslidingcalc
        """

        self._ropslidingcalc = ropslidingcalc

    @property
    def rpttmactops(self):
        """Gets the rpttmactops of this JobReport.  # noqa: E501


        :return: The rpttmactops of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._rpttmactops

    @rpttmactops.setter
    def rpttmactops(self, rpttmactops):
        """Sets the rpttmactops of this JobReport.


        :param rpttmactops: The rpttmactops of this JobReport.  # noqa: E501
        :type: str
        """

        self._rpttmactops = rpttmactops

    @property
    def safetyinccalc(self):
        """Gets the safetyinccalc of this JobReport.  # noqa: E501


        :return: The safetyinccalc of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._safetyinccalc

    @safetyinccalc.setter
    def safetyinccalc(self, safetyinccalc):
        """Sets the safetyinccalc of this JobReport.


        :param safetyinccalc: The safetyinccalc of this JobReport.  # noqa: E501
        :type: int
        """

        self._safetyinccalc = safetyinccalc

    @property
    def safetyincnocalc(self):
        """Gets the safetyincnocalc of this JobReport.  # noqa: E501


        :return: The safetyincnocalc of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._safetyincnocalc

    @safetyincnocalc.setter
    def safetyincnocalc(self, safetyincnocalc):
        """Sets the safetyincnocalc of this JobReport.


        :param safetyincnocalc: The safetyincnocalc of this JobReport.  # noqa: E501
        :type: int
        """

        self._safetyincnocalc = safetyincnocalc

    @property
    def safetyincnocumcalc(self):
        """Gets the safetyincnocumcalc of this JobReport.  # noqa: E501


        :return: The safetyincnocumcalc of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._safetyincnocumcalc

    @safetyincnocumcalc.setter
    def safetyincnocumcalc(self, safetyincnocumcalc):
        """Sets the safetyincnocumcalc of this JobReport.


        :param safetyincnocumcalc: The safetyincnocumcalc of this JobReport.  # noqa: E501
        :type: int
        """

        self._safetyincnocumcalc = safetyincnocumcalc

    @property
    def safetyincratecalc(self):
        """Gets the safetyincratecalc of this JobReport.  # noqa: E501


        :return: The safetyincratecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportSafetyincratecalc
        """
        return self._safetyincratecalc

    @safetyincratecalc.setter
    def safetyincratecalc(self, safetyincratecalc):
        """Sets the safetyincratecalc of this JobReport.


        :param safetyincratecalc: The safetyincratecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportSafetyincratecalc
        """

        self._safetyincratecalc = safetyincratecalc

    @property
    def safetyincreportcalc(self):
        """Gets the safetyincreportcalc of this JobReport.  # noqa: E501


        :return: The safetyincreportcalc of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._safetyincreportcalc

    @safetyincreportcalc.setter
    def safetyincreportcalc(self, safetyincreportcalc):
        """Sets the safetyincreportcalc of this JobReport.


        :param safetyincreportcalc: The safetyincreportcalc of this JobReport.  # noqa: E501
        :type: int
        """

        self._safetyincreportcalc = safetyincreportcalc

    @property
    def safetyincreportnocalc(self):
        """Gets the safetyincreportnocalc of this JobReport.  # noqa: E501


        :return: The safetyincreportnocalc of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._safetyincreportnocalc

    @safetyincreportnocalc.setter
    def safetyincreportnocalc(self, safetyincreportnocalc):
        """Sets the safetyincreportnocalc of this JobReport.


        :param safetyincreportnocalc: The safetyincreportnocalc of this JobReport.  # noqa: E501
        :type: int
        """

        self._safetyincreportnocalc = safetyincreportnocalc

    @property
    def safetyincreportnocumcalc(self):
        """Gets the safetyincreportnocumcalc of this JobReport.  # noqa: E501


        :return: The safetyincreportnocumcalc of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._safetyincreportnocumcalc

    @safetyincreportnocumcalc.setter
    def safetyincreportnocumcalc(self, safetyincreportnocumcalc):
        """Sets the safetyincreportnocumcalc of this JobReport.


        :param safetyincreportnocumcalc: The safetyincreportnocumcalc of this JobReport.  # noqa: E501
        :type: int
        """

        self._safetyincreportnocumcalc = safetyincreportnocumcalc

    @property
    def safetyincreportratecalc(self):
        """Gets the safetyincreportratecalc of this JobReport.  # noqa: E501


        :return: The safetyincreportratecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportSafetyincreportratecalc
        """
        return self._safetyincreportratecalc

    @safetyincreportratecalc.setter
    def safetyincreportratecalc(self, safetyincreportratecalc):
        """Sets the safetyincreportratecalc of this JobReport.


        :param safetyincreportratecalc: The safetyincreportratecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportSafetyincreportratecalc
        """

        self._safetyincreportratecalc = safetyincreportratecalc

    @property
    def statusend(self):
        """Gets the statusend of this JobReport.  # noqa: E501


        :return: The statusend of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._statusend

    @statusend.setter
    def statusend(self, statusend):
        """Sets the statusend of this JobReport.


        :param statusend: The statusend of this JobReport.  # noqa: E501
        :type: str
        """

        self._statusend = statusend

    @property
    def summaryops(self):
        """Gets the summaryops of this JobReport.  # noqa: E501


        :return: The summaryops of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._summaryops

    @summaryops.setter
    def summaryops(self, summaryops):
        """Sets the summaryops of this JobReport.


        :param summaryops: The summaryops of this JobReport.  # noqa: E501
        :type: str
        """

        self._summaryops = summaryops

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this JobReport.  # noqa: E501


        :return: The syscreatedate of this JobReport.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this JobReport.


        :param syscreatedate: The syscreatedate of this JobReport.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this JobReport.  # noqa: E501


        :return: The syscreateuser of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this JobReport.


        :param syscreateuser: The syscreateuser of this JobReport.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this JobReport.  # noqa: E501


        :return: The syslockchildren of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this JobReport.


        :param syslockchildren: The syslockchildren of this JobReport.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this JobReport.  # noqa: E501


        :return: The syslockchildrenui of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this JobReport.


        :param syslockchildrenui: The syslockchildrenui of this JobReport.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this JobReport.  # noqa: E501


        :return: The syslockdate of this JobReport.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this JobReport.


        :param syslockdate: The syslockdate of this JobReport.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this JobReport.  # noqa: E501


        :return: The syslockme of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this JobReport.


        :param syslockme: The syslockme of this JobReport.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this JobReport.  # noqa: E501


        :return: The syslockmeui of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this JobReport.


        :param syslockmeui: The syslockmeui of this JobReport.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this JobReport.  # noqa: E501


        :return: The sysmoddate of this JobReport.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this JobReport.


        :param sysmoddate: The sysmoddate of this JobReport.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this JobReport.  # noqa: E501


        :return: The sysmoduser of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this JobReport.


        :param sysmoduser: The sysmoduser of this JobReport.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def systag(self):
        """Gets the systag of this JobReport.  # noqa: E501


        :return: The systag of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this JobReport.


        :param systag: The systag of this JobReport.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def timeaheadmaxjobcalc(self):
        """Gets the timeaheadmaxjobcalc of this JobReport.  # noqa: E501


        :return: The timeaheadmaxjobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTimeaheadmaxjobcalc
        """
        return self._timeaheadmaxjobcalc

    @timeaheadmaxjobcalc.setter
    def timeaheadmaxjobcalc(self, timeaheadmaxjobcalc):
        """Sets the timeaheadmaxjobcalc of this JobReport.


        :param timeaheadmaxjobcalc: The timeaheadmaxjobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTimeaheadmaxjobcalc
        """

        self._timeaheadmaxjobcalc = timeaheadmaxjobcalc

    @property
    def timeaheadmaxphasecalc(self):
        """Gets the timeaheadmaxphasecalc of this JobReport.  # noqa: E501


        :return: The timeaheadmaxphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTimeaheadmaxphasecalc
        """
        return self._timeaheadmaxphasecalc

    @timeaheadmaxphasecalc.setter
    def timeaheadmaxphasecalc(self, timeaheadmaxphasecalc):
        """Sets the timeaheadmaxphasecalc of this JobReport.


        :param timeaheadmaxphasecalc: The timeaheadmaxphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTimeaheadmaxphasecalc
        """

        self._timeaheadmaxphasecalc = timeaheadmaxphasecalc

    @property
    def timeaheadminjobcalc(self):
        """Gets the timeaheadminjobcalc of this JobReport.  # noqa: E501


        :return: The timeaheadminjobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTimeaheadminjobcalc
        """
        return self._timeaheadminjobcalc

    @timeaheadminjobcalc.setter
    def timeaheadminjobcalc(self, timeaheadminjobcalc):
        """Sets the timeaheadminjobcalc of this JobReport.


        :param timeaheadminjobcalc: The timeaheadminjobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTimeaheadminjobcalc
        """

        self._timeaheadminjobcalc = timeaheadminjobcalc

    @property
    def timeaheadminphasecalc(self):
        """Gets the timeaheadminphasecalc of this JobReport.  # noqa: E501


        :return: The timeaheadminphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTimeaheadminphasecalc
        """
        return self._timeaheadminphasecalc

    @timeaheadminphasecalc.setter
    def timeaheadminphasecalc(self, timeaheadminphasecalc):
        """Sets the timeaheadminphasecalc of this JobReport.


        :param timeaheadminphasecalc: The timeaheadminphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTimeaheadminphasecalc
        """

        self._timeaheadminphasecalc = timeaheadminphasecalc

    @property
    def timeaheadmljobcalc(self):
        """Gets the timeaheadmljobcalc of this JobReport.  # noqa: E501


        :return: The timeaheadmljobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTimeaheadmljobcalc
        """
        return self._timeaheadmljobcalc

    @timeaheadmljobcalc.setter
    def timeaheadmljobcalc(self, timeaheadmljobcalc):
        """Sets the timeaheadmljobcalc of this JobReport.


        :param timeaheadmljobcalc: The timeaheadmljobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTimeaheadmljobcalc
        """

        self._timeaheadmljobcalc = timeaheadmljobcalc

    @property
    def timeaheadmlphasecalc(self):
        """Gets the timeaheadmlphasecalc of this JobReport.  # noqa: E501


        :return: The timeaheadmlphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTimeaheadmlphasecalc
        """
        return self._timeaheadmlphasecalc

    @timeaheadmlphasecalc.setter
    def timeaheadmlphasecalc(self, timeaheadmlphasecalc):
        """Sets the timeaheadmlphasecalc of this JobReport.


        :param timeaheadmlphasecalc: The timeaheadmlphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTimeaheadmlphasecalc
        """

        self._timeaheadmlphasecalc = timeaheadmlphasecalc

    @property
    def timeaheadtljobcalc(self):
        """Gets the timeaheadtljobcalc of this JobReport.  # noqa: E501


        :return: The timeaheadtljobcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTimeaheadtljobcalc
        """
        return self._timeaheadtljobcalc

    @timeaheadtljobcalc.setter
    def timeaheadtljobcalc(self, timeaheadtljobcalc):
        """Sets the timeaheadtljobcalc of this JobReport.


        :param timeaheadtljobcalc: The timeaheadtljobcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTimeaheadtljobcalc
        """

        self._timeaheadtljobcalc = timeaheadtljobcalc

    @property
    def timeaheadtlphasecalc(self):
        """Gets the timeaheadtlphasecalc of this JobReport.  # noqa: E501


        :return: The timeaheadtlphasecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTimeaheadtlphasecalc
        """
        return self._timeaheadtlphasecalc

    @timeaheadtlphasecalc.setter
    def timeaheadtlphasecalc(self, timeaheadtlphasecalc):
        """Sets the timeaheadtlphasecalc of this JobReport.


        :param timeaheadtlphasecalc: The timeaheadtlphasecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTimeaheadtlphasecalc
        """

        self._timeaheadtlphasecalc = timeaheadtlphasecalc

    @property
    def timelogcode1calc(self):
        """Gets the timelogcode1calc of this JobReport.  # noqa: E501


        :return: The timelogcode1calc of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._timelogcode1calc

    @timelogcode1calc.setter
    def timelogcode1calc(self, timelogcode1calc):
        """Sets the timelogcode1calc of this JobReport.


        :param timelogcode1calc: The timelogcode1calc of this JobReport.  # noqa: E501
        :type: str
        """

        self._timelogcode1calc = timelogcode1calc

    @property
    def timelogcode2calc(self):
        """Gets the timelogcode2calc of this JobReport.  # noqa: E501


        :return: The timelogcode2calc of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._timelogcode2calc

    @timelogcode2calc.setter
    def timelogcode2calc(self, timelogcode2calc):
        """Sets the timelogcode2calc of this JobReport.


        :param timelogcode2calc: The timelogcode2calc of this JobReport.  # noqa: E501
        :type: str
        """

        self._timelogcode2calc = timelogcode2calc

    @property
    def timelogcode3calc(self):
        """Gets the timelogcode3calc of this JobReport.  # noqa: E501


        :return: The timelogcode3calc of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._timelogcode3calc

    @timelogcode3calc.setter
    def timelogcode3calc(self, timelogcode3calc):
        """Sets the timelogcode3calc of this JobReport.


        :param timelogcode3calc: The timelogcode3calc of this JobReport.  # noqa: E501
        :type: str
        """

        self._timelogcode3calc = timelogcode3calc

    @property
    def timelogcode4calc(self):
        """Gets the timelogcode4calc of this JobReport.  # noqa: E501


        :return: The timelogcode4calc of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._timelogcode4calc

    @timelogcode4calc.setter
    def timelogcode4calc(self, timelogcode4calc):
        """Sets the timelogcode4calc of this JobReport.


        :param timelogcode4calc: The timelogcode4calc of this JobReport.  # noqa: E501
        :type: str
        """

        self._timelogcode4calc = timelogcode4calc

    @property
    def tmcirccalc(self):
        """Gets the tmcirccalc of this JobReport.  # noqa: E501


        :return: The tmcirccalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTmcirccalc
        """
        return self._tmcirccalc

    @tmcirccalc.setter
    def tmcirccalc(self, tmcirccalc):
        """Sets the tmcirccalc of this JobReport.


        :param tmcirccalc: The tmcirccalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTmcirccalc
        """

        self._tmcirccalc = tmcirccalc

    @property
    def tmcirccumcalc(self):
        """Gets the tmcirccumcalc of this JobReport.  # noqa: E501


        :return: The tmcirccumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTmcirccumcalc
        """
        return self._tmcirccumcalc

    @tmcirccumcalc.setter
    def tmcirccumcalc(self, tmcirccumcalc):
        """Sets the tmcirccumcalc of this JobReport.


        :param tmcirccumcalc: The tmcirccumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTmcirccumcalc
        """

        self._tmcirccumcalc = tmcirccumcalc

    @property
    def tmcirctripothercalc(self):
        """Gets the tmcirctripothercalc of this JobReport.  # noqa: E501


        :return: The tmcirctripothercalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTmcirctripothercalc
        """
        return self._tmcirctripothercalc

    @tmcirctripothercalc.setter
    def tmcirctripothercalc(self, tmcirctripothercalc):
        """Sets the tmcirctripothercalc of this JobReport.


        :param tmcirctripothercalc: The tmcirctripothercalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTmcirctripothercalc
        """

        self._tmcirctripothercalc = tmcirctripothercalc

    @property
    def tmcirctripothercumcalc(self):
        """Gets the tmcirctripothercumcalc of this JobReport.  # noqa: E501


        :return: The tmcirctripothercumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTmcirctripothercumcalc
        """
        return self._tmcirctripothercumcalc

    @tmcirctripothercumcalc.setter
    def tmcirctripothercumcalc(self, tmcirctripothercumcalc):
        """Sets the tmcirctripothercumcalc of this JobReport.


        :param tmcirctripothercumcalc: The tmcirctripothercumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTmcirctripothercumcalc
        """

        self._tmcirctripothercumcalc = tmcirctripothercumcalc

    @property
    def tmdrillcalc(self):
        """Gets the tmdrillcalc of this JobReport.  # noqa: E501


        :return: The tmdrillcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTmdrillcalc
        """
        return self._tmdrillcalc

    @tmdrillcalc.setter
    def tmdrillcalc(self, tmdrillcalc):
        """Sets the tmdrillcalc of this JobReport.


        :param tmdrillcalc: The tmdrillcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTmdrillcalc
        """

        self._tmdrillcalc = tmdrillcalc

    @property
    def tmdrillcumcalc(self):
        """Gets the tmdrillcumcalc of this JobReport.  # noqa: E501


        :return: The tmdrillcumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTmdrillcumcalc
        """
        return self._tmdrillcumcalc

    @tmdrillcumcalc.setter
    def tmdrillcumcalc(self, tmdrillcumcalc):
        """Sets the tmdrillcumcalc of this JobReport.


        :param tmdrillcumcalc: The tmdrillcumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTmdrillcumcalc
        """

        self._tmdrillcumcalc = tmdrillcumcalc

    @property
    def tmdrillcumnoexccalc(self):
        """Gets the tmdrillcumnoexccalc of this JobReport.  # noqa: E501


        :return: The tmdrillcumnoexccalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTmdrillcumnoexccalc
        """
        return self._tmdrillcumnoexccalc

    @tmdrillcumnoexccalc.setter
    def tmdrillcumnoexccalc(self, tmdrillcumnoexccalc):
        """Sets the tmdrillcumnoexccalc of this JobReport.


        :param tmdrillcumnoexccalc: The tmdrillcumnoexccalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTmdrillcumnoexccalc
        """

        self._tmdrillcumnoexccalc = tmdrillcumnoexccalc

    @property
    def tmdrillnoexccalc(self):
        """Gets the tmdrillnoexccalc of this JobReport.  # noqa: E501


        :return: The tmdrillnoexccalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTmdrillnoexccalc
        """
        return self._tmdrillnoexccalc

    @tmdrillnoexccalc.setter
    def tmdrillnoexccalc(self, tmdrillnoexccalc):
        """Sets the tmdrillnoexccalc of this JobReport.


        :param tmdrillnoexccalc: The tmdrillnoexccalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTmdrillnoexccalc
        """

        self._tmdrillnoexccalc = tmdrillnoexccalc

    @property
    def tmothercalc(self):
        """Gets the tmothercalc of this JobReport.  # noqa: E501


        :return: The tmothercalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTmothercalc
        """
        return self._tmothercalc

    @tmothercalc.setter
    def tmothercalc(self, tmothercalc):
        """Sets the tmothercalc of this JobReport.


        :param tmothercalc: The tmothercalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTmothercalc
        """

        self._tmothercalc = tmothercalc

    @property
    def tmothercumcalc(self):
        """Gets the tmothercumcalc of this JobReport.  # noqa: E501


        :return: The tmothercumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTmothercumcalc
        """
        return self._tmothercumcalc

    @tmothercumcalc.setter
    def tmothercumcalc(self, tmothercumcalc):
        """Sets the tmothercumcalc of this JobReport.


        :param tmothercumcalc: The tmothercumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTmothercumcalc
        """

        self._tmothercumcalc = tmothercumcalc

    @property
    def tmrotatingcalc(self):
        """Gets the tmrotatingcalc of this JobReport.  # noqa: E501


        :return: The tmrotatingcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTmrotatingcalc
        """
        return self._tmrotatingcalc

    @tmrotatingcalc.setter
    def tmrotatingcalc(self, tmrotatingcalc):
        """Sets the tmrotatingcalc of this JobReport.


        :param tmrotatingcalc: The tmrotatingcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTmrotatingcalc
        """

        self._tmrotatingcalc = tmrotatingcalc

    @property
    def tmslidingcalc(self):
        """Gets the tmslidingcalc of this JobReport.  # noqa: E501


        :return: The tmslidingcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTmslidingcalc
        """
        return self._tmslidingcalc

    @tmslidingcalc.setter
    def tmslidingcalc(self, tmslidingcalc):
        """Sets the tmslidingcalc of this JobReport.


        :param tmslidingcalc: The tmslidingcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTmslidingcalc
        """

        self._tmslidingcalc = tmslidingcalc

    @property
    def tmtripcalc(self):
        """Gets the tmtripcalc of this JobReport.  # noqa: E501


        :return: The tmtripcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTmtripcalc
        """
        return self._tmtripcalc

    @tmtripcalc.setter
    def tmtripcalc(self, tmtripcalc):
        """Sets the tmtripcalc of this JobReport.


        :param tmtripcalc: The tmtripcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTmtripcalc
        """

        self._tmtripcalc = tmtripcalc

    @property
    def tmtripcumcalc(self):
        """Gets the tmtripcumcalc of this JobReport.  # noqa: E501


        :return: The tmtripcumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportTmtripcumcalc
        """
        return self._tmtripcumcalc

    @tmtripcumcalc.setter
    def tmtripcumcalc(self, tmtripcumcalc):
        """Sets the tmtripcumcalc of this JobReport.


        :param tmtripcumcalc: The tmtripcumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportTmtripcumcalc
        """

        self._tmtripcumcalc = tmtripcumcalc

    @property
    def userboolean1(self):
        """Gets the userboolean1 of this JobReport.  # noqa: E501


        :return: The userboolean1 of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._userboolean1

    @userboolean1.setter
    def userboolean1(self, userboolean1):
        """Sets the userboolean1 of this JobReport.


        :param userboolean1: The userboolean1 of this JobReport.  # noqa: E501
        :type: int
        """

        self._userboolean1 = userboolean1

    @property
    def userboolean2(self):
        """Gets the userboolean2 of this JobReport.  # noqa: E501


        :return: The userboolean2 of this JobReport.  # noqa: E501
        :rtype: int
        """
        return self._userboolean2

    @userboolean2.setter
    def userboolean2(self, userboolean2):
        """Sets the userboolean2 of this JobReport.


        :param userboolean2: The userboolean2 of this JobReport.  # noqa: E501
        :type: int
        """

        self._userboolean2 = userboolean2

    @property
    def usernum1(self):
        """Gets the usernum1 of this JobReport.  # noqa: E501


        :return: The usernum1 of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportUsernum1
        """
        return self._usernum1

    @usernum1.setter
    def usernum1(self, usernum1):
        """Sets the usernum1 of this JobReport.


        :param usernum1: The usernum1 of this JobReport.  # noqa: E501
        :type: OneOfJobReportUsernum1
        """

        self._usernum1 = usernum1

    @property
    def usernum2(self):
        """Gets the usernum2 of this JobReport.  # noqa: E501


        :return: The usernum2 of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportUsernum2
        """
        return self._usernum2

    @usernum2.setter
    def usernum2(self, usernum2):
        """Sets the usernum2 of this JobReport.


        :param usernum2: The usernum2 of this JobReport.  # noqa: E501
        :type: OneOfJobReportUsernum2
        """

        self._usernum2 = usernum2

    @property
    def usernum3(self):
        """Gets the usernum3 of this JobReport.  # noqa: E501


        :return: The usernum3 of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportUsernum3
        """
        return self._usernum3

    @usernum3.setter
    def usernum3(self, usernum3):
        """Sets the usernum3 of this JobReport.


        :param usernum3: The usernum3 of this JobReport.  # noqa: E501
        :type: OneOfJobReportUsernum3
        """

        self._usernum3 = usernum3

    @property
    def usernum4(self):
        """Gets the usernum4 of this JobReport.  # noqa: E501


        :return: The usernum4 of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportUsernum4
        """
        return self._usernum4

    @usernum4.setter
    def usernum4(self, usernum4):
        """Sets the usernum4 of this JobReport.


        :param usernum4: The usernum4 of this JobReport.  # noqa: E501
        :type: OneOfJobReportUsernum4
        """

        self._usernum4 = usernum4

    @property
    def usernum5(self):
        """Gets the usernum5 of this JobReport.  # noqa: E501


        :return: The usernum5 of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportUsernum5
        """
        return self._usernum5

    @usernum5.setter
    def usernum5(self, usernum5):
        """Sets the usernum5 of this JobReport.


        :param usernum5: The usernum5 of this JobReport.  # noqa: E501
        :type: OneOfJobReportUsernum5
        """

        self._usernum5 = usernum5

    @property
    def usertxt1(self):
        """Gets the usertxt1 of this JobReport.  # noqa: E501


        :return: The usertxt1 of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._usertxt1

    @usertxt1.setter
    def usertxt1(self, usertxt1):
        """Sets the usertxt1 of this JobReport.


        :param usertxt1: The usertxt1 of this JobReport.  # noqa: E501
        :type: str
        """

        self._usertxt1 = usertxt1

    @property
    def usertxt2(self):
        """Gets the usertxt2 of this JobReport.  # noqa: E501


        :return: The usertxt2 of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._usertxt2

    @usertxt2.setter
    def usertxt2(self, usertxt2):
        """Sets the usertxt2 of this JobReport.


        :param usertxt2: The usertxt2 of this JobReport.  # noqa: E501
        :type: str
        """

        self._usertxt2 = usertxt2

    @property
    def usertxt3(self):
        """Gets the usertxt3 of this JobReport.  # noqa: E501


        :return: The usertxt3 of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._usertxt3

    @usertxt3.setter
    def usertxt3(self, usertxt3):
        """Sets the usertxt3 of this JobReport.


        :param usertxt3: The usertxt3 of this JobReport.  # noqa: E501
        :type: str
        """

        self._usertxt3 = usertxt3

    @property
    def usertxt4(self):
        """Gets the usertxt4 of this JobReport.  # noqa: E501


        :return: The usertxt4 of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._usertxt4

    @usertxt4.setter
    def usertxt4(self, usertxt4):
        """Sets the usertxt4 of this JobReport.


        :param usertxt4: The usertxt4 of this JobReport.  # noqa: E501
        :type: str
        """

        self._usertxt4 = usertxt4

    @property
    def usertxt5(self):
        """Gets the usertxt5 of this JobReport.  # noqa: E501


        :return: The usertxt5 of this JobReport.  # noqa: E501
        :rtype: str
        """
        return self._usertxt5

    @usertxt5.setter
    def usertxt5(self, usertxt5):
        """Sets the usertxt5 of this JobReport.


        :param usertxt5: The usertxt5 of this JobReport.  # noqa: E501
        :type: str
        """

        self._usertxt5 = usertxt5

    @property
    def volbittoshoecalc(self):
        """Gets the volbittoshoecalc of this JobReport.  # noqa: E501


        :return: The volbittoshoecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolbittoshoecalc
        """
        return self._volbittoshoecalc

    @volbittoshoecalc.setter
    def volbittoshoecalc(self, volbittoshoecalc):
        """Sets the volbittoshoecalc of this JobReport.


        :param volbittoshoecalc: The volbittoshoecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolbittoshoecalc
        """

        self._volbittoshoecalc = volbittoshoecalc

    @property
    def volcastoptorisertopcalc(self):
        """Gets the volcastoptorisertopcalc of this JobReport.  # noqa: E501


        :return: The volcastoptorisertopcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolcastoptorisertopcalc
        """
        return self._volcastoptorisertopcalc

    @volcastoptorisertopcalc.setter
    def volcastoptorisertopcalc(self, volcastoptorisertopcalc):
        """Sets the volcastoptorisertopcalc of this JobReport.


        :param volcastoptorisertopcalc: The volcastoptorisertopcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolcastoptorisertopcalc
        """

        self._volcastoptorisertopcalc = volcastoptorisertopcalc

    @property
    def volholecalc(self):
        """Gets the volholecalc of this JobReport.  # noqa: E501


        :return: The volholecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolholecalc
        """
        return self._volholecalc

    @volholecalc.setter
    def volholecalc(self, volholecalc):
        """Sets the volholecalc of this JobReport.


        :param volholecalc: The volholecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolholecalc
        """

        self._volholecalc = volholecalc

    @property
    def volholevarcalc(self):
        """Gets the volholevarcalc of this JobReport.  # noqa: E501


        :return: The volholevarcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolholevarcalc
        """
        return self._volholevarcalc

    @volholevarcalc.setter
    def volholevarcalc(self, volholevarcalc):
        """Sets the volholevarcalc of this JobReport.


        :param volholevarcalc: The volholevarcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolholevarcalc
        """

        self._volholevarcalc = volholevarcalc

    @property
    def volmudactivecalc(self):
        """Gets the volmudactivecalc of this JobReport.  # noqa: E501


        :return: The volmudactivecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolmudactivecalc
        """
        return self._volmudactivecalc

    @volmudactivecalc.setter
    def volmudactivecalc(self, volmudactivecalc):
        """Sets the volmudactivecalc of this JobReport.


        :param volmudactivecalc: The volmudactivecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolmudactivecalc
        """

        self._volmudactivecalc = volmudactivecalc

    @property
    def volmudactivevarcalc(self):
        """Gets the volmudactivevarcalc of this JobReport.  # noqa: E501


        :return: The volmudactivevarcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolmudactivevarcalc
        """
        return self._volmudactivevarcalc

    @volmudactivevarcalc.setter
    def volmudactivevarcalc(self, volmudactivevarcalc):
        """Sets the volmudactivevarcalc of this JobReport.


        :param volmudactivevarcalc: The volmudactivevarcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolmudactivevarcalc
        """

        self._volmudactivevarcalc = volmudactivevarcalc

    @property
    def volmudaddedcalc(self):
        """Gets the volmudaddedcalc of this JobReport.  # noqa: E501


        :return: The volmudaddedcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolmudaddedcalc
        """
        return self._volmudaddedcalc

    @volmudaddedcalc.setter
    def volmudaddedcalc(self, volmudaddedcalc):
        """Sets the volmudaddedcalc of this JobReport.


        :param volmudaddedcalc: The volmudaddedcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolmudaddedcalc
        """

        self._volmudaddedcalc = volmudaddedcalc

    @property
    def volmudaddedcumcalc(self):
        """Gets the volmudaddedcumcalc of this JobReport.  # noqa: E501


        :return: The volmudaddedcumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolmudaddedcumcalc
        """
        return self._volmudaddedcumcalc

    @volmudaddedcumcalc.setter
    def volmudaddedcumcalc(self, volmudaddedcumcalc):
        """Sets the volmudaddedcumcalc of this JobReport.


        :param volmudaddedcumcalc: The volmudaddedcumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolmudaddedcumcalc
        """

        self._volmudaddedcumcalc = volmudaddedcumcalc

    @property
    def volmudaddedlossvarcalc(self):
        """Gets the volmudaddedlossvarcalc of this JobReport.  # noqa: E501


        :return: The volmudaddedlossvarcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolmudaddedlossvarcalc
        """
        return self._volmudaddedlossvarcalc

    @volmudaddedlossvarcalc.setter
    def volmudaddedlossvarcalc(self, volmudaddedlossvarcalc):
        """Sets the volmudaddedlossvarcalc of this JobReport.


        :param volmudaddedlossvarcalc: The volmudaddedlossvarcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolmudaddedlossvarcalc
        """

        self._volmudaddedlossvarcalc = volmudaddedlossvarcalc

    @property
    def volmudaddedlossvarcumcalc(self):
        """Gets the volmudaddedlossvarcumcalc of this JobReport.  # noqa: E501


        :return: The volmudaddedlossvarcumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolmudaddedlossvarcumcalc
        """
        return self._volmudaddedlossvarcumcalc

    @volmudaddedlossvarcumcalc.setter
    def volmudaddedlossvarcumcalc(self, volmudaddedlossvarcumcalc):
        """Sets the volmudaddedlossvarcumcalc of this JobReport.


        :param volmudaddedlossvarcumcalc: The volmudaddedlossvarcumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolmudaddedlossvarcumcalc
        """

        self._volmudaddedlossvarcumcalc = volmudaddedlossvarcumcalc

    @property
    def volmudbalancecalc(self):
        """Gets the volmudbalancecalc of this JobReport.  # noqa: E501


        :return: The volmudbalancecalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolmudbalancecalc
        """
        return self._volmudbalancecalc

    @volmudbalancecalc.setter
    def volmudbalancecalc(self, volmudbalancecalc):
        """Sets the volmudbalancecalc of this JobReport.


        :param volmudbalancecalc: The volmudbalancecalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolmudbalancecalc
        """

        self._volmudbalancecalc = volmudbalancecalc

    @property
    def volmudlosscalc(self):
        """Gets the volmudlosscalc of this JobReport.  # noqa: E501


        :return: The volmudlosscalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolmudlosscalc
        """
        return self._volmudlosscalc

    @volmudlosscalc.setter
    def volmudlosscalc(self, volmudlosscalc):
        """Sets the volmudlosscalc of this JobReport.


        :param volmudlosscalc: The volmudlosscalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolmudlosscalc
        """

        self._volmudlosscalc = volmudlosscalc

    @property
    def volmudlosscumcalc(self):
        """Gets the volmudlosscumcalc of this JobReport.  # noqa: E501


        :return: The volmudlosscumcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolmudlosscumcalc
        """
        return self._volmudlosscumcalc

    @volmudlosscumcalc.setter
    def volmudlosscumcalc(self, volmudlosscumcalc):
        """Sets the volmudlosscumcalc of this JobReport.


        :param volmudlosscumcalc: The volmudlosscumcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolmudlosscumcalc
        """

        self._volmudlosscumcalc = volmudlosscumcalc

    @property
    def volmudtankcalc(self):
        """Gets the volmudtankcalc of this JobReport.  # noqa: E501


        :return: The volmudtankcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolmudtankcalc
        """
        return self._volmudtankcalc

    @volmudtankcalc.setter
    def volmudtankcalc(self, volmudtankcalc):
        """Sets the volmudtankcalc of this JobReport.


        :param volmudtankcalc: The volmudtankcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolmudtankcalc
        """

        self._volmudtankcalc = volmudtankcalc

    @property
    def volpumptobitcalc(self):
        """Gets the volpumptobitcalc of this JobReport.  # noqa: E501


        :return: The volpumptobitcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolpumptobitcalc
        """
        return self._volpumptobitcalc

    @volpumptobitcalc.setter
    def volpumptobitcalc(self, volpumptobitcalc):
        """Sets the volpumptobitcalc of this JobReport.


        :param volpumptobitcalc: The volpumptobitcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolpumptobitcalc
        """

        self._volpumptobitcalc = volpumptobitcalc

    @property
    def volshoetocastopcalc(self):
        """Gets the volshoetocastopcalc of this JobReport.  # noqa: E501


        :return: The volshoetocastopcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportVolshoetocastopcalc
        """
        return self._volshoetocastopcalc

    @volshoetocastopcalc.setter
    def volshoetocastopcalc(self, volshoetocastopcalc):
        """Sets the volshoetocastopcalc of this JobReport.


        :param volshoetocastopcalc: The volshoetocastopcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportVolshoetocastopcalc
        """

        self._volshoetocastopcalc = volshoetocastopcalc

    @property
    def weightmetalrecovtotalcalc(self):
        """Gets the weightmetalrecovtotalcalc of this JobReport.  # noqa: E501


        :return: The weightmetalrecovtotalcalc of this JobReport.  # noqa: E501
        :rtype: OneOfJobReportWeightmetalrecovtotalcalc
        """
        return self._weightmetalrecovtotalcalc

    @weightmetalrecovtotalcalc.setter
    def weightmetalrecovtotalcalc(self, weightmetalrecovtotalcalc):
        """Sets the weightmetalrecovtotalcalc of this JobReport.


        :param weightmetalrecovtotalcalc: The weightmetalrecovtotalcalc of this JobReport.  # noqa: E501
        :type: OneOfJobReportWeightmetalrecovtotalcalc
        """

        self._weightmetalrecovtotalcalc = weightmetalrecovtotalcalc

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(JobReport, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobReport):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
