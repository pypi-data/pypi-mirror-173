# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class FluidAnalysisLiquid(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'apic7': 'OneOfFluidAnalysisLiquidApic7',
        'apisample': 'OneOfFluidAnalysisLiquidApisample',
        'com': 'str',
        'densityc7': 'OneOfFluidAnalysisLiquidDensityc7',
        'densityrelc7': 'OneOfFluidAnalysisLiquidDensityrelc7',
        'densityrelsample': 'OneOfFluidAnalysisLiquidDensityrelsample',
        'densitysample': 'OneOfFluidAnalysisLiquidDensitysample',
        'factorgasequiv': 'OneOfFluidAnalysisLiquidFactorgasequiv',
        'fluid_analysis': 'AnyOfFluidAnalysisLiquidFluidAnalysis',
        'fluid_analysisl_liquid_comps': 'list[FluidAnalysisLiquidComp]',
        'idrec': 'str',
        'idrecparent': 'str',
        'idwell': 'str',
        'molecularmassrel': 'OneOfFluidAnalysisLiquidMolecularmassrel',
        'molecularmasssample': 'OneOfFluidAnalysisLiquidMolecularmasssample',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'systag': 'str',
        'temprefapic7': 'OneOfFluidAnalysisLiquidTemprefapic7',
        'temprefapisample': 'OneOfFluidAnalysisLiquidTemprefapisample',
        'temprefc7': 'OneOfFluidAnalysisLiquidTemprefc7',
        'temprefsample': 'OneOfFluidAnalysisLiquidTemprefsample'
    }

    attribute_map = {
        'apic7': 'apic7',
        'apisample': 'apisample',
        'com': 'com',
        'densityc7': 'densityc7',
        'densityrelc7': 'densityrelc7',
        'densityrelsample': 'densityrelsample',
        'densitysample': 'densitysample',
        'factorgasequiv': 'factorgasequiv',
        'fluid_analysis': 'fluidAnalysis',
        'fluid_analysisl_liquid_comps': 'fluidAnalysislLiquidComps',
        'idrec': 'idrec',
        'idrecparent': 'idrecparent',
        'idwell': 'idwell',
        'molecularmassrel': 'molecularmassrel',
        'molecularmasssample': 'molecularmasssample',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'systag': 'systag',
        'temprefapic7': 'temprefapic7',
        'temprefapisample': 'temprefapisample',
        'temprefc7': 'temprefc7',
        'temprefsample': 'temprefsample'
    }

    def __init__(self, apic7=None, apisample=None, com=None, densityc7=None, densityrelc7=None, densityrelsample=None, densitysample=None, factorgasequiv=None, fluid_analysis=None, fluid_analysisl_liquid_comps=None, idrec=None, idrecparent=None, idwell=None, molecularmassrel=None, molecularmasssample=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, systag=None, temprefapic7=None, temprefapisample=None, temprefc7=None, temprefsample=None):  # noqa: E501
        """FluidAnalysisLiquid - a model defined in Swagger"""  # noqa: E501
        self._apic7 = None
        self._apisample = None
        self._com = None
        self._densityc7 = None
        self._densityrelc7 = None
        self._densityrelsample = None
        self._densitysample = None
        self._factorgasequiv = None
        self._fluid_analysis = None
        self._fluid_analysisl_liquid_comps = None
        self._idrec = None
        self._idrecparent = None
        self._idwell = None
        self._molecularmassrel = None
        self._molecularmasssample = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._systag = None
        self._temprefapic7 = None
        self._temprefapisample = None
        self._temprefc7 = None
        self._temprefsample = None
        self.discriminator = None
        if apic7 is not None:
            self.apic7 = apic7
        if apisample is not None:
            self.apisample = apisample
        if com is not None:
            self.com = com
        if densityc7 is not None:
            self.densityc7 = densityc7
        if densityrelc7 is not None:
            self.densityrelc7 = densityrelc7
        if densityrelsample is not None:
            self.densityrelsample = densityrelsample
        if densitysample is not None:
            self.densitysample = densitysample
        if factorgasequiv is not None:
            self.factorgasequiv = factorgasequiv
        if fluid_analysis is not None:
            self.fluid_analysis = fluid_analysis
        if fluid_analysisl_liquid_comps is not None:
            self.fluid_analysisl_liquid_comps = fluid_analysisl_liquid_comps
        if idrec is not None:
            self.idrec = idrec
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idwell is not None:
            self.idwell = idwell
        if molecularmassrel is not None:
            self.molecularmassrel = molecularmassrel
        if molecularmasssample is not None:
            self.molecularmasssample = molecularmasssample
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if systag is not None:
            self.systag = systag
        if temprefapic7 is not None:
            self.temprefapic7 = temprefapic7
        if temprefapisample is not None:
            self.temprefapisample = temprefapisample
        if temprefc7 is not None:
            self.temprefc7 = temprefc7
        if temprefsample is not None:
            self.temprefsample = temprefsample

    @property
    def apic7(self):
        """Gets the apic7 of this FluidAnalysisLiquid.  # noqa: E501


        :return: The apic7 of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: OneOfFluidAnalysisLiquidApic7
        """
        return self._apic7

    @apic7.setter
    def apic7(self, apic7):
        """Sets the apic7 of this FluidAnalysisLiquid.


        :param apic7: The apic7 of this FluidAnalysisLiquid.  # noqa: E501
        :type: OneOfFluidAnalysisLiquidApic7
        """

        self._apic7 = apic7

    @property
    def apisample(self):
        """Gets the apisample of this FluidAnalysisLiquid.  # noqa: E501


        :return: The apisample of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: OneOfFluidAnalysisLiquidApisample
        """
        return self._apisample

    @apisample.setter
    def apisample(self, apisample):
        """Sets the apisample of this FluidAnalysisLiquid.


        :param apisample: The apisample of this FluidAnalysisLiquid.  # noqa: E501
        :type: OneOfFluidAnalysisLiquidApisample
        """

        self._apisample = apisample

    @property
    def com(self):
        """Gets the com of this FluidAnalysisLiquid.  # noqa: E501


        :return: The com of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: str
        """
        return self._com

    @com.setter
    def com(self, com):
        """Sets the com of this FluidAnalysisLiquid.


        :param com: The com of this FluidAnalysisLiquid.  # noqa: E501
        :type: str
        """

        self._com = com

    @property
    def densityc7(self):
        """Gets the densityc7 of this FluidAnalysisLiquid.  # noqa: E501


        :return: The densityc7 of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: OneOfFluidAnalysisLiquidDensityc7
        """
        return self._densityc7

    @densityc7.setter
    def densityc7(self, densityc7):
        """Sets the densityc7 of this FluidAnalysisLiquid.


        :param densityc7: The densityc7 of this FluidAnalysisLiquid.  # noqa: E501
        :type: OneOfFluidAnalysisLiquidDensityc7
        """

        self._densityc7 = densityc7

    @property
    def densityrelc7(self):
        """Gets the densityrelc7 of this FluidAnalysisLiquid.  # noqa: E501


        :return: The densityrelc7 of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: OneOfFluidAnalysisLiquidDensityrelc7
        """
        return self._densityrelc7

    @densityrelc7.setter
    def densityrelc7(self, densityrelc7):
        """Sets the densityrelc7 of this FluidAnalysisLiquid.


        :param densityrelc7: The densityrelc7 of this FluidAnalysisLiquid.  # noqa: E501
        :type: OneOfFluidAnalysisLiquidDensityrelc7
        """

        self._densityrelc7 = densityrelc7

    @property
    def densityrelsample(self):
        """Gets the densityrelsample of this FluidAnalysisLiquid.  # noqa: E501


        :return: The densityrelsample of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: OneOfFluidAnalysisLiquidDensityrelsample
        """
        return self._densityrelsample

    @densityrelsample.setter
    def densityrelsample(self, densityrelsample):
        """Sets the densityrelsample of this FluidAnalysisLiquid.


        :param densityrelsample: The densityrelsample of this FluidAnalysisLiquid.  # noqa: E501
        :type: OneOfFluidAnalysisLiquidDensityrelsample
        """

        self._densityrelsample = densityrelsample

    @property
    def densitysample(self):
        """Gets the densitysample of this FluidAnalysisLiquid.  # noqa: E501


        :return: The densitysample of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: OneOfFluidAnalysisLiquidDensitysample
        """
        return self._densitysample

    @densitysample.setter
    def densitysample(self, densitysample):
        """Sets the densitysample of this FluidAnalysisLiquid.


        :param densitysample: The densitysample of this FluidAnalysisLiquid.  # noqa: E501
        :type: OneOfFluidAnalysisLiquidDensitysample
        """

        self._densitysample = densitysample

    @property
    def factorgasequiv(self):
        """Gets the factorgasequiv of this FluidAnalysisLiquid.  # noqa: E501


        :return: The factorgasequiv of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: OneOfFluidAnalysisLiquidFactorgasequiv
        """
        return self._factorgasequiv

    @factorgasequiv.setter
    def factorgasequiv(self, factorgasequiv):
        """Sets the factorgasequiv of this FluidAnalysisLiquid.


        :param factorgasequiv: The factorgasequiv of this FluidAnalysisLiquid.  # noqa: E501
        :type: OneOfFluidAnalysisLiquidFactorgasequiv
        """

        self._factorgasequiv = factorgasequiv

    @property
    def fluid_analysis(self):
        """Gets the fluid_analysis of this FluidAnalysisLiquid.  # noqa: E501


        :return: The fluid_analysis of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: AnyOfFluidAnalysisLiquidFluidAnalysis
        """
        return self._fluid_analysis

    @fluid_analysis.setter
    def fluid_analysis(self, fluid_analysis):
        """Sets the fluid_analysis of this FluidAnalysisLiquid.


        :param fluid_analysis: The fluid_analysis of this FluidAnalysisLiquid.  # noqa: E501
        :type: AnyOfFluidAnalysisLiquidFluidAnalysis
        """

        self._fluid_analysis = fluid_analysis

    @property
    def fluid_analysisl_liquid_comps(self):
        """Gets the fluid_analysisl_liquid_comps of this FluidAnalysisLiquid.  # noqa: E501


        :return: The fluid_analysisl_liquid_comps of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: list[FluidAnalysisLiquidComp]
        """
        return self._fluid_analysisl_liquid_comps

    @fluid_analysisl_liquid_comps.setter
    def fluid_analysisl_liquid_comps(self, fluid_analysisl_liquid_comps):
        """Sets the fluid_analysisl_liquid_comps of this FluidAnalysisLiquid.


        :param fluid_analysisl_liquid_comps: The fluid_analysisl_liquid_comps of this FluidAnalysisLiquid.  # noqa: E501
        :type: list[FluidAnalysisLiquidComp]
        """

        self._fluid_analysisl_liquid_comps = fluid_analysisl_liquid_comps

    @property
    def idrec(self):
        """Gets the idrec of this FluidAnalysisLiquid.  # noqa: E501


        :return: The idrec of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this FluidAnalysisLiquid.


        :param idrec: The idrec of this FluidAnalysisLiquid.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecparent(self):
        """Gets the idrecparent of this FluidAnalysisLiquid.  # noqa: E501


        :return: The idrecparent of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this FluidAnalysisLiquid.


        :param idrecparent: The idrecparent of this FluidAnalysisLiquid.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idwell(self):
        """Gets the idwell of this FluidAnalysisLiquid.  # noqa: E501


        :return: The idwell of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this FluidAnalysisLiquid.


        :param idwell: The idwell of this FluidAnalysisLiquid.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def molecularmassrel(self):
        """Gets the molecularmassrel of this FluidAnalysisLiquid.  # noqa: E501


        :return: The molecularmassrel of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: OneOfFluidAnalysisLiquidMolecularmassrel
        """
        return self._molecularmassrel

    @molecularmassrel.setter
    def molecularmassrel(self, molecularmassrel):
        """Sets the molecularmassrel of this FluidAnalysisLiquid.


        :param molecularmassrel: The molecularmassrel of this FluidAnalysisLiquid.  # noqa: E501
        :type: OneOfFluidAnalysisLiquidMolecularmassrel
        """

        self._molecularmassrel = molecularmassrel

    @property
    def molecularmasssample(self):
        """Gets the molecularmasssample of this FluidAnalysisLiquid.  # noqa: E501


        :return: The molecularmasssample of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: OneOfFluidAnalysisLiquidMolecularmasssample
        """
        return self._molecularmasssample

    @molecularmasssample.setter
    def molecularmasssample(self, molecularmasssample):
        """Sets the molecularmasssample of this FluidAnalysisLiquid.


        :param molecularmasssample: The molecularmasssample of this FluidAnalysisLiquid.  # noqa: E501
        :type: OneOfFluidAnalysisLiquidMolecularmasssample
        """

        self._molecularmasssample = molecularmasssample

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this FluidAnalysisLiquid.  # noqa: E501


        :return: The syscreatedate of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this FluidAnalysisLiquid.


        :param syscreatedate: The syscreatedate of this FluidAnalysisLiquid.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this FluidAnalysisLiquid.  # noqa: E501


        :return: The syscreateuser of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this FluidAnalysisLiquid.


        :param syscreateuser: The syscreateuser of this FluidAnalysisLiquid.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this FluidAnalysisLiquid.  # noqa: E501


        :return: The syslockchildren of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this FluidAnalysisLiquid.


        :param syslockchildren: The syslockchildren of this FluidAnalysisLiquid.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this FluidAnalysisLiquid.  # noqa: E501


        :return: The syslockchildrenui of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this FluidAnalysisLiquid.


        :param syslockchildrenui: The syslockchildrenui of this FluidAnalysisLiquid.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this FluidAnalysisLiquid.  # noqa: E501


        :return: The syslockdate of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this FluidAnalysisLiquid.


        :param syslockdate: The syslockdate of this FluidAnalysisLiquid.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this FluidAnalysisLiquid.  # noqa: E501


        :return: The syslockme of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this FluidAnalysisLiquid.


        :param syslockme: The syslockme of this FluidAnalysisLiquid.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this FluidAnalysisLiquid.  # noqa: E501


        :return: The syslockmeui of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this FluidAnalysisLiquid.


        :param syslockmeui: The syslockmeui of this FluidAnalysisLiquid.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this FluidAnalysisLiquid.  # noqa: E501


        :return: The sysmoddate of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this FluidAnalysisLiquid.


        :param sysmoddate: The sysmoddate of this FluidAnalysisLiquid.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this FluidAnalysisLiquid.  # noqa: E501


        :return: The sysmoduser of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this FluidAnalysisLiquid.


        :param sysmoduser: The sysmoduser of this FluidAnalysisLiquid.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def systag(self):
        """Gets the systag of this FluidAnalysisLiquid.  # noqa: E501


        :return: The systag of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this FluidAnalysisLiquid.


        :param systag: The systag of this FluidAnalysisLiquid.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def temprefapic7(self):
        """Gets the temprefapic7 of this FluidAnalysisLiquid.  # noqa: E501


        :return: The temprefapic7 of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: OneOfFluidAnalysisLiquidTemprefapic7
        """
        return self._temprefapic7

    @temprefapic7.setter
    def temprefapic7(self, temprefapic7):
        """Sets the temprefapic7 of this FluidAnalysisLiquid.


        :param temprefapic7: The temprefapic7 of this FluidAnalysisLiquid.  # noqa: E501
        :type: OneOfFluidAnalysisLiquidTemprefapic7
        """

        self._temprefapic7 = temprefapic7

    @property
    def temprefapisample(self):
        """Gets the temprefapisample of this FluidAnalysisLiquid.  # noqa: E501


        :return: The temprefapisample of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: OneOfFluidAnalysisLiquidTemprefapisample
        """
        return self._temprefapisample

    @temprefapisample.setter
    def temprefapisample(self, temprefapisample):
        """Sets the temprefapisample of this FluidAnalysisLiquid.


        :param temprefapisample: The temprefapisample of this FluidAnalysisLiquid.  # noqa: E501
        :type: OneOfFluidAnalysisLiquidTemprefapisample
        """

        self._temprefapisample = temprefapisample

    @property
    def temprefc7(self):
        """Gets the temprefc7 of this FluidAnalysisLiquid.  # noqa: E501


        :return: The temprefc7 of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: OneOfFluidAnalysisLiquidTemprefc7
        """
        return self._temprefc7

    @temprefc7.setter
    def temprefc7(self, temprefc7):
        """Sets the temprefc7 of this FluidAnalysisLiquid.


        :param temprefc7: The temprefc7 of this FluidAnalysisLiquid.  # noqa: E501
        :type: OneOfFluidAnalysisLiquidTemprefc7
        """

        self._temprefc7 = temprefc7

    @property
    def temprefsample(self):
        """Gets the temprefsample of this FluidAnalysisLiquid.  # noqa: E501


        :return: The temprefsample of this FluidAnalysisLiquid.  # noqa: E501
        :rtype: OneOfFluidAnalysisLiquidTemprefsample
        """
        return self._temprefsample

    @temprefsample.setter
    def temprefsample(self, temprefsample):
        """Sets the temprefsample of this FluidAnalysisLiquid.


        :param temprefsample: The temprefsample of this FluidAnalysisLiquid.  # noqa: E501
        :type: OneOfFluidAnalysisLiquidTemprefsample
        """

        self._temprefsample = temprefsample

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FluidAnalysisLiquid, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FluidAnalysisLiquid):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
