# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class JobWellboreGradient(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'depth': 'OneOfJobWellboreGradientDepth',
        'fracpresmax': 'OneOfJobWellboreGradientFracpresmax',
        'fracpresmin': 'OneOfJobWellboreGradientFracpresmin',
        'fracpresml': 'OneOfJobWellboreGradientFracpresml',
        'idrec': 'str',
        'idrecparent': 'str',
        'idrecwellbore': 'str',
        'idrecwellboretk': 'str',
        'idwell': 'str',
        'job': 'AnyOfJobWellboreGradientJob',
        'note': 'str',
        'porepresmax': 'OneOfJobWellboreGradientPorepresmax',
        'porepresmin': 'OneOfJobWellboreGradientPorepresmin',
        'porepresml': 'OneOfJobWellboreGradientPorepresml',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'systag': 'str',
        'temp': 'OneOfJobWellboreGradientTemp'
    }

    attribute_map = {
        'depth': 'depth',
        'fracpresmax': 'fracpresmax',
        'fracpresmin': 'fracpresmin',
        'fracpresml': 'fracpresml',
        'idrec': 'idrec',
        'idrecparent': 'idrecparent',
        'idrecwellbore': 'idrecwellbore',
        'idrecwellboretk': 'idrecwellboretk',
        'idwell': 'idwell',
        'job': 'job',
        'note': 'note',
        'porepresmax': 'porepresmax',
        'porepresmin': 'porepresmin',
        'porepresml': 'porepresml',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'systag': 'systag',
        'temp': 'temp'
    }

    def __init__(self, depth=None, fracpresmax=None, fracpresmin=None, fracpresml=None, idrec=None, idrecparent=None, idrecwellbore=None, idrecwellboretk=None, idwell=None, job=None, note=None, porepresmax=None, porepresmin=None, porepresml=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, systag=None, temp=None):  # noqa: E501
        """JobWellboreGradient - a model defined in Swagger"""  # noqa: E501
        self._depth = None
        self._fracpresmax = None
        self._fracpresmin = None
        self._fracpresml = None
        self._idrec = None
        self._idrecparent = None
        self._idrecwellbore = None
        self._idrecwellboretk = None
        self._idwell = None
        self._job = None
        self._note = None
        self._porepresmax = None
        self._porepresmin = None
        self._porepresml = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._systag = None
        self._temp = None
        self.discriminator = None
        if depth is not None:
            self.depth = depth
        if fracpresmax is not None:
            self.fracpresmax = fracpresmax
        if fracpresmin is not None:
            self.fracpresmin = fracpresmin
        if fracpresml is not None:
            self.fracpresml = fracpresml
        if idrec is not None:
            self.idrec = idrec
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idrecwellbore is not None:
            self.idrecwellbore = idrecwellbore
        if idrecwellboretk is not None:
            self.idrecwellboretk = idrecwellboretk
        if idwell is not None:
            self.idwell = idwell
        if job is not None:
            self.job = job
        if note is not None:
            self.note = note
        if porepresmax is not None:
            self.porepresmax = porepresmax
        if porepresmin is not None:
            self.porepresmin = porepresmin
        if porepresml is not None:
            self.porepresml = porepresml
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if systag is not None:
            self.systag = systag
        if temp is not None:
            self.temp = temp

    @property
    def depth(self):
        """Gets the depth of this JobWellboreGradient.  # noqa: E501


        :return: The depth of this JobWellboreGradient.  # noqa: E501
        :rtype: OneOfJobWellboreGradientDepth
        """
        return self._depth

    @depth.setter
    def depth(self, depth):
        """Sets the depth of this JobWellboreGradient.


        :param depth: The depth of this JobWellboreGradient.  # noqa: E501
        :type: OneOfJobWellboreGradientDepth
        """

        self._depth = depth

    @property
    def fracpresmax(self):
        """Gets the fracpresmax of this JobWellboreGradient.  # noqa: E501


        :return: The fracpresmax of this JobWellboreGradient.  # noqa: E501
        :rtype: OneOfJobWellboreGradientFracpresmax
        """
        return self._fracpresmax

    @fracpresmax.setter
    def fracpresmax(self, fracpresmax):
        """Sets the fracpresmax of this JobWellboreGradient.


        :param fracpresmax: The fracpresmax of this JobWellboreGradient.  # noqa: E501
        :type: OneOfJobWellboreGradientFracpresmax
        """

        self._fracpresmax = fracpresmax

    @property
    def fracpresmin(self):
        """Gets the fracpresmin of this JobWellboreGradient.  # noqa: E501


        :return: The fracpresmin of this JobWellboreGradient.  # noqa: E501
        :rtype: OneOfJobWellboreGradientFracpresmin
        """
        return self._fracpresmin

    @fracpresmin.setter
    def fracpresmin(self, fracpresmin):
        """Sets the fracpresmin of this JobWellboreGradient.


        :param fracpresmin: The fracpresmin of this JobWellboreGradient.  # noqa: E501
        :type: OneOfJobWellboreGradientFracpresmin
        """

        self._fracpresmin = fracpresmin

    @property
    def fracpresml(self):
        """Gets the fracpresml of this JobWellboreGradient.  # noqa: E501


        :return: The fracpresml of this JobWellboreGradient.  # noqa: E501
        :rtype: OneOfJobWellboreGradientFracpresml
        """
        return self._fracpresml

    @fracpresml.setter
    def fracpresml(self, fracpresml):
        """Sets the fracpresml of this JobWellboreGradient.


        :param fracpresml: The fracpresml of this JobWellboreGradient.  # noqa: E501
        :type: OneOfJobWellboreGradientFracpresml
        """

        self._fracpresml = fracpresml

    @property
    def idrec(self):
        """Gets the idrec of this JobWellboreGradient.  # noqa: E501


        :return: The idrec of this JobWellboreGradient.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this JobWellboreGradient.


        :param idrec: The idrec of this JobWellboreGradient.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecparent(self):
        """Gets the idrecparent of this JobWellboreGradient.  # noqa: E501


        :return: The idrecparent of this JobWellboreGradient.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this JobWellboreGradient.


        :param idrecparent: The idrecparent of this JobWellboreGradient.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idrecwellbore(self):
        """Gets the idrecwellbore of this JobWellboreGradient.  # noqa: E501


        :return: The idrecwellbore of this JobWellboreGradient.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellbore

    @idrecwellbore.setter
    def idrecwellbore(self, idrecwellbore):
        """Sets the idrecwellbore of this JobWellboreGradient.


        :param idrecwellbore: The idrecwellbore of this JobWellboreGradient.  # noqa: E501
        :type: str
        """

        self._idrecwellbore = idrecwellbore

    @property
    def idrecwellboretk(self):
        """Gets the idrecwellboretk of this JobWellboreGradient.  # noqa: E501


        :return: The idrecwellboretk of this JobWellboreGradient.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellboretk

    @idrecwellboretk.setter
    def idrecwellboretk(self, idrecwellboretk):
        """Sets the idrecwellboretk of this JobWellboreGradient.


        :param idrecwellboretk: The idrecwellboretk of this JobWellboreGradient.  # noqa: E501
        :type: str
        """

        self._idrecwellboretk = idrecwellboretk

    @property
    def idwell(self):
        """Gets the idwell of this JobWellboreGradient.  # noqa: E501


        :return: The idwell of this JobWellboreGradient.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this JobWellboreGradient.


        :param idwell: The idwell of this JobWellboreGradient.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def job(self):
        """Gets the job of this JobWellboreGradient.  # noqa: E501


        :return: The job of this JobWellboreGradient.  # noqa: E501
        :rtype: AnyOfJobWellboreGradientJob
        """
        return self._job

    @job.setter
    def job(self, job):
        """Sets the job of this JobWellboreGradient.


        :param job: The job of this JobWellboreGradient.  # noqa: E501
        :type: AnyOfJobWellboreGradientJob
        """

        self._job = job

    @property
    def note(self):
        """Gets the note of this JobWellboreGradient.  # noqa: E501


        :return: The note of this JobWellboreGradient.  # noqa: E501
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this JobWellboreGradient.


        :param note: The note of this JobWellboreGradient.  # noqa: E501
        :type: str
        """

        self._note = note

    @property
    def porepresmax(self):
        """Gets the porepresmax of this JobWellboreGradient.  # noqa: E501


        :return: The porepresmax of this JobWellboreGradient.  # noqa: E501
        :rtype: OneOfJobWellboreGradientPorepresmax
        """
        return self._porepresmax

    @porepresmax.setter
    def porepresmax(self, porepresmax):
        """Sets the porepresmax of this JobWellboreGradient.


        :param porepresmax: The porepresmax of this JobWellboreGradient.  # noqa: E501
        :type: OneOfJobWellboreGradientPorepresmax
        """

        self._porepresmax = porepresmax

    @property
    def porepresmin(self):
        """Gets the porepresmin of this JobWellboreGradient.  # noqa: E501


        :return: The porepresmin of this JobWellboreGradient.  # noqa: E501
        :rtype: OneOfJobWellboreGradientPorepresmin
        """
        return self._porepresmin

    @porepresmin.setter
    def porepresmin(self, porepresmin):
        """Sets the porepresmin of this JobWellboreGradient.


        :param porepresmin: The porepresmin of this JobWellboreGradient.  # noqa: E501
        :type: OneOfJobWellboreGradientPorepresmin
        """

        self._porepresmin = porepresmin

    @property
    def porepresml(self):
        """Gets the porepresml of this JobWellboreGradient.  # noqa: E501


        :return: The porepresml of this JobWellboreGradient.  # noqa: E501
        :rtype: OneOfJobWellboreGradientPorepresml
        """
        return self._porepresml

    @porepresml.setter
    def porepresml(self, porepresml):
        """Sets the porepresml of this JobWellboreGradient.


        :param porepresml: The porepresml of this JobWellboreGradient.  # noqa: E501
        :type: OneOfJobWellboreGradientPorepresml
        """

        self._porepresml = porepresml

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this JobWellboreGradient.  # noqa: E501


        :return: The syscreatedate of this JobWellboreGradient.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this JobWellboreGradient.


        :param syscreatedate: The syscreatedate of this JobWellboreGradient.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this JobWellboreGradient.  # noqa: E501


        :return: The syscreateuser of this JobWellboreGradient.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this JobWellboreGradient.


        :param syscreateuser: The syscreateuser of this JobWellboreGradient.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this JobWellboreGradient.  # noqa: E501


        :return: The syslockchildren of this JobWellboreGradient.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this JobWellboreGradient.


        :param syslockchildren: The syslockchildren of this JobWellboreGradient.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this JobWellboreGradient.  # noqa: E501


        :return: The syslockchildrenui of this JobWellboreGradient.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this JobWellboreGradient.


        :param syslockchildrenui: The syslockchildrenui of this JobWellboreGradient.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this JobWellboreGradient.  # noqa: E501


        :return: The syslockdate of this JobWellboreGradient.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this JobWellboreGradient.


        :param syslockdate: The syslockdate of this JobWellboreGradient.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this JobWellboreGradient.  # noqa: E501


        :return: The syslockme of this JobWellboreGradient.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this JobWellboreGradient.


        :param syslockme: The syslockme of this JobWellboreGradient.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this JobWellboreGradient.  # noqa: E501


        :return: The syslockmeui of this JobWellboreGradient.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this JobWellboreGradient.


        :param syslockmeui: The syslockmeui of this JobWellboreGradient.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this JobWellboreGradient.  # noqa: E501


        :return: The sysmoddate of this JobWellboreGradient.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this JobWellboreGradient.


        :param sysmoddate: The sysmoddate of this JobWellboreGradient.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this JobWellboreGradient.  # noqa: E501


        :return: The sysmoduser of this JobWellboreGradient.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this JobWellboreGradient.


        :param sysmoduser: The sysmoduser of this JobWellboreGradient.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def systag(self):
        """Gets the systag of this JobWellboreGradient.  # noqa: E501


        :return: The systag of this JobWellboreGradient.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this JobWellboreGradient.


        :param systag: The systag of this JobWellboreGradient.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def temp(self):
        """Gets the temp of this JobWellboreGradient.  # noqa: E501


        :return: The temp of this JobWellboreGradient.  # noqa: E501
        :rtype: OneOfJobWellboreGradientTemp
        """
        return self._temp

    @temp.setter
    def temp(self, temp):
        """Sets the temp of this JobWellboreGradient.


        :param temp: The temp of this JobWellboreGradient.  # noqa: E501
        :type: OneOfJobWellboreGradientTemp
        """

        self._temp = temp

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(JobWellboreGradient, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobWellboreGradient):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
