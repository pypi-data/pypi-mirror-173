# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GeoEval(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'com': 'str',
        'dttm': 'datetime',
        'evaltyp': 'str',
        'geo_eval_fluids': 'list[GeoEvalFluids]',
        'geo_eval_grains_zs': 'list[GeoEvalGrainsZ]',
        'geo_eval_liths': 'list[GeoEvalLith]',
        'geo_eval_others': 'list[GeoEvalOther]',
        'geo_eval_porosities': 'list[GeoEvalPorosity]',
        'geo_eval_qualifiers': 'list[GeoEvalQualifier]',
        'geo_eval_sample_des': 'list[GeoEvalSampleDes]',
        'geo_eval_show_gases': 'list[GeoEvalShowGas]',
        'geo_eval_show_oils': 'list[GeoEvalShowOil]',
        'geoevalida': 'str',
        'geoevalidb': 'str',
        'geoevalidc': 'str',
        'geologistcompany': 'str',
        'geologistname': 'str',
        'idrec': 'str',
        'idrecwellbore': 'str',
        'idrecwellboretk': 'str',
        'idwell': 'str',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'systag': 'str',
        'wellheader': 'AnyOfGeoEvalWellheader'
    }

    attribute_map = {
        'com': 'com',
        'dttm': 'dttm',
        'evaltyp': 'evaltyp',
        'geo_eval_fluids': 'geoEvalFluids',
        'geo_eval_grains_zs': 'geoEvalGrainsZs',
        'geo_eval_liths': 'geoEvalLiths',
        'geo_eval_others': 'geoEvalOthers',
        'geo_eval_porosities': 'geoEvalPorosities',
        'geo_eval_qualifiers': 'geoEvalQualifiers',
        'geo_eval_sample_des': 'geoEvalSampleDes',
        'geo_eval_show_gases': 'geoEvalShowGases',
        'geo_eval_show_oils': 'geoEvalShowOils',
        'geoevalida': 'geoevalida',
        'geoevalidb': 'geoevalidb',
        'geoevalidc': 'geoevalidc',
        'geologistcompany': 'geologistcompany',
        'geologistname': 'geologistname',
        'idrec': 'idrec',
        'idrecwellbore': 'idrecwellbore',
        'idrecwellboretk': 'idrecwellboretk',
        'idwell': 'idwell',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'systag': 'systag',
        'wellheader': 'wellheader'
    }

    def __init__(self, com=None, dttm=None, evaltyp=None, geo_eval_fluids=None, geo_eval_grains_zs=None, geo_eval_liths=None, geo_eval_others=None, geo_eval_porosities=None, geo_eval_qualifiers=None, geo_eval_sample_des=None, geo_eval_show_gases=None, geo_eval_show_oils=None, geoevalida=None, geoevalidb=None, geoevalidc=None, geologistcompany=None, geologistname=None, idrec=None, idrecwellbore=None, idrecwellboretk=None, idwell=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, systag=None, wellheader=None):  # noqa: E501
        """GeoEval - a model defined in Swagger"""  # noqa: E501
        self._com = None
        self._dttm = None
        self._evaltyp = None
        self._geo_eval_fluids = None
        self._geo_eval_grains_zs = None
        self._geo_eval_liths = None
        self._geo_eval_others = None
        self._geo_eval_porosities = None
        self._geo_eval_qualifiers = None
        self._geo_eval_sample_des = None
        self._geo_eval_show_gases = None
        self._geo_eval_show_oils = None
        self._geoevalida = None
        self._geoevalidb = None
        self._geoevalidc = None
        self._geologistcompany = None
        self._geologistname = None
        self._idrec = None
        self._idrecwellbore = None
        self._idrecwellboretk = None
        self._idwell = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._systag = None
        self._wellheader = None
        self.discriminator = None
        if com is not None:
            self.com = com
        if dttm is not None:
            self.dttm = dttm
        if evaltyp is not None:
            self.evaltyp = evaltyp
        if geo_eval_fluids is not None:
            self.geo_eval_fluids = geo_eval_fluids
        if geo_eval_grains_zs is not None:
            self.geo_eval_grains_zs = geo_eval_grains_zs
        if geo_eval_liths is not None:
            self.geo_eval_liths = geo_eval_liths
        if geo_eval_others is not None:
            self.geo_eval_others = geo_eval_others
        if geo_eval_porosities is not None:
            self.geo_eval_porosities = geo_eval_porosities
        if geo_eval_qualifiers is not None:
            self.geo_eval_qualifiers = geo_eval_qualifiers
        if geo_eval_sample_des is not None:
            self.geo_eval_sample_des = geo_eval_sample_des
        if geo_eval_show_gases is not None:
            self.geo_eval_show_gases = geo_eval_show_gases
        if geo_eval_show_oils is not None:
            self.geo_eval_show_oils = geo_eval_show_oils
        if geoevalida is not None:
            self.geoevalida = geoevalida
        if geoevalidb is not None:
            self.geoevalidb = geoevalidb
        if geoevalidc is not None:
            self.geoevalidc = geoevalidc
        if geologistcompany is not None:
            self.geologistcompany = geologistcompany
        if geologistname is not None:
            self.geologistname = geologistname
        if idrec is not None:
            self.idrec = idrec
        if idrecwellbore is not None:
            self.idrecwellbore = idrecwellbore
        if idrecwellboretk is not None:
            self.idrecwellboretk = idrecwellboretk
        if idwell is not None:
            self.idwell = idwell
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if systag is not None:
            self.systag = systag
        if wellheader is not None:
            self.wellheader = wellheader

    @property
    def com(self):
        """Gets the com of this GeoEval.  # noqa: E501


        :return: The com of this GeoEval.  # noqa: E501
        :rtype: str
        """
        return self._com

    @com.setter
    def com(self, com):
        """Sets the com of this GeoEval.


        :param com: The com of this GeoEval.  # noqa: E501
        :type: str
        """

        self._com = com

    @property
    def dttm(self):
        """Gets the dttm of this GeoEval.  # noqa: E501


        :return: The dttm of this GeoEval.  # noqa: E501
        :rtype: datetime
        """
        return self._dttm

    @dttm.setter
    def dttm(self, dttm):
        """Sets the dttm of this GeoEval.


        :param dttm: The dttm of this GeoEval.  # noqa: E501
        :type: datetime
        """

        self._dttm = dttm

    @property
    def evaltyp(self):
        """Gets the evaltyp of this GeoEval.  # noqa: E501


        :return: The evaltyp of this GeoEval.  # noqa: E501
        :rtype: str
        """
        return self._evaltyp

    @evaltyp.setter
    def evaltyp(self, evaltyp):
        """Sets the evaltyp of this GeoEval.


        :param evaltyp: The evaltyp of this GeoEval.  # noqa: E501
        :type: str
        """

        self._evaltyp = evaltyp

    @property
    def geo_eval_fluids(self):
        """Gets the geo_eval_fluids of this GeoEval.  # noqa: E501


        :return: The geo_eval_fluids of this GeoEval.  # noqa: E501
        :rtype: list[GeoEvalFluids]
        """
        return self._geo_eval_fluids

    @geo_eval_fluids.setter
    def geo_eval_fluids(self, geo_eval_fluids):
        """Sets the geo_eval_fluids of this GeoEval.


        :param geo_eval_fluids: The geo_eval_fluids of this GeoEval.  # noqa: E501
        :type: list[GeoEvalFluids]
        """

        self._geo_eval_fluids = geo_eval_fluids

    @property
    def geo_eval_grains_zs(self):
        """Gets the geo_eval_grains_zs of this GeoEval.  # noqa: E501


        :return: The geo_eval_grains_zs of this GeoEval.  # noqa: E501
        :rtype: list[GeoEvalGrainsZ]
        """
        return self._geo_eval_grains_zs

    @geo_eval_grains_zs.setter
    def geo_eval_grains_zs(self, geo_eval_grains_zs):
        """Sets the geo_eval_grains_zs of this GeoEval.


        :param geo_eval_grains_zs: The geo_eval_grains_zs of this GeoEval.  # noqa: E501
        :type: list[GeoEvalGrainsZ]
        """

        self._geo_eval_grains_zs = geo_eval_grains_zs

    @property
    def geo_eval_liths(self):
        """Gets the geo_eval_liths of this GeoEval.  # noqa: E501


        :return: The geo_eval_liths of this GeoEval.  # noqa: E501
        :rtype: list[GeoEvalLith]
        """
        return self._geo_eval_liths

    @geo_eval_liths.setter
    def geo_eval_liths(self, geo_eval_liths):
        """Sets the geo_eval_liths of this GeoEval.


        :param geo_eval_liths: The geo_eval_liths of this GeoEval.  # noqa: E501
        :type: list[GeoEvalLith]
        """

        self._geo_eval_liths = geo_eval_liths

    @property
    def geo_eval_others(self):
        """Gets the geo_eval_others of this GeoEval.  # noqa: E501


        :return: The geo_eval_others of this GeoEval.  # noqa: E501
        :rtype: list[GeoEvalOther]
        """
        return self._geo_eval_others

    @geo_eval_others.setter
    def geo_eval_others(self, geo_eval_others):
        """Sets the geo_eval_others of this GeoEval.


        :param geo_eval_others: The geo_eval_others of this GeoEval.  # noqa: E501
        :type: list[GeoEvalOther]
        """

        self._geo_eval_others = geo_eval_others

    @property
    def geo_eval_porosities(self):
        """Gets the geo_eval_porosities of this GeoEval.  # noqa: E501


        :return: The geo_eval_porosities of this GeoEval.  # noqa: E501
        :rtype: list[GeoEvalPorosity]
        """
        return self._geo_eval_porosities

    @geo_eval_porosities.setter
    def geo_eval_porosities(self, geo_eval_porosities):
        """Sets the geo_eval_porosities of this GeoEval.


        :param geo_eval_porosities: The geo_eval_porosities of this GeoEval.  # noqa: E501
        :type: list[GeoEvalPorosity]
        """

        self._geo_eval_porosities = geo_eval_porosities

    @property
    def geo_eval_qualifiers(self):
        """Gets the geo_eval_qualifiers of this GeoEval.  # noqa: E501


        :return: The geo_eval_qualifiers of this GeoEval.  # noqa: E501
        :rtype: list[GeoEvalQualifier]
        """
        return self._geo_eval_qualifiers

    @geo_eval_qualifiers.setter
    def geo_eval_qualifiers(self, geo_eval_qualifiers):
        """Sets the geo_eval_qualifiers of this GeoEval.


        :param geo_eval_qualifiers: The geo_eval_qualifiers of this GeoEval.  # noqa: E501
        :type: list[GeoEvalQualifier]
        """

        self._geo_eval_qualifiers = geo_eval_qualifiers

    @property
    def geo_eval_sample_des(self):
        """Gets the geo_eval_sample_des of this GeoEval.  # noqa: E501


        :return: The geo_eval_sample_des of this GeoEval.  # noqa: E501
        :rtype: list[GeoEvalSampleDes]
        """
        return self._geo_eval_sample_des

    @geo_eval_sample_des.setter
    def geo_eval_sample_des(self, geo_eval_sample_des):
        """Sets the geo_eval_sample_des of this GeoEval.


        :param geo_eval_sample_des: The geo_eval_sample_des of this GeoEval.  # noqa: E501
        :type: list[GeoEvalSampleDes]
        """

        self._geo_eval_sample_des = geo_eval_sample_des

    @property
    def geo_eval_show_gases(self):
        """Gets the geo_eval_show_gases of this GeoEval.  # noqa: E501


        :return: The geo_eval_show_gases of this GeoEval.  # noqa: E501
        :rtype: list[GeoEvalShowGas]
        """
        return self._geo_eval_show_gases

    @geo_eval_show_gases.setter
    def geo_eval_show_gases(self, geo_eval_show_gases):
        """Sets the geo_eval_show_gases of this GeoEval.


        :param geo_eval_show_gases: The geo_eval_show_gases of this GeoEval.  # noqa: E501
        :type: list[GeoEvalShowGas]
        """

        self._geo_eval_show_gases = geo_eval_show_gases

    @property
    def geo_eval_show_oils(self):
        """Gets the geo_eval_show_oils of this GeoEval.  # noqa: E501


        :return: The geo_eval_show_oils of this GeoEval.  # noqa: E501
        :rtype: list[GeoEvalShowOil]
        """
        return self._geo_eval_show_oils

    @geo_eval_show_oils.setter
    def geo_eval_show_oils(self, geo_eval_show_oils):
        """Sets the geo_eval_show_oils of this GeoEval.


        :param geo_eval_show_oils: The geo_eval_show_oils of this GeoEval.  # noqa: E501
        :type: list[GeoEvalShowOil]
        """

        self._geo_eval_show_oils = geo_eval_show_oils

    @property
    def geoevalida(self):
        """Gets the geoevalida of this GeoEval.  # noqa: E501


        :return: The geoevalida of this GeoEval.  # noqa: E501
        :rtype: str
        """
        return self._geoevalida

    @geoevalida.setter
    def geoevalida(self, geoevalida):
        """Sets the geoevalida of this GeoEval.


        :param geoevalida: The geoevalida of this GeoEval.  # noqa: E501
        :type: str
        """

        self._geoevalida = geoevalida

    @property
    def geoevalidb(self):
        """Gets the geoevalidb of this GeoEval.  # noqa: E501


        :return: The geoevalidb of this GeoEval.  # noqa: E501
        :rtype: str
        """
        return self._geoevalidb

    @geoevalidb.setter
    def geoevalidb(self, geoevalidb):
        """Sets the geoevalidb of this GeoEval.


        :param geoevalidb: The geoevalidb of this GeoEval.  # noqa: E501
        :type: str
        """

        self._geoevalidb = geoevalidb

    @property
    def geoevalidc(self):
        """Gets the geoevalidc of this GeoEval.  # noqa: E501


        :return: The geoevalidc of this GeoEval.  # noqa: E501
        :rtype: str
        """
        return self._geoevalidc

    @geoevalidc.setter
    def geoevalidc(self, geoevalidc):
        """Sets the geoevalidc of this GeoEval.


        :param geoevalidc: The geoevalidc of this GeoEval.  # noqa: E501
        :type: str
        """

        self._geoevalidc = geoevalidc

    @property
    def geologistcompany(self):
        """Gets the geologistcompany of this GeoEval.  # noqa: E501


        :return: The geologistcompany of this GeoEval.  # noqa: E501
        :rtype: str
        """
        return self._geologistcompany

    @geologistcompany.setter
    def geologistcompany(self, geologistcompany):
        """Sets the geologistcompany of this GeoEval.


        :param geologistcompany: The geologistcompany of this GeoEval.  # noqa: E501
        :type: str
        """

        self._geologistcompany = geologistcompany

    @property
    def geologistname(self):
        """Gets the geologistname of this GeoEval.  # noqa: E501


        :return: The geologistname of this GeoEval.  # noqa: E501
        :rtype: str
        """
        return self._geologistname

    @geologistname.setter
    def geologistname(self, geologistname):
        """Sets the geologistname of this GeoEval.


        :param geologistname: The geologistname of this GeoEval.  # noqa: E501
        :type: str
        """

        self._geologistname = geologistname

    @property
    def idrec(self):
        """Gets the idrec of this GeoEval.  # noqa: E501


        :return: The idrec of this GeoEval.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this GeoEval.


        :param idrec: The idrec of this GeoEval.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecwellbore(self):
        """Gets the idrecwellbore of this GeoEval.  # noqa: E501


        :return: The idrecwellbore of this GeoEval.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellbore

    @idrecwellbore.setter
    def idrecwellbore(self, idrecwellbore):
        """Sets the idrecwellbore of this GeoEval.


        :param idrecwellbore: The idrecwellbore of this GeoEval.  # noqa: E501
        :type: str
        """

        self._idrecwellbore = idrecwellbore

    @property
    def idrecwellboretk(self):
        """Gets the idrecwellboretk of this GeoEval.  # noqa: E501


        :return: The idrecwellboretk of this GeoEval.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellboretk

    @idrecwellboretk.setter
    def idrecwellboretk(self, idrecwellboretk):
        """Sets the idrecwellboretk of this GeoEval.


        :param idrecwellboretk: The idrecwellboretk of this GeoEval.  # noqa: E501
        :type: str
        """

        self._idrecwellboretk = idrecwellboretk

    @property
    def idwell(self):
        """Gets the idwell of this GeoEval.  # noqa: E501


        :return: The idwell of this GeoEval.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this GeoEval.


        :param idwell: The idwell of this GeoEval.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this GeoEval.  # noqa: E501


        :return: The syscreatedate of this GeoEval.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this GeoEval.


        :param syscreatedate: The syscreatedate of this GeoEval.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this GeoEval.  # noqa: E501


        :return: The syscreateuser of this GeoEval.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this GeoEval.


        :param syscreateuser: The syscreateuser of this GeoEval.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this GeoEval.  # noqa: E501


        :return: The syslockchildren of this GeoEval.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this GeoEval.


        :param syslockchildren: The syslockchildren of this GeoEval.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this GeoEval.  # noqa: E501


        :return: The syslockchildrenui of this GeoEval.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this GeoEval.


        :param syslockchildrenui: The syslockchildrenui of this GeoEval.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this GeoEval.  # noqa: E501


        :return: The syslockdate of this GeoEval.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this GeoEval.


        :param syslockdate: The syslockdate of this GeoEval.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this GeoEval.  # noqa: E501


        :return: The syslockme of this GeoEval.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this GeoEval.


        :param syslockme: The syslockme of this GeoEval.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this GeoEval.  # noqa: E501


        :return: The syslockmeui of this GeoEval.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this GeoEval.


        :param syslockmeui: The syslockmeui of this GeoEval.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this GeoEval.  # noqa: E501


        :return: The sysmoddate of this GeoEval.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this GeoEval.


        :param sysmoddate: The sysmoddate of this GeoEval.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this GeoEval.  # noqa: E501


        :return: The sysmoduser of this GeoEval.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this GeoEval.


        :param sysmoduser: The sysmoduser of this GeoEval.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def systag(self):
        """Gets the systag of this GeoEval.  # noqa: E501


        :return: The systag of this GeoEval.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this GeoEval.


        :param systag: The systag of this GeoEval.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def wellheader(self):
        """Gets the wellheader of this GeoEval.  # noqa: E501


        :return: The wellheader of this GeoEval.  # noqa: E501
        :rtype: AnyOfGeoEvalWellheader
        """
        return self._wellheader

    @wellheader.setter
    def wellheader(self, wellheader):
        """Sets the wellheader of this GeoEval.


        :param wellheader: The wellheader of this GeoEval.  # noqa: E501
        :type: AnyOfGeoEvalWellheader
        """

        self._wellheader = wellheader

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GeoEval, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GeoEval):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
