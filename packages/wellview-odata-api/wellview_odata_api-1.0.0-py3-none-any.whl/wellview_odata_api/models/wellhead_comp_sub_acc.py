# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class WellheadCompSubAcc(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'conditionpull': 'str',
        'conditionrun': 'str',
        'cost': 'OneOfWellheadCompSubAccCost',
        'costunitlabel': 'str',
        'des': 'str',
        'distancefrombtm': 'OneOfWellheadCompSubAccDistancefrombtm',
        'dttmend': 'datetime',
        'dttmmanufacture': 'datetime',
        'dttmstart': 'datetime',
        'hoursstart': 'OneOfWellheadCompSubAccHoursstart',
        'idrec': 'str',
        'idrecparent': 'str',
        'idwell': 'str',
        'length': 'OneOfWellheadCompSubAccLength',
        'make': 'str',
        'material': 'str',
        'maxpres': 'OneOfWellheadCompSubAccMaxpres',
        'model': 'str',
        'modifydes': 'str',
        'note': 'str',
        'refid': 'str',
        'sn': 'str',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'sysseq': 'int',
        'systag': 'str',
        'sz': 'OneOfWellheadCompSubAccSz',
        'szdes': 'str',
        'typ1': 'str',
        'typ2': 'str',
        'wellhead_comp_sub': 'AnyOfWellheadCompSubAccWellheadCompSub'
    }

    attribute_map = {
        'conditionpull': 'conditionpull',
        'conditionrun': 'conditionrun',
        'cost': 'cost',
        'costunitlabel': 'costunitlabel',
        'des': 'des',
        'distancefrombtm': 'distancefrombtm',
        'dttmend': 'dttmend',
        'dttmmanufacture': 'dttmmanufacture',
        'dttmstart': 'dttmstart',
        'hoursstart': 'hoursstart',
        'idrec': 'idrec',
        'idrecparent': 'idrecparent',
        'idwell': 'idwell',
        'length': 'length',
        'make': 'make',
        'material': 'material',
        'maxpres': 'maxpres',
        'model': 'model',
        'modifydes': 'modifydes',
        'note': 'note',
        'refid': 'refid',
        'sn': 'sn',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'sysseq': 'sysseq',
        'systag': 'systag',
        'sz': 'sz',
        'szdes': 'szdes',
        'typ1': 'typ1',
        'typ2': 'typ2',
        'wellhead_comp_sub': 'wellheadCompSub'
    }

    def __init__(self, conditionpull=None, conditionrun=None, cost=None, costunitlabel=None, des=None, distancefrombtm=None, dttmend=None, dttmmanufacture=None, dttmstart=None, hoursstart=None, idrec=None, idrecparent=None, idwell=None, length=None, make=None, material=None, maxpres=None, model=None, modifydes=None, note=None, refid=None, sn=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, sysseq=None, systag=None, sz=None, szdes=None, typ1=None, typ2=None, wellhead_comp_sub=None):  # noqa: E501
        """WellheadCompSubAcc - a model defined in Swagger"""  # noqa: E501
        self._conditionpull = None
        self._conditionrun = None
        self._cost = None
        self._costunitlabel = None
        self._des = None
        self._distancefrombtm = None
        self._dttmend = None
        self._dttmmanufacture = None
        self._dttmstart = None
        self._hoursstart = None
        self._idrec = None
        self._idrecparent = None
        self._idwell = None
        self._length = None
        self._make = None
        self._material = None
        self._maxpres = None
        self._model = None
        self._modifydes = None
        self._note = None
        self._refid = None
        self._sn = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._sysseq = None
        self._systag = None
        self._sz = None
        self._szdes = None
        self._typ1 = None
        self._typ2 = None
        self._wellhead_comp_sub = None
        self.discriminator = None
        if conditionpull is not None:
            self.conditionpull = conditionpull
        if conditionrun is not None:
            self.conditionrun = conditionrun
        if cost is not None:
            self.cost = cost
        if costunitlabel is not None:
            self.costunitlabel = costunitlabel
        if des is not None:
            self.des = des
        if distancefrombtm is not None:
            self.distancefrombtm = distancefrombtm
        if dttmend is not None:
            self.dttmend = dttmend
        if dttmmanufacture is not None:
            self.dttmmanufacture = dttmmanufacture
        if dttmstart is not None:
            self.dttmstart = dttmstart
        if hoursstart is not None:
            self.hoursstart = hoursstart
        if idrec is not None:
            self.idrec = idrec
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idwell is not None:
            self.idwell = idwell
        if length is not None:
            self.length = length
        if make is not None:
            self.make = make
        if material is not None:
            self.material = material
        if maxpres is not None:
            self.maxpres = maxpres
        if model is not None:
            self.model = model
        if modifydes is not None:
            self.modifydes = modifydes
        if note is not None:
            self.note = note
        if refid is not None:
            self.refid = refid
        if sn is not None:
            self.sn = sn
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if sysseq is not None:
            self.sysseq = sysseq
        if systag is not None:
            self.systag = systag
        if sz is not None:
            self.sz = sz
        if szdes is not None:
            self.szdes = szdes
        if typ1 is not None:
            self.typ1 = typ1
        if typ2 is not None:
            self.typ2 = typ2
        if wellhead_comp_sub is not None:
            self.wellhead_comp_sub = wellhead_comp_sub

    @property
    def conditionpull(self):
        """Gets the conditionpull of this WellheadCompSubAcc.  # noqa: E501


        :return: The conditionpull of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._conditionpull

    @conditionpull.setter
    def conditionpull(self, conditionpull):
        """Sets the conditionpull of this WellheadCompSubAcc.


        :param conditionpull: The conditionpull of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._conditionpull = conditionpull

    @property
    def conditionrun(self):
        """Gets the conditionrun of this WellheadCompSubAcc.  # noqa: E501


        :return: The conditionrun of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._conditionrun

    @conditionrun.setter
    def conditionrun(self, conditionrun):
        """Sets the conditionrun of this WellheadCompSubAcc.


        :param conditionrun: The conditionrun of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._conditionrun = conditionrun

    @property
    def cost(self):
        """Gets the cost of this WellheadCompSubAcc.  # noqa: E501


        :return: The cost of this WellheadCompSubAcc.  # noqa: E501
        :rtype: OneOfWellheadCompSubAccCost
        """
        return self._cost

    @cost.setter
    def cost(self, cost):
        """Sets the cost of this WellheadCompSubAcc.


        :param cost: The cost of this WellheadCompSubAcc.  # noqa: E501
        :type: OneOfWellheadCompSubAccCost
        """

        self._cost = cost

    @property
    def costunitlabel(self):
        """Gets the costunitlabel of this WellheadCompSubAcc.  # noqa: E501


        :return: The costunitlabel of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._costunitlabel

    @costunitlabel.setter
    def costunitlabel(self, costunitlabel):
        """Sets the costunitlabel of this WellheadCompSubAcc.


        :param costunitlabel: The costunitlabel of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._costunitlabel = costunitlabel

    @property
    def des(self):
        """Gets the des of this WellheadCompSubAcc.  # noqa: E501


        :return: The des of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._des

    @des.setter
    def des(self, des):
        """Sets the des of this WellheadCompSubAcc.


        :param des: The des of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._des = des

    @property
    def distancefrombtm(self):
        """Gets the distancefrombtm of this WellheadCompSubAcc.  # noqa: E501


        :return: The distancefrombtm of this WellheadCompSubAcc.  # noqa: E501
        :rtype: OneOfWellheadCompSubAccDistancefrombtm
        """
        return self._distancefrombtm

    @distancefrombtm.setter
    def distancefrombtm(self, distancefrombtm):
        """Sets the distancefrombtm of this WellheadCompSubAcc.


        :param distancefrombtm: The distancefrombtm of this WellheadCompSubAcc.  # noqa: E501
        :type: OneOfWellheadCompSubAccDistancefrombtm
        """

        self._distancefrombtm = distancefrombtm

    @property
    def dttmend(self):
        """Gets the dttmend of this WellheadCompSubAcc.  # noqa: E501


        :return: The dttmend of this WellheadCompSubAcc.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmend

    @dttmend.setter
    def dttmend(self, dttmend):
        """Sets the dttmend of this WellheadCompSubAcc.


        :param dttmend: The dttmend of this WellheadCompSubAcc.  # noqa: E501
        :type: datetime
        """

        self._dttmend = dttmend

    @property
    def dttmmanufacture(self):
        """Gets the dttmmanufacture of this WellheadCompSubAcc.  # noqa: E501


        :return: The dttmmanufacture of this WellheadCompSubAcc.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmmanufacture

    @dttmmanufacture.setter
    def dttmmanufacture(self, dttmmanufacture):
        """Sets the dttmmanufacture of this WellheadCompSubAcc.


        :param dttmmanufacture: The dttmmanufacture of this WellheadCompSubAcc.  # noqa: E501
        :type: datetime
        """

        self._dttmmanufacture = dttmmanufacture

    @property
    def dttmstart(self):
        """Gets the dttmstart of this WellheadCompSubAcc.  # noqa: E501


        :return: The dttmstart of this WellheadCompSubAcc.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmstart

    @dttmstart.setter
    def dttmstart(self, dttmstart):
        """Sets the dttmstart of this WellheadCompSubAcc.


        :param dttmstart: The dttmstart of this WellheadCompSubAcc.  # noqa: E501
        :type: datetime
        """

        self._dttmstart = dttmstart

    @property
    def hoursstart(self):
        """Gets the hoursstart of this WellheadCompSubAcc.  # noqa: E501


        :return: The hoursstart of this WellheadCompSubAcc.  # noqa: E501
        :rtype: OneOfWellheadCompSubAccHoursstart
        """
        return self._hoursstart

    @hoursstart.setter
    def hoursstart(self, hoursstart):
        """Sets the hoursstart of this WellheadCompSubAcc.


        :param hoursstart: The hoursstart of this WellheadCompSubAcc.  # noqa: E501
        :type: OneOfWellheadCompSubAccHoursstart
        """

        self._hoursstart = hoursstart

    @property
    def idrec(self):
        """Gets the idrec of this WellheadCompSubAcc.  # noqa: E501


        :return: The idrec of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this WellheadCompSubAcc.


        :param idrec: The idrec of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecparent(self):
        """Gets the idrecparent of this WellheadCompSubAcc.  # noqa: E501


        :return: The idrecparent of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this WellheadCompSubAcc.


        :param idrecparent: The idrecparent of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idwell(self):
        """Gets the idwell of this WellheadCompSubAcc.  # noqa: E501


        :return: The idwell of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this WellheadCompSubAcc.


        :param idwell: The idwell of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def length(self):
        """Gets the length of this WellheadCompSubAcc.  # noqa: E501


        :return: The length of this WellheadCompSubAcc.  # noqa: E501
        :rtype: OneOfWellheadCompSubAccLength
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this WellheadCompSubAcc.


        :param length: The length of this WellheadCompSubAcc.  # noqa: E501
        :type: OneOfWellheadCompSubAccLength
        """

        self._length = length

    @property
    def make(self):
        """Gets the make of this WellheadCompSubAcc.  # noqa: E501


        :return: The make of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._make

    @make.setter
    def make(self, make):
        """Sets the make of this WellheadCompSubAcc.


        :param make: The make of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._make = make

    @property
    def material(self):
        """Gets the material of this WellheadCompSubAcc.  # noqa: E501


        :return: The material of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._material

    @material.setter
    def material(self, material):
        """Sets the material of this WellheadCompSubAcc.


        :param material: The material of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._material = material

    @property
    def maxpres(self):
        """Gets the maxpres of this WellheadCompSubAcc.  # noqa: E501


        :return: The maxpres of this WellheadCompSubAcc.  # noqa: E501
        :rtype: OneOfWellheadCompSubAccMaxpres
        """
        return self._maxpres

    @maxpres.setter
    def maxpres(self, maxpres):
        """Sets the maxpres of this WellheadCompSubAcc.


        :param maxpres: The maxpres of this WellheadCompSubAcc.  # noqa: E501
        :type: OneOfWellheadCompSubAccMaxpres
        """

        self._maxpres = maxpres

    @property
    def model(self):
        """Gets the model of this WellheadCompSubAcc.  # noqa: E501


        :return: The model of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this WellheadCompSubAcc.


        :param model: The model of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._model = model

    @property
    def modifydes(self):
        """Gets the modifydes of this WellheadCompSubAcc.  # noqa: E501


        :return: The modifydes of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._modifydes

    @modifydes.setter
    def modifydes(self, modifydes):
        """Sets the modifydes of this WellheadCompSubAcc.


        :param modifydes: The modifydes of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._modifydes = modifydes

    @property
    def note(self):
        """Gets the note of this WellheadCompSubAcc.  # noqa: E501


        :return: The note of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this WellheadCompSubAcc.


        :param note: The note of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._note = note

    @property
    def refid(self):
        """Gets the refid of this WellheadCompSubAcc.  # noqa: E501


        :return: The refid of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._refid

    @refid.setter
    def refid(self, refid):
        """Sets the refid of this WellheadCompSubAcc.


        :param refid: The refid of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._refid = refid

    @property
    def sn(self):
        """Gets the sn of this WellheadCompSubAcc.  # noqa: E501


        :return: The sn of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._sn

    @sn.setter
    def sn(self, sn):
        """Sets the sn of this WellheadCompSubAcc.


        :param sn: The sn of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._sn = sn

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this WellheadCompSubAcc.  # noqa: E501


        :return: The syscreatedate of this WellheadCompSubAcc.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this WellheadCompSubAcc.


        :param syscreatedate: The syscreatedate of this WellheadCompSubAcc.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this WellheadCompSubAcc.  # noqa: E501


        :return: The syscreateuser of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this WellheadCompSubAcc.


        :param syscreateuser: The syscreateuser of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this WellheadCompSubAcc.  # noqa: E501


        :return: The syslockchildren of this WellheadCompSubAcc.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this WellheadCompSubAcc.


        :param syslockchildren: The syslockchildren of this WellheadCompSubAcc.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this WellheadCompSubAcc.  # noqa: E501


        :return: The syslockchildrenui of this WellheadCompSubAcc.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this WellheadCompSubAcc.


        :param syslockchildrenui: The syslockchildrenui of this WellheadCompSubAcc.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this WellheadCompSubAcc.  # noqa: E501


        :return: The syslockdate of this WellheadCompSubAcc.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this WellheadCompSubAcc.


        :param syslockdate: The syslockdate of this WellheadCompSubAcc.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this WellheadCompSubAcc.  # noqa: E501


        :return: The syslockme of this WellheadCompSubAcc.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this WellheadCompSubAcc.


        :param syslockme: The syslockme of this WellheadCompSubAcc.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this WellheadCompSubAcc.  # noqa: E501


        :return: The syslockmeui of this WellheadCompSubAcc.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this WellheadCompSubAcc.


        :param syslockmeui: The syslockmeui of this WellheadCompSubAcc.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this WellheadCompSubAcc.  # noqa: E501


        :return: The sysmoddate of this WellheadCompSubAcc.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this WellheadCompSubAcc.


        :param sysmoddate: The sysmoddate of this WellheadCompSubAcc.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this WellheadCompSubAcc.  # noqa: E501


        :return: The sysmoduser of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this WellheadCompSubAcc.


        :param sysmoduser: The sysmoduser of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def sysseq(self):
        """Gets the sysseq of this WellheadCompSubAcc.  # noqa: E501


        :return: The sysseq of this WellheadCompSubAcc.  # noqa: E501
        :rtype: int
        """
        return self._sysseq

    @sysseq.setter
    def sysseq(self, sysseq):
        """Sets the sysseq of this WellheadCompSubAcc.


        :param sysseq: The sysseq of this WellheadCompSubAcc.  # noqa: E501
        :type: int
        """

        self._sysseq = sysseq

    @property
    def systag(self):
        """Gets the systag of this WellheadCompSubAcc.  # noqa: E501


        :return: The systag of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this WellheadCompSubAcc.


        :param systag: The systag of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def sz(self):
        """Gets the sz of this WellheadCompSubAcc.  # noqa: E501


        :return: The sz of this WellheadCompSubAcc.  # noqa: E501
        :rtype: OneOfWellheadCompSubAccSz
        """
        return self._sz

    @sz.setter
    def sz(self, sz):
        """Sets the sz of this WellheadCompSubAcc.


        :param sz: The sz of this WellheadCompSubAcc.  # noqa: E501
        :type: OneOfWellheadCompSubAccSz
        """

        self._sz = sz

    @property
    def szdes(self):
        """Gets the szdes of this WellheadCompSubAcc.  # noqa: E501


        :return: The szdes of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._szdes

    @szdes.setter
    def szdes(self, szdes):
        """Sets the szdes of this WellheadCompSubAcc.


        :param szdes: The szdes of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._szdes = szdes

    @property
    def typ1(self):
        """Gets the typ1 of this WellheadCompSubAcc.  # noqa: E501


        :return: The typ1 of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._typ1

    @typ1.setter
    def typ1(self, typ1):
        """Sets the typ1 of this WellheadCompSubAcc.


        :param typ1: The typ1 of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._typ1 = typ1

    @property
    def typ2(self):
        """Gets the typ2 of this WellheadCompSubAcc.  # noqa: E501


        :return: The typ2 of this WellheadCompSubAcc.  # noqa: E501
        :rtype: str
        """
        return self._typ2

    @typ2.setter
    def typ2(self, typ2):
        """Sets the typ2 of this WellheadCompSubAcc.


        :param typ2: The typ2 of this WellheadCompSubAcc.  # noqa: E501
        :type: str
        """

        self._typ2 = typ2

    @property
    def wellhead_comp_sub(self):
        """Gets the wellhead_comp_sub of this WellheadCompSubAcc.  # noqa: E501


        :return: The wellhead_comp_sub of this WellheadCompSubAcc.  # noqa: E501
        :rtype: AnyOfWellheadCompSubAccWellheadCompSub
        """
        return self._wellhead_comp_sub

    @wellhead_comp_sub.setter
    def wellhead_comp_sub(self, wellhead_comp_sub):
        """Sets the wellhead_comp_sub of this WellheadCompSubAcc.


        :param wellhead_comp_sub: The wellhead_comp_sub of this WellheadCompSubAcc.  # noqa: E501
        :type: AnyOfWellheadCompSubAccWellheadCompSub
        """

        self._wellhead_comp_sub = wellhead_comp_sub

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(WellheadCompSubAcc, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WellheadCompSubAcc):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
