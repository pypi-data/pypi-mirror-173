# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class JobLostCirc(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'com': 'str',
        'depthend': 'OneOfJobLostCircDepthend',
        'depthstart': 'OneOfJobLostCircDepthstart',
        'dttmend': 'datetime',
        'dttmstart': 'datetime',
        'fluiddes': 'str',
        'idrec': 'str',
        'idrecparent': 'str',
        'idrecwellbore': 'str',
        'idrecwellboretk': 'str',
        'idwell': 'str',
        'job': 'AnyOfJobLostCircJob',
        'job_lost_circ_actions': 'list[JobLostCircAction]',
        'job_lost_circ_causes': 'list[JobLostCircCause]',
        'opsinprog': 'str',
        'rateloss': 'OneOfJobLostCircRateloss',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'systag': 'str',
        'typ1': 'str',
        'typ2': 'str',
        'vollosstotal': 'OneOfJobLostCircVollosstotal'
    }

    attribute_map = {
        'com': 'com',
        'depthend': 'depthend',
        'depthstart': 'depthstart',
        'dttmend': 'dttmend',
        'dttmstart': 'dttmstart',
        'fluiddes': 'fluiddes',
        'idrec': 'idrec',
        'idrecparent': 'idrecparent',
        'idrecwellbore': 'idrecwellbore',
        'idrecwellboretk': 'idrecwellboretk',
        'idwell': 'idwell',
        'job': 'job',
        'job_lost_circ_actions': 'jobLostCircActions',
        'job_lost_circ_causes': 'jobLostCircCauses',
        'opsinprog': 'opsinprog',
        'rateloss': 'rateloss',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'systag': 'systag',
        'typ1': 'typ1',
        'typ2': 'typ2',
        'vollosstotal': 'vollosstotal'
    }

    def __init__(self, com=None, depthend=None, depthstart=None, dttmend=None, dttmstart=None, fluiddes=None, idrec=None, idrecparent=None, idrecwellbore=None, idrecwellboretk=None, idwell=None, job=None, job_lost_circ_actions=None, job_lost_circ_causes=None, opsinprog=None, rateloss=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, systag=None, typ1=None, typ2=None, vollosstotal=None):  # noqa: E501
        """JobLostCirc - a model defined in Swagger"""  # noqa: E501
        self._com = None
        self._depthend = None
        self._depthstart = None
        self._dttmend = None
        self._dttmstart = None
        self._fluiddes = None
        self._idrec = None
        self._idrecparent = None
        self._idrecwellbore = None
        self._idrecwellboretk = None
        self._idwell = None
        self._job = None
        self._job_lost_circ_actions = None
        self._job_lost_circ_causes = None
        self._opsinprog = None
        self._rateloss = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._systag = None
        self._typ1 = None
        self._typ2 = None
        self._vollosstotal = None
        self.discriminator = None
        if com is not None:
            self.com = com
        if depthend is not None:
            self.depthend = depthend
        if depthstart is not None:
            self.depthstart = depthstart
        if dttmend is not None:
            self.dttmend = dttmend
        if dttmstart is not None:
            self.dttmstart = dttmstart
        if fluiddes is not None:
            self.fluiddes = fluiddes
        if idrec is not None:
            self.idrec = idrec
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idrecwellbore is not None:
            self.idrecwellbore = idrecwellbore
        if idrecwellboretk is not None:
            self.idrecwellboretk = idrecwellboretk
        if idwell is not None:
            self.idwell = idwell
        if job is not None:
            self.job = job
        if job_lost_circ_actions is not None:
            self.job_lost_circ_actions = job_lost_circ_actions
        if job_lost_circ_causes is not None:
            self.job_lost_circ_causes = job_lost_circ_causes
        if opsinprog is not None:
            self.opsinprog = opsinprog
        if rateloss is not None:
            self.rateloss = rateloss
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if systag is not None:
            self.systag = systag
        if typ1 is not None:
            self.typ1 = typ1
        if typ2 is not None:
            self.typ2 = typ2
        if vollosstotal is not None:
            self.vollosstotal = vollosstotal

    @property
    def com(self):
        """Gets the com of this JobLostCirc.  # noqa: E501


        :return: The com of this JobLostCirc.  # noqa: E501
        :rtype: str
        """
        return self._com

    @com.setter
    def com(self, com):
        """Sets the com of this JobLostCirc.


        :param com: The com of this JobLostCirc.  # noqa: E501
        :type: str
        """

        self._com = com

    @property
    def depthend(self):
        """Gets the depthend of this JobLostCirc.  # noqa: E501


        :return: The depthend of this JobLostCirc.  # noqa: E501
        :rtype: OneOfJobLostCircDepthend
        """
        return self._depthend

    @depthend.setter
    def depthend(self, depthend):
        """Sets the depthend of this JobLostCirc.


        :param depthend: The depthend of this JobLostCirc.  # noqa: E501
        :type: OneOfJobLostCircDepthend
        """

        self._depthend = depthend

    @property
    def depthstart(self):
        """Gets the depthstart of this JobLostCirc.  # noqa: E501


        :return: The depthstart of this JobLostCirc.  # noqa: E501
        :rtype: OneOfJobLostCircDepthstart
        """
        return self._depthstart

    @depthstart.setter
    def depthstart(self, depthstart):
        """Sets the depthstart of this JobLostCirc.


        :param depthstart: The depthstart of this JobLostCirc.  # noqa: E501
        :type: OneOfJobLostCircDepthstart
        """

        self._depthstart = depthstart

    @property
    def dttmend(self):
        """Gets the dttmend of this JobLostCirc.  # noqa: E501


        :return: The dttmend of this JobLostCirc.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmend

    @dttmend.setter
    def dttmend(self, dttmend):
        """Sets the dttmend of this JobLostCirc.


        :param dttmend: The dttmend of this JobLostCirc.  # noqa: E501
        :type: datetime
        """

        self._dttmend = dttmend

    @property
    def dttmstart(self):
        """Gets the dttmstart of this JobLostCirc.  # noqa: E501


        :return: The dttmstart of this JobLostCirc.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmstart

    @dttmstart.setter
    def dttmstart(self, dttmstart):
        """Sets the dttmstart of this JobLostCirc.


        :param dttmstart: The dttmstart of this JobLostCirc.  # noqa: E501
        :type: datetime
        """

        self._dttmstart = dttmstart

    @property
    def fluiddes(self):
        """Gets the fluiddes of this JobLostCirc.  # noqa: E501


        :return: The fluiddes of this JobLostCirc.  # noqa: E501
        :rtype: str
        """
        return self._fluiddes

    @fluiddes.setter
    def fluiddes(self, fluiddes):
        """Sets the fluiddes of this JobLostCirc.


        :param fluiddes: The fluiddes of this JobLostCirc.  # noqa: E501
        :type: str
        """

        self._fluiddes = fluiddes

    @property
    def idrec(self):
        """Gets the idrec of this JobLostCirc.  # noqa: E501


        :return: The idrec of this JobLostCirc.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this JobLostCirc.


        :param idrec: The idrec of this JobLostCirc.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecparent(self):
        """Gets the idrecparent of this JobLostCirc.  # noqa: E501


        :return: The idrecparent of this JobLostCirc.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this JobLostCirc.


        :param idrecparent: The idrecparent of this JobLostCirc.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idrecwellbore(self):
        """Gets the idrecwellbore of this JobLostCirc.  # noqa: E501


        :return: The idrecwellbore of this JobLostCirc.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellbore

    @idrecwellbore.setter
    def idrecwellbore(self, idrecwellbore):
        """Sets the idrecwellbore of this JobLostCirc.


        :param idrecwellbore: The idrecwellbore of this JobLostCirc.  # noqa: E501
        :type: str
        """

        self._idrecwellbore = idrecwellbore

    @property
    def idrecwellboretk(self):
        """Gets the idrecwellboretk of this JobLostCirc.  # noqa: E501


        :return: The idrecwellboretk of this JobLostCirc.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellboretk

    @idrecwellboretk.setter
    def idrecwellboretk(self, idrecwellboretk):
        """Sets the idrecwellboretk of this JobLostCirc.


        :param idrecwellboretk: The idrecwellboretk of this JobLostCirc.  # noqa: E501
        :type: str
        """

        self._idrecwellboretk = idrecwellboretk

    @property
    def idwell(self):
        """Gets the idwell of this JobLostCirc.  # noqa: E501


        :return: The idwell of this JobLostCirc.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this JobLostCirc.


        :param idwell: The idwell of this JobLostCirc.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def job(self):
        """Gets the job of this JobLostCirc.  # noqa: E501


        :return: The job of this JobLostCirc.  # noqa: E501
        :rtype: AnyOfJobLostCircJob
        """
        return self._job

    @job.setter
    def job(self, job):
        """Sets the job of this JobLostCirc.


        :param job: The job of this JobLostCirc.  # noqa: E501
        :type: AnyOfJobLostCircJob
        """

        self._job = job

    @property
    def job_lost_circ_actions(self):
        """Gets the job_lost_circ_actions of this JobLostCirc.  # noqa: E501


        :return: The job_lost_circ_actions of this JobLostCirc.  # noqa: E501
        :rtype: list[JobLostCircAction]
        """
        return self._job_lost_circ_actions

    @job_lost_circ_actions.setter
    def job_lost_circ_actions(self, job_lost_circ_actions):
        """Sets the job_lost_circ_actions of this JobLostCirc.


        :param job_lost_circ_actions: The job_lost_circ_actions of this JobLostCirc.  # noqa: E501
        :type: list[JobLostCircAction]
        """

        self._job_lost_circ_actions = job_lost_circ_actions

    @property
    def job_lost_circ_causes(self):
        """Gets the job_lost_circ_causes of this JobLostCirc.  # noqa: E501


        :return: The job_lost_circ_causes of this JobLostCirc.  # noqa: E501
        :rtype: list[JobLostCircCause]
        """
        return self._job_lost_circ_causes

    @job_lost_circ_causes.setter
    def job_lost_circ_causes(self, job_lost_circ_causes):
        """Sets the job_lost_circ_causes of this JobLostCirc.


        :param job_lost_circ_causes: The job_lost_circ_causes of this JobLostCirc.  # noqa: E501
        :type: list[JobLostCircCause]
        """

        self._job_lost_circ_causes = job_lost_circ_causes

    @property
    def opsinprog(self):
        """Gets the opsinprog of this JobLostCirc.  # noqa: E501


        :return: The opsinprog of this JobLostCirc.  # noqa: E501
        :rtype: str
        """
        return self._opsinprog

    @opsinprog.setter
    def opsinprog(self, opsinprog):
        """Sets the opsinprog of this JobLostCirc.


        :param opsinprog: The opsinprog of this JobLostCirc.  # noqa: E501
        :type: str
        """

        self._opsinprog = opsinprog

    @property
    def rateloss(self):
        """Gets the rateloss of this JobLostCirc.  # noqa: E501


        :return: The rateloss of this JobLostCirc.  # noqa: E501
        :rtype: OneOfJobLostCircRateloss
        """
        return self._rateloss

    @rateloss.setter
    def rateloss(self, rateloss):
        """Sets the rateloss of this JobLostCirc.


        :param rateloss: The rateloss of this JobLostCirc.  # noqa: E501
        :type: OneOfJobLostCircRateloss
        """

        self._rateloss = rateloss

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this JobLostCirc.  # noqa: E501


        :return: The syscreatedate of this JobLostCirc.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this JobLostCirc.


        :param syscreatedate: The syscreatedate of this JobLostCirc.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this JobLostCirc.  # noqa: E501


        :return: The syscreateuser of this JobLostCirc.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this JobLostCirc.


        :param syscreateuser: The syscreateuser of this JobLostCirc.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this JobLostCirc.  # noqa: E501


        :return: The syslockchildren of this JobLostCirc.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this JobLostCirc.


        :param syslockchildren: The syslockchildren of this JobLostCirc.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this JobLostCirc.  # noqa: E501


        :return: The syslockchildrenui of this JobLostCirc.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this JobLostCirc.


        :param syslockchildrenui: The syslockchildrenui of this JobLostCirc.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this JobLostCirc.  # noqa: E501


        :return: The syslockdate of this JobLostCirc.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this JobLostCirc.


        :param syslockdate: The syslockdate of this JobLostCirc.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this JobLostCirc.  # noqa: E501


        :return: The syslockme of this JobLostCirc.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this JobLostCirc.


        :param syslockme: The syslockme of this JobLostCirc.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this JobLostCirc.  # noqa: E501


        :return: The syslockmeui of this JobLostCirc.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this JobLostCirc.


        :param syslockmeui: The syslockmeui of this JobLostCirc.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this JobLostCirc.  # noqa: E501


        :return: The sysmoddate of this JobLostCirc.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this JobLostCirc.


        :param sysmoddate: The sysmoddate of this JobLostCirc.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this JobLostCirc.  # noqa: E501


        :return: The sysmoduser of this JobLostCirc.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this JobLostCirc.


        :param sysmoduser: The sysmoduser of this JobLostCirc.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def systag(self):
        """Gets the systag of this JobLostCirc.  # noqa: E501


        :return: The systag of this JobLostCirc.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this JobLostCirc.


        :param systag: The systag of this JobLostCirc.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def typ1(self):
        """Gets the typ1 of this JobLostCirc.  # noqa: E501


        :return: The typ1 of this JobLostCirc.  # noqa: E501
        :rtype: str
        """
        return self._typ1

    @typ1.setter
    def typ1(self, typ1):
        """Sets the typ1 of this JobLostCirc.


        :param typ1: The typ1 of this JobLostCirc.  # noqa: E501
        :type: str
        """

        self._typ1 = typ1

    @property
    def typ2(self):
        """Gets the typ2 of this JobLostCirc.  # noqa: E501


        :return: The typ2 of this JobLostCirc.  # noqa: E501
        :rtype: str
        """
        return self._typ2

    @typ2.setter
    def typ2(self, typ2):
        """Sets the typ2 of this JobLostCirc.


        :param typ2: The typ2 of this JobLostCirc.  # noqa: E501
        :type: str
        """

        self._typ2 = typ2

    @property
    def vollosstotal(self):
        """Gets the vollosstotal of this JobLostCirc.  # noqa: E501


        :return: The vollosstotal of this JobLostCirc.  # noqa: E501
        :rtype: OneOfJobLostCircVollosstotal
        """
        return self._vollosstotal

    @vollosstotal.setter
    def vollosstotal(self, vollosstotal):
        """Sets the vollosstotal of this JobLostCirc.


        :param vollosstotal: The vollosstotal of this JobLostCirc.  # noqa: E501
        :type: OneOfJobLostCircVollosstotal
        """

        self._vollosstotal = vollosstotal

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(JobLostCirc, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobLostCirc):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
