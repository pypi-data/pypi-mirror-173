# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class JobIntervalLesson(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'com': 'str',
        'depthend': 'OneOfJobIntervalLessonDepthend',
        'depthstart': 'OneOfJobIntervalLessonDepthstart',
        'depthtvdendcalc': 'OneOfJobIntervalLessonDepthtvdendcalc',
        'depthtvdstartcalc': 'OneOfJobIntervalLessonDepthtvdstartcalc',
        'des': 'str',
        'dttmend': 'datetime',
        'dttmstart': 'datetime',
        'estcostsaving': 'OneOfJobIntervalLessonEstcostsaving',
        'esttimesaving': 'OneOfJobIntervalLessonEsttimesaving',
        'excludefromlessontime': 'int',
        'formationcalc': 'str',
        'idrec': 'str',
        'idrecjobprogramphasecalc': 'str',
        'idrecjobprogramphasecalctk': 'str',
        'idreclastrigcalc': 'str',
        'idreclastrigcalctk': 'str',
        'idrecparent': 'str',
        'idrecwellbore': 'str',
        'idrecwellboretk': 'str',
        'idwell': 'str',
        'job': 'AnyOfJobIntervalLessonJob',
        'job_interval_lesson_actions': 'list[JobIntervalLessonAction]',
        'lessonowner': 'str',
        'lessonsystem1': 'str',
        'lessonsystem2': 'str',
        'lessonsystem3': 'str',
        'refno': 'str',
        'status': 'str',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'sysseq': 'int',
        'systag': 'str',
        'typ': 'str',
        'typdetail': 'str'
    }

    attribute_map = {
        'com': 'com',
        'depthend': 'depthend',
        'depthstart': 'depthstart',
        'depthtvdendcalc': 'depthtvdendcalc',
        'depthtvdstartcalc': 'depthtvdstartcalc',
        'des': 'des',
        'dttmend': 'dttmend',
        'dttmstart': 'dttmstart',
        'estcostsaving': 'estcostsaving',
        'esttimesaving': 'esttimesaving',
        'excludefromlessontime': 'excludefromlessontime',
        'formationcalc': 'formationcalc',
        'idrec': 'idrec',
        'idrecjobprogramphasecalc': 'idrecjobprogramphasecalc',
        'idrecjobprogramphasecalctk': 'idrecjobprogramphasecalctk',
        'idreclastrigcalc': 'idreclastrigcalc',
        'idreclastrigcalctk': 'idreclastrigcalctk',
        'idrecparent': 'idrecparent',
        'idrecwellbore': 'idrecwellbore',
        'idrecwellboretk': 'idrecwellboretk',
        'idwell': 'idwell',
        'job': 'job',
        'job_interval_lesson_actions': 'jobIntervalLessonActions',
        'lessonowner': 'lessonowner',
        'lessonsystem1': 'lessonsystem1',
        'lessonsystem2': 'lessonsystem2',
        'lessonsystem3': 'lessonsystem3',
        'refno': 'refno',
        'status': 'status',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'sysseq': 'sysseq',
        'systag': 'systag',
        'typ': 'typ',
        'typdetail': 'typdetail'
    }

    def __init__(self, com=None, depthend=None, depthstart=None, depthtvdendcalc=None, depthtvdstartcalc=None, des=None, dttmend=None, dttmstart=None, estcostsaving=None, esttimesaving=None, excludefromlessontime=None, formationcalc=None, idrec=None, idrecjobprogramphasecalc=None, idrecjobprogramphasecalctk=None, idreclastrigcalc=None, idreclastrigcalctk=None, idrecparent=None, idrecwellbore=None, idrecwellboretk=None, idwell=None, job=None, job_interval_lesson_actions=None, lessonowner=None, lessonsystem1=None, lessonsystem2=None, lessonsystem3=None, refno=None, status=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, sysseq=None, systag=None, typ=None, typdetail=None):  # noqa: E501
        """JobIntervalLesson - a model defined in Swagger"""  # noqa: E501
        self._com = None
        self._depthend = None
        self._depthstart = None
        self._depthtvdendcalc = None
        self._depthtvdstartcalc = None
        self._des = None
        self._dttmend = None
        self._dttmstart = None
        self._estcostsaving = None
        self._esttimesaving = None
        self._excludefromlessontime = None
        self._formationcalc = None
        self._idrec = None
        self._idrecjobprogramphasecalc = None
        self._idrecjobprogramphasecalctk = None
        self._idreclastrigcalc = None
        self._idreclastrigcalctk = None
        self._idrecparent = None
        self._idrecwellbore = None
        self._idrecwellboretk = None
        self._idwell = None
        self._job = None
        self._job_interval_lesson_actions = None
        self._lessonowner = None
        self._lessonsystem1 = None
        self._lessonsystem2 = None
        self._lessonsystem3 = None
        self._refno = None
        self._status = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._sysseq = None
        self._systag = None
        self._typ = None
        self._typdetail = None
        self.discriminator = None
        if com is not None:
            self.com = com
        if depthend is not None:
            self.depthend = depthend
        if depthstart is not None:
            self.depthstart = depthstart
        if depthtvdendcalc is not None:
            self.depthtvdendcalc = depthtvdendcalc
        if depthtvdstartcalc is not None:
            self.depthtvdstartcalc = depthtvdstartcalc
        if des is not None:
            self.des = des
        if dttmend is not None:
            self.dttmend = dttmend
        if dttmstart is not None:
            self.dttmstart = dttmstart
        if estcostsaving is not None:
            self.estcostsaving = estcostsaving
        if esttimesaving is not None:
            self.esttimesaving = esttimesaving
        if excludefromlessontime is not None:
            self.excludefromlessontime = excludefromlessontime
        if formationcalc is not None:
            self.formationcalc = formationcalc
        if idrec is not None:
            self.idrec = idrec
        if idrecjobprogramphasecalc is not None:
            self.idrecjobprogramphasecalc = idrecjobprogramphasecalc
        if idrecjobprogramphasecalctk is not None:
            self.idrecjobprogramphasecalctk = idrecjobprogramphasecalctk
        if idreclastrigcalc is not None:
            self.idreclastrigcalc = idreclastrigcalc
        if idreclastrigcalctk is not None:
            self.idreclastrigcalctk = idreclastrigcalctk
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idrecwellbore is not None:
            self.idrecwellbore = idrecwellbore
        if idrecwellboretk is not None:
            self.idrecwellboretk = idrecwellboretk
        if idwell is not None:
            self.idwell = idwell
        if job is not None:
            self.job = job
        if job_interval_lesson_actions is not None:
            self.job_interval_lesson_actions = job_interval_lesson_actions
        if lessonowner is not None:
            self.lessonowner = lessonowner
        if lessonsystem1 is not None:
            self.lessonsystem1 = lessonsystem1
        if lessonsystem2 is not None:
            self.lessonsystem2 = lessonsystem2
        if lessonsystem3 is not None:
            self.lessonsystem3 = lessonsystem3
        if refno is not None:
            self.refno = refno
        if status is not None:
            self.status = status
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if sysseq is not None:
            self.sysseq = sysseq
        if systag is not None:
            self.systag = systag
        if typ is not None:
            self.typ = typ
        if typdetail is not None:
            self.typdetail = typdetail

    @property
    def com(self):
        """Gets the com of this JobIntervalLesson.  # noqa: E501


        :return: The com of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._com

    @com.setter
    def com(self, com):
        """Sets the com of this JobIntervalLesson.


        :param com: The com of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._com = com

    @property
    def depthend(self):
        """Gets the depthend of this JobIntervalLesson.  # noqa: E501


        :return: The depthend of this JobIntervalLesson.  # noqa: E501
        :rtype: OneOfJobIntervalLessonDepthend
        """
        return self._depthend

    @depthend.setter
    def depthend(self, depthend):
        """Sets the depthend of this JobIntervalLesson.


        :param depthend: The depthend of this JobIntervalLesson.  # noqa: E501
        :type: OneOfJobIntervalLessonDepthend
        """

        self._depthend = depthend

    @property
    def depthstart(self):
        """Gets the depthstart of this JobIntervalLesson.  # noqa: E501


        :return: The depthstart of this JobIntervalLesson.  # noqa: E501
        :rtype: OneOfJobIntervalLessonDepthstart
        """
        return self._depthstart

    @depthstart.setter
    def depthstart(self, depthstart):
        """Sets the depthstart of this JobIntervalLesson.


        :param depthstart: The depthstart of this JobIntervalLesson.  # noqa: E501
        :type: OneOfJobIntervalLessonDepthstart
        """

        self._depthstart = depthstart

    @property
    def depthtvdendcalc(self):
        """Gets the depthtvdendcalc of this JobIntervalLesson.  # noqa: E501


        :return: The depthtvdendcalc of this JobIntervalLesson.  # noqa: E501
        :rtype: OneOfJobIntervalLessonDepthtvdendcalc
        """
        return self._depthtvdendcalc

    @depthtvdendcalc.setter
    def depthtvdendcalc(self, depthtvdendcalc):
        """Sets the depthtvdendcalc of this JobIntervalLesson.


        :param depthtvdendcalc: The depthtvdendcalc of this JobIntervalLesson.  # noqa: E501
        :type: OneOfJobIntervalLessonDepthtvdendcalc
        """

        self._depthtvdendcalc = depthtvdendcalc

    @property
    def depthtvdstartcalc(self):
        """Gets the depthtvdstartcalc of this JobIntervalLesson.  # noqa: E501


        :return: The depthtvdstartcalc of this JobIntervalLesson.  # noqa: E501
        :rtype: OneOfJobIntervalLessonDepthtvdstartcalc
        """
        return self._depthtvdstartcalc

    @depthtvdstartcalc.setter
    def depthtvdstartcalc(self, depthtvdstartcalc):
        """Sets the depthtvdstartcalc of this JobIntervalLesson.


        :param depthtvdstartcalc: The depthtvdstartcalc of this JobIntervalLesson.  # noqa: E501
        :type: OneOfJobIntervalLessonDepthtvdstartcalc
        """

        self._depthtvdstartcalc = depthtvdstartcalc

    @property
    def des(self):
        """Gets the des of this JobIntervalLesson.  # noqa: E501


        :return: The des of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._des

    @des.setter
    def des(self, des):
        """Sets the des of this JobIntervalLesson.


        :param des: The des of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._des = des

    @property
    def dttmend(self):
        """Gets the dttmend of this JobIntervalLesson.  # noqa: E501


        :return: The dttmend of this JobIntervalLesson.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmend

    @dttmend.setter
    def dttmend(self, dttmend):
        """Sets the dttmend of this JobIntervalLesson.


        :param dttmend: The dttmend of this JobIntervalLesson.  # noqa: E501
        :type: datetime
        """

        self._dttmend = dttmend

    @property
    def dttmstart(self):
        """Gets the dttmstart of this JobIntervalLesson.  # noqa: E501


        :return: The dttmstart of this JobIntervalLesson.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmstart

    @dttmstart.setter
    def dttmstart(self, dttmstart):
        """Sets the dttmstart of this JobIntervalLesson.


        :param dttmstart: The dttmstart of this JobIntervalLesson.  # noqa: E501
        :type: datetime
        """

        self._dttmstart = dttmstart

    @property
    def estcostsaving(self):
        """Gets the estcostsaving of this JobIntervalLesson.  # noqa: E501


        :return: The estcostsaving of this JobIntervalLesson.  # noqa: E501
        :rtype: OneOfJobIntervalLessonEstcostsaving
        """
        return self._estcostsaving

    @estcostsaving.setter
    def estcostsaving(self, estcostsaving):
        """Sets the estcostsaving of this JobIntervalLesson.


        :param estcostsaving: The estcostsaving of this JobIntervalLesson.  # noqa: E501
        :type: OneOfJobIntervalLessonEstcostsaving
        """

        self._estcostsaving = estcostsaving

    @property
    def esttimesaving(self):
        """Gets the esttimesaving of this JobIntervalLesson.  # noqa: E501


        :return: The esttimesaving of this JobIntervalLesson.  # noqa: E501
        :rtype: OneOfJobIntervalLessonEsttimesaving
        """
        return self._esttimesaving

    @esttimesaving.setter
    def esttimesaving(self, esttimesaving):
        """Sets the esttimesaving of this JobIntervalLesson.


        :param esttimesaving: The esttimesaving of this JobIntervalLesson.  # noqa: E501
        :type: OneOfJobIntervalLessonEsttimesaving
        """

        self._esttimesaving = esttimesaving

    @property
    def excludefromlessontime(self):
        """Gets the excludefromlessontime of this JobIntervalLesson.  # noqa: E501


        :return: The excludefromlessontime of this JobIntervalLesson.  # noqa: E501
        :rtype: int
        """
        return self._excludefromlessontime

    @excludefromlessontime.setter
    def excludefromlessontime(self, excludefromlessontime):
        """Sets the excludefromlessontime of this JobIntervalLesson.


        :param excludefromlessontime: The excludefromlessontime of this JobIntervalLesson.  # noqa: E501
        :type: int
        """

        self._excludefromlessontime = excludefromlessontime

    @property
    def formationcalc(self):
        """Gets the formationcalc of this JobIntervalLesson.  # noqa: E501


        :return: The formationcalc of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._formationcalc

    @formationcalc.setter
    def formationcalc(self, formationcalc):
        """Sets the formationcalc of this JobIntervalLesson.


        :param formationcalc: The formationcalc of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._formationcalc = formationcalc

    @property
    def idrec(self):
        """Gets the idrec of this JobIntervalLesson.  # noqa: E501


        :return: The idrec of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this JobIntervalLesson.


        :param idrec: The idrec of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecjobprogramphasecalc(self):
        """Gets the idrecjobprogramphasecalc of this JobIntervalLesson.  # noqa: E501


        :return: The idrecjobprogramphasecalc of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._idrecjobprogramphasecalc

    @idrecjobprogramphasecalc.setter
    def idrecjobprogramphasecalc(self, idrecjobprogramphasecalc):
        """Sets the idrecjobprogramphasecalc of this JobIntervalLesson.


        :param idrecjobprogramphasecalc: The idrecjobprogramphasecalc of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._idrecjobprogramphasecalc = idrecjobprogramphasecalc

    @property
    def idrecjobprogramphasecalctk(self):
        """Gets the idrecjobprogramphasecalctk of this JobIntervalLesson.  # noqa: E501


        :return: The idrecjobprogramphasecalctk of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._idrecjobprogramphasecalctk

    @idrecjobprogramphasecalctk.setter
    def idrecjobprogramphasecalctk(self, idrecjobprogramphasecalctk):
        """Sets the idrecjobprogramphasecalctk of this JobIntervalLesson.


        :param idrecjobprogramphasecalctk: The idrecjobprogramphasecalctk of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._idrecjobprogramphasecalctk = idrecjobprogramphasecalctk

    @property
    def idreclastrigcalc(self):
        """Gets the idreclastrigcalc of this JobIntervalLesson.  # noqa: E501


        :return: The idreclastrigcalc of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._idreclastrigcalc

    @idreclastrigcalc.setter
    def idreclastrigcalc(self, idreclastrigcalc):
        """Sets the idreclastrigcalc of this JobIntervalLesson.


        :param idreclastrigcalc: The idreclastrigcalc of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._idreclastrigcalc = idreclastrigcalc

    @property
    def idreclastrigcalctk(self):
        """Gets the idreclastrigcalctk of this JobIntervalLesson.  # noqa: E501


        :return: The idreclastrigcalctk of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._idreclastrigcalctk

    @idreclastrigcalctk.setter
    def idreclastrigcalctk(self, idreclastrigcalctk):
        """Sets the idreclastrigcalctk of this JobIntervalLesson.


        :param idreclastrigcalctk: The idreclastrigcalctk of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._idreclastrigcalctk = idreclastrigcalctk

    @property
    def idrecparent(self):
        """Gets the idrecparent of this JobIntervalLesson.  # noqa: E501


        :return: The idrecparent of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this JobIntervalLesson.


        :param idrecparent: The idrecparent of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idrecwellbore(self):
        """Gets the idrecwellbore of this JobIntervalLesson.  # noqa: E501


        :return: The idrecwellbore of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellbore

    @idrecwellbore.setter
    def idrecwellbore(self, idrecwellbore):
        """Sets the idrecwellbore of this JobIntervalLesson.


        :param idrecwellbore: The idrecwellbore of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._idrecwellbore = idrecwellbore

    @property
    def idrecwellboretk(self):
        """Gets the idrecwellboretk of this JobIntervalLesson.  # noqa: E501


        :return: The idrecwellboretk of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellboretk

    @idrecwellboretk.setter
    def idrecwellboretk(self, idrecwellboretk):
        """Sets the idrecwellboretk of this JobIntervalLesson.


        :param idrecwellboretk: The idrecwellboretk of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._idrecwellboretk = idrecwellboretk

    @property
    def idwell(self):
        """Gets the idwell of this JobIntervalLesson.  # noqa: E501


        :return: The idwell of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this JobIntervalLesson.


        :param idwell: The idwell of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def job(self):
        """Gets the job of this JobIntervalLesson.  # noqa: E501


        :return: The job of this JobIntervalLesson.  # noqa: E501
        :rtype: AnyOfJobIntervalLessonJob
        """
        return self._job

    @job.setter
    def job(self, job):
        """Sets the job of this JobIntervalLesson.


        :param job: The job of this JobIntervalLesson.  # noqa: E501
        :type: AnyOfJobIntervalLessonJob
        """

        self._job = job

    @property
    def job_interval_lesson_actions(self):
        """Gets the job_interval_lesson_actions of this JobIntervalLesson.  # noqa: E501


        :return: The job_interval_lesson_actions of this JobIntervalLesson.  # noqa: E501
        :rtype: list[JobIntervalLessonAction]
        """
        return self._job_interval_lesson_actions

    @job_interval_lesson_actions.setter
    def job_interval_lesson_actions(self, job_interval_lesson_actions):
        """Sets the job_interval_lesson_actions of this JobIntervalLesson.


        :param job_interval_lesson_actions: The job_interval_lesson_actions of this JobIntervalLesson.  # noqa: E501
        :type: list[JobIntervalLessonAction]
        """

        self._job_interval_lesson_actions = job_interval_lesson_actions

    @property
    def lessonowner(self):
        """Gets the lessonowner of this JobIntervalLesson.  # noqa: E501


        :return: The lessonowner of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._lessonowner

    @lessonowner.setter
    def lessonowner(self, lessonowner):
        """Sets the lessonowner of this JobIntervalLesson.


        :param lessonowner: The lessonowner of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._lessonowner = lessonowner

    @property
    def lessonsystem1(self):
        """Gets the lessonsystem1 of this JobIntervalLesson.  # noqa: E501


        :return: The lessonsystem1 of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._lessonsystem1

    @lessonsystem1.setter
    def lessonsystem1(self, lessonsystem1):
        """Sets the lessonsystem1 of this JobIntervalLesson.


        :param lessonsystem1: The lessonsystem1 of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._lessonsystem1 = lessonsystem1

    @property
    def lessonsystem2(self):
        """Gets the lessonsystem2 of this JobIntervalLesson.  # noqa: E501


        :return: The lessonsystem2 of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._lessonsystem2

    @lessonsystem2.setter
    def lessonsystem2(self, lessonsystem2):
        """Sets the lessonsystem2 of this JobIntervalLesson.


        :param lessonsystem2: The lessonsystem2 of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._lessonsystem2 = lessonsystem2

    @property
    def lessonsystem3(self):
        """Gets the lessonsystem3 of this JobIntervalLesson.  # noqa: E501


        :return: The lessonsystem3 of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._lessonsystem3

    @lessonsystem3.setter
    def lessonsystem3(self, lessonsystem3):
        """Sets the lessonsystem3 of this JobIntervalLesson.


        :param lessonsystem3: The lessonsystem3 of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._lessonsystem3 = lessonsystem3

    @property
    def refno(self):
        """Gets the refno of this JobIntervalLesson.  # noqa: E501


        :return: The refno of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._refno

    @refno.setter
    def refno(self, refno):
        """Sets the refno of this JobIntervalLesson.


        :param refno: The refno of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._refno = refno

    @property
    def status(self):
        """Gets the status of this JobIntervalLesson.  # noqa: E501


        :return: The status of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this JobIntervalLesson.


        :param status: The status of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this JobIntervalLesson.  # noqa: E501


        :return: The syscreatedate of this JobIntervalLesson.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this JobIntervalLesson.


        :param syscreatedate: The syscreatedate of this JobIntervalLesson.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this JobIntervalLesson.  # noqa: E501


        :return: The syscreateuser of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this JobIntervalLesson.


        :param syscreateuser: The syscreateuser of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this JobIntervalLesson.  # noqa: E501


        :return: The syslockchildren of this JobIntervalLesson.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this JobIntervalLesson.


        :param syslockchildren: The syslockchildren of this JobIntervalLesson.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this JobIntervalLesson.  # noqa: E501


        :return: The syslockchildrenui of this JobIntervalLesson.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this JobIntervalLesson.


        :param syslockchildrenui: The syslockchildrenui of this JobIntervalLesson.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this JobIntervalLesson.  # noqa: E501


        :return: The syslockdate of this JobIntervalLesson.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this JobIntervalLesson.


        :param syslockdate: The syslockdate of this JobIntervalLesson.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this JobIntervalLesson.  # noqa: E501


        :return: The syslockme of this JobIntervalLesson.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this JobIntervalLesson.


        :param syslockme: The syslockme of this JobIntervalLesson.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this JobIntervalLesson.  # noqa: E501


        :return: The syslockmeui of this JobIntervalLesson.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this JobIntervalLesson.


        :param syslockmeui: The syslockmeui of this JobIntervalLesson.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this JobIntervalLesson.  # noqa: E501


        :return: The sysmoddate of this JobIntervalLesson.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this JobIntervalLesson.


        :param sysmoddate: The sysmoddate of this JobIntervalLesson.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this JobIntervalLesson.  # noqa: E501


        :return: The sysmoduser of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this JobIntervalLesson.


        :param sysmoduser: The sysmoduser of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def sysseq(self):
        """Gets the sysseq of this JobIntervalLesson.  # noqa: E501


        :return: The sysseq of this JobIntervalLesson.  # noqa: E501
        :rtype: int
        """
        return self._sysseq

    @sysseq.setter
    def sysseq(self, sysseq):
        """Sets the sysseq of this JobIntervalLesson.


        :param sysseq: The sysseq of this JobIntervalLesson.  # noqa: E501
        :type: int
        """

        self._sysseq = sysseq

    @property
    def systag(self):
        """Gets the systag of this JobIntervalLesson.  # noqa: E501


        :return: The systag of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this JobIntervalLesson.


        :param systag: The systag of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def typ(self):
        """Gets the typ of this JobIntervalLesson.  # noqa: E501


        :return: The typ of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._typ

    @typ.setter
    def typ(self, typ):
        """Sets the typ of this JobIntervalLesson.


        :param typ: The typ of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._typ = typ

    @property
    def typdetail(self):
        """Gets the typdetail of this JobIntervalLesson.  # noqa: E501


        :return: The typdetail of this JobIntervalLesson.  # noqa: E501
        :rtype: str
        """
        return self._typdetail

    @typdetail.setter
    def typdetail(self, typdetail):
        """Sets the typdetail of this JobIntervalLesson.


        :param typdetail: The typdetail of this JobIntervalLesson.  # noqa: E501
        :type: str
        """

        self._typdetail = typdetail

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(JobIntervalLesson, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobIntervalLesson):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
