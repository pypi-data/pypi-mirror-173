# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class LocOhio(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'idrec': 'str',
        'idrecparent': 'str',
        'idwell': 'str',
        'irregularsection': 'int',
        'lot': 'str',
        'meridian': 'str',
        'note': 'str',
        'quadranglemin': 'OneOfLocOhioQuadranglemin',
        'quadranglename': 'str',
        'quarter1': 'str',
        'quarter2': 'str',
        'quarter3': 'str',
        'quarter4': 'str',
        'range': 'OneOfLocOhioRange',
        'rangedir': 'str',
        'section': 'str',
        'source': 'str',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'systag': 'str',
        'tblkeyparent': 'str',
        'township': 'str',
        'townshipdir': 'str',
        'wellbore': 'AnyOfLocOhioWellbore'
    }

    attribute_map = {
        'idrec': 'idrec',
        'idrecparent': 'idrecparent',
        'idwell': 'idwell',
        'irregularsection': 'irregularsection',
        'lot': 'lot',
        'meridian': 'meridian',
        'note': 'note',
        'quadranglemin': 'quadranglemin',
        'quadranglename': 'quadranglename',
        'quarter1': 'quarter1',
        'quarter2': 'quarter2',
        'quarter3': 'quarter3',
        'quarter4': 'quarter4',
        'range': 'range',
        'rangedir': 'rangedir',
        'section': 'section',
        'source': 'source',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'systag': 'systag',
        'tblkeyparent': 'tblkeyparent',
        'township': 'township',
        'townshipdir': 'townshipdir',
        'wellbore': 'wellbore'
    }

    def __init__(self, idrec=None, idrecparent=None, idwell=None, irregularsection=None, lot=None, meridian=None, note=None, quadranglemin=None, quadranglename=None, quarter1=None, quarter2=None, quarter3=None, quarter4=None, range=None, rangedir=None, section=None, source=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, systag=None, tblkeyparent=None, township=None, townshipdir=None, wellbore=None):  # noqa: E501
        """LocOhio - a model defined in Swagger"""  # noqa: E501
        self._idrec = None
        self._idrecparent = None
        self._idwell = None
        self._irregularsection = None
        self._lot = None
        self._meridian = None
        self._note = None
        self._quadranglemin = None
        self._quadranglename = None
        self._quarter1 = None
        self._quarter2 = None
        self._quarter3 = None
        self._quarter4 = None
        self._range = None
        self._rangedir = None
        self._section = None
        self._source = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._systag = None
        self._tblkeyparent = None
        self._township = None
        self._townshipdir = None
        self._wellbore = None
        self.discriminator = None
        if idrec is not None:
            self.idrec = idrec
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idwell is not None:
            self.idwell = idwell
        if irregularsection is not None:
            self.irregularsection = irregularsection
        if lot is not None:
            self.lot = lot
        if meridian is not None:
            self.meridian = meridian
        if note is not None:
            self.note = note
        if quadranglemin is not None:
            self.quadranglemin = quadranglemin
        if quadranglename is not None:
            self.quadranglename = quadranglename
        if quarter1 is not None:
            self.quarter1 = quarter1
        if quarter2 is not None:
            self.quarter2 = quarter2
        if quarter3 is not None:
            self.quarter3 = quarter3
        if quarter4 is not None:
            self.quarter4 = quarter4
        if range is not None:
            self.range = range
        if rangedir is not None:
            self.rangedir = rangedir
        if section is not None:
            self.section = section
        if source is not None:
            self.source = source
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if systag is not None:
            self.systag = systag
        if tblkeyparent is not None:
            self.tblkeyparent = tblkeyparent
        if township is not None:
            self.township = township
        if townshipdir is not None:
            self.townshipdir = townshipdir
        if wellbore is not None:
            self.wellbore = wellbore

    @property
    def idrec(self):
        """Gets the idrec of this LocOhio.  # noqa: E501


        :return: The idrec of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this LocOhio.


        :param idrec: The idrec of this LocOhio.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecparent(self):
        """Gets the idrecparent of this LocOhio.  # noqa: E501


        :return: The idrecparent of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this LocOhio.


        :param idrecparent: The idrecparent of this LocOhio.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idwell(self):
        """Gets the idwell of this LocOhio.  # noqa: E501


        :return: The idwell of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this LocOhio.


        :param idwell: The idwell of this LocOhio.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def irregularsection(self):
        """Gets the irregularsection of this LocOhio.  # noqa: E501


        :return: The irregularsection of this LocOhio.  # noqa: E501
        :rtype: int
        """
        return self._irregularsection

    @irregularsection.setter
    def irregularsection(self, irregularsection):
        """Sets the irregularsection of this LocOhio.


        :param irregularsection: The irregularsection of this LocOhio.  # noqa: E501
        :type: int
        """

        self._irregularsection = irregularsection

    @property
    def lot(self):
        """Gets the lot of this LocOhio.  # noqa: E501


        :return: The lot of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._lot

    @lot.setter
    def lot(self, lot):
        """Sets the lot of this LocOhio.


        :param lot: The lot of this LocOhio.  # noqa: E501
        :type: str
        """

        self._lot = lot

    @property
    def meridian(self):
        """Gets the meridian of this LocOhio.  # noqa: E501


        :return: The meridian of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._meridian

    @meridian.setter
    def meridian(self, meridian):
        """Sets the meridian of this LocOhio.


        :param meridian: The meridian of this LocOhio.  # noqa: E501
        :type: str
        """

        self._meridian = meridian

    @property
    def note(self):
        """Gets the note of this LocOhio.  # noqa: E501


        :return: The note of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this LocOhio.


        :param note: The note of this LocOhio.  # noqa: E501
        :type: str
        """

        self._note = note

    @property
    def quadranglemin(self):
        """Gets the quadranglemin of this LocOhio.  # noqa: E501


        :return: The quadranglemin of this LocOhio.  # noqa: E501
        :rtype: OneOfLocOhioQuadranglemin
        """
        return self._quadranglemin

    @quadranglemin.setter
    def quadranglemin(self, quadranglemin):
        """Sets the quadranglemin of this LocOhio.


        :param quadranglemin: The quadranglemin of this LocOhio.  # noqa: E501
        :type: OneOfLocOhioQuadranglemin
        """

        self._quadranglemin = quadranglemin

    @property
    def quadranglename(self):
        """Gets the quadranglename of this LocOhio.  # noqa: E501


        :return: The quadranglename of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._quadranglename

    @quadranglename.setter
    def quadranglename(self, quadranglename):
        """Sets the quadranglename of this LocOhio.


        :param quadranglename: The quadranglename of this LocOhio.  # noqa: E501
        :type: str
        """

        self._quadranglename = quadranglename

    @property
    def quarter1(self):
        """Gets the quarter1 of this LocOhio.  # noqa: E501


        :return: The quarter1 of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._quarter1

    @quarter1.setter
    def quarter1(self, quarter1):
        """Sets the quarter1 of this LocOhio.


        :param quarter1: The quarter1 of this LocOhio.  # noqa: E501
        :type: str
        """

        self._quarter1 = quarter1

    @property
    def quarter2(self):
        """Gets the quarter2 of this LocOhio.  # noqa: E501


        :return: The quarter2 of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._quarter2

    @quarter2.setter
    def quarter2(self, quarter2):
        """Sets the quarter2 of this LocOhio.


        :param quarter2: The quarter2 of this LocOhio.  # noqa: E501
        :type: str
        """

        self._quarter2 = quarter2

    @property
    def quarter3(self):
        """Gets the quarter3 of this LocOhio.  # noqa: E501


        :return: The quarter3 of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._quarter3

    @quarter3.setter
    def quarter3(self, quarter3):
        """Sets the quarter3 of this LocOhio.


        :param quarter3: The quarter3 of this LocOhio.  # noqa: E501
        :type: str
        """

        self._quarter3 = quarter3

    @property
    def quarter4(self):
        """Gets the quarter4 of this LocOhio.  # noqa: E501


        :return: The quarter4 of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._quarter4

    @quarter4.setter
    def quarter4(self, quarter4):
        """Sets the quarter4 of this LocOhio.


        :param quarter4: The quarter4 of this LocOhio.  # noqa: E501
        :type: str
        """

        self._quarter4 = quarter4

    @property
    def range(self):
        """Gets the range of this LocOhio.  # noqa: E501


        :return: The range of this LocOhio.  # noqa: E501
        :rtype: OneOfLocOhioRange
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this LocOhio.


        :param range: The range of this LocOhio.  # noqa: E501
        :type: OneOfLocOhioRange
        """

        self._range = range

    @property
    def rangedir(self):
        """Gets the rangedir of this LocOhio.  # noqa: E501


        :return: The rangedir of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._rangedir

    @rangedir.setter
    def rangedir(self, rangedir):
        """Sets the rangedir of this LocOhio.


        :param rangedir: The rangedir of this LocOhio.  # noqa: E501
        :type: str
        """

        self._rangedir = rangedir

    @property
    def section(self):
        """Gets the section of this LocOhio.  # noqa: E501


        :return: The section of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._section

    @section.setter
    def section(self, section):
        """Sets the section of this LocOhio.


        :param section: The section of this LocOhio.  # noqa: E501
        :type: str
        """

        self._section = section

    @property
    def source(self):
        """Gets the source of this LocOhio.  # noqa: E501


        :return: The source of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this LocOhio.


        :param source: The source of this LocOhio.  # noqa: E501
        :type: str
        """

        self._source = source

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this LocOhio.  # noqa: E501


        :return: The syscreatedate of this LocOhio.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this LocOhio.


        :param syscreatedate: The syscreatedate of this LocOhio.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this LocOhio.  # noqa: E501


        :return: The syscreateuser of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this LocOhio.


        :param syscreateuser: The syscreateuser of this LocOhio.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this LocOhio.  # noqa: E501


        :return: The syslockchildren of this LocOhio.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this LocOhio.


        :param syslockchildren: The syslockchildren of this LocOhio.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this LocOhio.  # noqa: E501


        :return: The syslockchildrenui of this LocOhio.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this LocOhio.


        :param syslockchildrenui: The syslockchildrenui of this LocOhio.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this LocOhio.  # noqa: E501


        :return: The syslockdate of this LocOhio.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this LocOhio.


        :param syslockdate: The syslockdate of this LocOhio.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this LocOhio.  # noqa: E501


        :return: The syslockme of this LocOhio.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this LocOhio.


        :param syslockme: The syslockme of this LocOhio.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this LocOhio.  # noqa: E501


        :return: The syslockmeui of this LocOhio.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this LocOhio.


        :param syslockmeui: The syslockmeui of this LocOhio.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this LocOhio.  # noqa: E501


        :return: The sysmoddate of this LocOhio.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this LocOhio.


        :param sysmoddate: The sysmoddate of this LocOhio.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this LocOhio.  # noqa: E501


        :return: The sysmoduser of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this LocOhio.


        :param sysmoduser: The sysmoduser of this LocOhio.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def systag(self):
        """Gets the systag of this LocOhio.  # noqa: E501


        :return: The systag of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this LocOhio.


        :param systag: The systag of this LocOhio.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def tblkeyparent(self):
        """Gets the tblkeyparent of this LocOhio.  # noqa: E501


        :return: The tblkeyparent of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._tblkeyparent

    @tblkeyparent.setter
    def tblkeyparent(self, tblkeyparent):
        """Sets the tblkeyparent of this LocOhio.


        :param tblkeyparent: The tblkeyparent of this LocOhio.  # noqa: E501
        :type: str
        """

        self._tblkeyparent = tblkeyparent

    @property
    def township(self):
        """Gets the township of this LocOhio.  # noqa: E501


        :return: The township of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._township

    @township.setter
    def township(self, township):
        """Sets the township of this LocOhio.


        :param township: The township of this LocOhio.  # noqa: E501
        :type: str
        """

        self._township = township

    @property
    def townshipdir(self):
        """Gets the townshipdir of this LocOhio.  # noqa: E501


        :return: The townshipdir of this LocOhio.  # noqa: E501
        :rtype: str
        """
        return self._townshipdir

    @townshipdir.setter
    def townshipdir(self, townshipdir):
        """Sets the townshipdir of this LocOhio.


        :param townshipdir: The townshipdir of this LocOhio.  # noqa: E501
        :type: str
        """

        self._townshipdir = townshipdir

    @property
    def wellbore(self):
        """Gets the wellbore of this LocOhio.  # noqa: E501


        :return: The wellbore of this LocOhio.  # noqa: E501
        :rtype: AnyOfLocOhioWellbore
        """
        return self._wellbore

    @wellbore.setter
    def wellbore(self, wellbore):
        """Sets the wellbore of this LocOhio.


        :param wellbore: The wellbore of this LocOhio.  # noqa: E501
        :type: AnyOfLocOhioWellbore
        """

        self._wellbore = wellbore

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(LocOhio, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LocOhio):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
