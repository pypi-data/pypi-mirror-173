# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class JobReportTimeLog(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'code1': 'str',
        'code1234calc': 'str',
        'code2': 'str',
        'code3': 'str',
        'code4': 'str',
        'com': 'str',
        'daysfromspudcalc': 'OneOfJobReportTimeLogDaysfromspudcalc',
        'depthend': 'OneOfJobReportTimeLogDepthend',
        'depthenddpcalc': 'OneOfJobReportTimeLogDepthenddpcalc',
        'depthstart': 'OneOfJobReportTimeLogDepthstart',
        'depthstartdpcalc': 'OneOfJobReportTimeLogDepthstartdpcalc',
        'depthtvdendcalc': 'OneOfJobReportTimeLogDepthtvdendcalc',
        'depthtvdstartcalc': 'OneOfJobReportTimeLogDepthtvdstartcalc',
        'dttmendcalc': 'datetime',
        'dttmstartcalc': 'datetime',
        'duration': 'OneOfJobReportTimeLogDuration',
        'durationnoprobtimecalc': 'OneOfJobReportTimeLogDurationnoprobtimecalc',
        'durationnoprobtimecumcalc': 'OneOfJobReportTimeLogDurationnoprobtimecumcalc',
        'durationproblemtimecalc': 'OneOfJobReportTimeLogDurationproblemtimecalc',
        'durationproblemtimecumcalc': 'OneOfJobReportTimeLogDurationproblemtimecumcalc',
        'durationtimelogcumspudcalc': 'OneOfJobReportTimeLogDurationtimelogcumspudcalc',
        'durationtimelogtotcumcalc': 'OneOfJobReportTimeLogDurationtimelogtotcumcalc',
        'duroffbtmcalc': 'OneOfJobReportTimeLogDuroffbtmcalc',
        'duronbtmcalc': 'OneOfJobReportTimeLogDuronbtmcalc',
        'durpipemovingcalc': 'OneOfJobReportTimeLogDurpipemovingcalc',
        'formationcalc': 'str',
        'idrec': 'str',
        'idrecjobprogramphasecalc': 'str',
        'idrecjobprogramphasecalctk': 'str',
        'idreclastcascalc': 'str',
        'idreclastcascalctk': 'str',
        'idreclastrigcalc': 'str',
        'idreclastrigcalctk': 'str',
        'idrecparent': 'str',
        'idrecwellbore': 'str',
        'idrecwellboretk': 'str',
        'idrecwsstring': 'str',
        'idrecwsstringtk': 'str',
        'idwell': 'str',
        'inactive': 'int',
        'inclendcalc': 'OneOfJobReportTimeLogInclendcalc',
        'inclmaxcalc': 'OneOfJobReportTimeLogInclmaxcalc',
        'inclstartcalc': 'OneOfJobReportTimeLogInclstartcalc',
        'job_report': 'AnyOfJobReportTimeLogJobReport',
        'opscategory': 'str',
        'problemcalc': 'int',
        'refderrick': 'str',
        'refnoproblemcalc': 'str',
        'reportdaycalc': 'OneOfJobReportTimeLogReportdaycalc',
        'reportnocalc': 'OneOfJobReportTimeLogReportnocalc',
        'rigcrewnamecalc': 'str',
        'rigdayscalc': 'OneOfJobReportTimeLogRigdayscalc',
        'rigdayscumcalc': 'OneOfJobReportTimeLogRigdayscumcalc',
        'ropcalc': 'OneOfJobReportTimeLogRopcalc',
        'sumofdurationcalc': 'OneOfJobReportTimeLogSumofdurationcalc',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'sysseq': 'int',
        'systag': 'str',
        'unschedtyp': 'str',
        'usertxt1': 'str',
        'usertxt2': 'str',
        'wellboreszcalc': 'OneOfJobReportTimeLogWellboreszcalc'
    }

    attribute_map = {
        'code1': 'code1',
        'code1234calc': 'code1234calc',
        'code2': 'code2',
        'code3': 'code3',
        'code4': 'code4',
        'com': 'com',
        'daysfromspudcalc': 'daysfromspudcalc',
        'depthend': 'depthend',
        'depthenddpcalc': 'depthenddpcalc',
        'depthstart': 'depthstart',
        'depthstartdpcalc': 'depthstartdpcalc',
        'depthtvdendcalc': 'depthtvdendcalc',
        'depthtvdstartcalc': 'depthtvdstartcalc',
        'dttmendcalc': 'dttmendcalc',
        'dttmstartcalc': 'dttmstartcalc',
        'duration': 'duration',
        'durationnoprobtimecalc': 'durationnoprobtimecalc',
        'durationnoprobtimecumcalc': 'durationnoprobtimecumcalc',
        'durationproblemtimecalc': 'durationproblemtimecalc',
        'durationproblemtimecumcalc': 'durationproblemtimecumcalc',
        'durationtimelogcumspudcalc': 'durationtimelogcumspudcalc',
        'durationtimelogtotcumcalc': 'durationtimelogtotcumcalc',
        'duroffbtmcalc': 'duroffbtmcalc',
        'duronbtmcalc': 'duronbtmcalc',
        'durpipemovingcalc': 'durpipemovingcalc',
        'formationcalc': 'formationcalc',
        'idrec': 'idrec',
        'idrecjobprogramphasecalc': 'idrecjobprogramphasecalc',
        'idrecjobprogramphasecalctk': 'idrecjobprogramphasecalctk',
        'idreclastcascalc': 'idreclastcascalc',
        'idreclastcascalctk': 'idreclastcascalctk',
        'idreclastrigcalc': 'idreclastrigcalc',
        'idreclastrigcalctk': 'idreclastrigcalctk',
        'idrecparent': 'idrecparent',
        'idrecwellbore': 'idrecwellbore',
        'idrecwellboretk': 'idrecwellboretk',
        'idrecwsstring': 'idrecwsstring',
        'idrecwsstringtk': 'idrecwsstringtk',
        'idwell': 'idwell',
        'inactive': 'inactive',
        'inclendcalc': 'inclendcalc',
        'inclmaxcalc': 'inclmaxcalc',
        'inclstartcalc': 'inclstartcalc',
        'job_report': 'jobReport',
        'opscategory': 'opscategory',
        'problemcalc': 'problemcalc',
        'refderrick': 'refderrick',
        'refnoproblemcalc': 'refnoproblemcalc',
        'reportdaycalc': 'reportdaycalc',
        'reportnocalc': 'reportnocalc',
        'rigcrewnamecalc': 'rigcrewnamecalc',
        'rigdayscalc': 'rigdayscalc',
        'rigdayscumcalc': 'rigdayscumcalc',
        'ropcalc': 'ropcalc',
        'sumofdurationcalc': 'sumofdurationcalc',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'sysseq': 'sysseq',
        'systag': 'systag',
        'unschedtyp': 'unschedtyp',
        'usertxt1': 'usertxt1',
        'usertxt2': 'usertxt2',
        'wellboreszcalc': 'wellboreszcalc'
    }

    def __init__(self, code1=None, code1234calc=None, code2=None, code3=None, code4=None, com=None, daysfromspudcalc=None, depthend=None, depthenddpcalc=None, depthstart=None, depthstartdpcalc=None, depthtvdendcalc=None, depthtvdstartcalc=None, dttmendcalc=None, dttmstartcalc=None, duration=None, durationnoprobtimecalc=None, durationnoprobtimecumcalc=None, durationproblemtimecalc=None, durationproblemtimecumcalc=None, durationtimelogcumspudcalc=None, durationtimelogtotcumcalc=None, duroffbtmcalc=None, duronbtmcalc=None, durpipemovingcalc=None, formationcalc=None, idrec=None, idrecjobprogramphasecalc=None, idrecjobprogramphasecalctk=None, idreclastcascalc=None, idreclastcascalctk=None, idreclastrigcalc=None, idreclastrigcalctk=None, idrecparent=None, idrecwellbore=None, idrecwellboretk=None, idrecwsstring=None, idrecwsstringtk=None, idwell=None, inactive=None, inclendcalc=None, inclmaxcalc=None, inclstartcalc=None, job_report=None, opscategory=None, problemcalc=None, refderrick=None, refnoproblemcalc=None, reportdaycalc=None, reportnocalc=None, rigcrewnamecalc=None, rigdayscalc=None, rigdayscumcalc=None, ropcalc=None, sumofdurationcalc=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, sysseq=None, systag=None, unschedtyp=None, usertxt1=None, usertxt2=None, wellboreszcalc=None):  # noqa: E501
        """JobReportTimeLog - a model defined in Swagger"""  # noqa: E501
        self._code1 = None
        self._code1234calc = None
        self._code2 = None
        self._code3 = None
        self._code4 = None
        self._com = None
        self._daysfromspudcalc = None
        self._depthend = None
        self._depthenddpcalc = None
        self._depthstart = None
        self._depthstartdpcalc = None
        self._depthtvdendcalc = None
        self._depthtvdstartcalc = None
        self._dttmendcalc = None
        self._dttmstartcalc = None
        self._duration = None
        self._durationnoprobtimecalc = None
        self._durationnoprobtimecumcalc = None
        self._durationproblemtimecalc = None
        self._durationproblemtimecumcalc = None
        self._durationtimelogcumspudcalc = None
        self._durationtimelogtotcumcalc = None
        self._duroffbtmcalc = None
        self._duronbtmcalc = None
        self._durpipemovingcalc = None
        self._formationcalc = None
        self._idrec = None
        self._idrecjobprogramphasecalc = None
        self._idrecjobprogramphasecalctk = None
        self._idreclastcascalc = None
        self._idreclastcascalctk = None
        self._idreclastrigcalc = None
        self._idreclastrigcalctk = None
        self._idrecparent = None
        self._idrecwellbore = None
        self._idrecwellboretk = None
        self._idrecwsstring = None
        self._idrecwsstringtk = None
        self._idwell = None
        self._inactive = None
        self._inclendcalc = None
        self._inclmaxcalc = None
        self._inclstartcalc = None
        self._job_report = None
        self._opscategory = None
        self._problemcalc = None
        self._refderrick = None
        self._refnoproblemcalc = None
        self._reportdaycalc = None
        self._reportnocalc = None
        self._rigcrewnamecalc = None
        self._rigdayscalc = None
        self._rigdayscumcalc = None
        self._ropcalc = None
        self._sumofdurationcalc = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._sysseq = None
        self._systag = None
        self._unschedtyp = None
        self._usertxt1 = None
        self._usertxt2 = None
        self._wellboreszcalc = None
        self.discriminator = None
        if code1 is not None:
            self.code1 = code1
        if code1234calc is not None:
            self.code1234calc = code1234calc
        if code2 is not None:
            self.code2 = code2
        if code3 is not None:
            self.code3 = code3
        if code4 is not None:
            self.code4 = code4
        if com is not None:
            self.com = com
        if daysfromspudcalc is not None:
            self.daysfromspudcalc = daysfromspudcalc
        if depthend is not None:
            self.depthend = depthend
        if depthenddpcalc is not None:
            self.depthenddpcalc = depthenddpcalc
        if depthstart is not None:
            self.depthstart = depthstart
        if depthstartdpcalc is not None:
            self.depthstartdpcalc = depthstartdpcalc
        if depthtvdendcalc is not None:
            self.depthtvdendcalc = depthtvdendcalc
        if depthtvdstartcalc is not None:
            self.depthtvdstartcalc = depthtvdstartcalc
        if dttmendcalc is not None:
            self.dttmendcalc = dttmendcalc
        if dttmstartcalc is not None:
            self.dttmstartcalc = dttmstartcalc
        if duration is not None:
            self.duration = duration
        if durationnoprobtimecalc is not None:
            self.durationnoprobtimecalc = durationnoprobtimecalc
        if durationnoprobtimecumcalc is not None:
            self.durationnoprobtimecumcalc = durationnoprobtimecumcalc
        if durationproblemtimecalc is not None:
            self.durationproblemtimecalc = durationproblemtimecalc
        if durationproblemtimecumcalc is not None:
            self.durationproblemtimecumcalc = durationproblemtimecumcalc
        if durationtimelogcumspudcalc is not None:
            self.durationtimelogcumspudcalc = durationtimelogcumspudcalc
        if durationtimelogtotcumcalc is not None:
            self.durationtimelogtotcumcalc = durationtimelogtotcumcalc
        if duroffbtmcalc is not None:
            self.duroffbtmcalc = duroffbtmcalc
        if duronbtmcalc is not None:
            self.duronbtmcalc = duronbtmcalc
        if durpipemovingcalc is not None:
            self.durpipemovingcalc = durpipemovingcalc
        if formationcalc is not None:
            self.formationcalc = formationcalc
        if idrec is not None:
            self.idrec = idrec
        if idrecjobprogramphasecalc is not None:
            self.idrecjobprogramphasecalc = idrecjobprogramphasecalc
        if idrecjobprogramphasecalctk is not None:
            self.idrecjobprogramphasecalctk = idrecjobprogramphasecalctk
        if idreclastcascalc is not None:
            self.idreclastcascalc = idreclastcascalc
        if idreclastcascalctk is not None:
            self.idreclastcascalctk = idreclastcascalctk
        if idreclastrigcalc is not None:
            self.idreclastrigcalc = idreclastrigcalc
        if idreclastrigcalctk is not None:
            self.idreclastrigcalctk = idreclastrigcalctk
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idrecwellbore is not None:
            self.idrecwellbore = idrecwellbore
        if idrecwellboretk is not None:
            self.idrecwellboretk = idrecwellboretk
        if idrecwsstring is not None:
            self.idrecwsstring = idrecwsstring
        if idrecwsstringtk is not None:
            self.idrecwsstringtk = idrecwsstringtk
        if idwell is not None:
            self.idwell = idwell
        if inactive is not None:
            self.inactive = inactive
        if inclendcalc is not None:
            self.inclendcalc = inclendcalc
        if inclmaxcalc is not None:
            self.inclmaxcalc = inclmaxcalc
        if inclstartcalc is not None:
            self.inclstartcalc = inclstartcalc
        if job_report is not None:
            self.job_report = job_report
        if opscategory is not None:
            self.opscategory = opscategory
        if problemcalc is not None:
            self.problemcalc = problemcalc
        if refderrick is not None:
            self.refderrick = refderrick
        if refnoproblemcalc is not None:
            self.refnoproblemcalc = refnoproblemcalc
        if reportdaycalc is not None:
            self.reportdaycalc = reportdaycalc
        if reportnocalc is not None:
            self.reportnocalc = reportnocalc
        if rigcrewnamecalc is not None:
            self.rigcrewnamecalc = rigcrewnamecalc
        if rigdayscalc is not None:
            self.rigdayscalc = rigdayscalc
        if rigdayscumcalc is not None:
            self.rigdayscumcalc = rigdayscumcalc
        if ropcalc is not None:
            self.ropcalc = ropcalc
        if sumofdurationcalc is not None:
            self.sumofdurationcalc = sumofdurationcalc
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if sysseq is not None:
            self.sysseq = sysseq
        if systag is not None:
            self.systag = systag
        if unschedtyp is not None:
            self.unschedtyp = unschedtyp
        if usertxt1 is not None:
            self.usertxt1 = usertxt1
        if usertxt2 is not None:
            self.usertxt2 = usertxt2
        if wellboreszcalc is not None:
            self.wellboreszcalc = wellboreszcalc

    @property
    def code1(self):
        """Gets the code1 of this JobReportTimeLog.  # noqa: E501


        :return: The code1 of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._code1

    @code1.setter
    def code1(self, code1):
        """Sets the code1 of this JobReportTimeLog.


        :param code1: The code1 of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._code1 = code1

    @property
    def code1234calc(self):
        """Gets the code1234calc of this JobReportTimeLog.  # noqa: E501


        :return: The code1234calc of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._code1234calc

    @code1234calc.setter
    def code1234calc(self, code1234calc):
        """Sets the code1234calc of this JobReportTimeLog.


        :param code1234calc: The code1234calc of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._code1234calc = code1234calc

    @property
    def code2(self):
        """Gets the code2 of this JobReportTimeLog.  # noqa: E501


        :return: The code2 of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._code2

    @code2.setter
    def code2(self, code2):
        """Sets the code2 of this JobReportTimeLog.


        :param code2: The code2 of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._code2 = code2

    @property
    def code3(self):
        """Gets the code3 of this JobReportTimeLog.  # noqa: E501


        :return: The code3 of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._code3

    @code3.setter
    def code3(self, code3):
        """Sets the code3 of this JobReportTimeLog.


        :param code3: The code3 of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._code3 = code3

    @property
    def code4(self):
        """Gets the code4 of this JobReportTimeLog.  # noqa: E501


        :return: The code4 of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._code4

    @code4.setter
    def code4(self, code4):
        """Sets the code4 of this JobReportTimeLog.


        :param code4: The code4 of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._code4 = code4

    @property
    def com(self):
        """Gets the com of this JobReportTimeLog.  # noqa: E501


        :return: The com of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._com

    @com.setter
    def com(self, com):
        """Sets the com of this JobReportTimeLog.


        :param com: The com of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._com = com

    @property
    def daysfromspudcalc(self):
        """Gets the daysfromspudcalc of this JobReportTimeLog.  # noqa: E501


        :return: The daysfromspudcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDaysfromspudcalc
        """
        return self._daysfromspudcalc

    @daysfromspudcalc.setter
    def daysfromspudcalc(self, daysfromspudcalc):
        """Sets the daysfromspudcalc of this JobReportTimeLog.


        :param daysfromspudcalc: The daysfromspudcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDaysfromspudcalc
        """

        self._daysfromspudcalc = daysfromspudcalc

    @property
    def depthend(self):
        """Gets the depthend of this JobReportTimeLog.  # noqa: E501


        :return: The depthend of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDepthend
        """
        return self._depthend

    @depthend.setter
    def depthend(self, depthend):
        """Sets the depthend of this JobReportTimeLog.


        :param depthend: The depthend of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDepthend
        """

        self._depthend = depthend

    @property
    def depthenddpcalc(self):
        """Gets the depthenddpcalc of this JobReportTimeLog.  # noqa: E501


        :return: The depthenddpcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDepthenddpcalc
        """
        return self._depthenddpcalc

    @depthenddpcalc.setter
    def depthenddpcalc(self, depthenddpcalc):
        """Sets the depthenddpcalc of this JobReportTimeLog.


        :param depthenddpcalc: The depthenddpcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDepthenddpcalc
        """

        self._depthenddpcalc = depthenddpcalc

    @property
    def depthstart(self):
        """Gets the depthstart of this JobReportTimeLog.  # noqa: E501


        :return: The depthstart of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDepthstart
        """
        return self._depthstart

    @depthstart.setter
    def depthstart(self, depthstart):
        """Sets the depthstart of this JobReportTimeLog.


        :param depthstart: The depthstart of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDepthstart
        """

        self._depthstart = depthstart

    @property
    def depthstartdpcalc(self):
        """Gets the depthstartdpcalc of this JobReportTimeLog.  # noqa: E501


        :return: The depthstartdpcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDepthstartdpcalc
        """
        return self._depthstartdpcalc

    @depthstartdpcalc.setter
    def depthstartdpcalc(self, depthstartdpcalc):
        """Sets the depthstartdpcalc of this JobReportTimeLog.


        :param depthstartdpcalc: The depthstartdpcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDepthstartdpcalc
        """

        self._depthstartdpcalc = depthstartdpcalc

    @property
    def depthtvdendcalc(self):
        """Gets the depthtvdendcalc of this JobReportTimeLog.  # noqa: E501


        :return: The depthtvdendcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDepthtvdendcalc
        """
        return self._depthtvdendcalc

    @depthtvdendcalc.setter
    def depthtvdendcalc(self, depthtvdendcalc):
        """Sets the depthtvdendcalc of this JobReportTimeLog.


        :param depthtvdendcalc: The depthtvdendcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDepthtvdendcalc
        """

        self._depthtvdendcalc = depthtvdendcalc

    @property
    def depthtvdstartcalc(self):
        """Gets the depthtvdstartcalc of this JobReportTimeLog.  # noqa: E501


        :return: The depthtvdstartcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDepthtvdstartcalc
        """
        return self._depthtvdstartcalc

    @depthtvdstartcalc.setter
    def depthtvdstartcalc(self, depthtvdstartcalc):
        """Sets the depthtvdstartcalc of this JobReportTimeLog.


        :param depthtvdstartcalc: The depthtvdstartcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDepthtvdstartcalc
        """

        self._depthtvdstartcalc = depthtvdstartcalc

    @property
    def dttmendcalc(self):
        """Gets the dttmendcalc of this JobReportTimeLog.  # noqa: E501


        :return: The dttmendcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmendcalc

    @dttmendcalc.setter
    def dttmendcalc(self, dttmendcalc):
        """Sets the dttmendcalc of this JobReportTimeLog.


        :param dttmendcalc: The dttmendcalc of this JobReportTimeLog.  # noqa: E501
        :type: datetime
        """

        self._dttmendcalc = dttmendcalc

    @property
    def dttmstartcalc(self):
        """Gets the dttmstartcalc of this JobReportTimeLog.  # noqa: E501


        :return: The dttmstartcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmstartcalc

    @dttmstartcalc.setter
    def dttmstartcalc(self, dttmstartcalc):
        """Sets the dttmstartcalc of this JobReportTimeLog.


        :param dttmstartcalc: The dttmstartcalc of this JobReportTimeLog.  # noqa: E501
        :type: datetime
        """

        self._dttmstartcalc = dttmstartcalc

    @property
    def duration(self):
        """Gets the duration of this JobReportTimeLog.  # noqa: E501


        :return: The duration of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDuration
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this JobReportTimeLog.


        :param duration: The duration of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDuration
        """

        self._duration = duration

    @property
    def durationnoprobtimecalc(self):
        """Gets the durationnoprobtimecalc of this JobReportTimeLog.  # noqa: E501


        :return: The durationnoprobtimecalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDurationnoprobtimecalc
        """
        return self._durationnoprobtimecalc

    @durationnoprobtimecalc.setter
    def durationnoprobtimecalc(self, durationnoprobtimecalc):
        """Sets the durationnoprobtimecalc of this JobReportTimeLog.


        :param durationnoprobtimecalc: The durationnoprobtimecalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDurationnoprobtimecalc
        """

        self._durationnoprobtimecalc = durationnoprobtimecalc

    @property
    def durationnoprobtimecumcalc(self):
        """Gets the durationnoprobtimecumcalc of this JobReportTimeLog.  # noqa: E501


        :return: The durationnoprobtimecumcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDurationnoprobtimecumcalc
        """
        return self._durationnoprobtimecumcalc

    @durationnoprobtimecumcalc.setter
    def durationnoprobtimecumcalc(self, durationnoprobtimecumcalc):
        """Sets the durationnoprobtimecumcalc of this JobReportTimeLog.


        :param durationnoprobtimecumcalc: The durationnoprobtimecumcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDurationnoprobtimecumcalc
        """

        self._durationnoprobtimecumcalc = durationnoprobtimecumcalc

    @property
    def durationproblemtimecalc(self):
        """Gets the durationproblemtimecalc of this JobReportTimeLog.  # noqa: E501


        :return: The durationproblemtimecalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDurationproblemtimecalc
        """
        return self._durationproblemtimecalc

    @durationproblemtimecalc.setter
    def durationproblemtimecalc(self, durationproblemtimecalc):
        """Sets the durationproblemtimecalc of this JobReportTimeLog.


        :param durationproblemtimecalc: The durationproblemtimecalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDurationproblemtimecalc
        """

        self._durationproblemtimecalc = durationproblemtimecalc

    @property
    def durationproblemtimecumcalc(self):
        """Gets the durationproblemtimecumcalc of this JobReportTimeLog.  # noqa: E501


        :return: The durationproblemtimecumcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDurationproblemtimecumcalc
        """
        return self._durationproblemtimecumcalc

    @durationproblemtimecumcalc.setter
    def durationproblemtimecumcalc(self, durationproblemtimecumcalc):
        """Sets the durationproblemtimecumcalc of this JobReportTimeLog.


        :param durationproblemtimecumcalc: The durationproblemtimecumcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDurationproblemtimecumcalc
        """

        self._durationproblemtimecumcalc = durationproblemtimecumcalc

    @property
    def durationtimelogcumspudcalc(self):
        """Gets the durationtimelogcumspudcalc of this JobReportTimeLog.  # noqa: E501


        :return: The durationtimelogcumspudcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDurationtimelogcumspudcalc
        """
        return self._durationtimelogcumspudcalc

    @durationtimelogcumspudcalc.setter
    def durationtimelogcumspudcalc(self, durationtimelogcumspudcalc):
        """Sets the durationtimelogcumspudcalc of this JobReportTimeLog.


        :param durationtimelogcumspudcalc: The durationtimelogcumspudcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDurationtimelogcumspudcalc
        """

        self._durationtimelogcumspudcalc = durationtimelogcumspudcalc

    @property
    def durationtimelogtotcumcalc(self):
        """Gets the durationtimelogtotcumcalc of this JobReportTimeLog.  # noqa: E501


        :return: The durationtimelogtotcumcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDurationtimelogtotcumcalc
        """
        return self._durationtimelogtotcumcalc

    @durationtimelogtotcumcalc.setter
    def durationtimelogtotcumcalc(self, durationtimelogtotcumcalc):
        """Sets the durationtimelogtotcumcalc of this JobReportTimeLog.


        :param durationtimelogtotcumcalc: The durationtimelogtotcumcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDurationtimelogtotcumcalc
        """

        self._durationtimelogtotcumcalc = durationtimelogtotcumcalc

    @property
    def duroffbtmcalc(self):
        """Gets the duroffbtmcalc of this JobReportTimeLog.  # noqa: E501


        :return: The duroffbtmcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDuroffbtmcalc
        """
        return self._duroffbtmcalc

    @duroffbtmcalc.setter
    def duroffbtmcalc(self, duroffbtmcalc):
        """Sets the duroffbtmcalc of this JobReportTimeLog.


        :param duroffbtmcalc: The duroffbtmcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDuroffbtmcalc
        """

        self._duroffbtmcalc = duroffbtmcalc

    @property
    def duronbtmcalc(self):
        """Gets the duronbtmcalc of this JobReportTimeLog.  # noqa: E501


        :return: The duronbtmcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDuronbtmcalc
        """
        return self._duronbtmcalc

    @duronbtmcalc.setter
    def duronbtmcalc(self, duronbtmcalc):
        """Sets the duronbtmcalc of this JobReportTimeLog.


        :param duronbtmcalc: The duronbtmcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDuronbtmcalc
        """

        self._duronbtmcalc = duronbtmcalc

    @property
    def durpipemovingcalc(self):
        """Gets the durpipemovingcalc of this JobReportTimeLog.  # noqa: E501


        :return: The durpipemovingcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogDurpipemovingcalc
        """
        return self._durpipemovingcalc

    @durpipemovingcalc.setter
    def durpipemovingcalc(self, durpipemovingcalc):
        """Sets the durpipemovingcalc of this JobReportTimeLog.


        :param durpipemovingcalc: The durpipemovingcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogDurpipemovingcalc
        """

        self._durpipemovingcalc = durpipemovingcalc

    @property
    def formationcalc(self):
        """Gets the formationcalc of this JobReportTimeLog.  # noqa: E501


        :return: The formationcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._formationcalc

    @formationcalc.setter
    def formationcalc(self, formationcalc):
        """Sets the formationcalc of this JobReportTimeLog.


        :param formationcalc: The formationcalc of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._formationcalc = formationcalc

    @property
    def idrec(self):
        """Gets the idrec of this JobReportTimeLog.  # noqa: E501


        :return: The idrec of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this JobReportTimeLog.


        :param idrec: The idrec of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecjobprogramphasecalc(self):
        """Gets the idrecjobprogramphasecalc of this JobReportTimeLog.  # noqa: E501


        :return: The idrecjobprogramphasecalc of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idrecjobprogramphasecalc

    @idrecjobprogramphasecalc.setter
    def idrecjobprogramphasecalc(self, idrecjobprogramphasecalc):
        """Sets the idrecjobprogramphasecalc of this JobReportTimeLog.


        :param idrecjobprogramphasecalc: The idrecjobprogramphasecalc of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._idrecjobprogramphasecalc = idrecjobprogramphasecalc

    @property
    def idrecjobprogramphasecalctk(self):
        """Gets the idrecjobprogramphasecalctk of this JobReportTimeLog.  # noqa: E501


        :return: The idrecjobprogramphasecalctk of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idrecjobprogramphasecalctk

    @idrecjobprogramphasecalctk.setter
    def idrecjobprogramphasecalctk(self, idrecjobprogramphasecalctk):
        """Sets the idrecjobprogramphasecalctk of this JobReportTimeLog.


        :param idrecjobprogramphasecalctk: The idrecjobprogramphasecalctk of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._idrecjobprogramphasecalctk = idrecjobprogramphasecalctk

    @property
    def idreclastcascalc(self):
        """Gets the idreclastcascalc of this JobReportTimeLog.  # noqa: E501


        :return: The idreclastcascalc of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idreclastcascalc

    @idreclastcascalc.setter
    def idreclastcascalc(self, idreclastcascalc):
        """Sets the idreclastcascalc of this JobReportTimeLog.


        :param idreclastcascalc: The idreclastcascalc of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._idreclastcascalc = idreclastcascalc

    @property
    def idreclastcascalctk(self):
        """Gets the idreclastcascalctk of this JobReportTimeLog.  # noqa: E501


        :return: The idreclastcascalctk of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idreclastcascalctk

    @idreclastcascalctk.setter
    def idreclastcascalctk(self, idreclastcascalctk):
        """Sets the idreclastcascalctk of this JobReportTimeLog.


        :param idreclastcascalctk: The idreclastcascalctk of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._idreclastcascalctk = idreclastcascalctk

    @property
    def idreclastrigcalc(self):
        """Gets the idreclastrigcalc of this JobReportTimeLog.  # noqa: E501


        :return: The idreclastrigcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idreclastrigcalc

    @idreclastrigcalc.setter
    def idreclastrigcalc(self, idreclastrigcalc):
        """Sets the idreclastrigcalc of this JobReportTimeLog.


        :param idreclastrigcalc: The idreclastrigcalc of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._idreclastrigcalc = idreclastrigcalc

    @property
    def idreclastrigcalctk(self):
        """Gets the idreclastrigcalctk of this JobReportTimeLog.  # noqa: E501


        :return: The idreclastrigcalctk of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idreclastrigcalctk

    @idreclastrigcalctk.setter
    def idreclastrigcalctk(self, idreclastrigcalctk):
        """Sets the idreclastrigcalctk of this JobReportTimeLog.


        :param idreclastrigcalctk: The idreclastrigcalctk of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._idreclastrigcalctk = idreclastrigcalctk

    @property
    def idrecparent(self):
        """Gets the idrecparent of this JobReportTimeLog.  # noqa: E501


        :return: The idrecparent of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this JobReportTimeLog.


        :param idrecparent: The idrecparent of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idrecwellbore(self):
        """Gets the idrecwellbore of this JobReportTimeLog.  # noqa: E501


        :return: The idrecwellbore of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellbore

    @idrecwellbore.setter
    def idrecwellbore(self, idrecwellbore):
        """Sets the idrecwellbore of this JobReportTimeLog.


        :param idrecwellbore: The idrecwellbore of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._idrecwellbore = idrecwellbore

    @property
    def idrecwellboretk(self):
        """Gets the idrecwellboretk of this JobReportTimeLog.  # noqa: E501


        :return: The idrecwellboretk of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idrecwellboretk

    @idrecwellboretk.setter
    def idrecwellboretk(self, idrecwellboretk):
        """Sets the idrecwellboretk of this JobReportTimeLog.


        :param idrecwellboretk: The idrecwellboretk of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._idrecwellboretk = idrecwellboretk

    @property
    def idrecwsstring(self):
        """Gets the idrecwsstring of this JobReportTimeLog.  # noqa: E501


        :return: The idrecwsstring of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idrecwsstring

    @idrecwsstring.setter
    def idrecwsstring(self, idrecwsstring):
        """Sets the idrecwsstring of this JobReportTimeLog.


        :param idrecwsstring: The idrecwsstring of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._idrecwsstring = idrecwsstring

    @property
    def idrecwsstringtk(self):
        """Gets the idrecwsstringtk of this JobReportTimeLog.  # noqa: E501


        :return: The idrecwsstringtk of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idrecwsstringtk

    @idrecwsstringtk.setter
    def idrecwsstringtk(self, idrecwsstringtk):
        """Sets the idrecwsstringtk of this JobReportTimeLog.


        :param idrecwsstringtk: The idrecwsstringtk of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._idrecwsstringtk = idrecwsstringtk

    @property
    def idwell(self):
        """Gets the idwell of this JobReportTimeLog.  # noqa: E501


        :return: The idwell of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this JobReportTimeLog.


        :param idwell: The idwell of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def inactive(self):
        """Gets the inactive of this JobReportTimeLog.  # noqa: E501


        :return: The inactive of this JobReportTimeLog.  # noqa: E501
        :rtype: int
        """
        return self._inactive

    @inactive.setter
    def inactive(self, inactive):
        """Sets the inactive of this JobReportTimeLog.


        :param inactive: The inactive of this JobReportTimeLog.  # noqa: E501
        :type: int
        """

        self._inactive = inactive

    @property
    def inclendcalc(self):
        """Gets the inclendcalc of this JobReportTimeLog.  # noqa: E501


        :return: The inclendcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogInclendcalc
        """
        return self._inclendcalc

    @inclendcalc.setter
    def inclendcalc(self, inclendcalc):
        """Sets the inclendcalc of this JobReportTimeLog.


        :param inclendcalc: The inclendcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogInclendcalc
        """

        self._inclendcalc = inclendcalc

    @property
    def inclmaxcalc(self):
        """Gets the inclmaxcalc of this JobReportTimeLog.  # noqa: E501


        :return: The inclmaxcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogInclmaxcalc
        """
        return self._inclmaxcalc

    @inclmaxcalc.setter
    def inclmaxcalc(self, inclmaxcalc):
        """Sets the inclmaxcalc of this JobReportTimeLog.


        :param inclmaxcalc: The inclmaxcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogInclmaxcalc
        """

        self._inclmaxcalc = inclmaxcalc

    @property
    def inclstartcalc(self):
        """Gets the inclstartcalc of this JobReportTimeLog.  # noqa: E501


        :return: The inclstartcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogInclstartcalc
        """
        return self._inclstartcalc

    @inclstartcalc.setter
    def inclstartcalc(self, inclstartcalc):
        """Sets the inclstartcalc of this JobReportTimeLog.


        :param inclstartcalc: The inclstartcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogInclstartcalc
        """

        self._inclstartcalc = inclstartcalc

    @property
    def job_report(self):
        """Gets the job_report of this JobReportTimeLog.  # noqa: E501


        :return: The job_report of this JobReportTimeLog.  # noqa: E501
        :rtype: AnyOfJobReportTimeLogJobReport
        """
        return self._job_report

    @job_report.setter
    def job_report(self, job_report):
        """Sets the job_report of this JobReportTimeLog.


        :param job_report: The job_report of this JobReportTimeLog.  # noqa: E501
        :type: AnyOfJobReportTimeLogJobReport
        """

        self._job_report = job_report

    @property
    def opscategory(self):
        """Gets the opscategory of this JobReportTimeLog.  # noqa: E501


        :return: The opscategory of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._opscategory

    @opscategory.setter
    def opscategory(self, opscategory):
        """Sets the opscategory of this JobReportTimeLog.


        :param opscategory: The opscategory of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._opscategory = opscategory

    @property
    def problemcalc(self):
        """Gets the problemcalc of this JobReportTimeLog.  # noqa: E501


        :return: The problemcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: int
        """
        return self._problemcalc

    @problemcalc.setter
    def problemcalc(self, problemcalc):
        """Sets the problemcalc of this JobReportTimeLog.


        :param problemcalc: The problemcalc of this JobReportTimeLog.  # noqa: E501
        :type: int
        """

        self._problemcalc = problemcalc

    @property
    def refderrick(self):
        """Gets the refderrick of this JobReportTimeLog.  # noqa: E501


        :return: The refderrick of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._refderrick

    @refderrick.setter
    def refderrick(self, refderrick):
        """Sets the refderrick of this JobReportTimeLog.


        :param refderrick: The refderrick of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._refderrick = refderrick

    @property
    def refnoproblemcalc(self):
        """Gets the refnoproblemcalc of this JobReportTimeLog.  # noqa: E501


        :return: The refnoproblemcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._refnoproblemcalc

    @refnoproblemcalc.setter
    def refnoproblemcalc(self, refnoproblemcalc):
        """Sets the refnoproblemcalc of this JobReportTimeLog.


        :param refnoproblemcalc: The refnoproblemcalc of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._refnoproblemcalc = refnoproblemcalc

    @property
    def reportdaycalc(self):
        """Gets the reportdaycalc of this JobReportTimeLog.  # noqa: E501


        :return: The reportdaycalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogReportdaycalc
        """
        return self._reportdaycalc

    @reportdaycalc.setter
    def reportdaycalc(self, reportdaycalc):
        """Sets the reportdaycalc of this JobReportTimeLog.


        :param reportdaycalc: The reportdaycalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogReportdaycalc
        """

        self._reportdaycalc = reportdaycalc

    @property
    def reportnocalc(self):
        """Gets the reportnocalc of this JobReportTimeLog.  # noqa: E501


        :return: The reportnocalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogReportnocalc
        """
        return self._reportnocalc

    @reportnocalc.setter
    def reportnocalc(self, reportnocalc):
        """Sets the reportnocalc of this JobReportTimeLog.


        :param reportnocalc: The reportnocalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogReportnocalc
        """

        self._reportnocalc = reportnocalc

    @property
    def rigcrewnamecalc(self):
        """Gets the rigcrewnamecalc of this JobReportTimeLog.  # noqa: E501


        :return: The rigcrewnamecalc of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._rigcrewnamecalc

    @rigcrewnamecalc.setter
    def rigcrewnamecalc(self, rigcrewnamecalc):
        """Sets the rigcrewnamecalc of this JobReportTimeLog.


        :param rigcrewnamecalc: The rigcrewnamecalc of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._rigcrewnamecalc = rigcrewnamecalc

    @property
    def rigdayscalc(self):
        """Gets the rigdayscalc of this JobReportTimeLog.  # noqa: E501


        :return: The rigdayscalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogRigdayscalc
        """
        return self._rigdayscalc

    @rigdayscalc.setter
    def rigdayscalc(self, rigdayscalc):
        """Sets the rigdayscalc of this JobReportTimeLog.


        :param rigdayscalc: The rigdayscalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogRigdayscalc
        """

        self._rigdayscalc = rigdayscalc

    @property
    def rigdayscumcalc(self):
        """Gets the rigdayscumcalc of this JobReportTimeLog.  # noqa: E501


        :return: The rigdayscumcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogRigdayscumcalc
        """
        return self._rigdayscumcalc

    @rigdayscumcalc.setter
    def rigdayscumcalc(self, rigdayscumcalc):
        """Sets the rigdayscumcalc of this JobReportTimeLog.


        :param rigdayscumcalc: The rigdayscumcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogRigdayscumcalc
        """

        self._rigdayscumcalc = rigdayscumcalc

    @property
    def ropcalc(self):
        """Gets the ropcalc of this JobReportTimeLog.  # noqa: E501


        :return: The ropcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogRopcalc
        """
        return self._ropcalc

    @ropcalc.setter
    def ropcalc(self, ropcalc):
        """Sets the ropcalc of this JobReportTimeLog.


        :param ropcalc: The ropcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogRopcalc
        """

        self._ropcalc = ropcalc

    @property
    def sumofdurationcalc(self):
        """Gets the sumofdurationcalc of this JobReportTimeLog.  # noqa: E501


        :return: The sumofdurationcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogSumofdurationcalc
        """
        return self._sumofdurationcalc

    @sumofdurationcalc.setter
    def sumofdurationcalc(self, sumofdurationcalc):
        """Sets the sumofdurationcalc of this JobReportTimeLog.


        :param sumofdurationcalc: The sumofdurationcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogSumofdurationcalc
        """

        self._sumofdurationcalc = sumofdurationcalc

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this JobReportTimeLog.  # noqa: E501


        :return: The syscreatedate of this JobReportTimeLog.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this JobReportTimeLog.


        :param syscreatedate: The syscreatedate of this JobReportTimeLog.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this JobReportTimeLog.  # noqa: E501


        :return: The syscreateuser of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this JobReportTimeLog.


        :param syscreateuser: The syscreateuser of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this JobReportTimeLog.  # noqa: E501


        :return: The syslockchildren of this JobReportTimeLog.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this JobReportTimeLog.


        :param syslockchildren: The syslockchildren of this JobReportTimeLog.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this JobReportTimeLog.  # noqa: E501


        :return: The syslockchildrenui of this JobReportTimeLog.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this JobReportTimeLog.


        :param syslockchildrenui: The syslockchildrenui of this JobReportTimeLog.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this JobReportTimeLog.  # noqa: E501


        :return: The syslockdate of this JobReportTimeLog.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this JobReportTimeLog.


        :param syslockdate: The syslockdate of this JobReportTimeLog.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this JobReportTimeLog.  # noqa: E501


        :return: The syslockme of this JobReportTimeLog.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this JobReportTimeLog.


        :param syslockme: The syslockme of this JobReportTimeLog.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this JobReportTimeLog.  # noqa: E501


        :return: The syslockmeui of this JobReportTimeLog.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this JobReportTimeLog.


        :param syslockmeui: The syslockmeui of this JobReportTimeLog.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this JobReportTimeLog.  # noqa: E501


        :return: The sysmoddate of this JobReportTimeLog.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this JobReportTimeLog.


        :param sysmoddate: The sysmoddate of this JobReportTimeLog.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this JobReportTimeLog.  # noqa: E501


        :return: The sysmoduser of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this JobReportTimeLog.


        :param sysmoduser: The sysmoduser of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def sysseq(self):
        """Gets the sysseq of this JobReportTimeLog.  # noqa: E501


        :return: The sysseq of this JobReportTimeLog.  # noqa: E501
        :rtype: int
        """
        return self._sysseq

    @sysseq.setter
    def sysseq(self, sysseq):
        """Sets the sysseq of this JobReportTimeLog.


        :param sysseq: The sysseq of this JobReportTimeLog.  # noqa: E501
        :type: int
        """

        self._sysseq = sysseq

    @property
    def systag(self):
        """Gets the systag of this JobReportTimeLog.  # noqa: E501


        :return: The systag of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this JobReportTimeLog.


        :param systag: The systag of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def unschedtyp(self):
        """Gets the unschedtyp of this JobReportTimeLog.  # noqa: E501


        :return: The unschedtyp of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._unschedtyp

    @unschedtyp.setter
    def unschedtyp(self, unschedtyp):
        """Sets the unschedtyp of this JobReportTimeLog.


        :param unschedtyp: The unschedtyp of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._unschedtyp = unschedtyp

    @property
    def usertxt1(self):
        """Gets the usertxt1 of this JobReportTimeLog.  # noqa: E501


        :return: The usertxt1 of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._usertxt1

    @usertxt1.setter
    def usertxt1(self, usertxt1):
        """Sets the usertxt1 of this JobReportTimeLog.


        :param usertxt1: The usertxt1 of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._usertxt1 = usertxt1

    @property
    def usertxt2(self):
        """Gets the usertxt2 of this JobReportTimeLog.  # noqa: E501


        :return: The usertxt2 of this JobReportTimeLog.  # noqa: E501
        :rtype: str
        """
        return self._usertxt2

    @usertxt2.setter
    def usertxt2(self, usertxt2):
        """Sets the usertxt2 of this JobReportTimeLog.


        :param usertxt2: The usertxt2 of this JobReportTimeLog.  # noqa: E501
        :type: str
        """

        self._usertxt2 = usertxt2

    @property
    def wellboreszcalc(self):
        """Gets the wellboreszcalc of this JobReportTimeLog.  # noqa: E501


        :return: The wellboreszcalc of this JobReportTimeLog.  # noqa: E501
        :rtype: OneOfJobReportTimeLogWellboreszcalc
        """
        return self._wellboreszcalc

    @wellboreszcalc.setter
    def wellboreszcalc(self, wellboreszcalc):
        """Sets the wellboreszcalc of this JobReportTimeLog.


        :param wellboreszcalc: The wellboreszcalc of this JobReportTimeLog.  # noqa: E501
        :type: OneOfJobReportTimeLogWellboreszcalc
        """

        self._wellboreszcalc = wellboreszcalc

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(JobReportTimeLog, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobReportTimeLog):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
