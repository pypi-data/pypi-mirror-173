# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class FluidAnalysisWaterComp(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cationanion': 'str',
        'density': 'OneOfFluidAnalysisWaterCompDensity',
        'densityequiv': 'OneOfFluidAnalysisWaterCompDensityequiv',
        'fluid_analysis_water': 'AnyOfFluidAnalysisWaterCompFluidAnalysisWater',
        'idrec': 'str',
        'idrecparent': 'str',
        'idwell': 'str',
        'ion': 'str',
        'massfrac': 'OneOfFluidAnalysisWaterCompMassfrac',
        'note': 'str',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'systag': 'str'
    }

    attribute_map = {
        'cationanion': 'cationanion',
        'density': 'density',
        'densityequiv': 'densityequiv',
        'fluid_analysis_water': 'fluidAnalysisWater',
        'idrec': 'idrec',
        'idrecparent': 'idrecparent',
        'idwell': 'idwell',
        'ion': 'ion',
        'massfrac': 'massfrac',
        'note': 'note',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'systag': 'systag'
    }

    def __init__(self, cationanion=None, density=None, densityequiv=None, fluid_analysis_water=None, idrec=None, idrecparent=None, idwell=None, ion=None, massfrac=None, note=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, systag=None):  # noqa: E501
        """FluidAnalysisWaterComp - a model defined in Swagger"""  # noqa: E501
        self._cationanion = None
        self._density = None
        self._densityequiv = None
        self._fluid_analysis_water = None
        self._idrec = None
        self._idrecparent = None
        self._idwell = None
        self._ion = None
        self._massfrac = None
        self._note = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._systag = None
        self.discriminator = None
        if cationanion is not None:
            self.cationanion = cationanion
        if density is not None:
            self.density = density
        if densityequiv is not None:
            self.densityequiv = densityequiv
        if fluid_analysis_water is not None:
            self.fluid_analysis_water = fluid_analysis_water
        if idrec is not None:
            self.idrec = idrec
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idwell is not None:
            self.idwell = idwell
        if ion is not None:
            self.ion = ion
        if massfrac is not None:
            self.massfrac = massfrac
        if note is not None:
            self.note = note
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if systag is not None:
            self.systag = systag

    @property
    def cationanion(self):
        """Gets the cationanion of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The cationanion of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: str
        """
        return self._cationanion

    @cationanion.setter
    def cationanion(self, cationanion):
        """Sets the cationanion of this FluidAnalysisWaterComp.


        :param cationanion: The cationanion of this FluidAnalysisWaterComp.  # noqa: E501
        :type: str
        """

        self._cationanion = cationanion

    @property
    def density(self):
        """Gets the density of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The density of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: OneOfFluidAnalysisWaterCompDensity
        """
        return self._density

    @density.setter
    def density(self, density):
        """Sets the density of this FluidAnalysisWaterComp.


        :param density: The density of this FluidAnalysisWaterComp.  # noqa: E501
        :type: OneOfFluidAnalysisWaterCompDensity
        """

        self._density = density

    @property
    def densityequiv(self):
        """Gets the densityequiv of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The densityequiv of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: OneOfFluidAnalysisWaterCompDensityequiv
        """
        return self._densityequiv

    @densityequiv.setter
    def densityequiv(self, densityequiv):
        """Sets the densityequiv of this FluidAnalysisWaterComp.


        :param densityequiv: The densityequiv of this FluidAnalysisWaterComp.  # noqa: E501
        :type: OneOfFluidAnalysisWaterCompDensityequiv
        """

        self._densityequiv = densityequiv

    @property
    def fluid_analysis_water(self):
        """Gets the fluid_analysis_water of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The fluid_analysis_water of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: AnyOfFluidAnalysisWaterCompFluidAnalysisWater
        """
        return self._fluid_analysis_water

    @fluid_analysis_water.setter
    def fluid_analysis_water(self, fluid_analysis_water):
        """Sets the fluid_analysis_water of this FluidAnalysisWaterComp.


        :param fluid_analysis_water: The fluid_analysis_water of this FluidAnalysisWaterComp.  # noqa: E501
        :type: AnyOfFluidAnalysisWaterCompFluidAnalysisWater
        """

        self._fluid_analysis_water = fluid_analysis_water

    @property
    def idrec(self):
        """Gets the idrec of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The idrec of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this FluidAnalysisWaterComp.


        :param idrec: The idrec of this FluidAnalysisWaterComp.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecparent(self):
        """Gets the idrecparent of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The idrecparent of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this FluidAnalysisWaterComp.


        :param idrecparent: The idrecparent of this FluidAnalysisWaterComp.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idwell(self):
        """Gets the idwell of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The idwell of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this FluidAnalysisWaterComp.


        :param idwell: The idwell of this FluidAnalysisWaterComp.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def ion(self):
        """Gets the ion of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The ion of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: str
        """
        return self._ion

    @ion.setter
    def ion(self, ion):
        """Sets the ion of this FluidAnalysisWaterComp.


        :param ion: The ion of this FluidAnalysisWaterComp.  # noqa: E501
        :type: str
        """

        self._ion = ion

    @property
    def massfrac(self):
        """Gets the massfrac of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The massfrac of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: OneOfFluidAnalysisWaterCompMassfrac
        """
        return self._massfrac

    @massfrac.setter
    def massfrac(self, massfrac):
        """Sets the massfrac of this FluidAnalysisWaterComp.


        :param massfrac: The massfrac of this FluidAnalysisWaterComp.  # noqa: E501
        :type: OneOfFluidAnalysisWaterCompMassfrac
        """

        self._massfrac = massfrac

    @property
    def note(self):
        """Gets the note of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The note of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this FluidAnalysisWaterComp.


        :param note: The note of this FluidAnalysisWaterComp.  # noqa: E501
        :type: str
        """

        self._note = note

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The syscreatedate of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this FluidAnalysisWaterComp.


        :param syscreatedate: The syscreatedate of this FluidAnalysisWaterComp.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The syscreateuser of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this FluidAnalysisWaterComp.


        :param syscreateuser: The syscreateuser of this FluidAnalysisWaterComp.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The syslockchildren of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this FluidAnalysisWaterComp.


        :param syslockchildren: The syslockchildren of this FluidAnalysisWaterComp.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The syslockchildrenui of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this FluidAnalysisWaterComp.


        :param syslockchildrenui: The syslockchildrenui of this FluidAnalysisWaterComp.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The syslockdate of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this FluidAnalysisWaterComp.


        :param syslockdate: The syslockdate of this FluidAnalysisWaterComp.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The syslockme of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this FluidAnalysisWaterComp.


        :param syslockme: The syslockme of this FluidAnalysisWaterComp.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The syslockmeui of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this FluidAnalysisWaterComp.


        :param syslockmeui: The syslockmeui of this FluidAnalysisWaterComp.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The sysmoddate of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this FluidAnalysisWaterComp.


        :param sysmoddate: The sysmoddate of this FluidAnalysisWaterComp.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The sysmoduser of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this FluidAnalysisWaterComp.


        :param sysmoduser: The sysmoduser of this FluidAnalysisWaterComp.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def systag(self):
        """Gets the systag of this FluidAnalysisWaterComp.  # noqa: E501


        :return: The systag of this FluidAnalysisWaterComp.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this FluidAnalysisWaterComp.


        :param systag: The systag of this FluidAnalysisWaterComp.  # noqa: E501
        :type: str
        """

        self._systag = systag

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FluidAnalysisWaterComp, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FluidAnalysisWaterComp):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
