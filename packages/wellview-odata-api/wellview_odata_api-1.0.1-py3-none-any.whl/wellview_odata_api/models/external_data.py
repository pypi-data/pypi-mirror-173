# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ExternalData(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'attribvalue': 'str',
        'excludefromexport': 'int',
        'extdatablob': 'str',
        'idrec': 'str',
        'idwell': 'str',
        'key1': 'str',
        'key2': 'str',
        'key3': 'str',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'systag': 'str',
        'wellheader': 'AnyOfExternalDataWellheader'
    }

    attribute_map = {
        'attribvalue': 'attribvalue',
        'excludefromexport': 'excludefromexport',
        'extdatablob': 'extdatablob',
        'idrec': 'idrec',
        'idwell': 'idwell',
        'key1': 'key1',
        'key2': 'key2',
        'key3': 'key3',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'systag': 'systag',
        'wellheader': 'wellheader'
    }

    def __init__(self, attribvalue=None, excludefromexport=None, extdatablob=None, idrec=None, idwell=None, key1=None, key2=None, key3=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, systag=None, wellheader=None):  # noqa: E501
        """ExternalData - a model defined in Swagger"""  # noqa: E501
        self._attribvalue = None
        self._excludefromexport = None
        self._extdatablob = None
        self._idrec = None
        self._idwell = None
        self._key1 = None
        self._key2 = None
        self._key3 = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._systag = None
        self._wellheader = None
        self.discriminator = None
        if attribvalue is not None:
            self.attribvalue = attribvalue
        if excludefromexport is not None:
            self.excludefromexport = excludefromexport
        if extdatablob is not None:
            self.extdatablob = extdatablob
        if idrec is not None:
            self.idrec = idrec
        if idwell is not None:
            self.idwell = idwell
        if key1 is not None:
            self.key1 = key1
        if key2 is not None:
            self.key2 = key2
        if key3 is not None:
            self.key3 = key3
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if systag is not None:
            self.systag = systag
        if wellheader is not None:
            self.wellheader = wellheader

    @property
    def attribvalue(self):
        """Gets the attribvalue of this ExternalData.  # noqa: E501


        :return: The attribvalue of this ExternalData.  # noqa: E501
        :rtype: str
        """
        return self._attribvalue

    @attribvalue.setter
    def attribvalue(self, attribvalue):
        """Sets the attribvalue of this ExternalData.


        :param attribvalue: The attribvalue of this ExternalData.  # noqa: E501
        :type: str
        """

        self._attribvalue = attribvalue

    @property
    def excludefromexport(self):
        """Gets the excludefromexport of this ExternalData.  # noqa: E501


        :return: The excludefromexport of this ExternalData.  # noqa: E501
        :rtype: int
        """
        return self._excludefromexport

    @excludefromexport.setter
    def excludefromexport(self, excludefromexport):
        """Sets the excludefromexport of this ExternalData.


        :param excludefromexport: The excludefromexport of this ExternalData.  # noqa: E501
        :type: int
        """

        self._excludefromexport = excludefromexport

    @property
    def extdatablob(self):
        """Gets the extdatablob of this ExternalData.  # noqa: E501


        :return: The extdatablob of this ExternalData.  # noqa: E501
        :rtype: str
        """
        return self._extdatablob

    @extdatablob.setter
    def extdatablob(self, extdatablob):
        """Sets the extdatablob of this ExternalData.


        :param extdatablob: The extdatablob of this ExternalData.  # noqa: E501
        :type: str
        """

        self._extdatablob = extdatablob

    @property
    def idrec(self):
        """Gets the idrec of this ExternalData.  # noqa: E501


        :return: The idrec of this ExternalData.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this ExternalData.


        :param idrec: The idrec of this ExternalData.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idwell(self):
        """Gets the idwell of this ExternalData.  # noqa: E501


        :return: The idwell of this ExternalData.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this ExternalData.


        :param idwell: The idwell of this ExternalData.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def key1(self):
        """Gets the key1 of this ExternalData.  # noqa: E501


        :return: The key1 of this ExternalData.  # noqa: E501
        :rtype: str
        """
        return self._key1

    @key1.setter
    def key1(self, key1):
        """Sets the key1 of this ExternalData.


        :param key1: The key1 of this ExternalData.  # noqa: E501
        :type: str
        """

        self._key1 = key1

    @property
    def key2(self):
        """Gets the key2 of this ExternalData.  # noqa: E501


        :return: The key2 of this ExternalData.  # noqa: E501
        :rtype: str
        """
        return self._key2

    @key2.setter
    def key2(self, key2):
        """Sets the key2 of this ExternalData.


        :param key2: The key2 of this ExternalData.  # noqa: E501
        :type: str
        """

        self._key2 = key2

    @property
    def key3(self):
        """Gets the key3 of this ExternalData.  # noqa: E501


        :return: The key3 of this ExternalData.  # noqa: E501
        :rtype: str
        """
        return self._key3

    @key3.setter
    def key3(self, key3):
        """Sets the key3 of this ExternalData.


        :param key3: The key3 of this ExternalData.  # noqa: E501
        :type: str
        """

        self._key3 = key3

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this ExternalData.  # noqa: E501


        :return: The syscreatedate of this ExternalData.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this ExternalData.


        :param syscreatedate: The syscreatedate of this ExternalData.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this ExternalData.  # noqa: E501


        :return: The syscreateuser of this ExternalData.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this ExternalData.


        :param syscreateuser: The syscreateuser of this ExternalData.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this ExternalData.  # noqa: E501


        :return: The syslockchildren of this ExternalData.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this ExternalData.


        :param syslockchildren: The syslockchildren of this ExternalData.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this ExternalData.  # noqa: E501


        :return: The syslockchildrenui of this ExternalData.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this ExternalData.


        :param syslockchildrenui: The syslockchildrenui of this ExternalData.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this ExternalData.  # noqa: E501


        :return: The syslockdate of this ExternalData.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this ExternalData.


        :param syslockdate: The syslockdate of this ExternalData.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this ExternalData.  # noqa: E501


        :return: The syslockme of this ExternalData.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this ExternalData.


        :param syslockme: The syslockme of this ExternalData.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this ExternalData.  # noqa: E501


        :return: The syslockmeui of this ExternalData.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this ExternalData.


        :param syslockmeui: The syslockmeui of this ExternalData.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this ExternalData.  # noqa: E501


        :return: The sysmoddate of this ExternalData.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this ExternalData.


        :param sysmoddate: The sysmoddate of this ExternalData.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this ExternalData.  # noqa: E501


        :return: The sysmoduser of this ExternalData.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this ExternalData.


        :param sysmoduser: The sysmoduser of this ExternalData.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def systag(self):
        """Gets the systag of this ExternalData.  # noqa: E501


        :return: The systag of this ExternalData.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this ExternalData.


        :param systag: The systag of this ExternalData.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def wellheader(self):
        """Gets the wellheader of this ExternalData.  # noqa: E501


        :return: The wellheader of this ExternalData.  # noqa: E501
        :rtype: AnyOfExternalDataWellheader
        """
        return self._wellheader

    @wellheader.setter
    def wellheader(self, wellheader):
        """Sets the wellheader of this ExternalData.


        :param wellheader: The wellheader of this ExternalData.  # noqa: E501
        :type: AnyOfExternalDataWellheader
        """

        self._wellheader = wellheader

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ExternalData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ExternalData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
