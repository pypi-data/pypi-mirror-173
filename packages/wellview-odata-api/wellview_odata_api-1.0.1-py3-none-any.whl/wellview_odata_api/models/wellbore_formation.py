# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class WellboreFormation(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'collapsepres': 'OneOfWellboreFormationCollapsepres',
        'com': 'str',
        'depthdrillingbtm': 'OneOfWellboreFormationDepthdrillingbtm',
        'depthdrillingsource': 'str',
        'depthdrillingtop': 'OneOfWellboreFormationDepthdrillingtop',
        'depthfinalbtm': 'OneOfWellboreFormationDepthfinalbtm',
        'depthfinalsource': 'str',
        'depthfinaltop': 'OneOfWellboreFormationDepthfinaltop',
        'depthgasoil': 'OneOfWellboreFormationDepthgasoil',
        'depthgaswater': 'OneOfWellboreFormationDepthgaswater',
        'depthmdprogbtm': 'OneOfWellboreFormationDepthmdprogbtm',
        'depthmdprogtop': 'OneOfWellboreFormationDepthmdprogtop',
        'depthoilwater': 'OneOfWellboreFormationDepthoilwater',
        'depthssprogbtm': 'OneOfWellboreFormationDepthssprogbtm',
        'depthssprogtop': 'OneOfWellboreFormationDepthssprogtop',
        'deschro': 'str',
        'desfluid': 'str',
        'deslithology': 'str',
        'dipangle': 'OneOfWellboreFormationDipangle',
        'dipazimuth': 'OneOfWellboreFormationDipazimuth',
        'drillingconsid': 'str',
        'elementtyp': 'str',
        'formationida': 'str',
        'formationidb': 'str',
        'formationidc': 'str',
        'formcode': 'str',
        'formname': 'str',
        'fracpres': 'OneOfWellboreFormationFracpres',
        'geologicage': 'str',
        'grosspay': 'OneOfWellboreFormationGrosspay',
        'h2sconc': 'OneOfWellboreFormationH2sconc',
        'iconname': 'str',
        'idrec': 'str',
        'idrecparent': 'str',
        'idwell': 'str',
        'integrityconsid': 'str',
        'kh90': 'OneOfWellboreFormationKh90',
        'kmax': 'OneOfWellboreFormationKmax',
        'kv': 'OneOfWellboreFormationKv',
        'layername': 'str',
        'mudconsid': 'str',
        'netpay': 'OneOfWellboreFormationNetpay',
        'noteothergas': 'str',
        'porepres': 'OneOfWellboreFormationPorepres',
        'porosity': 'OneOfWellboreFormationPorosity',
        'ropinterpreted': 'OneOfWellboreFormationRopinterpreted',
        'stress': 'OneOfWellboreFormationStress',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'sysseq': 'int',
        'systag': 'str',
        'temp': 'OneOfWellboreFormationTemp',
        'usernum1': 'OneOfWellboreFormationUsernum1',
        'usernum2': 'OneOfWellboreFormationUsernum2',
        'usernum3': 'OneOfWellboreFormationUsernum3',
        'watersat': 'OneOfWellboreFormationWatersat',
        'weightbitumen': 'OneOfWellboreFormationWeightbitumen',
        'wellbore': 'AnyOfWellboreFormationWellbore',
        'wellbore_formation_pick_oths': 'list[WellboreFormationPickOth]'
    }

    attribute_map = {
        'collapsepres': 'collapsepres',
        'com': 'com',
        'depthdrillingbtm': 'depthdrillingbtm',
        'depthdrillingsource': 'depthdrillingsource',
        'depthdrillingtop': 'depthdrillingtop',
        'depthfinalbtm': 'depthfinalbtm',
        'depthfinalsource': 'depthfinalsource',
        'depthfinaltop': 'depthfinaltop',
        'depthgasoil': 'depthgasoil',
        'depthgaswater': 'depthgaswater',
        'depthmdprogbtm': 'depthmdprogbtm',
        'depthmdprogtop': 'depthmdprogtop',
        'depthoilwater': 'depthoilwater',
        'depthssprogbtm': 'depthssprogbtm',
        'depthssprogtop': 'depthssprogtop',
        'deschro': 'deschro',
        'desfluid': 'desfluid',
        'deslithology': 'deslithology',
        'dipangle': 'dipangle',
        'dipazimuth': 'dipazimuth',
        'drillingconsid': 'drillingconsid',
        'elementtyp': 'elementtyp',
        'formationida': 'formationida',
        'formationidb': 'formationidb',
        'formationidc': 'formationidc',
        'formcode': 'formcode',
        'formname': 'formname',
        'fracpres': 'fracpres',
        'geologicage': 'geologicage',
        'grosspay': 'grosspay',
        'h2sconc': 'h2sconc',
        'iconname': 'iconname',
        'idrec': 'idrec',
        'idrecparent': 'idrecparent',
        'idwell': 'idwell',
        'integrityconsid': 'integrityconsid',
        'kh90': 'kh90',
        'kmax': 'kmax',
        'kv': 'kv',
        'layername': 'layername',
        'mudconsid': 'mudconsid',
        'netpay': 'netpay',
        'noteothergas': 'noteothergas',
        'porepres': 'porepres',
        'porosity': 'porosity',
        'ropinterpreted': 'ropinterpreted',
        'stress': 'stress',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'sysseq': 'sysseq',
        'systag': 'systag',
        'temp': 'temp',
        'usernum1': 'usernum1',
        'usernum2': 'usernum2',
        'usernum3': 'usernum3',
        'watersat': 'watersat',
        'weightbitumen': 'weightbitumen',
        'wellbore': 'wellbore',
        'wellbore_formation_pick_oths': 'wellboreFormationPickOths'
    }

    def __init__(self, collapsepres=None, com=None, depthdrillingbtm=None, depthdrillingsource=None, depthdrillingtop=None, depthfinalbtm=None, depthfinalsource=None, depthfinaltop=None, depthgasoil=None, depthgaswater=None, depthmdprogbtm=None, depthmdprogtop=None, depthoilwater=None, depthssprogbtm=None, depthssprogtop=None, deschro=None, desfluid=None, deslithology=None, dipangle=None, dipazimuth=None, drillingconsid=None, elementtyp=None, formationida=None, formationidb=None, formationidc=None, formcode=None, formname=None, fracpres=None, geologicage=None, grosspay=None, h2sconc=None, iconname=None, idrec=None, idrecparent=None, idwell=None, integrityconsid=None, kh90=None, kmax=None, kv=None, layername=None, mudconsid=None, netpay=None, noteothergas=None, porepres=None, porosity=None, ropinterpreted=None, stress=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, sysseq=None, systag=None, temp=None, usernum1=None, usernum2=None, usernum3=None, watersat=None, weightbitumen=None, wellbore=None, wellbore_formation_pick_oths=None):  # noqa: E501
        """WellboreFormation - a model defined in Swagger"""  # noqa: E501
        self._collapsepres = None
        self._com = None
        self._depthdrillingbtm = None
        self._depthdrillingsource = None
        self._depthdrillingtop = None
        self._depthfinalbtm = None
        self._depthfinalsource = None
        self._depthfinaltop = None
        self._depthgasoil = None
        self._depthgaswater = None
        self._depthmdprogbtm = None
        self._depthmdprogtop = None
        self._depthoilwater = None
        self._depthssprogbtm = None
        self._depthssprogtop = None
        self._deschro = None
        self._desfluid = None
        self._deslithology = None
        self._dipangle = None
        self._dipazimuth = None
        self._drillingconsid = None
        self._elementtyp = None
        self._formationida = None
        self._formationidb = None
        self._formationidc = None
        self._formcode = None
        self._formname = None
        self._fracpres = None
        self._geologicage = None
        self._grosspay = None
        self._h2sconc = None
        self._iconname = None
        self._idrec = None
        self._idrecparent = None
        self._idwell = None
        self._integrityconsid = None
        self._kh90 = None
        self._kmax = None
        self._kv = None
        self._layername = None
        self._mudconsid = None
        self._netpay = None
        self._noteothergas = None
        self._porepres = None
        self._porosity = None
        self._ropinterpreted = None
        self._stress = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._sysseq = None
        self._systag = None
        self._temp = None
        self._usernum1 = None
        self._usernum2 = None
        self._usernum3 = None
        self._watersat = None
        self._weightbitumen = None
        self._wellbore = None
        self._wellbore_formation_pick_oths = None
        self.discriminator = None
        if collapsepres is not None:
            self.collapsepres = collapsepres
        if com is not None:
            self.com = com
        if depthdrillingbtm is not None:
            self.depthdrillingbtm = depthdrillingbtm
        if depthdrillingsource is not None:
            self.depthdrillingsource = depthdrillingsource
        if depthdrillingtop is not None:
            self.depthdrillingtop = depthdrillingtop
        if depthfinalbtm is not None:
            self.depthfinalbtm = depthfinalbtm
        if depthfinalsource is not None:
            self.depthfinalsource = depthfinalsource
        if depthfinaltop is not None:
            self.depthfinaltop = depthfinaltop
        if depthgasoil is not None:
            self.depthgasoil = depthgasoil
        if depthgaswater is not None:
            self.depthgaswater = depthgaswater
        if depthmdprogbtm is not None:
            self.depthmdprogbtm = depthmdprogbtm
        if depthmdprogtop is not None:
            self.depthmdprogtop = depthmdprogtop
        if depthoilwater is not None:
            self.depthoilwater = depthoilwater
        if depthssprogbtm is not None:
            self.depthssprogbtm = depthssprogbtm
        if depthssprogtop is not None:
            self.depthssprogtop = depthssprogtop
        if deschro is not None:
            self.deschro = deschro
        if desfluid is not None:
            self.desfluid = desfluid
        if deslithology is not None:
            self.deslithology = deslithology
        if dipangle is not None:
            self.dipangle = dipangle
        if dipazimuth is not None:
            self.dipazimuth = dipazimuth
        if drillingconsid is not None:
            self.drillingconsid = drillingconsid
        if elementtyp is not None:
            self.elementtyp = elementtyp
        if formationida is not None:
            self.formationida = formationida
        if formationidb is not None:
            self.formationidb = formationidb
        if formationidc is not None:
            self.formationidc = formationidc
        if formcode is not None:
            self.formcode = formcode
        if formname is not None:
            self.formname = formname
        if fracpres is not None:
            self.fracpres = fracpres
        if geologicage is not None:
            self.geologicage = geologicage
        if grosspay is not None:
            self.grosspay = grosspay
        if h2sconc is not None:
            self.h2sconc = h2sconc
        if iconname is not None:
            self.iconname = iconname
        if idrec is not None:
            self.idrec = idrec
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idwell is not None:
            self.idwell = idwell
        if integrityconsid is not None:
            self.integrityconsid = integrityconsid
        if kh90 is not None:
            self.kh90 = kh90
        if kmax is not None:
            self.kmax = kmax
        if kv is not None:
            self.kv = kv
        if layername is not None:
            self.layername = layername
        if mudconsid is not None:
            self.mudconsid = mudconsid
        if netpay is not None:
            self.netpay = netpay
        if noteothergas is not None:
            self.noteothergas = noteothergas
        if porepres is not None:
            self.porepres = porepres
        if porosity is not None:
            self.porosity = porosity
        if ropinterpreted is not None:
            self.ropinterpreted = ropinterpreted
        if stress is not None:
            self.stress = stress
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if sysseq is not None:
            self.sysseq = sysseq
        if systag is not None:
            self.systag = systag
        if temp is not None:
            self.temp = temp
        if usernum1 is not None:
            self.usernum1 = usernum1
        if usernum2 is not None:
            self.usernum2 = usernum2
        if usernum3 is not None:
            self.usernum3 = usernum3
        if watersat is not None:
            self.watersat = watersat
        if weightbitumen is not None:
            self.weightbitumen = weightbitumen
        if wellbore is not None:
            self.wellbore = wellbore
        if wellbore_formation_pick_oths is not None:
            self.wellbore_formation_pick_oths = wellbore_formation_pick_oths

    @property
    def collapsepres(self):
        """Gets the collapsepres of this WellboreFormation.  # noqa: E501


        :return: The collapsepres of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationCollapsepres
        """
        return self._collapsepres

    @collapsepres.setter
    def collapsepres(self, collapsepres):
        """Sets the collapsepres of this WellboreFormation.


        :param collapsepres: The collapsepres of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationCollapsepres
        """

        self._collapsepres = collapsepres

    @property
    def com(self):
        """Gets the com of this WellboreFormation.  # noqa: E501


        :return: The com of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._com

    @com.setter
    def com(self, com):
        """Sets the com of this WellboreFormation.


        :param com: The com of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._com = com

    @property
    def depthdrillingbtm(self):
        """Gets the depthdrillingbtm of this WellboreFormation.  # noqa: E501


        :return: The depthdrillingbtm of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationDepthdrillingbtm
        """
        return self._depthdrillingbtm

    @depthdrillingbtm.setter
    def depthdrillingbtm(self, depthdrillingbtm):
        """Sets the depthdrillingbtm of this WellboreFormation.


        :param depthdrillingbtm: The depthdrillingbtm of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationDepthdrillingbtm
        """

        self._depthdrillingbtm = depthdrillingbtm

    @property
    def depthdrillingsource(self):
        """Gets the depthdrillingsource of this WellboreFormation.  # noqa: E501


        :return: The depthdrillingsource of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._depthdrillingsource

    @depthdrillingsource.setter
    def depthdrillingsource(self, depthdrillingsource):
        """Sets the depthdrillingsource of this WellboreFormation.


        :param depthdrillingsource: The depthdrillingsource of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._depthdrillingsource = depthdrillingsource

    @property
    def depthdrillingtop(self):
        """Gets the depthdrillingtop of this WellboreFormation.  # noqa: E501


        :return: The depthdrillingtop of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationDepthdrillingtop
        """
        return self._depthdrillingtop

    @depthdrillingtop.setter
    def depthdrillingtop(self, depthdrillingtop):
        """Sets the depthdrillingtop of this WellboreFormation.


        :param depthdrillingtop: The depthdrillingtop of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationDepthdrillingtop
        """

        self._depthdrillingtop = depthdrillingtop

    @property
    def depthfinalbtm(self):
        """Gets the depthfinalbtm of this WellboreFormation.  # noqa: E501


        :return: The depthfinalbtm of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationDepthfinalbtm
        """
        return self._depthfinalbtm

    @depthfinalbtm.setter
    def depthfinalbtm(self, depthfinalbtm):
        """Sets the depthfinalbtm of this WellboreFormation.


        :param depthfinalbtm: The depthfinalbtm of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationDepthfinalbtm
        """

        self._depthfinalbtm = depthfinalbtm

    @property
    def depthfinalsource(self):
        """Gets the depthfinalsource of this WellboreFormation.  # noqa: E501


        :return: The depthfinalsource of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._depthfinalsource

    @depthfinalsource.setter
    def depthfinalsource(self, depthfinalsource):
        """Sets the depthfinalsource of this WellboreFormation.


        :param depthfinalsource: The depthfinalsource of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._depthfinalsource = depthfinalsource

    @property
    def depthfinaltop(self):
        """Gets the depthfinaltop of this WellboreFormation.  # noqa: E501


        :return: The depthfinaltop of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationDepthfinaltop
        """
        return self._depthfinaltop

    @depthfinaltop.setter
    def depthfinaltop(self, depthfinaltop):
        """Sets the depthfinaltop of this WellboreFormation.


        :param depthfinaltop: The depthfinaltop of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationDepthfinaltop
        """

        self._depthfinaltop = depthfinaltop

    @property
    def depthgasoil(self):
        """Gets the depthgasoil of this WellboreFormation.  # noqa: E501


        :return: The depthgasoil of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationDepthgasoil
        """
        return self._depthgasoil

    @depthgasoil.setter
    def depthgasoil(self, depthgasoil):
        """Sets the depthgasoil of this WellboreFormation.


        :param depthgasoil: The depthgasoil of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationDepthgasoil
        """

        self._depthgasoil = depthgasoil

    @property
    def depthgaswater(self):
        """Gets the depthgaswater of this WellboreFormation.  # noqa: E501


        :return: The depthgaswater of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationDepthgaswater
        """
        return self._depthgaswater

    @depthgaswater.setter
    def depthgaswater(self, depthgaswater):
        """Sets the depthgaswater of this WellboreFormation.


        :param depthgaswater: The depthgaswater of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationDepthgaswater
        """

        self._depthgaswater = depthgaswater

    @property
    def depthmdprogbtm(self):
        """Gets the depthmdprogbtm of this WellboreFormation.  # noqa: E501


        :return: The depthmdprogbtm of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationDepthmdprogbtm
        """
        return self._depthmdprogbtm

    @depthmdprogbtm.setter
    def depthmdprogbtm(self, depthmdprogbtm):
        """Sets the depthmdprogbtm of this WellboreFormation.


        :param depthmdprogbtm: The depthmdprogbtm of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationDepthmdprogbtm
        """

        self._depthmdprogbtm = depthmdprogbtm

    @property
    def depthmdprogtop(self):
        """Gets the depthmdprogtop of this WellboreFormation.  # noqa: E501


        :return: The depthmdprogtop of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationDepthmdprogtop
        """
        return self._depthmdprogtop

    @depthmdprogtop.setter
    def depthmdprogtop(self, depthmdprogtop):
        """Sets the depthmdprogtop of this WellboreFormation.


        :param depthmdprogtop: The depthmdprogtop of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationDepthmdprogtop
        """

        self._depthmdprogtop = depthmdprogtop

    @property
    def depthoilwater(self):
        """Gets the depthoilwater of this WellboreFormation.  # noqa: E501


        :return: The depthoilwater of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationDepthoilwater
        """
        return self._depthoilwater

    @depthoilwater.setter
    def depthoilwater(self, depthoilwater):
        """Sets the depthoilwater of this WellboreFormation.


        :param depthoilwater: The depthoilwater of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationDepthoilwater
        """

        self._depthoilwater = depthoilwater

    @property
    def depthssprogbtm(self):
        """Gets the depthssprogbtm of this WellboreFormation.  # noqa: E501


        :return: The depthssprogbtm of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationDepthssprogbtm
        """
        return self._depthssprogbtm

    @depthssprogbtm.setter
    def depthssprogbtm(self, depthssprogbtm):
        """Sets the depthssprogbtm of this WellboreFormation.


        :param depthssprogbtm: The depthssprogbtm of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationDepthssprogbtm
        """

        self._depthssprogbtm = depthssprogbtm

    @property
    def depthssprogtop(self):
        """Gets the depthssprogtop of this WellboreFormation.  # noqa: E501


        :return: The depthssprogtop of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationDepthssprogtop
        """
        return self._depthssprogtop

    @depthssprogtop.setter
    def depthssprogtop(self, depthssprogtop):
        """Sets the depthssprogtop of this WellboreFormation.


        :param depthssprogtop: The depthssprogtop of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationDepthssprogtop
        """

        self._depthssprogtop = depthssprogtop

    @property
    def deschro(self):
        """Gets the deschro of this WellboreFormation.  # noqa: E501


        :return: The deschro of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._deschro

    @deschro.setter
    def deschro(self, deschro):
        """Sets the deschro of this WellboreFormation.


        :param deschro: The deschro of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._deschro = deschro

    @property
    def desfluid(self):
        """Gets the desfluid of this WellboreFormation.  # noqa: E501


        :return: The desfluid of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._desfluid

    @desfluid.setter
    def desfluid(self, desfluid):
        """Sets the desfluid of this WellboreFormation.


        :param desfluid: The desfluid of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._desfluid = desfluid

    @property
    def deslithology(self):
        """Gets the deslithology of this WellboreFormation.  # noqa: E501


        :return: The deslithology of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._deslithology

    @deslithology.setter
    def deslithology(self, deslithology):
        """Sets the deslithology of this WellboreFormation.


        :param deslithology: The deslithology of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._deslithology = deslithology

    @property
    def dipangle(self):
        """Gets the dipangle of this WellboreFormation.  # noqa: E501


        :return: The dipangle of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationDipangle
        """
        return self._dipangle

    @dipangle.setter
    def dipangle(self, dipangle):
        """Sets the dipangle of this WellboreFormation.


        :param dipangle: The dipangle of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationDipangle
        """

        self._dipangle = dipangle

    @property
    def dipazimuth(self):
        """Gets the dipazimuth of this WellboreFormation.  # noqa: E501


        :return: The dipazimuth of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationDipazimuth
        """
        return self._dipazimuth

    @dipazimuth.setter
    def dipazimuth(self, dipazimuth):
        """Sets the dipazimuth of this WellboreFormation.


        :param dipazimuth: The dipazimuth of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationDipazimuth
        """

        self._dipazimuth = dipazimuth

    @property
    def drillingconsid(self):
        """Gets the drillingconsid of this WellboreFormation.  # noqa: E501


        :return: The drillingconsid of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._drillingconsid

    @drillingconsid.setter
    def drillingconsid(self, drillingconsid):
        """Sets the drillingconsid of this WellboreFormation.


        :param drillingconsid: The drillingconsid of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._drillingconsid = drillingconsid

    @property
    def elementtyp(self):
        """Gets the elementtyp of this WellboreFormation.  # noqa: E501


        :return: The elementtyp of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._elementtyp

    @elementtyp.setter
    def elementtyp(self, elementtyp):
        """Sets the elementtyp of this WellboreFormation.


        :param elementtyp: The elementtyp of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._elementtyp = elementtyp

    @property
    def formationida(self):
        """Gets the formationida of this WellboreFormation.  # noqa: E501


        :return: The formationida of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._formationida

    @formationida.setter
    def formationida(self, formationida):
        """Sets the formationida of this WellboreFormation.


        :param formationida: The formationida of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._formationida = formationida

    @property
    def formationidb(self):
        """Gets the formationidb of this WellboreFormation.  # noqa: E501


        :return: The formationidb of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._formationidb

    @formationidb.setter
    def formationidb(self, formationidb):
        """Sets the formationidb of this WellboreFormation.


        :param formationidb: The formationidb of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._formationidb = formationidb

    @property
    def formationidc(self):
        """Gets the formationidc of this WellboreFormation.  # noqa: E501


        :return: The formationidc of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._formationidc

    @formationidc.setter
    def formationidc(self, formationidc):
        """Sets the formationidc of this WellboreFormation.


        :param formationidc: The formationidc of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._formationidc = formationidc

    @property
    def formcode(self):
        """Gets the formcode of this WellboreFormation.  # noqa: E501


        :return: The formcode of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._formcode

    @formcode.setter
    def formcode(self, formcode):
        """Sets the formcode of this WellboreFormation.


        :param formcode: The formcode of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._formcode = formcode

    @property
    def formname(self):
        """Gets the formname of this WellboreFormation.  # noqa: E501


        :return: The formname of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._formname

    @formname.setter
    def formname(self, formname):
        """Sets the formname of this WellboreFormation.


        :param formname: The formname of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._formname = formname

    @property
    def fracpres(self):
        """Gets the fracpres of this WellboreFormation.  # noqa: E501


        :return: The fracpres of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationFracpres
        """
        return self._fracpres

    @fracpres.setter
    def fracpres(self, fracpres):
        """Sets the fracpres of this WellboreFormation.


        :param fracpres: The fracpres of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationFracpres
        """

        self._fracpres = fracpres

    @property
    def geologicage(self):
        """Gets the geologicage of this WellboreFormation.  # noqa: E501


        :return: The geologicage of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._geologicage

    @geologicage.setter
    def geologicage(self, geologicage):
        """Sets the geologicage of this WellboreFormation.


        :param geologicage: The geologicage of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._geologicage = geologicage

    @property
    def grosspay(self):
        """Gets the grosspay of this WellboreFormation.  # noqa: E501


        :return: The grosspay of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationGrosspay
        """
        return self._grosspay

    @grosspay.setter
    def grosspay(self, grosspay):
        """Sets the grosspay of this WellboreFormation.


        :param grosspay: The grosspay of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationGrosspay
        """

        self._grosspay = grosspay

    @property
    def h2sconc(self):
        """Gets the h2sconc of this WellboreFormation.  # noqa: E501


        :return: The h2sconc of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationH2sconc
        """
        return self._h2sconc

    @h2sconc.setter
    def h2sconc(self, h2sconc):
        """Sets the h2sconc of this WellboreFormation.


        :param h2sconc: The h2sconc of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationH2sconc
        """

        self._h2sconc = h2sconc

    @property
    def iconname(self):
        """Gets the iconname of this WellboreFormation.  # noqa: E501


        :return: The iconname of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._iconname

    @iconname.setter
    def iconname(self, iconname):
        """Sets the iconname of this WellboreFormation.


        :param iconname: The iconname of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._iconname = iconname

    @property
    def idrec(self):
        """Gets the idrec of this WellboreFormation.  # noqa: E501


        :return: The idrec of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this WellboreFormation.


        :param idrec: The idrec of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecparent(self):
        """Gets the idrecparent of this WellboreFormation.  # noqa: E501


        :return: The idrecparent of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this WellboreFormation.


        :param idrecparent: The idrecparent of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idwell(self):
        """Gets the idwell of this WellboreFormation.  # noqa: E501


        :return: The idwell of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this WellboreFormation.


        :param idwell: The idwell of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def integrityconsid(self):
        """Gets the integrityconsid of this WellboreFormation.  # noqa: E501


        :return: The integrityconsid of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._integrityconsid

    @integrityconsid.setter
    def integrityconsid(self, integrityconsid):
        """Sets the integrityconsid of this WellboreFormation.


        :param integrityconsid: The integrityconsid of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._integrityconsid = integrityconsid

    @property
    def kh90(self):
        """Gets the kh90 of this WellboreFormation.  # noqa: E501


        :return: The kh90 of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationKh90
        """
        return self._kh90

    @kh90.setter
    def kh90(self, kh90):
        """Sets the kh90 of this WellboreFormation.


        :param kh90: The kh90 of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationKh90
        """

        self._kh90 = kh90

    @property
    def kmax(self):
        """Gets the kmax of this WellboreFormation.  # noqa: E501


        :return: The kmax of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationKmax
        """
        return self._kmax

    @kmax.setter
    def kmax(self, kmax):
        """Sets the kmax of this WellboreFormation.


        :param kmax: The kmax of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationKmax
        """

        self._kmax = kmax

    @property
    def kv(self):
        """Gets the kv of this WellboreFormation.  # noqa: E501


        :return: The kv of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationKv
        """
        return self._kv

    @kv.setter
    def kv(self, kv):
        """Sets the kv of this WellboreFormation.


        :param kv: The kv of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationKv
        """

        self._kv = kv

    @property
    def layername(self):
        """Gets the layername of this WellboreFormation.  # noqa: E501


        :return: The layername of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._layername

    @layername.setter
    def layername(self, layername):
        """Sets the layername of this WellboreFormation.


        :param layername: The layername of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._layername = layername

    @property
    def mudconsid(self):
        """Gets the mudconsid of this WellboreFormation.  # noqa: E501


        :return: The mudconsid of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._mudconsid

    @mudconsid.setter
    def mudconsid(self, mudconsid):
        """Sets the mudconsid of this WellboreFormation.


        :param mudconsid: The mudconsid of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._mudconsid = mudconsid

    @property
    def netpay(self):
        """Gets the netpay of this WellboreFormation.  # noqa: E501


        :return: The netpay of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationNetpay
        """
        return self._netpay

    @netpay.setter
    def netpay(self, netpay):
        """Sets the netpay of this WellboreFormation.


        :param netpay: The netpay of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationNetpay
        """

        self._netpay = netpay

    @property
    def noteothergas(self):
        """Gets the noteothergas of this WellboreFormation.  # noqa: E501


        :return: The noteothergas of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._noteothergas

    @noteothergas.setter
    def noteothergas(self, noteothergas):
        """Sets the noteothergas of this WellboreFormation.


        :param noteothergas: The noteothergas of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._noteothergas = noteothergas

    @property
    def porepres(self):
        """Gets the porepres of this WellboreFormation.  # noqa: E501


        :return: The porepres of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationPorepres
        """
        return self._porepres

    @porepres.setter
    def porepres(self, porepres):
        """Sets the porepres of this WellboreFormation.


        :param porepres: The porepres of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationPorepres
        """

        self._porepres = porepres

    @property
    def porosity(self):
        """Gets the porosity of this WellboreFormation.  # noqa: E501


        :return: The porosity of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationPorosity
        """
        return self._porosity

    @porosity.setter
    def porosity(self, porosity):
        """Sets the porosity of this WellboreFormation.


        :param porosity: The porosity of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationPorosity
        """

        self._porosity = porosity

    @property
    def ropinterpreted(self):
        """Gets the ropinterpreted of this WellboreFormation.  # noqa: E501


        :return: The ropinterpreted of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationRopinterpreted
        """
        return self._ropinterpreted

    @ropinterpreted.setter
    def ropinterpreted(self, ropinterpreted):
        """Sets the ropinterpreted of this WellboreFormation.


        :param ropinterpreted: The ropinterpreted of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationRopinterpreted
        """

        self._ropinterpreted = ropinterpreted

    @property
    def stress(self):
        """Gets the stress of this WellboreFormation.  # noqa: E501


        :return: The stress of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationStress
        """
        return self._stress

    @stress.setter
    def stress(self, stress):
        """Sets the stress of this WellboreFormation.


        :param stress: The stress of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationStress
        """

        self._stress = stress

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this WellboreFormation.  # noqa: E501


        :return: The syscreatedate of this WellboreFormation.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this WellboreFormation.


        :param syscreatedate: The syscreatedate of this WellboreFormation.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this WellboreFormation.  # noqa: E501


        :return: The syscreateuser of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this WellboreFormation.


        :param syscreateuser: The syscreateuser of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this WellboreFormation.  # noqa: E501


        :return: The syslockchildren of this WellboreFormation.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this WellboreFormation.


        :param syslockchildren: The syslockchildren of this WellboreFormation.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this WellboreFormation.  # noqa: E501


        :return: The syslockchildrenui of this WellboreFormation.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this WellboreFormation.


        :param syslockchildrenui: The syslockchildrenui of this WellboreFormation.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this WellboreFormation.  # noqa: E501


        :return: The syslockdate of this WellboreFormation.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this WellboreFormation.


        :param syslockdate: The syslockdate of this WellboreFormation.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this WellboreFormation.  # noqa: E501


        :return: The syslockme of this WellboreFormation.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this WellboreFormation.


        :param syslockme: The syslockme of this WellboreFormation.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this WellboreFormation.  # noqa: E501


        :return: The syslockmeui of this WellboreFormation.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this WellboreFormation.


        :param syslockmeui: The syslockmeui of this WellboreFormation.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this WellboreFormation.  # noqa: E501


        :return: The sysmoddate of this WellboreFormation.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this WellboreFormation.


        :param sysmoddate: The sysmoddate of this WellboreFormation.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this WellboreFormation.  # noqa: E501


        :return: The sysmoduser of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this WellboreFormation.


        :param sysmoduser: The sysmoduser of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def sysseq(self):
        """Gets the sysseq of this WellboreFormation.  # noqa: E501


        :return: The sysseq of this WellboreFormation.  # noqa: E501
        :rtype: int
        """
        return self._sysseq

    @sysseq.setter
    def sysseq(self, sysseq):
        """Sets the sysseq of this WellboreFormation.


        :param sysseq: The sysseq of this WellboreFormation.  # noqa: E501
        :type: int
        """

        self._sysseq = sysseq

    @property
    def systag(self):
        """Gets the systag of this WellboreFormation.  # noqa: E501


        :return: The systag of this WellboreFormation.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this WellboreFormation.


        :param systag: The systag of this WellboreFormation.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def temp(self):
        """Gets the temp of this WellboreFormation.  # noqa: E501


        :return: The temp of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationTemp
        """
        return self._temp

    @temp.setter
    def temp(self, temp):
        """Sets the temp of this WellboreFormation.


        :param temp: The temp of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationTemp
        """

        self._temp = temp

    @property
    def usernum1(self):
        """Gets the usernum1 of this WellboreFormation.  # noqa: E501


        :return: The usernum1 of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationUsernum1
        """
        return self._usernum1

    @usernum1.setter
    def usernum1(self, usernum1):
        """Sets the usernum1 of this WellboreFormation.


        :param usernum1: The usernum1 of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationUsernum1
        """

        self._usernum1 = usernum1

    @property
    def usernum2(self):
        """Gets the usernum2 of this WellboreFormation.  # noqa: E501


        :return: The usernum2 of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationUsernum2
        """
        return self._usernum2

    @usernum2.setter
    def usernum2(self, usernum2):
        """Sets the usernum2 of this WellboreFormation.


        :param usernum2: The usernum2 of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationUsernum2
        """

        self._usernum2 = usernum2

    @property
    def usernum3(self):
        """Gets the usernum3 of this WellboreFormation.  # noqa: E501


        :return: The usernum3 of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationUsernum3
        """
        return self._usernum3

    @usernum3.setter
    def usernum3(self, usernum3):
        """Sets the usernum3 of this WellboreFormation.


        :param usernum3: The usernum3 of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationUsernum3
        """

        self._usernum3 = usernum3

    @property
    def watersat(self):
        """Gets the watersat of this WellboreFormation.  # noqa: E501


        :return: The watersat of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationWatersat
        """
        return self._watersat

    @watersat.setter
    def watersat(self, watersat):
        """Sets the watersat of this WellboreFormation.


        :param watersat: The watersat of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationWatersat
        """

        self._watersat = watersat

    @property
    def weightbitumen(self):
        """Gets the weightbitumen of this WellboreFormation.  # noqa: E501


        :return: The weightbitumen of this WellboreFormation.  # noqa: E501
        :rtype: OneOfWellboreFormationWeightbitumen
        """
        return self._weightbitumen

    @weightbitumen.setter
    def weightbitumen(self, weightbitumen):
        """Sets the weightbitumen of this WellboreFormation.


        :param weightbitumen: The weightbitumen of this WellboreFormation.  # noqa: E501
        :type: OneOfWellboreFormationWeightbitumen
        """

        self._weightbitumen = weightbitumen

    @property
    def wellbore(self):
        """Gets the wellbore of this WellboreFormation.  # noqa: E501


        :return: The wellbore of this WellboreFormation.  # noqa: E501
        :rtype: AnyOfWellboreFormationWellbore
        """
        return self._wellbore

    @wellbore.setter
    def wellbore(self, wellbore):
        """Sets the wellbore of this WellboreFormation.


        :param wellbore: The wellbore of this WellboreFormation.  # noqa: E501
        :type: AnyOfWellboreFormationWellbore
        """

        self._wellbore = wellbore

    @property
    def wellbore_formation_pick_oths(self):
        """Gets the wellbore_formation_pick_oths of this WellboreFormation.  # noqa: E501


        :return: The wellbore_formation_pick_oths of this WellboreFormation.  # noqa: E501
        :rtype: list[WellboreFormationPickOth]
        """
        return self._wellbore_formation_pick_oths

    @wellbore_formation_pick_oths.setter
    def wellbore_formation_pick_oths(self, wellbore_formation_pick_oths):
        """Sets the wellbore_formation_pick_oths of this WellboreFormation.


        :param wellbore_formation_pick_oths: The wellbore_formation_pick_oths of this WellboreFormation.  # noqa: E501
        :type: list[WellboreFormationPickOth]
        """

        self._wellbore_formation_pick_oths = wellbore_formation_pick_oths

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(WellboreFormation, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WellboreFormation):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
