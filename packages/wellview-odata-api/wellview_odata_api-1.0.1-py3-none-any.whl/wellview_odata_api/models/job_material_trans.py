# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class JobMaterialTrans(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'acctnofrom': 'str',
        'acctnoto': 'str',
        'approvebyname': 'str',
        'carrier': 'str',
        'carrierdrivername': 'str',
        'carrierrefno': 'str',
        'com': 'str',
        'dttm': 'datetime',
        'dttmapprove': 'datetime',
        'dttmmaterialtrans': 'datetime',
        'idrec': 'str',
        'idrecafecustom': 'str',
        'idrecafecustomtk': 'str',
        'idrecjobcontact': 'str',
        'idrecjobcontacttk': 'str',
        'idrecjobsupportvessel': 'str',
        'idrecjobsupportvesseltk': 'str',
        'idrecparent': 'str',
        'idwell': 'str',
        'job': 'AnyOfJobMaterialTransJob',
        'job_material_trans_details': 'list[JobMaterialTransDetail]',
        'locationdes': 'str',
        'locationtyp1': 'str',
        'locationtyp2': 'str',
        'materialtransno': 'str',
        'materialtransreason': 'str',
        'mattransida': 'str',
        'mattransidb': 'str',
        'status': 'str',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'systag': 'str',
        'tofrom': 'str',
        'usertxt1': 'str'
    }

    attribute_map = {
        'acctnofrom': 'acctnofrom',
        'acctnoto': 'acctnoto',
        'approvebyname': 'approvebyname',
        'carrier': 'carrier',
        'carrierdrivername': 'carrierdrivername',
        'carrierrefno': 'carrierrefno',
        'com': 'com',
        'dttm': 'dttm',
        'dttmapprove': 'dttmapprove',
        'dttmmaterialtrans': 'dttmmaterialtrans',
        'idrec': 'idrec',
        'idrecafecustom': 'idrecafecustom',
        'idrecafecustomtk': 'idrecafecustomtk',
        'idrecjobcontact': 'idrecjobcontact',
        'idrecjobcontacttk': 'idrecjobcontacttk',
        'idrecjobsupportvessel': 'idrecjobsupportvessel',
        'idrecjobsupportvesseltk': 'idrecjobsupportvesseltk',
        'idrecparent': 'idrecparent',
        'idwell': 'idwell',
        'job': 'job',
        'job_material_trans_details': 'jobMaterialTransDetails',
        'locationdes': 'locationdes',
        'locationtyp1': 'locationtyp1',
        'locationtyp2': 'locationtyp2',
        'materialtransno': 'materialtransno',
        'materialtransreason': 'materialtransreason',
        'mattransida': 'mattransida',
        'mattransidb': 'mattransidb',
        'status': 'status',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'systag': 'systag',
        'tofrom': 'tofrom',
        'usertxt1': 'usertxt1'
    }

    def __init__(self, acctnofrom=None, acctnoto=None, approvebyname=None, carrier=None, carrierdrivername=None, carrierrefno=None, com=None, dttm=None, dttmapprove=None, dttmmaterialtrans=None, idrec=None, idrecafecustom=None, idrecafecustomtk=None, idrecjobcontact=None, idrecjobcontacttk=None, idrecjobsupportvessel=None, idrecjobsupportvesseltk=None, idrecparent=None, idwell=None, job=None, job_material_trans_details=None, locationdes=None, locationtyp1=None, locationtyp2=None, materialtransno=None, materialtransreason=None, mattransida=None, mattransidb=None, status=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, systag=None, tofrom=None, usertxt1=None):  # noqa: E501
        """JobMaterialTrans - a model defined in Swagger"""  # noqa: E501
        self._acctnofrom = None
        self._acctnoto = None
        self._approvebyname = None
        self._carrier = None
        self._carrierdrivername = None
        self._carrierrefno = None
        self._com = None
        self._dttm = None
        self._dttmapprove = None
        self._dttmmaterialtrans = None
        self._idrec = None
        self._idrecafecustom = None
        self._idrecafecustomtk = None
        self._idrecjobcontact = None
        self._idrecjobcontacttk = None
        self._idrecjobsupportvessel = None
        self._idrecjobsupportvesseltk = None
        self._idrecparent = None
        self._idwell = None
        self._job = None
        self._job_material_trans_details = None
        self._locationdes = None
        self._locationtyp1 = None
        self._locationtyp2 = None
        self._materialtransno = None
        self._materialtransreason = None
        self._mattransida = None
        self._mattransidb = None
        self._status = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._systag = None
        self._tofrom = None
        self._usertxt1 = None
        self.discriminator = None
        if acctnofrom is not None:
            self.acctnofrom = acctnofrom
        if acctnoto is not None:
            self.acctnoto = acctnoto
        if approvebyname is not None:
            self.approvebyname = approvebyname
        if carrier is not None:
            self.carrier = carrier
        if carrierdrivername is not None:
            self.carrierdrivername = carrierdrivername
        if carrierrefno is not None:
            self.carrierrefno = carrierrefno
        if com is not None:
            self.com = com
        if dttm is not None:
            self.dttm = dttm
        if dttmapprove is not None:
            self.dttmapprove = dttmapprove
        if dttmmaterialtrans is not None:
            self.dttmmaterialtrans = dttmmaterialtrans
        if idrec is not None:
            self.idrec = idrec
        if idrecafecustom is not None:
            self.idrecafecustom = idrecafecustom
        if idrecafecustomtk is not None:
            self.idrecafecustomtk = idrecafecustomtk
        if idrecjobcontact is not None:
            self.idrecjobcontact = idrecjobcontact
        if idrecjobcontacttk is not None:
            self.idrecjobcontacttk = idrecjobcontacttk
        if idrecjobsupportvessel is not None:
            self.idrecjobsupportvessel = idrecjobsupportvessel
        if idrecjobsupportvesseltk is not None:
            self.idrecjobsupportvesseltk = idrecjobsupportvesseltk
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idwell is not None:
            self.idwell = idwell
        if job is not None:
            self.job = job
        if job_material_trans_details is not None:
            self.job_material_trans_details = job_material_trans_details
        if locationdes is not None:
            self.locationdes = locationdes
        if locationtyp1 is not None:
            self.locationtyp1 = locationtyp1
        if locationtyp2 is not None:
            self.locationtyp2 = locationtyp2
        if materialtransno is not None:
            self.materialtransno = materialtransno
        if materialtransreason is not None:
            self.materialtransreason = materialtransreason
        if mattransida is not None:
            self.mattransida = mattransida
        if mattransidb is not None:
            self.mattransidb = mattransidb
        if status is not None:
            self.status = status
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if systag is not None:
            self.systag = systag
        if tofrom is not None:
            self.tofrom = tofrom
        if usertxt1 is not None:
            self.usertxt1 = usertxt1

    @property
    def acctnofrom(self):
        """Gets the acctnofrom of this JobMaterialTrans.  # noqa: E501


        :return: The acctnofrom of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._acctnofrom

    @acctnofrom.setter
    def acctnofrom(self, acctnofrom):
        """Sets the acctnofrom of this JobMaterialTrans.


        :param acctnofrom: The acctnofrom of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._acctnofrom = acctnofrom

    @property
    def acctnoto(self):
        """Gets the acctnoto of this JobMaterialTrans.  # noqa: E501


        :return: The acctnoto of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._acctnoto

    @acctnoto.setter
    def acctnoto(self, acctnoto):
        """Sets the acctnoto of this JobMaterialTrans.


        :param acctnoto: The acctnoto of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._acctnoto = acctnoto

    @property
    def approvebyname(self):
        """Gets the approvebyname of this JobMaterialTrans.  # noqa: E501


        :return: The approvebyname of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._approvebyname

    @approvebyname.setter
    def approvebyname(self, approvebyname):
        """Sets the approvebyname of this JobMaterialTrans.


        :param approvebyname: The approvebyname of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._approvebyname = approvebyname

    @property
    def carrier(self):
        """Gets the carrier of this JobMaterialTrans.  # noqa: E501


        :return: The carrier of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._carrier

    @carrier.setter
    def carrier(self, carrier):
        """Sets the carrier of this JobMaterialTrans.


        :param carrier: The carrier of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._carrier = carrier

    @property
    def carrierdrivername(self):
        """Gets the carrierdrivername of this JobMaterialTrans.  # noqa: E501


        :return: The carrierdrivername of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._carrierdrivername

    @carrierdrivername.setter
    def carrierdrivername(self, carrierdrivername):
        """Sets the carrierdrivername of this JobMaterialTrans.


        :param carrierdrivername: The carrierdrivername of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._carrierdrivername = carrierdrivername

    @property
    def carrierrefno(self):
        """Gets the carrierrefno of this JobMaterialTrans.  # noqa: E501


        :return: The carrierrefno of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._carrierrefno

    @carrierrefno.setter
    def carrierrefno(self, carrierrefno):
        """Sets the carrierrefno of this JobMaterialTrans.


        :param carrierrefno: The carrierrefno of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._carrierrefno = carrierrefno

    @property
    def com(self):
        """Gets the com of this JobMaterialTrans.  # noqa: E501


        :return: The com of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._com

    @com.setter
    def com(self, com):
        """Sets the com of this JobMaterialTrans.


        :param com: The com of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._com = com

    @property
    def dttm(self):
        """Gets the dttm of this JobMaterialTrans.  # noqa: E501


        :return: The dttm of this JobMaterialTrans.  # noqa: E501
        :rtype: datetime
        """
        return self._dttm

    @dttm.setter
    def dttm(self, dttm):
        """Sets the dttm of this JobMaterialTrans.


        :param dttm: The dttm of this JobMaterialTrans.  # noqa: E501
        :type: datetime
        """

        self._dttm = dttm

    @property
    def dttmapprove(self):
        """Gets the dttmapprove of this JobMaterialTrans.  # noqa: E501


        :return: The dttmapprove of this JobMaterialTrans.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmapprove

    @dttmapprove.setter
    def dttmapprove(self, dttmapprove):
        """Sets the dttmapprove of this JobMaterialTrans.


        :param dttmapprove: The dttmapprove of this JobMaterialTrans.  # noqa: E501
        :type: datetime
        """

        self._dttmapprove = dttmapprove

    @property
    def dttmmaterialtrans(self):
        """Gets the dttmmaterialtrans of this JobMaterialTrans.  # noqa: E501


        :return: The dttmmaterialtrans of this JobMaterialTrans.  # noqa: E501
        :rtype: datetime
        """
        return self._dttmmaterialtrans

    @dttmmaterialtrans.setter
    def dttmmaterialtrans(self, dttmmaterialtrans):
        """Sets the dttmmaterialtrans of this JobMaterialTrans.


        :param dttmmaterialtrans: The dttmmaterialtrans of this JobMaterialTrans.  # noqa: E501
        :type: datetime
        """

        self._dttmmaterialtrans = dttmmaterialtrans

    @property
    def idrec(self):
        """Gets the idrec of this JobMaterialTrans.  # noqa: E501


        :return: The idrec of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this JobMaterialTrans.


        :param idrec: The idrec of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecafecustom(self):
        """Gets the idrecafecustom of this JobMaterialTrans.  # noqa: E501


        :return: The idrecafecustom of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._idrecafecustom

    @idrecafecustom.setter
    def idrecafecustom(self, idrecafecustom):
        """Sets the idrecafecustom of this JobMaterialTrans.


        :param idrecafecustom: The idrecafecustom of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._idrecafecustom = idrecafecustom

    @property
    def idrecafecustomtk(self):
        """Gets the idrecafecustomtk of this JobMaterialTrans.  # noqa: E501


        :return: The idrecafecustomtk of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._idrecafecustomtk

    @idrecafecustomtk.setter
    def idrecafecustomtk(self, idrecafecustomtk):
        """Sets the idrecafecustomtk of this JobMaterialTrans.


        :param idrecafecustomtk: The idrecafecustomtk of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._idrecafecustomtk = idrecafecustomtk

    @property
    def idrecjobcontact(self):
        """Gets the idrecjobcontact of this JobMaterialTrans.  # noqa: E501


        :return: The idrecjobcontact of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._idrecjobcontact

    @idrecjobcontact.setter
    def idrecjobcontact(self, idrecjobcontact):
        """Sets the idrecjobcontact of this JobMaterialTrans.


        :param idrecjobcontact: The idrecjobcontact of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._idrecjobcontact = idrecjobcontact

    @property
    def idrecjobcontacttk(self):
        """Gets the idrecjobcontacttk of this JobMaterialTrans.  # noqa: E501


        :return: The idrecjobcontacttk of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._idrecjobcontacttk

    @idrecjobcontacttk.setter
    def idrecjobcontacttk(self, idrecjobcontacttk):
        """Sets the idrecjobcontacttk of this JobMaterialTrans.


        :param idrecjobcontacttk: The idrecjobcontacttk of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._idrecjobcontacttk = idrecjobcontacttk

    @property
    def idrecjobsupportvessel(self):
        """Gets the idrecjobsupportvessel of this JobMaterialTrans.  # noqa: E501


        :return: The idrecjobsupportvessel of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._idrecjobsupportvessel

    @idrecjobsupportvessel.setter
    def idrecjobsupportvessel(self, idrecjobsupportvessel):
        """Sets the idrecjobsupportvessel of this JobMaterialTrans.


        :param idrecjobsupportvessel: The idrecjobsupportvessel of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._idrecjobsupportvessel = idrecjobsupportvessel

    @property
    def idrecjobsupportvesseltk(self):
        """Gets the idrecjobsupportvesseltk of this JobMaterialTrans.  # noqa: E501


        :return: The idrecjobsupportvesseltk of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._idrecjobsupportvesseltk

    @idrecjobsupportvesseltk.setter
    def idrecjobsupportvesseltk(self, idrecjobsupportvesseltk):
        """Sets the idrecjobsupportvesseltk of this JobMaterialTrans.


        :param idrecjobsupportvesseltk: The idrecjobsupportvesseltk of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._idrecjobsupportvesseltk = idrecjobsupportvesseltk

    @property
    def idrecparent(self):
        """Gets the idrecparent of this JobMaterialTrans.  # noqa: E501


        :return: The idrecparent of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this JobMaterialTrans.


        :param idrecparent: The idrecparent of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idwell(self):
        """Gets the idwell of this JobMaterialTrans.  # noqa: E501


        :return: The idwell of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this JobMaterialTrans.


        :param idwell: The idwell of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def job(self):
        """Gets the job of this JobMaterialTrans.  # noqa: E501


        :return: The job of this JobMaterialTrans.  # noqa: E501
        :rtype: AnyOfJobMaterialTransJob
        """
        return self._job

    @job.setter
    def job(self, job):
        """Sets the job of this JobMaterialTrans.


        :param job: The job of this JobMaterialTrans.  # noqa: E501
        :type: AnyOfJobMaterialTransJob
        """

        self._job = job

    @property
    def job_material_trans_details(self):
        """Gets the job_material_trans_details of this JobMaterialTrans.  # noqa: E501


        :return: The job_material_trans_details of this JobMaterialTrans.  # noqa: E501
        :rtype: list[JobMaterialTransDetail]
        """
        return self._job_material_trans_details

    @job_material_trans_details.setter
    def job_material_trans_details(self, job_material_trans_details):
        """Sets the job_material_trans_details of this JobMaterialTrans.


        :param job_material_trans_details: The job_material_trans_details of this JobMaterialTrans.  # noqa: E501
        :type: list[JobMaterialTransDetail]
        """

        self._job_material_trans_details = job_material_trans_details

    @property
    def locationdes(self):
        """Gets the locationdes of this JobMaterialTrans.  # noqa: E501


        :return: The locationdes of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._locationdes

    @locationdes.setter
    def locationdes(self, locationdes):
        """Sets the locationdes of this JobMaterialTrans.


        :param locationdes: The locationdes of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._locationdes = locationdes

    @property
    def locationtyp1(self):
        """Gets the locationtyp1 of this JobMaterialTrans.  # noqa: E501


        :return: The locationtyp1 of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._locationtyp1

    @locationtyp1.setter
    def locationtyp1(self, locationtyp1):
        """Sets the locationtyp1 of this JobMaterialTrans.


        :param locationtyp1: The locationtyp1 of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._locationtyp1 = locationtyp1

    @property
    def locationtyp2(self):
        """Gets the locationtyp2 of this JobMaterialTrans.  # noqa: E501


        :return: The locationtyp2 of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._locationtyp2

    @locationtyp2.setter
    def locationtyp2(self, locationtyp2):
        """Sets the locationtyp2 of this JobMaterialTrans.


        :param locationtyp2: The locationtyp2 of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._locationtyp2 = locationtyp2

    @property
    def materialtransno(self):
        """Gets the materialtransno of this JobMaterialTrans.  # noqa: E501


        :return: The materialtransno of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._materialtransno

    @materialtransno.setter
    def materialtransno(self, materialtransno):
        """Sets the materialtransno of this JobMaterialTrans.


        :param materialtransno: The materialtransno of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._materialtransno = materialtransno

    @property
    def materialtransreason(self):
        """Gets the materialtransreason of this JobMaterialTrans.  # noqa: E501


        :return: The materialtransreason of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._materialtransreason

    @materialtransreason.setter
    def materialtransreason(self, materialtransreason):
        """Sets the materialtransreason of this JobMaterialTrans.


        :param materialtransreason: The materialtransreason of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._materialtransreason = materialtransreason

    @property
    def mattransida(self):
        """Gets the mattransida of this JobMaterialTrans.  # noqa: E501


        :return: The mattransida of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._mattransida

    @mattransida.setter
    def mattransida(self, mattransida):
        """Sets the mattransida of this JobMaterialTrans.


        :param mattransida: The mattransida of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._mattransida = mattransida

    @property
    def mattransidb(self):
        """Gets the mattransidb of this JobMaterialTrans.  # noqa: E501


        :return: The mattransidb of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._mattransidb

    @mattransidb.setter
    def mattransidb(self, mattransidb):
        """Sets the mattransidb of this JobMaterialTrans.


        :param mattransidb: The mattransidb of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._mattransidb = mattransidb

    @property
    def status(self):
        """Gets the status of this JobMaterialTrans.  # noqa: E501


        :return: The status of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this JobMaterialTrans.


        :param status: The status of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this JobMaterialTrans.  # noqa: E501


        :return: The syscreatedate of this JobMaterialTrans.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this JobMaterialTrans.


        :param syscreatedate: The syscreatedate of this JobMaterialTrans.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this JobMaterialTrans.  # noqa: E501


        :return: The syscreateuser of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this JobMaterialTrans.


        :param syscreateuser: The syscreateuser of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this JobMaterialTrans.  # noqa: E501


        :return: The syslockchildren of this JobMaterialTrans.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this JobMaterialTrans.


        :param syslockchildren: The syslockchildren of this JobMaterialTrans.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this JobMaterialTrans.  # noqa: E501


        :return: The syslockchildrenui of this JobMaterialTrans.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this JobMaterialTrans.


        :param syslockchildrenui: The syslockchildrenui of this JobMaterialTrans.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this JobMaterialTrans.  # noqa: E501


        :return: The syslockdate of this JobMaterialTrans.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this JobMaterialTrans.


        :param syslockdate: The syslockdate of this JobMaterialTrans.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this JobMaterialTrans.  # noqa: E501


        :return: The syslockme of this JobMaterialTrans.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this JobMaterialTrans.


        :param syslockme: The syslockme of this JobMaterialTrans.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this JobMaterialTrans.  # noqa: E501


        :return: The syslockmeui of this JobMaterialTrans.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this JobMaterialTrans.


        :param syslockmeui: The syslockmeui of this JobMaterialTrans.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this JobMaterialTrans.  # noqa: E501


        :return: The sysmoddate of this JobMaterialTrans.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this JobMaterialTrans.


        :param sysmoddate: The sysmoddate of this JobMaterialTrans.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this JobMaterialTrans.  # noqa: E501


        :return: The sysmoduser of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this JobMaterialTrans.


        :param sysmoduser: The sysmoduser of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def systag(self):
        """Gets the systag of this JobMaterialTrans.  # noqa: E501


        :return: The systag of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this JobMaterialTrans.


        :param systag: The systag of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._systag = systag

    @property
    def tofrom(self):
        """Gets the tofrom of this JobMaterialTrans.  # noqa: E501


        :return: The tofrom of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._tofrom

    @tofrom.setter
    def tofrom(self, tofrom):
        """Sets the tofrom of this JobMaterialTrans.


        :param tofrom: The tofrom of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._tofrom = tofrom

    @property
    def usertxt1(self):
        """Gets the usertxt1 of this JobMaterialTrans.  # noqa: E501


        :return: The usertxt1 of this JobMaterialTrans.  # noqa: E501
        :rtype: str
        """
        return self._usertxt1

    @usertxt1.setter
    def usertxt1(self, usertxt1):
        """Sets the usertxt1 of this JobMaterialTrans.


        :param usertxt1: The usertxt1 of this JobMaterialTrans.  # noqa: E501
        :type: str
        """

        self._usertxt1 = usertxt1

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(JobMaterialTrans, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobMaterialTrans):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
