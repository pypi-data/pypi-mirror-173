# coding: utf-8

"""
    OData Service for namespace Default

    This OData service is located at http://localhost  # noqa: E501

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class JobReportRigCrew(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'com': 'str',
        'durationoff': 'OneOfJobReportRigCrewDurationoff',
        'durationother': 'OneOfJobReportRigCrewDurationother',
        'durationsick': 'OneOfJobReportRigCrewDurationsick',
        'durationstandby': 'OneOfJobReportRigCrewDurationstandby',
        'durationworkot': 'OneOfJobReportRigCrewDurationworkot',
        'durationworkreg': 'OneOfJobReportRigCrewDurationworkreg',
        'idrec': 'str',
        'idrecjobrigcrew': 'str',
        'idrecjobrigcrewtk': 'str',
        'idrecparent': 'str',
        'idwell': 'str',
        'job_report': 'AnyOfJobReportRigCrewJobReport',
        'othertyp': 'str',
        'shifttyp': 'str',
        'syscarryfwdp': 'int',
        'syscreatedate': 'datetime',
        'syscreateuser': 'str',
        'syslockchildren': 'int',
        'syslockchildrenui': 'int',
        'syslockdate': 'datetime',
        'syslockme': 'int',
        'syslockmeui': 'int',
        'sysmoddate': 'datetime',
        'sysmoduser': 'str',
        'sysseq': 'int',
        'systag': 'str'
    }

    attribute_map = {
        'com': 'com',
        'durationoff': 'durationoff',
        'durationother': 'durationother',
        'durationsick': 'durationsick',
        'durationstandby': 'durationstandby',
        'durationworkot': 'durationworkot',
        'durationworkreg': 'durationworkreg',
        'idrec': 'idrec',
        'idrecjobrigcrew': 'idrecjobrigcrew',
        'idrecjobrigcrewtk': 'idrecjobrigcrewtk',
        'idrecparent': 'idrecparent',
        'idwell': 'idwell',
        'job_report': 'jobReport',
        'othertyp': 'othertyp',
        'shifttyp': 'shifttyp',
        'syscarryfwdp': 'syscarryfwdp',
        'syscreatedate': 'syscreatedate',
        'syscreateuser': 'syscreateuser',
        'syslockchildren': 'syslockchildren',
        'syslockchildrenui': 'syslockchildrenui',
        'syslockdate': 'syslockdate',
        'syslockme': 'syslockme',
        'syslockmeui': 'syslockmeui',
        'sysmoddate': 'sysmoddate',
        'sysmoduser': 'sysmoduser',
        'sysseq': 'sysseq',
        'systag': 'systag'
    }

    def __init__(self, com=None, durationoff=None, durationother=None, durationsick=None, durationstandby=None, durationworkot=None, durationworkreg=None, idrec=None, idrecjobrigcrew=None, idrecjobrigcrewtk=None, idrecparent=None, idwell=None, job_report=None, othertyp=None, shifttyp=None, syscarryfwdp=None, syscreatedate=None, syscreateuser=None, syslockchildren=None, syslockchildrenui=None, syslockdate=None, syslockme=None, syslockmeui=None, sysmoddate=None, sysmoduser=None, sysseq=None, systag=None):  # noqa: E501
        """JobReportRigCrew - a model defined in Swagger"""  # noqa: E501
        self._com = None
        self._durationoff = None
        self._durationother = None
        self._durationsick = None
        self._durationstandby = None
        self._durationworkot = None
        self._durationworkreg = None
        self._idrec = None
        self._idrecjobrigcrew = None
        self._idrecjobrigcrewtk = None
        self._idrecparent = None
        self._idwell = None
        self._job_report = None
        self._othertyp = None
        self._shifttyp = None
        self._syscarryfwdp = None
        self._syscreatedate = None
        self._syscreateuser = None
        self._syslockchildren = None
        self._syslockchildrenui = None
        self._syslockdate = None
        self._syslockme = None
        self._syslockmeui = None
        self._sysmoddate = None
        self._sysmoduser = None
        self._sysseq = None
        self._systag = None
        self.discriminator = None
        if com is not None:
            self.com = com
        if durationoff is not None:
            self.durationoff = durationoff
        if durationother is not None:
            self.durationother = durationother
        if durationsick is not None:
            self.durationsick = durationsick
        if durationstandby is not None:
            self.durationstandby = durationstandby
        if durationworkot is not None:
            self.durationworkot = durationworkot
        if durationworkreg is not None:
            self.durationworkreg = durationworkreg
        if idrec is not None:
            self.idrec = idrec
        if idrecjobrigcrew is not None:
            self.idrecjobrigcrew = idrecjobrigcrew
        if idrecjobrigcrewtk is not None:
            self.idrecjobrigcrewtk = idrecjobrigcrewtk
        if idrecparent is not None:
            self.idrecparent = idrecparent
        if idwell is not None:
            self.idwell = idwell
        if job_report is not None:
            self.job_report = job_report
        if othertyp is not None:
            self.othertyp = othertyp
        if shifttyp is not None:
            self.shifttyp = shifttyp
        if syscarryfwdp is not None:
            self.syscarryfwdp = syscarryfwdp
        if syscreatedate is not None:
            self.syscreatedate = syscreatedate
        if syscreateuser is not None:
            self.syscreateuser = syscreateuser
        if syslockchildren is not None:
            self.syslockchildren = syslockchildren
        if syslockchildrenui is not None:
            self.syslockchildrenui = syslockchildrenui
        if syslockdate is not None:
            self.syslockdate = syslockdate
        if syslockme is not None:
            self.syslockme = syslockme
        if syslockmeui is not None:
            self.syslockmeui = syslockmeui
        if sysmoddate is not None:
            self.sysmoddate = sysmoddate
        if sysmoduser is not None:
            self.sysmoduser = sysmoduser
        if sysseq is not None:
            self.sysseq = sysseq
        if systag is not None:
            self.systag = systag

    @property
    def com(self):
        """Gets the com of this JobReportRigCrew.  # noqa: E501


        :return: The com of this JobReportRigCrew.  # noqa: E501
        :rtype: str
        """
        return self._com

    @com.setter
    def com(self, com):
        """Sets the com of this JobReportRigCrew.


        :param com: The com of this JobReportRigCrew.  # noqa: E501
        :type: str
        """

        self._com = com

    @property
    def durationoff(self):
        """Gets the durationoff of this JobReportRigCrew.  # noqa: E501


        :return: The durationoff of this JobReportRigCrew.  # noqa: E501
        :rtype: OneOfJobReportRigCrewDurationoff
        """
        return self._durationoff

    @durationoff.setter
    def durationoff(self, durationoff):
        """Sets the durationoff of this JobReportRigCrew.


        :param durationoff: The durationoff of this JobReportRigCrew.  # noqa: E501
        :type: OneOfJobReportRigCrewDurationoff
        """

        self._durationoff = durationoff

    @property
    def durationother(self):
        """Gets the durationother of this JobReportRigCrew.  # noqa: E501


        :return: The durationother of this JobReportRigCrew.  # noqa: E501
        :rtype: OneOfJobReportRigCrewDurationother
        """
        return self._durationother

    @durationother.setter
    def durationother(self, durationother):
        """Sets the durationother of this JobReportRigCrew.


        :param durationother: The durationother of this JobReportRigCrew.  # noqa: E501
        :type: OneOfJobReportRigCrewDurationother
        """

        self._durationother = durationother

    @property
    def durationsick(self):
        """Gets the durationsick of this JobReportRigCrew.  # noqa: E501


        :return: The durationsick of this JobReportRigCrew.  # noqa: E501
        :rtype: OneOfJobReportRigCrewDurationsick
        """
        return self._durationsick

    @durationsick.setter
    def durationsick(self, durationsick):
        """Sets the durationsick of this JobReportRigCrew.


        :param durationsick: The durationsick of this JobReportRigCrew.  # noqa: E501
        :type: OneOfJobReportRigCrewDurationsick
        """

        self._durationsick = durationsick

    @property
    def durationstandby(self):
        """Gets the durationstandby of this JobReportRigCrew.  # noqa: E501


        :return: The durationstandby of this JobReportRigCrew.  # noqa: E501
        :rtype: OneOfJobReportRigCrewDurationstandby
        """
        return self._durationstandby

    @durationstandby.setter
    def durationstandby(self, durationstandby):
        """Sets the durationstandby of this JobReportRigCrew.


        :param durationstandby: The durationstandby of this JobReportRigCrew.  # noqa: E501
        :type: OneOfJobReportRigCrewDurationstandby
        """

        self._durationstandby = durationstandby

    @property
    def durationworkot(self):
        """Gets the durationworkot of this JobReportRigCrew.  # noqa: E501


        :return: The durationworkot of this JobReportRigCrew.  # noqa: E501
        :rtype: OneOfJobReportRigCrewDurationworkot
        """
        return self._durationworkot

    @durationworkot.setter
    def durationworkot(self, durationworkot):
        """Sets the durationworkot of this JobReportRigCrew.


        :param durationworkot: The durationworkot of this JobReportRigCrew.  # noqa: E501
        :type: OneOfJobReportRigCrewDurationworkot
        """

        self._durationworkot = durationworkot

    @property
    def durationworkreg(self):
        """Gets the durationworkreg of this JobReportRigCrew.  # noqa: E501


        :return: The durationworkreg of this JobReportRigCrew.  # noqa: E501
        :rtype: OneOfJobReportRigCrewDurationworkreg
        """
        return self._durationworkreg

    @durationworkreg.setter
    def durationworkreg(self, durationworkreg):
        """Sets the durationworkreg of this JobReportRigCrew.


        :param durationworkreg: The durationworkreg of this JobReportRigCrew.  # noqa: E501
        :type: OneOfJobReportRigCrewDurationworkreg
        """

        self._durationworkreg = durationworkreg

    @property
    def idrec(self):
        """Gets the idrec of this JobReportRigCrew.  # noqa: E501


        :return: The idrec of this JobReportRigCrew.  # noqa: E501
        :rtype: str
        """
        return self._idrec

    @idrec.setter
    def idrec(self, idrec):
        """Sets the idrec of this JobReportRigCrew.


        :param idrec: The idrec of this JobReportRigCrew.  # noqa: E501
        :type: str
        """

        self._idrec = idrec

    @property
    def idrecjobrigcrew(self):
        """Gets the idrecjobrigcrew of this JobReportRigCrew.  # noqa: E501


        :return: The idrecjobrigcrew of this JobReportRigCrew.  # noqa: E501
        :rtype: str
        """
        return self._idrecjobrigcrew

    @idrecjobrigcrew.setter
    def idrecjobrigcrew(self, idrecjobrigcrew):
        """Sets the idrecjobrigcrew of this JobReportRigCrew.


        :param idrecjobrigcrew: The idrecjobrigcrew of this JobReportRigCrew.  # noqa: E501
        :type: str
        """

        self._idrecjobrigcrew = idrecjobrigcrew

    @property
    def idrecjobrigcrewtk(self):
        """Gets the idrecjobrigcrewtk of this JobReportRigCrew.  # noqa: E501


        :return: The idrecjobrigcrewtk of this JobReportRigCrew.  # noqa: E501
        :rtype: str
        """
        return self._idrecjobrigcrewtk

    @idrecjobrigcrewtk.setter
    def idrecjobrigcrewtk(self, idrecjobrigcrewtk):
        """Sets the idrecjobrigcrewtk of this JobReportRigCrew.


        :param idrecjobrigcrewtk: The idrecjobrigcrewtk of this JobReportRigCrew.  # noqa: E501
        :type: str
        """

        self._idrecjobrigcrewtk = idrecjobrigcrewtk

    @property
    def idrecparent(self):
        """Gets the idrecparent of this JobReportRigCrew.  # noqa: E501


        :return: The idrecparent of this JobReportRigCrew.  # noqa: E501
        :rtype: str
        """
        return self._idrecparent

    @idrecparent.setter
    def idrecparent(self, idrecparent):
        """Sets the idrecparent of this JobReportRigCrew.


        :param idrecparent: The idrecparent of this JobReportRigCrew.  # noqa: E501
        :type: str
        """

        self._idrecparent = idrecparent

    @property
    def idwell(self):
        """Gets the idwell of this JobReportRigCrew.  # noqa: E501


        :return: The idwell of this JobReportRigCrew.  # noqa: E501
        :rtype: str
        """
        return self._idwell

    @idwell.setter
    def idwell(self, idwell):
        """Sets the idwell of this JobReportRigCrew.


        :param idwell: The idwell of this JobReportRigCrew.  # noqa: E501
        :type: str
        """

        self._idwell = idwell

    @property
    def job_report(self):
        """Gets the job_report of this JobReportRigCrew.  # noqa: E501


        :return: The job_report of this JobReportRigCrew.  # noqa: E501
        :rtype: AnyOfJobReportRigCrewJobReport
        """
        return self._job_report

    @job_report.setter
    def job_report(self, job_report):
        """Sets the job_report of this JobReportRigCrew.


        :param job_report: The job_report of this JobReportRigCrew.  # noqa: E501
        :type: AnyOfJobReportRigCrewJobReport
        """

        self._job_report = job_report

    @property
    def othertyp(self):
        """Gets the othertyp of this JobReportRigCrew.  # noqa: E501


        :return: The othertyp of this JobReportRigCrew.  # noqa: E501
        :rtype: str
        """
        return self._othertyp

    @othertyp.setter
    def othertyp(self, othertyp):
        """Sets the othertyp of this JobReportRigCrew.


        :param othertyp: The othertyp of this JobReportRigCrew.  # noqa: E501
        :type: str
        """

        self._othertyp = othertyp

    @property
    def shifttyp(self):
        """Gets the shifttyp of this JobReportRigCrew.  # noqa: E501


        :return: The shifttyp of this JobReportRigCrew.  # noqa: E501
        :rtype: str
        """
        return self._shifttyp

    @shifttyp.setter
    def shifttyp(self, shifttyp):
        """Sets the shifttyp of this JobReportRigCrew.


        :param shifttyp: The shifttyp of this JobReportRigCrew.  # noqa: E501
        :type: str
        """

        self._shifttyp = shifttyp

    @property
    def syscarryfwdp(self):
        """Gets the syscarryfwdp of this JobReportRigCrew.  # noqa: E501


        :return: The syscarryfwdp of this JobReportRigCrew.  # noqa: E501
        :rtype: int
        """
        return self._syscarryfwdp

    @syscarryfwdp.setter
    def syscarryfwdp(self, syscarryfwdp):
        """Sets the syscarryfwdp of this JobReportRigCrew.


        :param syscarryfwdp: The syscarryfwdp of this JobReportRigCrew.  # noqa: E501
        :type: int
        """

        self._syscarryfwdp = syscarryfwdp

    @property
    def syscreatedate(self):
        """Gets the syscreatedate of this JobReportRigCrew.  # noqa: E501


        :return: The syscreatedate of this JobReportRigCrew.  # noqa: E501
        :rtype: datetime
        """
        return self._syscreatedate

    @syscreatedate.setter
    def syscreatedate(self, syscreatedate):
        """Sets the syscreatedate of this JobReportRigCrew.


        :param syscreatedate: The syscreatedate of this JobReportRigCrew.  # noqa: E501
        :type: datetime
        """

        self._syscreatedate = syscreatedate

    @property
    def syscreateuser(self):
        """Gets the syscreateuser of this JobReportRigCrew.  # noqa: E501


        :return: The syscreateuser of this JobReportRigCrew.  # noqa: E501
        :rtype: str
        """
        return self._syscreateuser

    @syscreateuser.setter
    def syscreateuser(self, syscreateuser):
        """Sets the syscreateuser of this JobReportRigCrew.


        :param syscreateuser: The syscreateuser of this JobReportRigCrew.  # noqa: E501
        :type: str
        """

        self._syscreateuser = syscreateuser

    @property
    def syslockchildren(self):
        """Gets the syslockchildren of this JobReportRigCrew.  # noqa: E501


        :return: The syslockchildren of this JobReportRigCrew.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildren

    @syslockchildren.setter
    def syslockchildren(self, syslockchildren):
        """Sets the syslockchildren of this JobReportRigCrew.


        :param syslockchildren: The syslockchildren of this JobReportRigCrew.  # noqa: E501
        :type: int
        """

        self._syslockchildren = syslockchildren

    @property
    def syslockchildrenui(self):
        """Gets the syslockchildrenui of this JobReportRigCrew.  # noqa: E501


        :return: The syslockchildrenui of this JobReportRigCrew.  # noqa: E501
        :rtype: int
        """
        return self._syslockchildrenui

    @syslockchildrenui.setter
    def syslockchildrenui(self, syslockchildrenui):
        """Sets the syslockchildrenui of this JobReportRigCrew.


        :param syslockchildrenui: The syslockchildrenui of this JobReportRigCrew.  # noqa: E501
        :type: int
        """

        self._syslockchildrenui = syslockchildrenui

    @property
    def syslockdate(self):
        """Gets the syslockdate of this JobReportRigCrew.  # noqa: E501


        :return: The syslockdate of this JobReportRigCrew.  # noqa: E501
        :rtype: datetime
        """
        return self._syslockdate

    @syslockdate.setter
    def syslockdate(self, syslockdate):
        """Sets the syslockdate of this JobReportRigCrew.


        :param syslockdate: The syslockdate of this JobReportRigCrew.  # noqa: E501
        :type: datetime
        """

        self._syslockdate = syslockdate

    @property
    def syslockme(self):
        """Gets the syslockme of this JobReportRigCrew.  # noqa: E501


        :return: The syslockme of this JobReportRigCrew.  # noqa: E501
        :rtype: int
        """
        return self._syslockme

    @syslockme.setter
    def syslockme(self, syslockme):
        """Sets the syslockme of this JobReportRigCrew.


        :param syslockme: The syslockme of this JobReportRigCrew.  # noqa: E501
        :type: int
        """

        self._syslockme = syslockme

    @property
    def syslockmeui(self):
        """Gets the syslockmeui of this JobReportRigCrew.  # noqa: E501


        :return: The syslockmeui of this JobReportRigCrew.  # noqa: E501
        :rtype: int
        """
        return self._syslockmeui

    @syslockmeui.setter
    def syslockmeui(self, syslockmeui):
        """Sets the syslockmeui of this JobReportRigCrew.


        :param syslockmeui: The syslockmeui of this JobReportRigCrew.  # noqa: E501
        :type: int
        """

        self._syslockmeui = syslockmeui

    @property
    def sysmoddate(self):
        """Gets the sysmoddate of this JobReportRigCrew.  # noqa: E501


        :return: The sysmoddate of this JobReportRigCrew.  # noqa: E501
        :rtype: datetime
        """
        return self._sysmoddate

    @sysmoddate.setter
    def sysmoddate(self, sysmoddate):
        """Sets the sysmoddate of this JobReportRigCrew.


        :param sysmoddate: The sysmoddate of this JobReportRigCrew.  # noqa: E501
        :type: datetime
        """

        self._sysmoddate = sysmoddate

    @property
    def sysmoduser(self):
        """Gets the sysmoduser of this JobReportRigCrew.  # noqa: E501


        :return: The sysmoduser of this JobReportRigCrew.  # noqa: E501
        :rtype: str
        """
        return self._sysmoduser

    @sysmoduser.setter
    def sysmoduser(self, sysmoduser):
        """Sets the sysmoduser of this JobReportRigCrew.


        :param sysmoduser: The sysmoduser of this JobReportRigCrew.  # noqa: E501
        :type: str
        """

        self._sysmoduser = sysmoduser

    @property
    def sysseq(self):
        """Gets the sysseq of this JobReportRigCrew.  # noqa: E501


        :return: The sysseq of this JobReportRigCrew.  # noqa: E501
        :rtype: int
        """
        return self._sysseq

    @sysseq.setter
    def sysseq(self, sysseq):
        """Sets the sysseq of this JobReportRigCrew.


        :param sysseq: The sysseq of this JobReportRigCrew.  # noqa: E501
        :type: int
        """

        self._sysseq = sysseq

    @property
    def systag(self):
        """Gets the systag of this JobReportRigCrew.  # noqa: E501


        :return: The systag of this JobReportRigCrew.  # noqa: E501
        :rtype: str
        """
        return self._systag

    @systag.setter
    def systag(self, systag):
        """Sets the systag of this JobReportRigCrew.


        :param systag: The systag of this JobReportRigCrew.  # noqa: E501
        :type: str
        """

        self._systag = systag

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(JobReportRigCrew, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobReportRigCrew):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
