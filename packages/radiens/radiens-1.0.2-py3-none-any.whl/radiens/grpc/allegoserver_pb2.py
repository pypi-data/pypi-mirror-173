# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: allegoserver.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import common_pb2 as common__pb2
from . import datasource_pb2 as datasource__pb2
from . import biointerface_pb2 as biointerface__pb2
from . import spikesorter_pb2 as spikesorter__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12\x61llegoserver.proto\x12\x06\x61llego\x1a\x0c\x63ommon.proto\x1a\x10\x64\x61tasource.proto\x1a\x12\x62iointerface.proto\x1a\x11spikesorter.proto\"4\n\x0eRestartRequest\x12\"\n\x04mode\x18\x01 \x02(\x0e\x32\x14.allego.BackboneMode\"-\n\x11SetProfileRequest\x12\n\n\x02id\x18\x02 \x02(\t\x12\x0c\n\x04type\x18\x03 \x02(\t\"\xe9\x02\n\x10LogSystemRequest\x12\x34\n\x04mode\x18\x01 \x02(\x0e\x32&.allego.LogSystemRequest.LogSystemMode\x12=\n\x07outMode\x18\x02 \x01(\x0e\x32,.allego.LogSystemRequest.LogSystemOutputMode\x12\x16\n\x0eoutPathAndFile\x18\x03 \x01(\t\"|\n\rLogSystemMode\x12\n\n\x06\x63onfig\x10\x00\x12\n\n\x06status\x10\x01\x12\x0c\n\x08port_map\x10\x02\x12\n\n\x06pcache\x10\x03\x12\x0c\n\x08sigstats\x10\x04\x12\x11\n\rneurons_stats\x10\x06\x12\x18\n\x14\x62\x61se_signalgroup_map\x10\x07\"J\n\x13LogSystemOutputMode\x12\x12\n\x0eLOG_OUT_STDERR\x10\x00\x12\x0f\n\x0bLOG_OUT_CSV\x10\x01\x12\x0e\n\nLOG_OUT_MD\x10\x02\"4\n\x10SetStreamRequest\x12 \n\x04mode\x18\x01 \x02(\x0e\x32\x12.allego.StreamMode\"4\n\x10SetRecordRequest\x12 \n\x04mode\x18\x01 \x02(\x0e\x32\x12.allego.RecordMode\"~\n\x14SetConfigCoreRequest\x12\x10\n\x08sampFreq\x18\x01 \x01(\x01\x12\x0f\n\x07loopDur\x18\x02 \x01(\x01\x12\x19\n\x11pcachePersistence\x18\x03 \x01(\x01\x12(\n\x0b\x63\x61\x62leLength\x18\x04 \x01(\x0b\x32\x13.allego.CableLength\">\n\x0b\x43\x61\x62leLength\x12\x1a\n\x04port\x18\x01 \x02(\x0e\x32\x0c.allego.Port\x12\x13\n\x0b\x63\x61\x62leLength\x18\x02 \x02(\x01\"f\n\x0c\x43\x61\x62leLengths\x12\t\n\x01\x41\x18\x01 \x02(\x01\x12\t\n\x01\x42\x18\x02 \x02(\x01\x12\t\n\x01\x43\x18\x03 \x02(\x01\x12\t\n\x01\x44\x18\x04 \x02(\x01\x12\t\n\x01\x45\x18\x05 \x02(\x01\x12\t\n\x01\x46\x18\x06 \x02(\x01\x12\t\n\x01G\x18\x07 \x02(\x01\x12\t\n\x01H\x18\x08 \x02(\x01\"\xb1\x01\n\nConfigCore\x12\x1c\n\x14\x61llegoCoreServerPort\x18\x01 \x02(\t\x12\x14\n\x0c\x62\x61seSampFreq\x18\x03 \x02(\x01\x12\x17\n\x0fstreamLoopDurMs\x18\x04 \x02(\x05\x12*\n\x0c\x63\x61\x62leLengths\x18\x05 \x02(\x0b\x32\x14.allego.CableLengths\x12*\n\x0c\x62\x61\x63kboneMode\x18\x06 \x02(\x0e\x32\x14.allego.BackboneMode\"r\n\x0fRecordingStatus\x12&\n\nrecordMode\x18\x01 \x02(\x0e\x32\x12.allego.RecordMode\x12\x16\n\x0e\x61\x63tiveFileName\x18\x02 \x02(\t\x12\x10\n\x08\x64uration\x18\x03 \x02(\x01\x12\r\n\x05\x65rror\x18\x04 \x02(\t\"r\n\x0fStreamingStatus\x12&\n\nstreamMode\x18\x01 \x02(\x0e\x32\x12.allego.StreamMode\x12\x1a\n\x12primaryCacheTRange\x18\x02 \x03(\x01\x12\x1b\n\x13hardwareMemoryLevel\x18\x03 \x02(\x01\"\xda\x01\n\x0e\x42\x61\x63kboneStatus\x12*\n\tstreaming\x18\x01 \x02(\x0b\x32\x17.allego.StreamingStatus\x12*\n\trecording\x18\x02 \x02(\x0b\x32\x17.allego.RecordingStatus\x12\'\n\x05ports\x18\x03 \x03(\x0b\x32\x18.allego.PortChannelCount\x12\x13\n\x0bisConnected\x18\x04 \x02(\x08\x12\x32\n\x10gpioChannelCount\x18\x05 \x02(\x0b\x32\x18.allego.GPIOChannelCount\"\xc9\x02\n\x0f\x43onfigAndStatus\x12*\n\tstreaming\x18\x01 \x02(\x0b\x32\x17.allego.StreamingStatus\x12*\n\trecording\x18\x02 \x02(\x0b\x32\x17.allego.RecordingStatus\x12\'\n\x05ports\x18\x03 \x03(\x0b\x32\x18.allego.PortChannelCount\x12\x13\n\x0bisConnected\x18\x04 \x02(\x08\x12\x32\n\x10gpioChannelCount\x18\x05 \x02(\x0b\x32\x18.allego.GPIOChannelCount\x12\x14\n\x0c\x62\x61seSampFreq\x18\x06 \x02(\x01\x12*\n\x0c\x63\x61\x62leLengths\x18\x07 \x02(\x0b\x32\x14.allego.CableLengths\x12*\n\x0c\x62\x61\x63kboneMode\x18\x08 \x02(\x0e\x32\x14.allego.BackboneMode\"g\n\x0f\x43onfigRecording\x12\x14\n\x0c\x62\x61seFileName\x18\x01 \x02(\t\x12\x14\n\x0c\x62\x61seFilePath\x18\x02 \x02(\t\x12\x15\n\rdataSourceIdx\x18\x03 \x01(\x05\x12\x11\n\ttimeStamp\x18\x04 \x01(\x08\"V\n\x14\x44IOModeEventsRequest\x12\x0f\n\x07\x63hanIdx\x18\x02 \x02(\x05\x12\x16\n\x0e\x65ventThreshold\x18\x03 \x02(\x01\x12\x15\n\reventPolarity\x18\x04 \x02(\x08\"6\n\x14\x44IOModeManualRequest\x12\x0f\n\x07\x63hanIdx\x18\x01 \x02(\x05\x12\r\n\x05state\x18\x02 \x02(\x08\"s\n\x19\x44igitalOutChannelRegister\x12\x13\n\x0bmanualState\x18\x01 \x02(\x08\x12\x16\n\x0e\x65ventThreshold\x18\x02 \x02(\x01\x12\x15\n\reventPolarity\x18\x03 \x02(\x08\x12\x12\n\nntvChanIdx\x18\x04 \x02(\x05\"q\n\x12\x44igitalOutRegister\x12\x1d\n\x04mode\x18\x01 \x02(\x0e\x32\x0f.allego.DIOMode\x12<\n\x11\x64outChanRegisters\x18\x02 \x03(\x0b\x32!.allego.DigitalOutChannelRegister\"\x1e\n\x0e\x44\x41\x43GainRequest\x12\x0c\n\x04gain\x18\x01 \x02(\x05\"&\n\rDACOffRequest\x12\x15\n\rstreamGroupId\x18\x01 \x01(\t\"w\n\x18\x41nalogOutChannelRegister\x12\x15\n\rPriNtvChanIdx\x18\x01 \x02(\x05\x12\x1b\n\x13\x41nalogOutNtvChanIdx\x18\x02 \x02(\x05\x12\x0e\n\x06Stream\x18\x03 \x02(\x05\x12\x17\n\x0fStreamOffsetIdx\x18\x04 \x02(\x05\"^\n\x11\x41nalogOutRegister\x12;\n\x11\x61nalogOutChannels\x18\x01 \x03(\x0b\x32 .allego.AnalogOutChannelRegister\x12\x0c\n\x04gain\x18\x02 \x02(\x05\"!\n\x0cSerialNumber\x12\x11\n\tserialNum\x18\x01 \x02(\t\"\x81\x01\n\x12SetSimPortsRequest\x12\x33\n\x07simPort\x18\x01 \x03(\x0b\x32\".allego.SetSimPortsRequest.SimPort\x1a\x36\n\x07SimPort\x12\x1a\n\x04port\x18\x01 \x02(\x0e\x32\x0c.allego.Port\x12\x0f\n\x07numChan\x18\x02 \x02(\x03\"\'\n\x14SetMuxChannelRequest\x12\x0f\n\x07\x63hannel\x18\x01 \x02(\x03\"\'\n\x14SetPotVoltageRequest\x12\x0f\n\x07voltage\x18\x01 \x02(\x02\"!\n\x10GetADCLevelReply\x12\r\n\x05level\x18\x01 \x02(\x02\"#\n\x12SetPotRangeRequest\x12\r\n\x05range\x18\x01 \x02(\x05\"!\n\x11SetPotModeRequest\x12\x0c\n\x04mode\x18\x01 \x02(\x08\")\n\x17SetPotCellEnableRequest\x12\x0e\n\x06\x65nable\x18\x01 \x02(\x08\"\xc7\x02\n\x11LogsysConfigReply\x12(\n\nsystemMode\x18\x01 \x02(\x0e\x32\x14.allego.BackboneMode\x12\x14\n\x0c\x62\x61seSampFreq\x18\x02 \x02(\x01\x12\x17\n\x0fstreamLoopDurMs\x18\x03 \x02(\x05\x12\x1a\n\x12priCachePersistDur\x18\x04 \x02(\x01\x12!\n\x19priCacheStatsUpdatePeriod\x18\x05 \x02(\x01\x12\x12\n\nactiveSigs\x18\x06 \x02(\x05\x12\x10\n\x08priChans\x18\x07 \x02(\x05\x12\x10\n\x08\x61uxChans\x18\x08 \x02(\x05\x12\x10\n\x08\x64inChans\x18\t \x02(\x05\x12\x11\n\tdoutChans\x18\n \x02(\x05\x12\"\n\x08portSpec\x18\x0b \x03(\x0b\x32\x10.allego.PortInfo\x12\x19\n\x11numConnectedPorts\x18\x0c \x02(\x05\"Y\n\x08PortInfo\x12\x1a\n\x04port\x18\x01 \x02(\x0e\x32\x0c.allego.Port\x12\r\n\x05probe\x18\x02 \x02(\t\x12\x11\n\theadstage\x18\x03 \x02(\t\x12\x0f\n\x07numSigs\x18\x04 \x02(\x05\"c\n\x11LogsysStatusReply\x12\'\n\x07recStat\x18\x01 \x02(\x0b\x32\x16.allego.RecorderStatus\x12%\n\x07sysStat\x18\x02 \x02(\x0b\x32\x14.allego.SystemStatus\"\xba\x01\n\x0eRecorderStatus\x12&\n\nrecordMode\x18\x01 \x02(\x0e\x32\x12.allego.RecordMode\x12\x10\n\x08\x64uration\x18\x02 \x02(\x01\x12\x0c\n\x04\x62\x65ta\x18\x03 \x02(\x01\x12\x11\n\tsizeBytes\x18\x04 \x02(\x05\x12\x0c\n\x04path\x18\x05 \x02(\t\x12\x10\n\x08\x62\x61seName\x18\x06 \x02(\t\x12\x15\n\rdataSourceIdx\x18\x07 \x02(\x05\x12\x16\n\x0e\x61\x63tiveFileName\x18\x08 \x02(\t\"\x96\x03\n\x0cSystemStatus\x12&\n\nstreamMode\x18\x01 \x02(\x0e\x32\x12.allego.StreamMode\x12\x14\n\x0c\x62\x61seSampFreq\x18\x02 \x02(\x01\x12\x12\n\nnumPriSigs\x18\x03 \x02(\x05\x12\x12\n\nnumAuxSigs\x18\x04 \x02(\x05\x12\x12\n\nnumDinSigs\x18\x05 \x02(\x05\x12\x13\n\x0bnumDoutSigs\x18\x06 \x02(\x05\x12\x13\n\x0btStampRange\x18\x07 \x03(\x03\x12\x0e\n\x06tRange\x18\x08 \x03(\x01\x12\x11\n\tstreamDur\x18\t \x02(\x01\x12\x14\n\x0cmeanChunkDur\x18\n \x02(\x01\x12\x1c\n\x14meanHardwareMemLevel\x18\x0b \x02(\x02\x12\x1b\n\x13maxHardwareMemLevel\x18\x0c \x02(\x02\x12\x1b\n\x13minHardwareMemLevel\x18\r \x02(\x02\x12\x1c\n\x14lastHardwareMemLevel\x18\x0e \x02(\x02\x12\x19\n\x11meanStreamLoopDur\x18\x0f \x02(\x01\x12\x18\n\x10streamEfficiency\x18\x10 \x02(\x01\"\xd8\x02\n\x11LogsysPcacheReply\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x10\n\x08sampFreq\x18\x02 \x02(\x01\x12\x12\n\npersistDur\x18\x03 \x02(\x01\x12\x18\n\x10minNumDatablocks\x18\x04 \x02(\x05\x12\x11\n\tsizeBytes\x18\x05 \x02(\x03\x12 \n\x18totalDatablocksProcessed\x18\x06 \x02(\x04\x12\x16\n\x0enumTimeSamples\x18\x07 \x02(\x03\x12\x1f\n\x17\x61llTimeMeanDatablockDur\x18\x08 \x02(\x01\x12\x15\n\rnumDataBlocks\x18\t \x02(\x05\x12\x0e\n\x06tRange\x18\n \x03(\x01\x12\x0f\n\x07tsRange\x18\x0b \x03(\x03\x12\x12\n\nnumPriSigs\x18\x0c \x02(\x05\x12\x12\n\nnumAuxSigs\x18\r \x02(\x05\x12\x12\n\nnumDinSigs\x18\x0e \x02(\x05\x12\x13\n\x0bnumDoutSigs\x18\x0f \x02(\x05\"5\n\x10TriggerModeState\x12!\n\x04mode\x18\x01 \x02(\x0e\x32\x13.allego.TriggerMode\"3\n\x0cHALdashboard\x12#\n\x04mode\x18\x01 \x02(\x0e\x32\x15.allego.AllegoHALmode*!\n\nStreamMode\x12\t\n\x05S_OFF\x10\x00\x12\x08\n\x04S_ON\x10\x01*!\n\nRecordMode\x12\t\n\x05R_OFF\x10\x00\x12\x08\n\x04R_ON\x10\x01*\xfb\x02\n\x0c\x42\x61\x63kboneMode\x12\x10\n\x0cSMARTBOX_PRO\x10\x00\x12\x19\n\x15SMARTBOX_SIM_GEN_SINE\x10\x01\x12\x1b\n\x17SMARTBOX_SIM_GEN_SPIKES\x10\x02\x12\x1b\n\x17SMARTBOX_SIM_DATASOURCE\x10\x03\x12\x13\n\x0fOPEN_EPHYS_USB3\x10\x04\x12#\n\x1fINTAN_RECORDING_CONTROLLER_1024\x10\x05\x12\x14\n\x10SMARTBOX_CLASSIC\x10\x06\x12\"\n\x1eINTAN_RECORDING_CONTROLLER_512\x10\x07\x12\x13\n\x0fOPEN_EPHYS_USB2\x10\x08\x12\x0e\n\nINTAN_USB2\x10\t\x12 \n\x1cSMARTBOX_SIM_GEN_SINE_MAPPED\x10\n\x12#\n\x1fSMARTBOX_SIM_GEN_SINE_HIGH_FREQ\x10\x0b\x12$\n SMARTBOX_SIM_GEN_SINE_MULTI_BAND\x10\x0c*,\n\x07\x44IOMode\x12\n\n\x06manual\x10\x00\x12\n\n\x06\x65vents\x10\x01\x12\t\n\x05gated\x10\x02*O\n\x0bTriggerMode\x12\x0b\n\x07T_DIN_0\x10\x00\x12\x0b\n\x07T_DIN_1\x10\x01\x12\x0c\n\x08T_DOUT_0\x10\x02\x12\x0c\n\x08T_DOUT_1\x10\x03\x12\n\n\x06T_NONE\x10\x04*q\n\rAllegoHALmode\x12\x11\n\rA_HAL_GENERIC\x10\x00\x12\x13\n\x0f\x41_HAL_SPIKESORT\x10\x01\x12\x14\n\x10\x41_HAL_MULTISCALE\x10\x02\x12\"\n\x1e\x41_HAL_MULTISCALE_BIDIRECTIONAL\x10\x03\x32\xee\x1f\n\nAllegoCore\x12?\n\x0bHealthcheck\x12\x17.allego.StandardRequest\x1a\x15.allego.StandardReply\"\x00\x12:\n\x07Restart\x12\x16.allego.RestartRequest\x1a\x15.allego.StandardReply\"\x00\x12\x39\n\x05\x43lose\x12\x17.allego.StandardRequest\x1a\x15.allego.StandardReply\"\x00\x12J\n\x13GetRadixEnvironment\x12\x17.allego.StandardRequest\x1a\x18.allego.RadixEnvironment\"\x00\x12L\n\x10WorkspaceControl\x12\x1f.allego.WorkspaceControlRequest\x1a\x15.allego.StandardReply\"\x00\x12T\n\x11GetRadiensServers\x12 .allego.GetRadiensServersRequest\x1a\x1b.allego.RadiensServersReply\"\x00\x12\x46\n\rSetConfigCore\x12\x1c.allego.SetConfigCoreRequest\x1a\x15.allego.StandardReply\"\x00\x12\x45\n\x0fSetProfileState\x12\x19.allego.SetProfileRequest\x1a\x15.allego.StandardReply\"\x00\x12\x46\n\x12SetConfigRecording\x12\x17.allego.ConfigRecording\x1a\x15.allego.StandardReply\"\x00\x12\x43\n\x0eSetStreamState\x12\x18.allego.SetStreamRequest\x1a\x15.allego.StandardReply\"\x00\x12\x43\n\x0eSetRecordState\x12\x18.allego.SetRecordRequest\x1a\x15.allego.StandardReply\"\x00\x12\x45\n\x0cSetDIOEvents\x12\x1c.allego.DIOModeEventsRequest\x1a\x15.allego.StandardReply\"\x00\x12\x45\n\x0cSetDIOManual\x12\x1c.allego.DIOModeManualRequest\x1a\x15.allego.StandardReply\"\x00\x12?\n\x0bSetDIOGated\x12\x17.allego.StandardRequest\x1a\x15.allego.StandardReply\"\x00\x12=\n\nSetDACGain\x12\x16.allego.DACGainRequest\x1a\x15.allego.StandardReply\"\x00\x12\x41\n\x0cSetDACStream\x12\x18.allego.DACStreamRequest\x1a\x15.allego.StandardReply\"\x00\x12;\n\tSetDACOff\x12\x15.allego.DACOffRequest\x1a\x15.allego.StandardReply\"\x00\x12\x42\n\x0bSetSimPorts\x12\x1a.allego.SetSimPortsRequest\x1a\x15.allego.StandardReply\"\x00\x12\x46\n\rSetMuxChannel\x12\x1c.allego.SetMuxChannelRequest\x1a\x15.allego.StandardReply\"\x00\x12\x43\n\x0eSetTriggerMode\x12\x18.allego.TriggerModeState\x1a\x15.allego.StandardReply\"\x00\x12\x46\n\rSetPotVoltage\x12\x1c.allego.SetPotVoltageRequest\x1a\x15.allego.StandardReply\"\x00\x12\x42\n\x0bSetPotRange\x12\x1a.allego.SetPotRangeRequest\x1a\x15.allego.StandardReply\"\x00\x12@\n\nSetPotMode\x12\x19.allego.SetPotModeRequest\x1a\x15.allego.StandardReply\"\x00\x12L\n\x10SetPotCellEnable\x12\x1f.allego.SetPotCellEnableRequest\x1a\x15.allego.StandardReply\"\x00\x12\x42\n\x0bSetDSPGroup\x12\x1a.allego.SetDSPGroupRequest\x1a\x15.allego.StandardReply\"\x00\x12:\n\tGetConfig\x12\x17.allego.StandardRequest\x1a\x12.allego.ConfigCore\"\x00\x12H\n\x0cGetWorkspace\x12\x1b.allego.GetWorkspaceRequest\x1a\x19.allego.GetWorkspaceReply\"\x00\x12H\n\x12GetConfigRecording\x12\x17.allego.StandardRequest\x1a\x17.allego.ConfigRecording\"\x00\x12>\n\tGetStatus\x12\x17.allego.StandardRequest\x1a\x16.allego.BackboneStatus\"\x00\x12H\n\x12GetConfigAndStatus\x12\x17.allego.StandardRequest\x1a\x17.allego.ConfigAndStatus\"\x00\x12O\n\x13GetDataSourceParams\x12\x1c.allego.SignalGroupIDRequest\x1a\x18.allego.DataSourceParams\"\x00\x12\x42\n\x11GetIntanImpedance\x12\x18.allego.ImpedanceRequest\x1a\x11.allego.Impedance\"\x00\x12?\n\x0bGetDSPGroup\x12\x1c.allego.SignalGroupIDRequest\x1a\x10.allego.DSPGroup\"\x00\x12\x42\n\tGetDIOReg\x12\x17.allego.StandardRequest\x1a\x1a.allego.DigitalOutRegister\"\x00\x12\x41\n\tGetDACReg\x12\x17.allego.StandardRequest\x1a\x19.allego.AnalogOutRegister\"\x00\x12<\n\tGetSerial\x12\x17.allego.StandardRequest\x1a\x14.allego.SerialNumber\"\x00\x12\x45\n\x0eGetTriggerMode\x12\x17.allego.StandardRequest\x1a\x18.allego.TriggerModeState\"\x00\x12\x42\n\x0bGetADCLevel\x12\x17.allego.StandardRequest\x1a\x18.allego.GetADCLevelReply\"\x00\x12O\n\x0fListSensorSpecs\x12\x1c.allego.SignalGroupIDRequest\x1a\x1c.allego.ListSensorSpecsReply\"\x00\x12N\n\x11GetSignalGroupIDs\x12\x17.allego.StandardRequest\x1a\x1e.allego.GetSignalGroupIDsReply\"\x00\x12\x45\n\x0eGetSignalGroup\x12\x1c.allego.SignalGroupIDRequest\x1a\x13.allego.SignalGroup\"\x00\x12N\n\x11UpdateSignalGroup\x12 .allego.UpdateSignalGroupRequest\x1a\x15.allego.StandardReply\"\x00\x12;\n\tScanPorts\x12\x17.allego.StandardRequest\x1a\x13.allego.SignalGroup\"\x00\x12>\n\tSetSensor\x12\x18.allego.SetSensorRequest\x1a\x15.allego.StandardReply\"\x00\x12T\n\x14SetSensorPositionTcs\x12#.allego.SetSensorPositionTcsRequest\x1a\x15.allego.StandardReply\"\x00\x12R\n\x13SetSitePositionsTcs\x12\".allego.SetSitePositionsTcsRequest\x1a\x15.allego.StandardReply\"\x00\x12O\n\x13GetDataSourceStatus\x12\x1c.allego.SignalGroupIDRequest\x1a\x18.allego.DataSourceStatus\"\x00\x12H\n\x0c\x46\x65\x61tureStart\x12\x1f.allego.FeatureStartStopRequest\x1a\x15.allego.StandardReply\"\x00\x12G\n\x0b\x46\x65\x61tureStop\x12\x1f.allego.FeatureStartStopRequest\x1a\x15.allego.StandardReply\"\x00\x12=\n\nGetPrivacy\x12\x17.allego.StandardRequest\x1a\x14.allego.PrivacyReply\"\x00\x12@\n\nSetPrivacy\x12\x19.allego.SetPrivacyRequest\x1a\x15.allego.StandardReply\"\x00\x12L\n\x16GetOrCreateEventViewer\x12\x15.allego.EventViewerID\x1a\x19.allego.EventViewerConfig\"\x00\x12G\n\x11UpdateEventViewer\x12\x19.allego.EventViewerConfig\x1a\x15.allego.StandardReply\"\x00\x12T\n\x15ListEventViewerEvents\x12\x15.allego.EventViewerID\x1a\".allego.ListEventViewerEventsReply\"\x00\x12U\n\x13GetEventViewerEvent\x12\".allego.GetEventViewerEventRequest\x1a\x18.allego.EventViewerEvent\"\x00\x12L\n\x10ListEventViewers\x12\x17.allego.StandardRequest\x1a\x1d.allego.ListEventViewersReply\"\x00\x12\x42\n\x0fGetHALdashboard\x12\x17.allego.StandardRequest\x1a\x14.allego.HALdashboard\"\x00\x32\xe2\x02\n\x07Pcache1\x12?\n\x0bHealthcheck\x12\x17.allego.StandardRequest\x1a\x15.allego.StandardReply\"\x00\x12@\n\rGetHDSnapshot\x12\x19.allego.HDSnapshotRequest\x1a\x12.allego.HDSnapshot\"\x00\x12H\n\x15GetHDSnapshotFromHead\x12\x19.allego.HDSnapshotRequest\x1a\x12.allego.HDSnapshot\"\x00\x12=\n\nGetSignals\x12\x19.allego.GetSignalsRequest\x1a\x12.allego.RawSignals\"\x00\x12K\n\x12SetTimeRangeToHead\x12\x1c.allego.SignalGroupIDRequest\x1a\x15.allego.StandardReply\"\x00\x32\xd8\x01\n\x04Kpi1\x12?\n\x0bHealthcheck\x12\x17.allego.StandardRequest\x1a\x15.allego.StandardReply\"\x00\x12H\n\rKpiGetMetrics\x12\x15.allego.KpiMetricsReq\x1a\x1e.allego.KpiBundlePacketMetrics\"\x00\x12\x45\n\x0cGetKpiStatus\x12\x1b.allego.GetKpiStatusRequest\x1a\x16.allego.KpiStatusReply\"\x00\x32\xe7\x08\n\x08Neurons1\x12?\n\x0bHealthcheck\x12\x17.allego.StandardRequest\x1a\x15.allego.StandardReply\"\x00\x12P\n\x12SpikeSorterCommand\x12!.allego.SpikeSorterCommandRequest\x1a\x15.allego.StandardReply\"\x00\x12R\n\x13SpikeSorterSetParam\x12\".allego.SpikeSorterSetParamRequest\x1a\x15.allego.StandardReply\"\x00\x12\x64\n\x13SpikeSorterGetParam\x12\".allego.SpikeSorterStandardRequest\x1a\'.allego.GetSpikeSorterParamCommandReply\"\x00\x12U\n\x13SpikeSorterGetState\x12\".allego.SpikeSorterStandardRequest\x1a\x18.allego.SpikeSorterState\"\x00\x12i\n\x17SpikeSorterGetDashboard\x12&.allego.SpikeSorterGetDashboardRequest\x1a$.allego.SpikeSorterGetDashboardReply\"\x00\x12i\n\x18SpikeSorterGetRasterData\x12\'.allego.SpikeSorterGetRasterDataRequest\x1a\".allego.SpikeSorterRasterDataReply\"\x00\x12m\n\x1a\x42iointerfaceGetSpikesDense\x12$.allego.BiointerfaceGetSpikesRequest\x1a\'.allego.BiointerfaceSpikeDataDenseReply\"\x00\x12\x66\n\x16\x42iointerfaceGetNeurons\x12%.allego.BiointerfaceGetNeuronsRequest\x1a#.allego.BiointerfaceGetNeuronsReply\"\x00\x12p\n\"BiointerfaceSeekEndSpikeTimestamps\x12\x31.allego.BiointerfaceSeekEndSpikeTimestampsRequest\x1a\x15.allego.StandardReply\"\x00\x12\x45\n\rSpikesGetSpec\x12\x19.allego.DataSourceRequest\x1a\x17.allego.SpikesSpecReply\"\x00\x12Q\n\x0f\x42iointerfaceViz\x12\x1e.allego.BiointerfaceVizRequest\x1a\x1c.allego.BiointerfaceVizReply\"\x00\x42\x15Z\x13internal/radix/grpc')

_STREAMMODE = DESCRIPTOR.enum_types_by_name['StreamMode']
StreamMode = enum_type_wrapper.EnumTypeWrapper(_STREAMMODE)
_RECORDMODE = DESCRIPTOR.enum_types_by_name['RecordMode']
RecordMode = enum_type_wrapper.EnumTypeWrapper(_RECORDMODE)
_BACKBONEMODE = DESCRIPTOR.enum_types_by_name['BackboneMode']
BackboneMode = enum_type_wrapper.EnumTypeWrapper(_BACKBONEMODE)
_DIOMODE = DESCRIPTOR.enum_types_by_name['DIOMode']
DIOMode = enum_type_wrapper.EnumTypeWrapper(_DIOMODE)
_TRIGGERMODE = DESCRIPTOR.enum_types_by_name['TriggerMode']
TriggerMode = enum_type_wrapper.EnumTypeWrapper(_TRIGGERMODE)
_ALLEGOHALMODE = DESCRIPTOR.enum_types_by_name['AllegoHALmode']
AllegoHALmode = enum_type_wrapper.EnumTypeWrapper(_ALLEGOHALMODE)
S_OFF = 0
S_ON = 1
R_OFF = 0
R_ON = 1
SMARTBOX_PRO = 0
SMARTBOX_SIM_GEN_SINE = 1
SMARTBOX_SIM_GEN_SPIKES = 2
SMARTBOX_SIM_DATASOURCE = 3
OPEN_EPHYS_USB3 = 4
INTAN_RECORDING_CONTROLLER_1024 = 5
SMARTBOX_CLASSIC = 6
INTAN_RECORDING_CONTROLLER_512 = 7
OPEN_EPHYS_USB2 = 8
INTAN_USB2 = 9
SMARTBOX_SIM_GEN_SINE_MAPPED = 10
SMARTBOX_SIM_GEN_SINE_HIGH_FREQ = 11
SMARTBOX_SIM_GEN_SINE_MULTI_BAND = 12
manual = 0
events = 1
gated = 2
T_DIN_0 = 0
T_DIN_1 = 1
T_DOUT_0 = 2
T_DOUT_1 = 3
T_NONE = 4
A_HAL_GENERIC = 0
A_HAL_SPIKESORT = 1
A_HAL_MULTISCALE = 2
A_HAL_MULTISCALE_BIDIRECTIONAL = 3


_RESTARTREQUEST = DESCRIPTOR.message_types_by_name['RestartRequest']
_SETPROFILEREQUEST = DESCRIPTOR.message_types_by_name['SetProfileRequest']
_LOGSYSTEMREQUEST = DESCRIPTOR.message_types_by_name['LogSystemRequest']
_SETSTREAMREQUEST = DESCRIPTOR.message_types_by_name['SetStreamRequest']
_SETRECORDREQUEST = DESCRIPTOR.message_types_by_name['SetRecordRequest']
_SETCONFIGCOREREQUEST = DESCRIPTOR.message_types_by_name['SetConfigCoreRequest']
_CABLELENGTH = DESCRIPTOR.message_types_by_name['CableLength']
_CABLELENGTHS = DESCRIPTOR.message_types_by_name['CableLengths']
_CONFIGCORE = DESCRIPTOR.message_types_by_name['ConfigCore']
_RECORDINGSTATUS = DESCRIPTOR.message_types_by_name['RecordingStatus']
_STREAMINGSTATUS = DESCRIPTOR.message_types_by_name['StreamingStatus']
_BACKBONESTATUS = DESCRIPTOR.message_types_by_name['BackboneStatus']
_CONFIGANDSTATUS = DESCRIPTOR.message_types_by_name['ConfigAndStatus']
_CONFIGRECORDING = DESCRIPTOR.message_types_by_name['ConfigRecording']
_DIOMODEEVENTSREQUEST = DESCRIPTOR.message_types_by_name['DIOModeEventsRequest']
_DIOMODEMANUALREQUEST = DESCRIPTOR.message_types_by_name['DIOModeManualRequest']
_DIGITALOUTCHANNELREGISTER = DESCRIPTOR.message_types_by_name['DigitalOutChannelRegister']
_DIGITALOUTREGISTER = DESCRIPTOR.message_types_by_name['DigitalOutRegister']
_DACGAINREQUEST = DESCRIPTOR.message_types_by_name['DACGainRequest']
_DACOFFREQUEST = DESCRIPTOR.message_types_by_name['DACOffRequest']
_ANALOGOUTCHANNELREGISTER = DESCRIPTOR.message_types_by_name['AnalogOutChannelRegister']
_ANALOGOUTREGISTER = DESCRIPTOR.message_types_by_name['AnalogOutRegister']
_SERIALNUMBER = DESCRIPTOR.message_types_by_name['SerialNumber']
_SETSIMPORTSREQUEST = DESCRIPTOR.message_types_by_name['SetSimPortsRequest']
_SETSIMPORTSREQUEST_SIMPORT = _SETSIMPORTSREQUEST.nested_types_by_name['SimPort']
_SETMUXCHANNELREQUEST = DESCRIPTOR.message_types_by_name['SetMuxChannelRequest']
_SETPOTVOLTAGEREQUEST = DESCRIPTOR.message_types_by_name['SetPotVoltageRequest']
_GETADCLEVELREPLY = DESCRIPTOR.message_types_by_name['GetADCLevelReply']
_SETPOTRANGEREQUEST = DESCRIPTOR.message_types_by_name['SetPotRangeRequest']
_SETPOTMODEREQUEST = DESCRIPTOR.message_types_by_name['SetPotModeRequest']
_SETPOTCELLENABLEREQUEST = DESCRIPTOR.message_types_by_name['SetPotCellEnableRequest']
_LOGSYSCONFIGREPLY = DESCRIPTOR.message_types_by_name['LogsysConfigReply']
_PORTINFO = DESCRIPTOR.message_types_by_name['PortInfo']
_LOGSYSSTATUSREPLY = DESCRIPTOR.message_types_by_name['LogsysStatusReply']
_RECORDERSTATUS = DESCRIPTOR.message_types_by_name['RecorderStatus']
_SYSTEMSTATUS = DESCRIPTOR.message_types_by_name['SystemStatus']
_LOGSYSPCACHEREPLY = DESCRIPTOR.message_types_by_name['LogsysPcacheReply']
_TRIGGERMODESTATE = DESCRIPTOR.message_types_by_name['TriggerModeState']
_HALDASHBOARD = DESCRIPTOR.message_types_by_name['HALdashboard']
_LOGSYSTEMREQUEST_LOGSYSTEMMODE = _LOGSYSTEMREQUEST.enum_types_by_name['LogSystemMode']
_LOGSYSTEMREQUEST_LOGSYSTEMOUTPUTMODE = _LOGSYSTEMREQUEST.enum_types_by_name['LogSystemOutputMode']
RestartRequest = _reflection.GeneratedProtocolMessageType('RestartRequest', (_message.Message,), {
  'DESCRIPTOR' : _RESTARTREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.RestartRequest)
  })
_sym_db.RegisterMessage(RestartRequest)

SetProfileRequest = _reflection.GeneratedProtocolMessageType('SetProfileRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETPROFILEREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetProfileRequest)
  })
_sym_db.RegisterMessage(SetProfileRequest)

LogSystemRequest = _reflection.GeneratedProtocolMessageType('LogSystemRequest', (_message.Message,), {
  'DESCRIPTOR' : _LOGSYSTEMREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.LogSystemRequest)
  })
_sym_db.RegisterMessage(LogSystemRequest)

SetStreamRequest = _reflection.GeneratedProtocolMessageType('SetStreamRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETSTREAMREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetStreamRequest)
  })
_sym_db.RegisterMessage(SetStreamRequest)

SetRecordRequest = _reflection.GeneratedProtocolMessageType('SetRecordRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETRECORDREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetRecordRequest)
  })
_sym_db.RegisterMessage(SetRecordRequest)

SetConfigCoreRequest = _reflection.GeneratedProtocolMessageType('SetConfigCoreRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETCONFIGCOREREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetConfigCoreRequest)
  })
_sym_db.RegisterMessage(SetConfigCoreRequest)

CableLength = _reflection.GeneratedProtocolMessageType('CableLength', (_message.Message,), {
  'DESCRIPTOR' : _CABLELENGTH,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.CableLength)
  })
_sym_db.RegisterMessage(CableLength)

CableLengths = _reflection.GeneratedProtocolMessageType('CableLengths', (_message.Message,), {
  'DESCRIPTOR' : _CABLELENGTHS,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.CableLengths)
  })
_sym_db.RegisterMessage(CableLengths)

ConfigCore = _reflection.GeneratedProtocolMessageType('ConfigCore', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGCORE,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.ConfigCore)
  })
_sym_db.RegisterMessage(ConfigCore)

RecordingStatus = _reflection.GeneratedProtocolMessageType('RecordingStatus', (_message.Message,), {
  'DESCRIPTOR' : _RECORDINGSTATUS,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.RecordingStatus)
  })
_sym_db.RegisterMessage(RecordingStatus)

StreamingStatus = _reflection.GeneratedProtocolMessageType('StreamingStatus', (_message.Message,), {
  'DESCRIPTOR' : _STREAMINGSTATUS,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.StreamingStatus)
  })
_sym_db.RegisterMessage(StreamingStatus)

BackboneStatus = _reflection.GeneratedProtocolMessageType('BackboneStatus', (_message.Message,), {
  'DESCRIPTOR' : _BACKBONESTATUS,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.BackboneStatus)
  })
_sym_db.RegisterMessage(BackboneStatus)

ConfigAndStatus = _reflection.GeneratedProtocolMessageType('ConfigAndStatus', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGANDSTATUS,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.ConfigAndStatus)
  })
_sym_db.RegisterMessage(ConfigAndStatus)

ConfigRecording = _reflection.GeneratedProtocolMessageType('ConfigRecording', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGRECORDING,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.ConfigRecording)
  })
_sym_db.RegisterMessage(ConfigRecording)

DIOModeEventsRequest = _reflection.GeneratedProtocolMessageType('DIOModeEventsRequest', (_message.Message,), {
  'DESCRIPTOR' : _DIOMODEEVENTSREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.DIOModeEventsRequest)
  })
_sym_db.RegisterMessage(DIOModeEventsRequest)

DIOModeManualRequest = _reflection.GeneratedProtocolMessageType('DIOModeManualRequest', (_message.Message,), {
  'DESCRIPTOR' : _DIOMODEMANUALREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.DIOModeManualRequest)
  })
_sym_db.RegisterMessage(DIOModeManualRequest)

DigitalOutChannelRegister = _reflection.GeneratedProtocolMessageType('DigitalOutChannelRegister', (_message.Message,), {
  'DESCRIPTOR' : _DIGITALOUTCHANNELREGISTER,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.DigitalOutChannelRegister)
  })
_sym_db.RegisterMessage(DigitalOutChannelRegister)

DigitalOutRegister = _reflection.GeneratedProtocolMessageType('DigitalOutRegister', (_message.Message,), {
  'DESCRIPTOR' : _DIGITALOUTREGISTER,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.DigitalOutRegister)
  })
_sym_db.RegisterMessage(DigitalOutRegister)

DACGainRequest = _reflection.GeneratedProtocolMessageType('DACGainRequest', (_message.Message,), {
  'DESCRIPTOR' : _DACGAINREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.DACGainRequest)
  })
_sym_db.RegisterMessage(DACGainRequest)

DACOffRequest = _reflection.GeneratedProtocolMessageType('DACOffRequest', (_message.Message,), {
  'DESCRIPTOR' : _DACOFFREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.DACOffRequest)
  })
_sym_db.RegisterMessage(DACOffRequest)

AnalogOutChannelRegister = _reflection.GeneratedProtocolMessageType('AnalogOutChannelRegister', (_message.Message,), {
  'DESCRIPTOR' : _ANALOGOUTCHANNELREGISTER,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.AnalogOutChannelRegister)
  })
_sym_db.RegisterMessage(AnalogOutChannelRegister)

AnalogOutRegister = _reflection.GeneratedProtocolMessageType('AnalogOutRegister', (_message.Message,), {
  'DESCRIPTOR' : _ANALOGOUTREGISTER,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.AnalogOutRegister)
  })
_sym_db.RegisterMessage(AnalogOutRegister)

SerialNumber = _reflection.GeneratedProtocolMessageType('SerialNumber', (_message.Message,), {
  'DESCRIPTOR' : _SERIALNUMBER,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.SerialNumber)
  })
_sym_db.RegisterMessage(SerialNumber)

SetSimPortsRequest = _reflection.GeneratedProtocolMessageType('SetSimPortsRequest', (_message.Message,), {

  'SimPort' : _reflection.GeneratedProtocolMessageType('SimPort', (_message.Message,), {
    'DESCRIPTOR' : _SETSIMPORTSREQUEST_SIMPORT,
    '__module__' : 'allegoserver_pb2'
    # @@protoc_insertion_point(class_scope:allego.SetSimPortsRequest.SimPort)
    })
  ,
  'DESCRIPTOR' : _SETSIMPORTSREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetSimPortsRequest)
  })
_sym_db.RegisterMessage(SetSimPortsRequest)
_sym_db.RegisterMessage(SetSimPortsRequest.SimPort)

SetMuxChannelRequest = _reflection.GeneratedProtocolMessageType('SetMuxChannelRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETMUXCHANNELREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetMuxChannelRequest)
  })
_sym_db.RegisterMessage(SetMuxChannelRequest)

SetPotVoltageRequest = _reflection.GeneratedProtocolMessageType('SetPotVoltageRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETPOTVOLTAGEREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetPotVoltageRequest)
  })
_sym_db.RegisterMessage(SetPotVoltageRequest)

GetADCLevelReply = _reflection.GeneratedProtocolMessageType('GetADCLevelReply', (_message.Message,), {
  'DESCRIPTOR' : _GETADCLEVELREPLY,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.GetADCLevelReply)
  })
_sym_db.RegisterMessage(GetADCLevelReply)

SetPotRangeRequest = _reflection.GeneratedProtocolMessageType('SetPotRangeRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETPOTRANGEREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetPotRangeRequest)
  })
_sym_db.RegisterMessage(SetPotRangeRequest)

SetPotModeRequest = _reflection.GeneratedProtocolMessageType('SetPotModeRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETPOTMODEREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetPotModeRequest)
  })
_sym_db.RegisterMessage(SetPotModeRequest)

SetPotCellEnableRequest = _reflection.GeneratedProtocolMessageType('SetPotCellEnableRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETPOTCELLENABLEREQUEST,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetPotCellEnableRequest)
  })
_sym_db.RegisterMessage(SetPotCellEnableRequest)

LogsysConfigReply = _reflection.GeneratedProtocolMessageType('LogsysConfigReply', (_message.Message,), {
  'DESCRIPTOR' : _LOGSYSCONFIGREPLY,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.LogsysConfigReply)
  })
_sym_db.RegisterMessage(LogsysConfigReply)

PortInfo = _reflection.GeneratedProtocolMessageType('PortInfo', (_message.Message,), {
  'DESCRIPTOR' : _PORTINFO,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.PortInfo)
  })
_sym_db.RegisterMessage(PortInfo)

LogsysStatusReply = _reflection.GeneratedProtocolMessageType('LogsysStatusReply', (_message.Message,), {
  'DESCRIPTOR' : _LOGSYSSTATUSREPLY,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.LogsysStatusReply)
  })
_sym_db.RegisterMessage(LogsysStatusReply)

RecorderStatus = _reflection.GeneratedProtocolMessageType('RecorderStatus', (_message.Message,), {
  'DESCRIPTOR' : _RECORDERSTATUS,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.RecorderStatus)
  })
_sym_db.RegisterMessage(RecorderStatus)

SystemStatus = _reflection.GeneratedProtocolMessageType('SystemStatus', (_message.Message,), {
  'DESCRIPTOR' : _SYSTEMSTATUS,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.SystemStatus)
  })
_sym_db.RegisterMessage(SystemStatus)

LogsysPcacheReply = _reflection.GeneratedProtocolMessageType('LogsysPcacheReply', (_message.Message,), {
  'DESCRIPTOR' : _LOGSYSPCACHEREPLY,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.LogsysPcacheReply)
  })
_sym_db.RegisterMessage(LogsysPcacheReply)

TriggerModeState = _reflection.GeneratedProtocolMessageType('TriggerModeState', (_message.Message,), {
  'DESCRIPTOR' : _TRIGGERMODESTATE,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.TriggerModeState)
  })
_sym_db.RegisterMessage(TriggerModeState)

HALdashboard = _reflection.GeneratedProtocolMessageType('HALdashboard', (_message.Message,), {
  'DESCRIPTOR' : _HALDASHBOARD,
  '__module__' : 'allegoserver_pb2'
  # @@protoc_insertion_point(class_scope:allego.HALdashboard)
  })
_sym_db.RegisterMessage(HALdashboard)

_ALLEGOCORE = DESCRIPTOR.services_by_name['AllegoCore']
_PCACHE1 = DESCRIPTOR.services_by_name['Pcache1']
_KPI1 = DESCRIPTOR.services_by_name['Kpi1']
_NEURONS1 = DESCRIPTOR.services_by_name['Neurons1']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\023internal/radix/grpc'
  _STREAMMODE._serialized_start=4679
  _STREAMMODE._serialized_end=4712
  _RECORDMODE._serialized_start=4714
  _RECORDMODE._serialized_end=4747
  _BACKBONEMODE._serialized_start=4750
  _BACKBONEMODE._serialized_end=5129
  _DIOMODE._serialized_start=5131
  _DIOMODE._serialized_end=5175
  _TRIGGERMODE._serialized_start=5177
  _TRIGGERMODE._serialized_end=5256
  _ALLEGOHALMODE._serialized_start=5258
  _ALLEGOHALMODE._serialized_end=5371
  _RESTARTREQUEST._serialized_start=101
  _RESTARTREQUEST._serialized_end=153
  _SETPROFILEREQUEST._serialized_start=155
  _SETPROFILEREQUEST._serialized_end=200
  _LOGSYSTEMREQUEST._serialized_start=203
  _LOGSYSTEMREQUEST._serialized_end=564
  _LOGSYSTEMREQUEST_LOGSYSTEMMODE._serialized_start=364
  _LOGSYSTEMREQUEST_LOGSYSTEMMODE._serialized_end=488
  _LOGSYSTEMREQUEST_LOGSYSTEMOUTPUTMODE._serialized_start=490
  _LOGSYSTEMREQUEST_LOGSYSTEMOUTPUTMODE._serialized_end=564
  _SETSTREAMREQUEST._serialized_start=566
  _SETSTREAMREQUEST._serialized_end=618
  _SETRECORDREQUEST._serialized_start=620
  _SETRECORDREQUEST._serialized_end=672
  _SETCONFIGCOREREQUEST._serialized_start=674
  _SETCONFIGCOREREQUEST._serialized_end=800
  _CABLELENGTH._serialized_start=802
  _CABLELENGTH._serialized_end=864
  _CABLELENGTHS._serialized_start=866
  _CABLELENGTHS._serialized_end=968
  _CONFIGCORE._serialized_start=971
  _CONFIGCORE._serialized_end=1148
  _RECORDINGSTATUS._serialized_start=1150
  _RECORDINGSTATUS._serialized_end=1264
  _STREAMINGSTATUS._serialized_start=1266
  _STREAMINGSTATUS._serialized_end=1380
  _BACKBONESTATUS._serialized_start=1383
  _BACKBONESTATUS._serialized_end=1601
  _CONFIGANDSTATUS._serialized_start=1604
  _CONFIGANDSTATUS._serialized_end=1933
  _CONFIGRECORDING._serialized_start=1935
  _CONFIGRECORDING._serialized_end=2038
  _DIOMODEEVENTSREQUEST._serialized_start=2040
  _DIOMODEEVENTSREQUEST._serialized_end=2126
  _DIOMODEMANUALREQUEST._serialized_start=2128
  _DIOMODEMANUALREQUEST._serialized_end=2182
  _DIGITALOUTCHANNELREGISTER._serialized_start=2184
  _DIGITALOUTCHANNELREGISTER._serialized_end=2299
  _DIGITALOUTREGISTER._serialized_start=2301
  _DIGITALOUTREGISTER._serialized_end=2414
  _DACGAINREQUEST._serialized_start=2416
  _DACGAINREQUEST._serialized_end=2446
  _DACOFFREQUEST._serialized_start=2448
  _DACOFFREQUEST._serialized_end=2486
  _ANALOGOUTCHANNELREGISTER._serialized_start=2488
  _ANALOGOUTCHANNELREGISTER._serialized_end=2607
  _ANALOGOUTREGISTER._serialized_start=2609
  _ANALOGOUTREGISTER._serialized_end=2703
  _SERIALNUMBER._serialized_start=2705
  _SERIALNUMBER._serialized_end=2738
  _SETSIMPORTSREQUEST._serialized_start=2741
  _SETSIMPORTSREQUEST._serialized_end=2870
  _SETSIMPORTSREQUEST_SIMPORT._serialized_start=2816
  _SETSIMPORTSREQUEST_SIMPORT._serialized_end=2870
  _SETMUXCHANNELREQUEST._serialized_start=2872
  _SETMUXCHANNELREQUEST._serialized_end=2911
  _SETPOTVOLTAGEREQUEST._serialized_start=2913
  _SETPOTVOLTAGEREQUEST._serialized_end=2952
  _GETADCLEVELREPLY._serialized_start=2954
  _GETADCLEVELREPLY._serialized_end=2987
  _SETPOTRANGEREQUEST._serialized_start=2989
  _SETPOTRANGEREQUEST._serialized_end=3024
  _SETPOTMODEREQUEST._serialized_start=3026
  _SETPOTMODEREQUEST._serialized_end=3059
  _SETPOTCELLENABLEREQUEST._serialized_start=3061
  _SETPOTCELLENABLEREQUEST._serialized_end=3102
  _LOGSYSCONFIGREPLY._serialized_start=3105
  _LOGSYSCONFIGREPLY._serialized_end=3432
  _PORTINFO._serialized_start=3434
  _PORTINFO._serialized_end=3523
  _LOGSYSSTATUSREPLY._serialized_start=3525
  _LOGSYSSTATUSREPLY._serialized_end=3624
  _RECORDERSTATUS._serialized_start=3627
  _RECORDERSTATUS._serialized_end=3813
  _SYSTEMSTATUS._serialized_start=3816
  _SYSTEMSTATUS._serialized_end=4222
  _LOGSYSPCACHEREPLY._serialized_start=4225
  _LOGSYSPCACHEREPLY._serialized_end=4569
  _TRIGGERMODESTATE._serialized_start=4571
  _TRIGGERMODESTATE._serialized_end=4624
  _HALDASHBOARD._serialized_start=4626
  _HALDASHBOARD._serialized_end=4677
  _ALLEGOCORE._serialized_start=5374
  _ALLEGOCORE._serialized_end=9452
  _PCACHE1._serialized_start=9455
  _PCACHE1._serialized_end=9809
  _KPI1._serialized_start=9812
  _KPI1._serialized_end=10028
  _NEURONS1._serialized_start=10031
  _NEURONS1._serialized_end=11158
# @@protoc_insertion_point(module_scope)
