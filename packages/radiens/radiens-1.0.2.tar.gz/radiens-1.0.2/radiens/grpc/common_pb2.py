# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0c\x63ommon.proto\x12\x06\x61llego\"9\n\x10RadixEnvironment\x12\x0f\n\x07version\x18\x01 \x02(\t\x12\x14\n\x0cuserDataPath\x18\x02 \x02(\t\"\x11\n\x0fStandardRequest\"\x1f\n\rStandardReply\x12\x0e\n\x06\x65rrMsg\x18\x01 \x01(\t\"\xba\x01\n\x13WorkspaceDescriptor\x12\n\n\x02iD\x18\x01 \x02(\t\x12!\n\x03\x61pp\x18\x02 \x02(\x0e\x32\x14.allego.WorkspaceApp\x12\x12\n\nisModified\x18\x03 \x02(\x08\x12\x19\n\x11timestampLastUsed\x18\x04 \x02(\t\x12\x19\n\x11timestampModified\x18\x05 \x02(\t\x12*\n\nannotation\x18\x06 \x02(\x0b\x32\x16.allego.AnnotateBundle\"\xb8\x01\n\x17WorkspaceControlRequest\x12&\n\x03\x63md\x18\x01 \x02(\x0e\x32\x19.allego.WorkspaceCommands\x12\x13\n\x0bworkspaceID\x18\x02 \x01(\t\x12*\n\nannotation\x18\x03 \x01(\x0b\x32\x16.allego.AnnotateBundle\x12\x1a\n\x12targetFullFileName\x18\x04 \x01(\t\x12\x18\n\x10isForceOverwrite\x18\x05 \x01(\x08\"\xd3\x01\n\x13GetWorkspaceRequest\x12)\n\x03\x63md\x18\x01 \x02(\x0e\x32\x1c.allego.GetWorkspaceCommands\x12\x13\n\x0bworkspaceID\x18\x02 \x01(\t\x12\x14\n\x0cworkspaceDir\x18\x03 \x01(\t\x12%\n\x07\x61ppMask\x18\x04 \x01(\x0e\x32\x14.allego.WorkspaceApp\x12,\n\x0c\x61nnotateMask\x18\x05 \x01(\x0b\x32\x16.allego.AnnotateBundle\x12\x11\n\tisBrowser\x18\x06 \x01(\x08\"\xab\x01\n\x11GetWorkspaceReply\x12\x43\n\rworkspaceDesc\x18\x01 \x03(\x0b\x32,.allego.GetWorkspaceReply.WorkspaceDescEntry\x1aQ\n\x12WorkspaceDescEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12*\n\x05value\x18\x02 \x01(\x0b\x32\x1b.allego.WorkspaceDescriptor:\x02\x38\x01\"`\n\x18GetRadiensServersRequest\x12\x15\n\rhostIPaddress\x18\x01 \x02(\t\x12-\n\nserverType\x18\x02 \x01(\x0e\x32\x19.allego.RadiensServerType\"\x97\x02\n\nServerSpec\x12\x0c\n\x04host\x18\x01 \x02(\t\x12\x0b\n\x03pid\x18\x02 \x02(\x05\x12\x30\n\x07service\x18\x03 \x03(\x0b\x32\x1f.allego.ServerSpec.ServiceEntry\x12\x30\n\x05spawn\x18\x04 \x01(\x0b\x32!.allego.ServerSpec.SpawnedProcess\x1a\x1b\n\x0bGrpcService\x12\x0c\n\x04port\x18\x01 \x02(\x05\x1a\x1d\n\x0eSpawnedProcess\x12\x0b\n\x03pid\x18\x01 \x03(\x05\x1aN\n\x0cServiceEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12-\n\x05value\x18\x02 \x01(\x0b\x32\x1e.allego.ServerSpec.GrpcService:\x02\x38\x01\"j\n\x13RadiensServersReply\x12(\n\x0c\x61llegoserver\x18\x01 \x03(\x0b\x32\x12.allego.ServerSpec\x12)\n\rradiensserver\x18\x02 \x03(\x0b\x32\x12.allego.ServerSpec\"-\n\x14SignalGroupIDRequest\x12\x15\n\rstreamGroupId\x18\x01 \x02(\t\"\xc4\x01\n\tSignalMap\x12\x0f\n\x07siteIdx\x18\x01 \x03(\x05\x12\x13\n\x0b\x63ompSiteNum\x18\x02 \x03(\t\x12\x13\n\x0bposProbeUmX\x18\x03 \x03(\x01\x12\x13\n\x0bposProbeUmY\x18\x04 \x03(\x01\x12\x13\n\x0bposProbeUmZ\x18\x05 \x03(\x01\x12\x14\n\x0cposTissueUmX\x18\x06 \x03(\x01\x12\x14\n\x0cposTissueUmY\x18\x07 \x03(\x01\x12\x14\n\x0cposTissueUmZ\x18\x08 \x03(\x01\x12\x10\n\x08sensorID\x18\t \x03(\t\"=\n\x10GPIOChannelCount\x12\x0c\n\x04nAux\x18\x01 \x02(\x05\x12\x0c\n\x04nDin\x18\x02 \x02(\x05\x12\r\n\x05nDout\x18\x03 \x02(\x05\"D\n\x10PortChannelCount\x12\x1a\n\x04port\x18\x01 \x02(\x0e\x32\x0c.allego.Port\x12\x14\n\x0c\x63hannelCount\x18\x02 \x02(\x05\"Q\n\x0eSetPortRequest\x12\x1a\n\x04port\x18\x01 \x02(\x0e\x32\x0c.allego.Port\x12\x10\n\x08probeUID\x18\x02 \x02(\t\x12\x11\n\thstageUID\x18\x03 \x02(\t\"\xe2\x02\n\x11HDSnapshotRequest\x12\x15\n\rstreamGroupId\x18\x01 \x02(\t\x12\x11\n\ttimeRange\x18\x02 \x03(\x01\x12=\n\npriSignals\x18\x03 \x01(\x0b\x32).allego.HDSnapshotRequest.SelectedSignals\x12=\n\nauxSignals\x18\x04 \x01(\x0b\x32).allego.HDSnapshotRequest.SelectedSignals\x12=\n\ndinSignals\x18\x05 \x01(\x0b\x32).allego.HDSnapshotRequest.SelectedSignals\x12>\n\x0b\x64outSignals\x18\x06 \x01(\x0b\x32).allego.HDSnapshotRequest.SelectedSignals\x1a&\n\x0fSelectedSignals\x12\x13\n\x0bntvChanIdxs\x18\x01 \x03(\x05\"]\n\x0eHDSnapshotMeta\x12\x11\n\tglobalMin\x18\x04 \x02(\x01\x12\x11\n\tglobalMax\x18\x05 \x02(\x01\x12%\n\x08sigGroup\x18\x06 \x01(\x0b\x32\x13.allego.SignalGroup\"\x9f\x02\n\nHDSnapshot\x12$\n\x04meta\x18\x01 \x02(\x0b\x32\x16.allego.HDSnapshotMeta\x12\x10\n\x08sampFreq\x18\x02 \x02(\x01\x12\x13\n\x0btimeSamples\x18\x03 \x02(\x0c\x12#\n\x07signals\x18\x04 \x02(\x0b\x32\x12.allego.RawSignals\x12&\n\npriSignals\x18\x05 \x01(\x0b\x32\x12.allego.RawSignals\x12&\n\nauxSignals\x18\x06 \x01(\x0b\x32\x12.allego.RawSignals\x12&\n\ndinSignals\x18\x07 \x01(\x0b\x32\x12.allego.RawSignals\x12\'\n\x0b\x64outSignals\x18\x08 \x01(\x0b\x32\x12.allego.RawSignals\"\x97\x02\n\x11GetSignalsRequest\x12\x15\n\rstreamGroupId\x18\x01 \x02(\t\x12\x37\n\x06params\x18\x02 \x02(\x0b\x32\'.allego.GetSignalsRequest.GetSigsParams\x1a\xb1\x01\n\rGetSigsParams\x12\x11\n\ttimeRange\x18\x01 \x03(\x01\x12\x12\n\ntimeWindow\x18\x02 \x02(\x01\x12\x0f\n\x07spacing\x18\x03 \x02(\x01\x12\x11\n\tmagnitude\x18\x04 \x02(\x01\x12\x17\n\x0fplotWidthPoints\x18\x05 \x02(\x01\x12\x11\n\tgpioOnTop\x18\x06 \x02(\x08\x12\x14\n\x0c\x61uxMagnitude\x18\x07 \x02(\x01\x12\x13\n\x0b\x63omponentID\x18\x08 \x02(\t\"<\n\nRawSignals\x12\r\n\x05shape\x18\x01 \x03(\x05\x12\x11\n\ttimeRange\x18\x02 \x03(\x01\x12\x0c\n\x04\x64\x61ta\x18\x03 \x02(\x0c\"\x85\x02\n\x14ListSensorSpecsReply\x12\x41\n\x06probes\x18\x01 \x03(\x0b\x32\x31.allego.ListSensorSpecsReply.SpecWithChannelCount\x12\x45\n\nheadstages\x18\x02 \x03(\x0b\x32\x31.allego.ListSensorSpecsReply.SpecWithChannelCount\x12\'\n\x05ports\x18\x03 \x03(\x0b\x32\x18.allego.PortChannelCount\x1a:\n\x14SpecWithChannelCount\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x14\n\x0c\x63hannelCount\x18\x02 \x02(\x05\"S\n\x16ListDataSourcesRequest\x12\x11\n\tdirectory\x18\x01 \x02(\t\x12&\n\x06sortBy\x18\x02 \x01(\x0e\x32\x16.allego.DataSourceSort\"0\n\x16GetSignalGroupIDsReply\x12\x16\n\x0estreamGroupIDs\x18\x01 \x03(\t\"\xaf\x01\n\nDataSource\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x0c\n\x04\x64\x61te\x18\x02 \x02(\t\x12\x17\n\x0f\x64urationSeconds\x18\x03 \x02(\x01\x12\x17\n\x0f\x64urationMinutes\x18\x04 \x02(\x01\x12\x15\n\rdurationHours\x18\x05 \x02(\x01\x12(\n\x08\x66ileType\x18\x06 \x02(\x0e\x32\x16.allego.RadixFileTypes\x12\x12\n\nnumSignals\x18\x07 \x02(\x05\"o\n\x0e\x46ileDescriptor\x12\x0c\n\x04path\x18\x01 \x02(\t\x12\x10\n\x08\x62\x61seName\x18\x02 \x02(\t\x12(\n\x08\x66ileType\x18\x03 \x02(\x0e\x32\x16.allego.RadixFileTypes\x12\x13\n\x0b\x66ileNameUID\x18\x04 \x01(\t\"\xd0\x01\n\x08TimeSpec\x12\x30\n\ttimeRange\x18\x01 \x01(\x0b\x32\x1b.allego.TimeSpec.TimeRangeLH\x00\x12:\n\x0etimestampRange\x18\x02 \x01(\x0b\x32 .allego.TimeSpec.TimestampRangeLH\x00\x1a\x1f\n\nTimeRangeL\x12\x11\n\ttimeRange\x18\x01 \x03(\x01\x1a)\n\x0fTimestampRangeL\x12\x16\n\x0etimestampRange\x18\x01 \x03(\x03\x42\n\n\x08timeDesc\"\xbe\x01\n\nSignalSpec\x12.\n\x07siteNum\x18\x01 \x01(\x0b\x32\x1b.allego.SignalSpec.SiteNumLH\x00\x12\x34\n\nntvChanIdx\x18\x02 \x01(\x0b\x32\x1e.allego.SignalSpec.NtvChanIdxLH\x00\x1a\x1b\n\x08SiteNumL\x12\x0f\n\x07siteNum\x18\x01 \x03(\x05\x1a!\n\x0bNtvChanIdxL\x12\x12\n\nntvChanIdx\x18\x01 \x03(\x05\x42\n\n\x08siteDesc\"\xf9\x05\n\rChannelRecord\x12\x10\n\x08\x63hanName\x18\x01 \x02(\t\x12$\n\x08\x63hanType\x18\x02 \x02(\x0e\x32\x12.allego.SignalType\x12\x12\n\nntvChanIdx\x18\x03 \x02(\x05\x12\x0f\n\x07siteNum\x18\x04 \x02(\x05\x12\x15\n\rcolorGroupIdx\x18\x05 \x02(\x05\x12\x12\n\nisSelected\x18\x06 \x02(\x08\x12\x13\n\x0bisAudioLeft\x18\x07 \x02(\x08\x12\x1a\n\x04port\x18\x08 \x02(\x0e\x32\x0c.allego.Port\x12\x11\n\tsiteShape\x18\t \x02(\t\x12\x10\n\x08siteCtrX\x18\n \x02(\x01\x12\x10\n\x08siteCtrY\x18\x0b \x02(\x01\x12\x10\n\x08siteCtrZ\x18\x0c \x02(\x01\x12\x13\n\x0bsiteLimXMin\x18\r \x02(\x01\x12\x13\n\x0bsiteLimXMax\x18\x0e \x02(\x01\x12\x13\n\x0bsiteLimYMin\x18\x0f \x02(\x01\x12\x13\n\x0bsiteLimYMax\x18\x10 \x02(\x01\x12\x13\n\x0bsiteLimZMin\x18\x11 \x02(\x01\x12\x13\n\x0bsiteLimZMax\x18\x12 \x02(\x01\x12\x13\n\x0bsiteCtrTcsX\x18\x13 \x02(\x01\x12\x13\n\x0bsiteCtrTcsY\x18\x14 \x02(\x01\x12\x13\n\x0bsiteCtrTcsZ\x18\x15 \x02(\x01\x12\x13\n\x0bsensorUnits\x18\x16 \x02(\t\x12\x0e\n\x06\x61\x62sIdx\x18\x17 \x02(\x05\x12\x14\n\x0cisAudioRight\x18\x18 \x02(\x08\x12\x12\n\nsysChanIdx\x18\x19 \x02(\x05\x12\x17\n\x0fsiteAreaMicron2\x18\x1a \x01(\x01\x12\x11\n\tscsToTcsX\x18\x1b \x01(\x01\x12\x11\n\tscsToTcsY\x18\x1c \x01(\x01\x12\x11\n\tscsToTcsZ\x18\x1d \x01(\x01\x12\x10\n\x08sensorID\x18\x1e \x01(\t\x12\x0f\n\x07probeID\x18\x1f \x01(\t\x12\x13\n\x0bheadstageID\x18  \x01(\t\x12\x13\n\x0b\x64\x61tasetRidx\x18! \x01(\x05\x12\x13\n\x0b\x64\x61tasetAidx\x18\" \x01(\x05\x12\x13\n\x0bntvChanName\x18# \x01(\t\x12\x11\n\tsensorUID\x18$ \x01(\t\"\x1f\n\x07XYCoord\x12\t\n\x01x\x18\x01 \x02(\x01\x12\t\n\x01y\x18\x02 \x02(\x01\"+\n\x08XYZCoord\x12\t\n\x01x\x18\x01 \x02(\x01\x12\t\n\x01y\x18\x02 \x02(\x01\x12\t\n\x01z\x18\x03 \x02(\x01\"\xc2\x02\n\x06Sensor\x12\x0f\n\x07probeId\x18\x01 \x02(\t\x12\x13\n\x0bheadstageId\x18\x02 \x02(\t\x12+\n\twireframe\x18\x03 \x02(\x0b\x32\x18.allego.Sensor.WireFrame\x12\x0c\n\x04xMin\x18\x04 \x02(\x01\x12\x0c\n\x04xMax\x18\x05 \x02(\x01\x12\x0c\n\x04yMin\x18\x06 \x02(\x01\x12\x0c\n\x04yMax\x18\x07 \x02(\x01\x12+\n\x08position\x18\x08 \x02(\x0b\x32\x19.allego.SensorPositionTcs\x12\x11\n\tsensorUID\x18\t \x01(\t\x1am\n\tWireFrame\x12\x1c\n\x03vtx\x18\x01 \x03(\x0b\x32\x0f.allego.XYCoord\x12 \n\x07vtxXlim\x18\x02 \x02(\x0b\x32\x0f.allego.XYCoord\x12 \n\x07vtxYlim\x18\x03 \x02(\x0b\x32\x0f.allego.XYCoord\"\x98\x02\n\x0eSensorPortSpec\x12\x1f\n\x07sensorA\x18\x01 \x01(\x0b\x32\x0e.allego.Sensor\x12\x1f\n\x07sensorB\x18\x02 \x01(\x0b\x32\x0e.allego.Sensor\x12\x1f\n\x07sensorC\x18\x03 \x01(\x0b\x32\x0e.allego.Sensor\x12\x1f\n\x07sensorD\x18\x04 \x01(\x0b\x32\x0e.allego.Sensor\x12\x1f\n\x07sensorE\x18\x05 \x01(\x0b\x32\x0e.allego.Sensor\x12\x1f\n\x07sensorF\x18\x06 \x01(\x0b\x32\x0e.allego.Sensor\x12\x1f\n\x07sensorG\x18\x07 \x01(\x0b\x32\x0e.allego.Sensor\x12\x1f\n\x07sensorH\x18\x08 \x01(\x0b\x32\x0e.allego.Sensor\"t\n\x10SignalGroupUnits\x12\x32\n\x05units\x18\x01 \x03(\x0b\x32#.allego.SignalGroupUnits.UnitsEntry\x1a,\n\nUnitsEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\"\xeb\x01\n\x0bSignalGroup\x12\'\n\x08\x63hannels\x18\x01 \x03(\x0b\x32\x15.allego.ChannelRecord\x12.\n\x0esensorPortSpec\x18\x02 \x02(\x0b\x32\x16.allego.SensorPortSpec\x12\x12\n\ndatasetUID\x18\x03 \x01(\t\x12\x10\n\x08sampFreq\x18\x04 \x01(\x01\x12\x13\n\x0bsourceLabel\x18\x05 \x01(\t\x12\x19\n\x11neighborMaxRadius\x18\x06 \x01(\x01\x12-\n\x0bsignalUnits\x18\x07 \x01(\x0b\x32\x18.allego.SignalGroupUnits\"\x87\x01\n\x18\x43reateSignalGroupRequest\x12\x16\n\x0e\x64\x61taSourceName\x18\x01 \x02(\t\x12\x16\n\x0e\x64\x61taSourcePath\x18\x02 \x02(\t\x12$\n\x04type\x18\x03 \x02(\x0e\x32\x16.allego.RadixFileTypes\x12\x15\n\rstreamGroupId\x18\x04 \x02(\t\"s\n\tSubOpSort\x12)\n\x04sort\x18\x01 \x03(\x0e\x32\x1b.allego.SubOpSort.SortField\";\n\tSortField\x12\x0e\n\nSITE_CTR_X\x10\x00\x12\x0e\n\nSITE_CTR_Y\x10\x01\x12\x0e\n\nSITE_CTR_Z\x10\x02\"\x92\x03\n\x18UpdateSignalGroupRequest\x12\x15\n\rstreamGroupId\x18\x01 \x02(\t\x12=\n\toperation\x18\x02 \x02(\x0e\x32*.allego.UpdateSignalGroupRequest.Operation\x12\x42\n\taddRemove\x18\x03 \x01(\x0e\x32-.allego.UpdateSignalGroupRequest.SubOperationH\x00\x12#\n\x06sortOp\x18\x04 \x01(\x0b\x32\x11.allego.SubOpSortH\x00\x12\x16\n\nntvChanIdx\x18\x05 \x03(\x05\x42\x02\x10\x01\x12&\n\nsignalType\x18\x06 \x02(\x0e\x32\x12.allego.SignalType\"B\n\tOperation\x12\t\n\x05\x43OLOR\x10\x00\x12\n\n\x06SELECT\x10\x01\x12\x14\n\x10\x44\x45PRECATED_AUDIO\x10\x02\x12\x08\n\x04SORT\x10\x03\"#\n\x0cSubOperation\x12\x07\n\x03\x41\x44\x44\x10\x00\x12\n\n\x06REMOVE\x10\x01\x42\x0e\n\x0csubOperation\"\x0f\n\rLicenseStatus\"u\n\x12SetDSPGroupRequest\x12\x15\n\rstreamGroupId\x18\x01 \x02(\t\x12\"\n\x05stage\x18\x02 \x02(\x0e\x32\x13.allego.FilterStage\x12$\n\tdspParams\x18\x03 \x03(\x0b\x32\x11.allego.DSPParams\"\xf2\x02\n\tDSPParams\x12\x1d\n\x04type\x18\x01 \x02(\x0e\x32\x0f.allego.DSPType\x12\"\n\x05stage\x18\x02 \x02(\x0e\x32\x13.allego.FilterStage\x12\x0e\n\x04\x66req\x18\x03 \x01(\x01H\x00\x12\x36\n\x0c\x66reqSpecBand\x18\x04 \x01(\x0b\x32\x1e.allego.DSPParams.FreqSpecBandH\x00\x12\x17\n\rrefNtvChanIdx\x18\x08 \x01(\x05H\x00\x12\x16\n\x0enotchBandwidth\x18\x05 \x01(\x01\x12\x11\n\tuserLabel\x18\x06 \x02(\t\x12\x1a\n\x04port\x18\x07 \x02(\x0e\x32\x0c.allego.Port\x12\x18\n\x10targetNtvChanIdx\x18\t \x01(\x01\x12\r\n\x05isAux\x18\n \x02(\x08\x12\x12\n\nauxChanIdx\x18\x0b \x01(\x05\x1a\x31\n\x0c\x46reqSpecBand\x12\x0f\n\x07lowFreq\x18\x01 \x02(\x01\x12\x10\n\x08highFreq\x18\x02 \x02(\x01\x42\n\n\x08\x66reqSpec\"\x85\x01\n\x08\x44SPGroup\x12#\n\x08hardware\x18\x01 \x03(\x0b\x32\x11.allego.DSPParams\x12)\n\x0esoftwareStage1\x18\x02 \x03(\x0b\x32\x11.allego.DSPParams\x12)\n\x0esoftwareStage2\x18\x03 \x03(\x0b\x32\x11.allego.DSPParams\"k\n\x10SetSensorRequest\x12\x15\n\rstreamGroupId\x18\x01 \x02(\t\x12\x1a\n\x04port\x18\x02 \x02(\x0e\x32\x0c.allego.Port\x12\x0f\n\x07probeId\x18\x03 \x02(\t\x12\x13\n\x0bheadstageId\x18\x04 \x02(\t\"m\n\x11SensorPositionTcs\x12\t\n\x01X\x18\x02 \x02(\x01\x12\t\n\x01Y\x18\x03 \x02(\x01\x12\t\n\x01Z\x18\x04 \x02(\x01\x12\x11\n\tRingAngle\x18\x05 \x02(\x01\x12\x12\n\nAxialAngle\x18\x06 \x02(\x01\x12\x10\n\x08\x41rcAngle\x18\x07 \x02(\x01\"}\n\x1bSetSensorPositionTcsRequest\x12\x15\n\rstreamGroupId\x18\x01 \x02(\t\x12\x1a\n\x04port\x18\x02 \x02(\x0e\x32\x0c.allego.Port\x12+\n\x08position\x18\x03 \x02(\x0b\x32\x19.allego.SensorPositionTcs\"F\n\x0fSitePositionTcs\x12\x12\n\nntvChanIdx\x18\x01 \x02(\x05\x12\t\n\x01X\x18\x02 \x02(\x01\x12\t\n\x01Y\x18\x03 \x02(\x01\x12\t\n\x01Z\x18\x04 \x02(\x01\"\x7f\n\x1aSetSitePositionsTcsRequest\x12\x15\n\rstreamGroupId\x18\x01 \x02(\t\x12\x1a\n\x04port\x18\x02 \x02(\x0e\x32\x0c.allego.Port\x12.\n\rsitePositions\x18\x03 \x03(\x0b\x32\x17.allego.SitePositionTcs\"Y\n\x17\x46\x65\x61tureStartStopRequest\x12\x0e\n\x06nodeId\x18\x01 \x02(\t\x12.\n\x0e\x66\x65\x61tureLicense\x18\x02 \x02(\x0e\x32\x16.allego.FeatureLicense\"!\n\x0cPrivacyReply\x12\x11\n\tisPrivate\x18\x02 \x02(\x08\"&\n\x11SetPrivacyRequest\x12\x11\n\tisPrivate\x18\x01 \x02(\x08\"7\n\x0b\x44\x65nseMatrix\x12\x0c\n\x04rows\x18\x01 \x02(\x03\x12\x0c\n\x04\x63ols\x18\x02 \x02(\x03\x12\x0c\n\x04\x64\x61ta\x18\x03 \x02(\x0c\"Y\n\x0bKpiMetricID\x12$\n\x04mode\x18\x01 \x02(\x0e\x32\x16.allego.KpiMetricsMode\x12$\n\x04name\x18\x02 \x02(\x0e\x32\x16.allego.KpiMetricsEnum\"W\n\tTimeRange\x12\x14\n\x0ctimeRangeSec\x18\x01 \x03(\x01\x12\x11\n\ttimestamp\x18\x02 \x03(\x03\x12\n\n\x02\x66s\x18\x03 \x02(\x01\x12\x15\n\rwallTimeStart\x18\x04 \x01(\t\"\x9c\x01\n\tBundleReq\x12\x0f\n\x07ntvIdxs\x18\x01 \x03(\x05\x12\x1d\n\x02tR\x18\x02 \x02(\x0b\x32\x11.allego.TimeRange\x12)\n\x07selMode\x18\x03 \x02(\x0e\x32\x18.allego.TimeRangeSelMode\x12$\n\x07metrics\x18\x04 \x03(\x0b\x32\x13.allego.KpiMetricID\x12\x0e\n\x06isTail\x18\x05 \x02(\x08\"q\n\rKpiMetricsReq\x12\x15\n\rstreamGroupId\x18\x01 \x02(\t\x12)\n\nbundleName\x18\x02 \x02(\x0e\x32\x15.allego.KpiBundleName\x12\x1e\n\x03\x61rg\x18\x03 \x02(\x0b\x32\x11.allego.BundleReq\"\x83\x03\n\x0eKpiMetricsData\x12\x12\n\nnumPackets\x18\x01 \x02(\x03\x12\x0f\n\x07numSigs\x18\x02 \x02(\x03\x12\x12\n\nnumMetrics\x18\x03 \x02(\x03\x12#\n\x06metric\x18\x04 \x03(\x0b\x32\x13.allego.KpiMetricID\x12\x0f\n\x07pktIdxs\x18\x05 \x03(\x03\x12 \n\x03val\x18\x06 \x02(\x0b\x32\x13.allego.DenseMatrix\x12\x35\n\tstatsPkts\x18\x07 \x02(\x0b\x32\".allego.KpiMetricsData.MetricStats\x12\x31\n\x05stats\x18\x08 \x02(\x0b\x32\".allego.KpiMetricsData.MetricStats\x12\x14\n\x0cpacketDurSec\x18\t \x02(\x01\x12\x1d\n\x02tR\x18\n \x02(\x0b\x32\x11.allego.TimeRange\x1a\x41\n\x0bMetricStats\x12\x0c\n\x04mean\x18\x01 \x03(\x01\x12\n\n\x02sD\x18\x02 \x03(\x01\x12\x0b\n\x03max\x18\x03 \x03(\x01\x12\x0b\n\x03min\x18\x04 \x03(\x01\"w\n\x16KpiBundlePacketMetrics\x12\x0f\n\x07ntvIdxs\x18\x01 \x03(\x05\x12#\n\x07sigType\x18\x02 \x02(\x0e\x32\x12.allego.SignalType\x12\'\n\x07metrics\x18\x04 \x02(\x0b\x32\x16.allego.KpiMetricsData\"S\n\nKpiMetrics\x12\x15\n\rstreamGroupId\x18\x01 \x02(\t\x12.\n\x06\x62undle\x18\x02 \x02(\x0b\x32\x1e.allego.KpiBundlePacketMetrics\"e\n\x11KpiControlRequest\x12\x15\n\rstreamGroupId\x18\x01 \x02(\t\x12#\n\x04name\x18\x02 \x02(\x0e\x32\x15.allego.KpiBundleName\x12\x14\n\x0cisAllBundles\x18\x03 \x01(\x08\"m\n\x19SetKpiUpdatePeriodRequest\x12#\n\x04name\x18\x01 \x02(\x0e\x32\x15.allego.KpiBundleName\x12\x15\n\rstreamGroupId\x18\x02 \x01(\t\x12\x14\n\x0cupdatePeriod\x18\x03 \x02(\x01\"\xaf\x02\n\x16SetKpiThresholdRequest\x12#\n\x04name\x18\x01 \x02(\x0e\x32\x15.allego.KpiBundleName\x12\x15\n\rstreamGroupId\x18\x02 \x01(\t\x12\x13\n\x0bisUpdatePos\x18\x03 \x02(\x08\x12\x12\n\nisClearPos\x18\x04 \x02(\x08\x12\x0f\n\x07isSdPos\x18\x05 \x02(\x08\x12\x10\n\x08levelPos\x18\x06 \x02(\x01\x12\x13\n\x0bisUpdateNeg\x18\x07 \x02(\x08\x12\x12\n\nisClearNeg\x18\x08 \x02(\x08\x12\x0f\n\x07isSdNeg\x18\t \x02(\x08\x12\x10\n\x08levelNeg\x18\n \x02(\x01\x12\x16\n\nntvChanIdx\x18\x0b \x03(\x05\x42\x02\x10\x01\x12)\n\x07thrName\x18\x0c \x01(\x0e\x32\x18.allego.KpiThresholdName\"\xd4\x01\n\x18SetKpiEventDetectRequest\x12#\n\x04name\x18\x01 \x02(\x0e\x32\x15.allego.KpiBundleName\x12\x15\n\rstreamGroupId\x18\x02 \x01(\t\x12\x15\n\risEventDetect\x18\x03 \x02(\x08\x12\x16\n\nntvChanIdx\x18\x04 \x03(\x05\x42\x02\x10\x01\x12)\n\x07thrName\x18\x05 \x01(\x0e\x32\x18.allego.KpiThresholdName\x12\x10\n\x08isPosThr\x18\x06 \x01(\x08\x12\x10\n\x08isNegThr\x18\x07 \x01(\x08\"\xa7\x01\n\x18SetKpiEventShadowRequest\x12#\n\x04name\x18\x01 \x02(\x0e\x32\x15.allego.KpiBundleName\x12\x15\n\rstreamGroupId\x18\x02 \x01(\t\x12\x0e\n\x06shadow\x18\x03 \x02(\x01\x12\x16\n\nntvChanIdx\x18\x04 \x03(\x05\x42\x02\x10\x01\x12\'\n\x07wdwName\x18\x05 \x01(\x0e\x32\x16.allego.KpiWindowdName\"\xb8\x01\n\x18SetKpiEventWindowRequest\x12#\n\x04name\x18\x01 \x02(\x0e\x32\x15.allego.KpiBundleName\x12\x15\n\rstreamGroupId\x18\x02 \x01(\t\x12\x0e\n\x06preThr\x18\x03 \x02(\x01\x12\x0f\n\x07postThr\x18\x04 \x02(\x01\x12\x16\n\nntvChanIdx\x18\x05 \x03(\x05\x42\x02\x10\x01\x12\'\n\x07wdwName\x18\x06 \x01(\x0e\x32\x16.allego.KpiWindowdName\"Q\n\x13GetKpiStatusRequest\x12#\n\x04name\x18\x01 \x02(\x0e\x32\x15.allego.KpiBundleName\x12\x15\n\rstreamGroupId\x18\x02 \x02(\t\"\xac\x02\n\x0eKpiStatusReply\x12#\n\x04name\x18\x01 \x02(\x0e\x32\x15.allego.KpiBundleName\x12\x15\n\rstreamGroupId\x18\x02 \x02(\t\x12\x11\n\ttimeRange\x18\x03 \x03(\x01\x12\x16\n\x0etimestampRange\x18\x04 \x03(\x03\x12\x12\n\nnumPackets\x18\x05 \x02(\x03\x12\x11\n\tpacketDur\x18\x06 \x02(\x01\x12\x14\n\x0cupdatePeriod\x18\x07 \x02(\x01\x12\x13\n\x0bpersistence\x18\x08 \x02(\x01\x12\x0c\n\x04\x62\x65ta\x18\t \x02(\x01\x12\x34\n\x11sigKpiParamRecord\x18\n \x03(\x0b\x32\x19.allego.SigKpiParamRecord\x12\x1d\n\x15isTrackingSignalCache\x18\x0b \x02(\x08\"\xe6\x02\n\x11SigKpiParamRecord\x12\x15\n\risEventDetect\x18\x01 \x02(\x08\x12\x12\n\nntvChanIdx\x18\x02 \x02(\x05\x12\x11\n\teventThr0\x18\x03 \x02(\x01\x12\x11\n\teventThr1\x18\x04 \x02(\x01\x12\x13\n\x0b\x65ventThrSd0\x18\x05 \x02(\x01\x12\x13\n\x0b\x65ventThrSd1\x18\x06 \x02(\x01\x12\x11\n\tpreThrPts\x18\x07 \x02(\x05\x12\x12\n\npostThrPts\x18\x08 \x02(\x05\x12\x11\n\tevtDurPts\x18\t \x02(\x05\x12\x11\n\tshadowPts\x18\n \x02(\x05\x12\x0e\n\x06preThr\x18\x0b \x02(\x01\x12\x0f\n\x07postThr\x18\x0c \x02(\x01\x12\x0e\n\x06\x65vtDur\x18\r \x02(\x01\x12\x0e\n\x06shadow\x18\x0e \x02(\x01\x12\x11\n\tisSetThr0\x18\x0f \x02(\x08\x12\x11\n\tisSetThr1\x18\x10 \x02(\x08\x12\x10\n\x08isSDThr0\x18\x11 \x02(\x08\x12\x10\n\x08isSDThr1\x18\x12 \x02(\x08\"J\n\x0e\x41nnotateBundle\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05label\x18\x02 \x01(\t\x12\r\n\x05notes\x18\x03 \x01(\t\x12\x0c\n\x04tags\x18\x04 \x01(\t\"]\n\x0fProjectMetadata\x12\x12\n\nprojectUID\x18\x01 \x01(\t\x12\x0f\n\x07\x63\x61seUID\x18\x02 \x01(\t\x12\x10\n\x08trialUID\x18\x03 \x01(\t\x12\x13\n\x0b\x61nnotateUID\x18\x04 \x03(\t\"3\n\x16SensorExtendedMetadata\x12\x19\n\x11sensorInstanceUID\x18\x01 \x01(\t\"%\n\x0fGonumMatrixList\x12\x12\n\nmdataBytes\x18\x01 \x02(\x0c\"6\n\x0fRadixMatrixList\x12#\n\x06matrix\x18\x01 \x03(\x0b\x32\x13.allego.RadixMatrix\"*\n\x0bRadixMatrix\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\x02\x12\r\n\x05shape\x18\x02 \x03(\x05\"8\n\x10RadixSignalsList\x12$\n\x06matrix\x18\x01 \x03(\x0b\x32\x14.allego.RadixSignals\"\xa9\x01\n\x0cRadixSignals\x12\x10\n\x08sampFreq\x18\x01 \x02(\x01\x12 \n\x03pri\x18\x02 \x02(\x0b\x32\x13.allego.RadixMatrix\x12 \n\x03\x61ux\x18\x03 \x02(\x0b\x32\x13.allego.RadixMatrix\x12 \n\x03\x64in\x18\x04 \x02(\x0b\x32\x13.allego.RadixMatrix\x12!\n\x04\x64out\x18\x05 \x02(\x0b\x32\x13.allego.RadixMatrix\"\x19\n\x0cVectorString\x12\t\n\x01x\x18\x01 \x03(\t\"\x1a\n\rVectorFloat64\x12\t\n\x01x\x18\x01 \x03(\x01\"G\n\x12VectorSliceFloat64\x12\"\n\x03vec\x18\x01 \x03(\x0b\x32\x15.allego.VectorFloat64\x12\r\n\x05label\x18\x02 \x01(\t\"\xde\x02\n\x14LogsysKpiStatusReply\x12\x1f\n\x05portA\x18\x01 \x02(\x0b\x32\x10.allego.KpiCache\x12\x1f\n\x05portB\x18\x02 \x02(\x0b\x32\x10.allego.KpiCache\x12\x1f\n\x05portC\x18\x03 \x02(\x0b\x32\x10.allego.KpiCache\x12\x1f\n\x05portD\x18\x04 \x02(\x0b\x32\x10.allego.KpiCache\x12\x1f\n\x05portE\x18\x05 \x02(\x0b\x32\x10.allego.KpiCache\x12\x1f\n\x05portF\x18\x06 \x02(\x0b\x32\x10.allego.KpiCache\x12\x1f\n\x05portG\x18\x07 \x02(\x0b\x32\x10.allego.KpiCache\x12\x1f\n\x05portH\x18\x08 \x02(\x0b\x32\x10.allego.KpiCache\x12\x1e\n\x04\x61ux0\x18\t \x02(\x0b\x32\x10.allego.KpiCache\x12\x1e\n\x04\x61ux1\x18\n \x02(\x0b\x32\x10.allego.KpiCache\"\xfc\x02\n\x08KpiCache\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x10\n\x08sampFreq\x18\x02 \x02(\x01\x12\x12\n\npersistDur\x18\x03 \x02(\x01\x12\x15\n\rminNumPackets\x18\x04 \x02(\x05\x12\x11\n\tsizeBytes\x18\x05 \x02(\x05\x12\x12\n\nnumPackets\x18\x06 \x02(\x05\x12\x0e\n\x06tRange\x18\x07 \x03(\x01\x12\x0f\n\x07tsRange\x18\x08 \x03(\x03\x12\x15\n\rmeanPacketDur\x18\t \x02(\x01\x12\x19\n\x11meanCalcPacketDur\x18\n \x02(\x01\x12\x11\n\tpacketDur\x18\x0b \x02(\x01\x12\x1d\n\x15totalPacketsProcessed\x18\x0c \x02(\r\x12\x12\n\nsignalType\x18\r \x02(\t\x12\x12\n\nnumPriSigs\x18\x0e \x02(\x05\x12\x12\n\nnumAuxSigs\x18\x0f \x02(\x05\x12\x12\n\nnumDinSigs\x18\x10 \x02(\x05\x12\x13\n\x0bnumDoutSigs\x18\x11 \x02(\x05\x12\x14\n\x0cupdatePeriod\x18\x12 \x02(\x01\"\xfa\x02\n\x12LogsysKpiTailReply\x12\"\n\x05portA\x18\x01 \x01(\x0b\x32\x13.allego.KpiPortInfo\x12\"\n\x05portB\x18\x02 \x01(\x0b\x32\x13.allego.KpiPortInfo\x12\"\n\x05portC\x18\x03 \x01(\x0b\x32\x13.allego.KpiPortInfo\x12\"\n\x05portD\x18\x04 \x01(\x0b\x32\x13.allego.KpiPortInfo\x12\"\n\x05portE\x18\x05 \x01(\x0b\x32\x13.allego.KpiPortInfo\x12\"\n\x05portF\x18\x06 \x01(\x0b\x32\x13.allego.KpiPortInfo\x12\"\n\x05portG\x18\x07 \x01(\x0b\x32\x13.allego.KpiPortInfo\x12\"\n\x05portH\x18\x08 \x01(\x0b\x32\x13.allego.KpiPortInfo\x12!\n\x04\x61ux0\x18\t \x01(\x0b\x32\x13.allego.KpiPortInfo\x12!\n\x04\x61ux1\x18\n \x01(\x0b\x32\x13.allego.KpiPortInfo\"3\n\x0bKpiPortInfo\x12$\n\x07kpiTail\x18\x01 \x03(\x0b\x32\x13.allego.KpiTailRows\"\xf4\x02\n\x0bKpiTailRows\x12\x10\n\x08wallTime\x18\x01 \x02(\t\x12\x11\n\ttimeRange\x18\x02 \x02(\x01\x12\x14\n\x0clocalSigType\x18\x03 \x02(\t\x12\x12\n\nntvChanIdx\x18\x04 \x02(\x03\x12\x0b\n\x03\x64ur\x18\x05 \x02(\x01\x12\x0e\n\x06stdDev\x18\x06 \x02(\x01\x12\x0f\n\x07\x63StdDev\x18\x07 \x02(\x01\x12\x11\n\tabsEvtAmp\x18\x08 \x02(\x01\x12\x12\n\ncabsEvtAmp\x18\t \x02(\x01\x12\x0b\n\x03SNR\x18\n \x02(\x01\x12\x0c\n\x04\x63SNR\x18\x0b \x02(\x01\x12\x0f\n\x07numEvts\x18\x0c \x02(\x05\x12\x10\n\x08\x63numEvts\x18\r \x02(\x05\x12\x0f\n\x07\x65vtRate\x18\x0e \x02(\x01\x12\x10\n\x08\x63\x45vtRate\x18\x0f \x02(\x01\x12\x0b\n\x03max\x18\x10 \x02(\x01\x12\x0c\n\x04\x63max\x18\x11 \x02(\x01\x12\x0b\n\x03min\x18\x12 \x02(\x01\x12\x0c\n\x04\x63min\x18\x13 \x02(\x01\x12\x14\n\x0cmeanPosPkAmp\x18\x14 \x02(\x01\x12\x14\n\x0cmeanNegPkAmp\x18\x15 \x02(\x01\"*\n\x18WarehouseHealthcheckSpec\x12\x0e\n\x06\x65rrMsg\x18\x01 \x01(\t\"(\n\x19OutfitterGetDeviceRequest\x12\x0b\n\x03key\x18\x01 \x01(\t\"\x9e\x01\n\x11SensorCompRequest\x12 \n\x05probe\x18\x01 \x03(\x0b\x32\x11.allego.ProbeDesc\x12(\n\theadstage\x18\x02 \x03(\x0b\x32\x15.allego.HeadstageDesc\x12\x16\n\x0eisIncludeModel\x18\x03 \x01(\x08\x12\x19\n\x11isIncludeMetadata\x18\x04 \x01(\x08\x12\n\n\x02iD\x18\x05 \x01(\t\"z\n\x19RegisterSensorCompRequest\x12 \n\x05probe\x18\x01 \x03(\x0b\x32\x11.allego.ProbeDesc\x12(\n\theadstage\x18\x02 \x03(\x0b\x32\x15.allego.HeadstageDesc\x12\x11\n\tprofileID\x18\x03 \x02(\t\"\x92\x01\n\x1dSaveSensorCompInstanceRequest\x12 \n\x05probe\x18\x01 \x01(\x0b\x32\x11.allego.ProbeDesc\x12(\n\theadstage\x18\x02 \x01(\x0b\x32\x15.allego.HeadstageDesc\x12\x19\n\x11isIncludeMetadata\x18\x04 \x01(\x08\x12\n\n\x02iD\x18\x05 \x01(\t\"&\n\tProbeDesc\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x0b\n\x03uID\x18\x02 \x01(\t\"*\n\rHeadstageDesc\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x0b\n\x03uID\x18\x02 \x01(\t\"`\n\x12GetSensorCompReply\x12 \n\x05probe\x18\x01 \x03(\x0b\x32\x11.allego.ProbeSpec\x12(\n\theadstage\x18\x02 \x03(\x0b\x32\x15.allego.HeadstageSpec\"x\n\tProbeSpec\x12\x1f\n\x04\x64\x65sc\x18\x01 \x02(\x0b\x32\x11.allego.ProbeDesc\x12!\n\x05model\x18\x02 \x01(\x0b\x32\x12.allego.ProbeModel\x12\'\n\x08metaData\x18\x03 \x01(\x0b\x32\x15.allego.ProbeMetaData\"\x88\x01\n\rHeadstageSpec\x12#\n\x04\x64\x65sc\x18\x01 \x02(\x0b\x32\x15.allego.HeadstageDesc\x12%\n\x05model\x18\x02 \x01(\x0b\x32\x16.allego.HeadstageModel\x12+\n\x08metaData\x18\x03 \x01(\x0b\x32\x19.allego.HeadstageMetaData\"\xce\x04\n\nProbeModel\x12\n\n\x02iD\x18\x01 \x02(\t\x12.\n\x04site\x18\x02 \x03(\x0b\x32 .allego.ProbeModel.ProbeSiteDesc\x12\x34\n\twireframe\x18\x03 \x02(\x0b\x32!.allego.ProbeModel.ProbeWireFrame\x12\x34\n\x0esiteOverallMin\x18\x05 \x02(\x0b\x32\x1c.allego.ProbeModel.ProbePtXY\x12\x34\n\x0esiteOverallMax\x18\x06 \x02(\x0b\x32\x1c.allego.ProbeModel.ProbePtXY\x1a\xde\x01\n\rProbeSiteDesc\x12\x0c\n\x04\x61rea\x18\x01 \x02(\x01\x12\x0f\n\x07\x63\x65nterX\x18\x02 \x02(\x01\x12\x0f\n\x07\x63\x65nterY\x18\x03 \x02(\x01\x12\x0f\n\x07\x63\x65nterZ\x18\x04 \x02(\x01\x12\x11\n\tlimitXMax\x18\x05 \x02(\x01\x12\x11\n\tlimitXMin\x18\x06 \x02(\x01\x12\x11\n\tlimitYMax\x18\x07 \x02(\x01\x12\x11\n\tlimitYMin\x18\x08 \x02(\x01\x12\x11\n\tlimitZMax\x18\t \x02(\x01\x12\x11\n\tlimitZMin\x18\n \x02(\x01\x12\x0b\n\x03num\x18\x0b \x02(\x03\x12\r\n\x05shape\x18\x0c \x02(\t\x1a^\n\x0eProbeWireFrame\x12,\n\x06vertex\x18\x01 \x03(\x0b\x32\x1c.allego.ProbeModel.ProbePtXY\x12\x0e\n\x06limitX\x18\x02 \x03(\x01\x12\x0e\n\x06limitY\x18\x03 \x03(\x01\x1a!\n\tProbePtXY\x12\t\n\x01x\x18\x01 \x02(\x01\x12\t\n\x01y\x18\x02 \x02(\x01\"_\n\rProbeMetaData\x12\x11\n\tprobeName\x18\x01 \x02(\t\x12\x10\n\x08numSites\x18\x02 \x02(\x05\x12\x13\n\x0b\x63\x61talogTags\x18\x03 \x02(\t\x12\x14\n\x0cinstanceTags\x18\x04 \x02(\t\"\x84\x01\n\x0eHeadstageModel\x12\n\n\x02iD\x18\x01 \x02(\t\x12\x31\n\x04rows\x18\x02 \x03(\x0b\x32#.allego.HeadstageModel.HeadstageRow\x1a\x33\n\x0cHeadstageRow\x12\x12\n\nntvChanIdx\x18\x01 \x02(\x03\x12\x0f\n\x07siteNum\x18\x02 \x02(\x03\"\x13\n\x11HeadstageMetaData\"5\n\x0bUserProfile\x12\x11\n\tprofileID\x18\x01 \x02(\t\x12\x13\n\x0blicenseCode\x18\x02 \x02(\t\"B\n\x16GetCurrentProfileReply\x12(\n\x0buserProfile\x18\x01 \x02(\x0b\x32\x13.allego.UserProfile\"@\n\x13GetAllProfilesReply\x12)\n\x0cuserProfiles\x18\x01 \x03(\x0b\x32\x13.allego.UserProfile\"-\n\x18SetCurrentProfileRequest\x12\x11\n\tprofileID\x18\x01 \x02(\t\"\x88\x01\n\x14ManageNodeOrgPayload\x12\r\n\x05orgID\x18\x01 \x01(\t\x12\x0f\n\x07orgName\x18\x02 \x01(\t\x12\x14\n\x0corgShortName\x18\x03 \x01(\t\x12\x0c\n\x04\x63ity\x18\x04 \x01(\t\x12\x0f\n\x07\x63ountry\x18\x05 \x01(\t\x12\r\n\x05state\x18\x06 \x01(\t\x12\x0c\n\x04tags\x18\x07 \x01(\t\"i\n\x14ManageNodeOrgRequest\x12\"\n\x03\x63md\x18\x01 \x02(\x0e\x32\x15.allego.ManageNodeCmd\x12-\n\x07payload\x18\x02 \x03(\x0b\x32\x1c.allego.ManageNodeOrgPayload\"S\n\x12ManageNodeOrgReply\x12-\n\x07payload\x18\x01 \x03(\x0b\x32\x1c.allego.ManageNodeOrgPayload\x12\x0e\n\x06\x65rrMsg\x18\x02 \x01(\t\"\xa2\x01\n\x14ManageNodeLabPayload\x12\r\n\x05labID\x18\x01 \x01(\t\x12\x0f\n\x07labDesc\x18\x02 \x01(\t\x12\x0c\n\x04\x64\x65pt\x18\x03 \x01(\t\x12\x14\n\x0corganization\x18\x04 \x01(\t\x12\x0f\n\x07\x61\x64minID\x18\x05 \x01(\t\x12\x11\n\tlabHeadID\x18\x06 \x01(\t\x12\x14\n\x0clabManagerID\x18\x07 \x01(\t\x12\x0c\n\x04tags\x18\x08 \x01(\t\"i\n\x14ManageNodeLabRequest\x12\"\n\x03\x63md\x18\x01 \x02(\x0e\x32\x15.allego.ManageNodeCmd\x12-\n\x07payload\x18\x02 \x03(\x0b\x32\x1c.allego.ManageNodeLabPayload\"S\n\x12ManageNodeLabReply\x12-\n\x07payload\x18\x01 \x03(\x0b\x32\x1c.allego.ManageNodeLabPayload\x12\x0e\n\x06\x65rrMsg\x18\x02 \x01(\t\"\x99\x01\n\x15ManageNodeUserPayload\x12\x0e\n\x06userID\x18\x01 \x01(\t\x12\x0c\n\x04Name\x18\x02 \x01(\t\x12\x10\n\x08password\x18\x03 \x01(\x0c\x12\"\n\x04role\x18\x04 \x01(\x0e\x32\x14.allego.UserRoleType\x12\r\n\x05\x65mail\x18\x05 \x01(\t\x12\x0f\n\x07labName\x18\x06 \x01(\t\x12\x0c\n\x04tags\x18\x07 \x01(\t\"k\n\x15ManageNodeUserRequest\x12\"\n\x03\x63md\x18\x01 \x02(\x0e\x32\x15.allego.ManageNodeCmd\x12.\n\x07payload\x18\x02 \x03(\x0b\x32\x1d.allego.ManageNodeUserPayload\"U\n\x13ManageNodeUserReply\x12.\n\x07payload\x18\x01 \x03(\x0b\x32\x1d.allego.ManageNodeUserPayload\x12\x0e\n\x06\x65rrMsg\x18\x02 \x01(\t\"6\n\x13\x43\x61talogProbePayload\x12\x1f\n\x04spec\x18\x01 \x02(\x0b\x32\x11.allego.ProbeSpec\"]\n\x10ProbeNodeRequest\x12\"\n\x03\x63md\x18\x01 \x02(\x0e\x32\x15.allego.ManageNodeCmd\x12%\n\x07payload\x18\x02 \x03(\x0b\x32\x14.allego.ProbePayload\"7\n\x0eProbeNodeReply\x12%\n\x07payload\x18\x01 \x03(\x0b\x32\x14.allego.ProbePayload\"/\n\x0cProbePayload\x12\x1f\n\x04spec\x18\x01 \x02(\x0b\x32\x11.allego.ProbeSpec\"\xa5\x02\n\x0b\x45\x64gePayload\x12/\n\x06source\x18\x01 \x02(\x0b\x32\x1f.allego.EdgePayload.GenericNode\x12/\n\x06target\x18\x02 \x02(\x0b\x32\x1f.allego.EdgePayload.GenericNode\x12)\n\tedgeLabel\x18\x03 \x02(\x0e\x32\x16.allego.WorldEdgeLabel\x12-\n\tdirection\x18\x04 \x02(\x0e\x32\x1a.allego.WorldEdgeDirection\x1aZ\n\x0bGenericNode\x12%\n\x05label\x18\x01 \x02(\x0e\x32\x16.allego.WorldNodeLabel\x12\x11\n\tidPropKey\x18\x02 \x02(\t\x12\x11\n\tidPropVal\x18\x03 \x02(\t\"8\n\x10WorldEdgeRequest\x12$\n\x07payload\x18\x01 \x03(\x0b\x32\x13.allego.EdgePayload\"\x10\n\x0eWorldEdgeReply\"E\n\x11QueryWorldRequest\x12\"\n\x03\x63md\x18\x01 \x02(\x0e\x32\x15.allego.WorldQueryCmd\x12\x0c\n\x04\x61rgs\x18\x02 \x03(\t\"\xe6\x01\n\rQueryWorldRec\x12)\n\x03org\x18\x01 \x01(\x0b\x32\x1c.allego.ManageNodeOrgPayload\x12)\n\x03lab\x18\x02 \x01(\x0b\x32\x1c.allego.ManageNodeLabPayload\x12+\n\x04user\x18\x03 \x01(\x0b\x32\x1d.allego.ManageNodeUserPayload\x12-\n\x08\x63\x61tProbe\x18\x04 \x01(\x0b\x32\x1b.allego.CatalogProbePayload\x12#\n\x05probe\x18\x05 \x01(\x0b\x32\x14.allego.ProbePayload\"9\n\x0fQueryWorldReply\x12&\n\x07payload\x18\x01 \x03(\x0b\x32\x15.allego.QueryWorldRec\"/\n\x1aHighLowPassTransformParams\x12\x11\n\tfrequency\x18\x01 \x02(\x01\"B\n\x13\x42\x61ndTransformParams\x12\x14\n\x0clowFrequency\x18\x01 \x02(\x01\x12\x15\n\rhighFrequency\x18\x02 \x02(\x01\"F\n\x14NotchTransformParams\x12\x16\n\x0enotchFrequency\x18\x01 \x02(\x01\x12\x16\n\x0enotchBandwidth\x18\x02 \x02(\x01\"\x14\n\x12\x43\x41RTransformParams\"2\n\x19VirtualRefTransformParams\x12\x15\n\rrefNtvChanIdx\x18\x01 \x02(\x05\"K\n\x18PairedRefTransformParams\x12\x15\n\rrefNtvChanIdx\x18\x01 \x02(\x05\x12\x18\n\x10targetNtvChanIdx\x18\x02 \x02(\x05\"i\n\x1d\x44\x61taSourceSinkTransformParams\x12\x10\n\x08\x64srcName\x18\x01 \x02(\t\x12\x0c\n\x04path\x18\x02 \x02(\t\x12(\n\x08\x66ileType\x18\x03 \x02(\x0e\x32\x16.allego.RadixFileTypes\">\n\x18SliceTimeTransformParams\x12\x11\n\ttimeStart\x18\x01 \x02(\x01\x12\x0f\n\x07timeEnd\x18\x02 \x02(\x01\"3\n\x1cSliceChannelsTransformParams\x12\x13\n\x0bsysChanIdxs\x18\x01 \x03(\x05\"1\n\x19\x44ownsampleTransformParams\x12\x14\n\x0csampleFactor\x18\x01 \x02(\x05\" \n\x08Position\x12\t\n\x01x\x18\x01 \x02(\x05\x12\t\n\x01y\x18\x02 \x02(\x05\"\xd9\x05\n\rTransformNode\x12\n\n\x02id\x18\x01 \x02(\t\x12\'\n\x04type\x18\x02 \x02(\x0e\x32\x19.allego.TransformNodeType\x12\"\n\x08position\x18\x03 \x01(\x0b\x32\x10.allego.Position\x12\x0f\n\x07invalid\x18\x04 \x02(\x08\x12\x14\n\x0c\x65rrorMessage\x18\x05 \x01(\t\x12=\n\x11highLowPassParams\x18\x06 \x01(\x0b\x32\".allego.HighLowPassTransformParams\x12/\n\nbandParams\x18\x07 \x01(\x0b\x32\x1b.allego.BandTransformParams\x12\x31\n\x0bnotchParams\x18\x08 \x01(\x0b\x32\x1c.allego.NotchTransformParams\x12-\n\tcarParams\x18\t \x01(\x0b\x32\x1a.allego.CARTransformParams\x12;\n\x10virtualRefParams\x18\n \x01(\x0b\x32!.allego.VirtualRefTransformParams\x12\x39\n\x0fpairedRefParams\x18\x0b \x01(\x0b\x32 .allego.PairedRefTransformParams\x12\x43\n\x14\x64\x61tasourceSinkParams\x18\x0c \x01(\x0b\x32%.allego.DataSourceSinkTransformParams\x12\x39\n\x0fsliceTimeParams\x18\r \x01(\x0b\x32 .allego.SliceTimeTransformParams\x12\x41\n\x13sliceChannelsParams\x18\x0e \x01(\x0b\x32$.allego.SliceChannelsTransformParams\x12;\n\x10\x64ownsampleParams\x18\x0f \x01(\x0b\x32!.allego.DownsampleTransformParams\";\n\rTransformEdge\x12\n\n\x02id\x18\x01 \x02(\t\x12\x0e\n\x06source\x18\x02 \x02(\t\x12\x0e\n\x06target\x18\x03 \x02(\t\"t\n\x08Protocol\x12\n\n\x02id\x18\x01 \x02(\t\x12-\n\x0etransformNodes\x18\x02 \x03(\x0b\x32\x15.allego.TransformNode\x12-\n\x0etransformEdges\x18\x03 \x03(\x0b\x32\x15.allego.TransformEdge\"%\n\x0fProtocolRequest\x12\x12\n\nprotocolID\x18\x01 \x02(\t\"B\n\x15RenameProtocolRequest\x12\x12\n\nprotocolID\x18\x01 \x02(\t\x12\x15\n\rnewProtocolID\x18\x02 \x02(\t\";\n\x14GetAllProtocolsReply\x12#\n\tprotocols\x18\x01 \x03(\x0b\x32\x10.allego.Protocol\"O\n\x15\x41pplyProtocolProgress\x12\x1c\n\x14lastTimestampWritten\x18\x01 \x02(\x05\x12\x18\n\x10\x64srcTimestampEnd\x18\x02 \x02(\x05\"\xac\x01\n\x1aSpikeSorterSetParamRequest\x12\x15\n\rspikeSorterID\x18\x01 \x02(\t\x12,\n\x03\x63md\x18\x02 \x02(\x0e\x32\x1f.allego.SpikeSorterParamCommand\x12\x12\n\nregFloat64\x18\x03 \x03(\x01\x12\x10\n\x08regInt32\x18\x04 \x03(\x05\x12\x0f\n\x07regBool\x18\x05 \x03(\x08\x12\x12\n\nntvChanIdx\x18\x06 \x03(\x05\"\xa7\x02\n\x1dSpikeSorterParamCommandRecord\x12\x11\n\tisEnabled\x18\x01 \x02(\x08\x12\x12\n\nntvChanIdx\x18\x02 \x02(\x05\x12\x0b\n\x03thr\x18\x03 \x03(\x01\x12\r\n\x05thrSd\x18\x04 \x03(\x01\x12\x11\n\tthrWdwPts\x18\x05 \x03(\x05\x12\x0e\n\x06thrWdw\x18\x06 \x03(\x01\x12\x0e\n\x06shadow\x18\x07 \x02(\x01\x12\x11\n\tshadowPts\x18\x08 \x02(\x05\x12\x10\n\x08isSetThr\x18\t \x03(\x08\x12\x0f\n\x07weakThr\x18\n \x03(\x01\x12\x11\n\tweakThrSd\x18\x0b \x03(\x01\x12\x14\n\x0cisSetWeakThr\x18\x0c \x03(\x08\x12\x12\n\npeakWdwPts\x18\r \x03(\x05\x12\x0f\n\x07peakWdw\x18\x0e \x03(\x01\x12\x0c\n\x04isSD\x18\x0f \x02(\x08\"V\n\x0eWrangleRequest\x12!\n\x04mode\x18\x01 \x02(\x0e\x32\x13.allego.WrangleMode\x12!\n\x04spec\x18\x02 \x02(\x0b\x32\x13.allego.WrangleSpec\"Y\n\x0bWrangleSpec\x12%\n\x06import\x18\x01 \x03(\x0b\x32\x15.allego.WrangleImport\x12#\n\x05merge\x18\x02 \x03(\x0b\x32\x14.allego.WrangleMerge\"H\n\rWrangleImport\x12\x37\n\x0cvexSpikesSim\x18\x01 \x01(\x0b\x32!.allego.WrangleImportVexSpikesSim\"g\n\x19WrangleImportVexSpikesSim\x12\'\n\x06source\x18\x01 \x02(\x0b\x32\x17.allego.WrangleFileDesc\x12\x13\n\x0bisOverwrite\x18\x02 \x01(\x08\x12\x0c\n\x04note\x18\x03 \x01(\t\"C\n\x0fWrangleFileDesc\x12\x0c\n\x04path\x18\x01 \x02(\t\x12\x10\n\x08\x62\x61seName\x18\x02 \x02(\t\x12\x10\n\x08\x66ileType\x18\x03 \x01(\t\"H\n\x0cWrangleMerge\x12\x38\n\rvexSpikesView\x18\x01 \x01(\x0b\x32!.allego.WrangleMergeVexSpikesView\"\xaf\x02\n\x19WrangleMergeVexSpikesView\x12*\n\tsourceVex\x18\x01 \x02(\x0b\x32\x17.allego.WrangleFileDesc\x12*\n\tsourceBio\x18\x02 \x02(\x0b\x32\x17.allego.WrangleFileDesc\x12\x33\n\x04view\x18\x03 \x03(\x0b\x32%.allego.WrangleMergeVexSpikesViewSpec\x12\x0c\n\x04note\x18\x04 \x01(\t\x12\x18\n\x10isBandpassFilter\x18\x05 \x01(\x08\x12\x1a\n\x12\x62\x61ndpassFilterSpec\x18\x06 \x03(\x01\x12\x13\n\x0bisOverwrite\x18\x07 \x01(\x08\x12\x15\n\rspikeWindowMs\x18\x08 \x03(\x01\x12\x15\n\rspikeShadowMs\x18\t \x01(\x01\"\xc0\x01\n\x1dWrangleMergeVexSpikesViewSpec\x12(\n\x07sinkBio\x18\x01 \x02(\x0b\x32\x17.allego.WrangleFileDesc\x12\x1c\n\x14siteNeighborRadiusUm\x18\x02 \x01(\x01\x12\x1b\n\x13reqNumSiteNeighbors\x18\x03 \x01(\x05\x12\x15\n\rspikeWindowMs\x18\x04 \x03(\x01\x12\x15\n\rspikeShadowMs\x18\x05 \x01(\x01\x12\x0c\n\x04note\x18\x06 \x01(\t\"J\n\x10\x44\x41\x43StreamRequest\x12\x0b\n\x03\x44\x41\x43\x18\x01 \x02(\x05\x12\x12\n\nNtvChanIdx\x18\x02 \x02(\x05\x12\x15\n\rstreamGroupId\x18\x03 \x01(\t\"\xde\x01\n\x11\x45ventViewerConfig\x12\x15\n\reventViewerId\x18\x01 \x02(\t\x12\x15\n\rstreamGroupId\x18\x02 \x02(\t\x12\x19\n\x11triggerSysChanIdx\x18\x03 \x01(\x05\x12\x1a\n\x12triggerThresholdUV\x18\x04 \x01(\x01\x12\x14\n\x0cpreTriggerMs\x18\x05 \x02(\x01\x12\x15\n\rpostTriggerMs\x18\x06 \x02(\x01\x12\'\n\x0btriggerType\x18\x07 \x01(\x0e\x32\x12.allego.SignalType\x12\x0e\n\x06ntvIdx\x18\x08 \x01(\x05\"=\n\rEventViewerID\x12\x15\n\reventViewerId\x18\x01 \x02(\t\x12\x15\n\rstreamGroupId\x18\x02 \x02(\t\"D\n\x1aGetEventViewerEventRequest\x12\x15\n\reventViewerId\x18\x01 \x02(\t\x12\x0f\n\x07\x65ventId\x18\x02 \x02(\t\"Y\n\x14\x45ventViewerEventDesc\x12\x0f\n\x07\x65ventId\x18\x01 \x02(\t\x12\x18\n\x10triggerTimestamp\x18\x02 \x02(\x03\x12\x16\n\x0etimestampRange\x18\x03 \x03(\x03\"\x8f\x01\n\x10\x45ventViewerEvent\x12\x0f\n\x07\x65ventId\x18\x01 \x02(\t\x12\x18\n\x10triggerTimestamp\x18\x02 \x02(\x03\x12\x16\n\x0etimestampRange\x18\x03 \x03(\x03\x12#\n\x07signals\x18\x04 \x02(\x0b\x32\x12.allego.RawSignals\x12\x13\n\x0bsysChanIdxs\x18\x05 \x03(\x05\"a\n\x1aListEventViewerEventsReply\x12\x15\n\reventViewerId\x18\x01 \x02(\t\x12,\n\x06\x65vents\x18\x02 \x03(\x0b\x32\x1c.allego.EventViewerEventDesc\"D\n\x15ListEventViewersReply\x12+\n\x0c\x65ventViewers\x18\x01 \x03(\x0b\x32\x15.allego.EventViewerID*\xf0\x01\n\x0eRadixFileTypes\x12\x07\n\x03RHD\x10\x00\x12\x08\n\x04XDAT\x10\x01\x12\x07\n\x03\x43SV\x10\x02\x12\x08\n\x04HDF5\x10\x03\x12\x08\n\x04NEX5\x10\x04\x12\x07\n\x03NWB\x10\x05\x12\x10\n\x0c\x42IOINTERFACE\x10\x07\x12\r\n\tKILOSORT2\x10\x08\x12\x07\n\x03\x41NC\x10\t\x12\x0f\n\x0bSPKTRAIN_MU\x10\n\x12\x1b\n\x17\x42IO_RADIENS_EXPORT_HDF5\x10\x0b\x12\x1b\n\x17\x42IO_RADIENS_EXPORT_MAT5\x10\x0c\x12\x07\n\x03NSX\x10\r\x12\x07\n\x03PL2\x10\x0e\x12\x07\n\x03TDT\x10\x0f\x12\x15\n\x11UNKNOWN_FILE_TYPE\x10\x10*1\n\nSignalType\x12\x07\n\x03PRI\x10\x00\x12\x07\n\x03\x41UX\x10\x01\x12\x07\n\x03\x44IN\x10\x02\x12\x08\n\x04\x44OUT\x10\x03*>\n\x04Port\x12\x05\n\x01\x41\x10\x00\x12\x05\n\x01\x42\x10\x01\x12\x05\n\x01\x43\x10\x02\x12\x05\n\x01\x44\x10\x03\x12\x05\n\x01\x45\x10\x04\x12\x05\n\x01\x46\x10\x05\x12\x05\n\x01G\x10\x06\x12\x05\n\x01H\x10\x07*2\n\x0cWorkspaceApp\x12\n\n\x06\x41llego\x10\x00\x12\n\n\x06\x43urate\x10\x01\x12\n\n\x06Videre\x10\x02*\xa0\x01\n\x11WorkspaceCommands\x12\x0f\n\x0bWSPACE_Save\x10\x00\x12\x11\n\rWSPACE_SaveAs\x10\x01\x12\x11\n\rWSPACE_Export\x10\x02\x12\x11\n\rWSPACE_Import\x10\x03\x12\x11\n\rWSPACE_Delete\x10\x04\x12\x11\n\rWSPACE_Switch\x10\x07\x12\x1b\n\x17WSPACE_SwitchToLastUsed\x10\x08*C\n\x14GetWorkspaceCommands\x12\x13\n\x0fGET_WSPACE_List\x10\x01\x12\x16\n\x12GET_WSPACE_Current\x10\x02*8\n\x11RadiensServerType\x12\x10\n\x0c\x41llegoserver\x10\x00\x12\x11\n\rRadiensserver\x10\x01*\x96\x01\n\x0fGrpcServiceType\x12\x0f\n\x0b\x41LLEGO_CORE\x10\x00\x12\x11\n\rALLEGO_PCACHE\x10\x01\x12\x0e\n\nALLEGO_KPI\x10\x02\x12\x12\n\x0e\x41LLEGO_NEURONS\x10\x03\x12\x10\n\x0cRADIENS_CORE\x10\x04\x12\x18\n\x14RADIENS_SPIKE_SORTER\x10\x05\x12\x0f\n\x0bRADIENS_DEV\x10\x06*?\n\x0e\x44\x65vDatasetType\x12\x08\n\x04\x42\x41SE\x10\x00\x12\t\n\x05TRAIN\x10\x01\x12\x0e\n\nVALIDATION\x10\x02\x12\x08\n\x04TEST\x10\x03*X\n\x0e\x44\x61taSourceSort\x12\x10\n\x0c\x44SOURCE_DATE\x10\x00\x12\x10\n\x0c\x44SOURCE_NAME\x10\x01\x12\x10\n\x0c\x44SOURCE_SIZE\x10\x02\x12\x10\n\x0c\x44SOURCE_TYPE\x10\x03*.\n\x0fSignalGroupType\x12\x11\n\rPRIMARY_CACHE\x10\x00\x12\x08\n\x04\x46ILE\x10\x03*\x81\x01\n\x07\x44SPType\x12\x0b\n\x07LOWPASS\x10\x00\x12\x0c\n\x08HIGHPASS\x10\x01\x12\x0c\n\x08\x42\x41NDPASS\x10\x02\x12\t\n\x05NOTCH\x10\x03\x12\x0c\n\x08\x42\x41NDSTOP\x10\x04\x12\x07\n\x03\x43\x41R\x10\x05\x12\x15\n\x11VIRTUAL_REFERENCE\x10\x06\x12\x14\n\x10PAIRED_REFERENCE\x10\x07*9\n\x0b\x46ilterStage\x12\x12\n\x0eSTAGE_HARDWARE\x10\x00\x12\n\n\x06STAGE1\x10\x01\x12\n\n\x06STAGE2\x10\x02*\xd3\x02\n\x0e\x46\x65\x61tureLicense\x12\x1a\n\x16\x46\x65\x61t_NoLicenseRequired\x10\x00\x12\x0c\n\x08\x46\x65\x61t_Any\x10\x01\x12\x0f\n\x0b\x46\x65\x61t_Power9\x10\x02\x12\x11\n\rFeat_RadixAPI\x10\x03\x12\x0e\n\nFeat_Scope\x10\x04\x12\x13\n\x0f\x46\x65\x61t_Electrodes\x10\x05\x12\x13\n\x0f\x46\x65\x61t_HDSnapshot\x10\x06\x12\x12\n\x0e\x46\x65\x61t_Impedance\x10\x07\x12\x10\n\x0c\x46\x65\x61t_Monitor\x10\x08\x12\x16\n\x12\x46\x65\x61t_SignalMetrics\x10\t\x12\x19\n\x15\x46\x65\x61t_SignalProcessing\x10\n\x12\x0f\n\x0b\x46\x65\x61t_System\x10\x0b\x12\x12\n\x0e\x46\x65\x61t_SpikeGrid\x10\x0c\x12\x14\n\x10\x46\x65\x61t_SpikeSorter\x10\r\x12\x0f\n\x0b\x46\x65\x61t_Raster\x10\x0e\x12\x14\n\x10\x46\x65\x61t_ThreeDModel\x10\x0f*_\n\x0eKpiMetricsMode\x12\x18\n\x14Kpi_MetricsMode_Base\x10\x00\x12\x17\n\x13Kpi_MetricsMode_Avg\x10\x01\x12\x1a\n\x16Kpi_MetricsMode_Stream\x10\x02*\xfd\x05\n\x0eKpiMetricsEnum\x12\x0f\n\x0bKPI_NUM_PTS\x10\x00\x12\x13\n\x0fKPI_NUM_PTS_ISI\x10\x01\x12\x0f\n\x0bKPI_DUR_SEC\x10\x02\x12\x0c\n\x08KPI_MEAN\x10\x03\x12\x0b\n\x07KPI_MIN\x10\x04\x12\x0f\n\x0bKPI_MIN_ISI\x10\x05\x12\x0b\n\x07KPI_MAX\x10\x06\x12\x0f\n\x0bKPI_MAX_ISI\x10\x07\x12\x0f\n\x0bKPI_MAX_ABS\x10\x08\x12\x13\n\x0fKPI_MAX_ABS_ISI\x10\t\x12\x15\n\x11KPI_TIMESTAMP_MIN\x10\n\x12\x15\n\x11KPI_TIMESTAMP_MAX\x10\x0b\x12\x18\n\x14KPI_MAX_MIN_DIFF_ABS\x10\x0c\x12\x1c\n\x18KPI_MAX_MIN_DIFF_ABS_ISI\x10\r\x12\n\n\x06KPI_SD\x10\x0e\x12\x0e\n\nKPI_SD_ISI\x10\x0f\x12\x0b\n\x07KPI_VAR\x10\x10\x12\x0f\n\x0bKPI_VAR_ISI\x10\x11\x12\x0b\n\x07KPI_RMS\x10\x12\x12\x0f\n\x0bKPI_RMS_ISI\x10\x13\x12\x10\n\x0cKPI_NOISE_UV\x10\x14\x12\x0b\n\x07KPI_SNR\x10\x15\x12\x12\n\x0eKPI_NUM_EVENTS\x10\x16\x12\x12\n\x0eKPI_EVENT_RATE\x10\x17\x12\x11\n\rKPI_EVENT_MAX\x10\x18\x12\x11\n\rKPI_EVENT_MIN\x10\x19\x12\x15\n\x11KPI_EVENT_MAX_ABS\x10\x1a\x12\x1e\n\x1aKPI_EVENT_MAX_MIN_DIFF_ABS\x10\x1b\x12\x1b\n\x17KPI_EVENT_TIMESTAMP_MIN\x10\x1c\x12\x1b\n\x17KPI_EVENT_TIMESTAMP_MAX\x10\x1d\x12\x1f\n\x1bKPI_EVENT_TIMESTAMP_MAX_ABS\x10\x1e\x12(\n$KPI_EVENT_TIMESTAMP_MAX_MIN_DIFF_ABS\x10\x1f\x12\x10\n\x0cKPI_MEAN_MAX\x10 \x12\x10\n\x0cKPI_MEAN_MIN\x10!\x12\x14\n\x10KPI_MEAN_MAX_ABS\x10\"\x12#\n\x1fKPI_EVENT_MEAN_MAX_MIN_DIFF_ABS\x10#*\x8b\x01\n\x13KpiMetricsStatsEnum\x12\x1e\n\x1aKPI_BDL_METRICS_STATS_MEAN\x10\x00\x12\x1d\n\x19KPI_BDL_METRICS_STATS_MAX\x10\x01\x12\x1d\n\x19KPI_BDL_METRICS_STATS_MIN\x10\x02\x12\x16\n\x12KPI_BDL_METRICS_SD\x10\x03*\xc0\x02\n\x19KpiBundlePacketsStatsEnum\x12\x14\n\x10KPI_BDL_NUM_SIGS\x10\x00\x12\x13\n\x0fKPI_BDL_DUR_SEC\x10\x01\x12\x1d\n\x19KPI_BDL_NUM_SIGS_W_EVENTS\x10\x02\x12\x15\n\x11KPI_BDL_SIG_YIELD\x10\x03\x12\x13\n\x0fKPI_BDL_RMS_AVG\x10\x04\x12\x13\n\x0fKPI_BDL_SNR_AVG\x10\x05\x12\x13\n\x0fKPI_BDL_SIG_MAX\x10\x06\x12\x13\n\x0fKPI_BDL_SIG_MIN\x10\x07\x12\x18\n\x14KPI_BDL_NOISE_UV_AVG\x10\x08\x12\x1c\n\x18KPI_BDL_NUM_EVENTS_TOTAL\x10\t\x12\x1a\n\x16KPI_BDL_NUM_EVENTS_AVG\x10\n\x12\x1a\n\x16KPI_BDL_EVENT_RATE_AVG\x10\x0b*\x97\x01\n\rKpiBundleName\x12\t\n\x05Kpi_A\x10\x00\x12\t\n\x05Kpi_B\x10\x01\x12\t\n\x05Kpi_C\x10\x02\x12\t\n\x05Kpi_D\x10\x03\x12\x0c\n\x08Kpi_Aux0\x10\x04\x12\x0c\n\x08Kpi_Aux1\x10\x05\x12\x12\n\x0eKpi_Datasource\x10\x06\x12\t\n\x05Kpi_E\x10\x07\x12\t\n\x05Kpi_F\x10\x08\x12\t\n\x05Kpi_G\x10\t\x12\t\n\x05Kpi_H\x10\n*F\n\x10TimeRangeSelMode\x12\x0e\n\nTRS_SUBSET\x10\x00\x12\x0f\n\x0bTRS_TO_HEAD\x10\x01\x12\x11\n\rTRS_FROM_HEAD\x10\x02*B\n\x10KpiThresholdName\x12\x11\n\rKpi_Thr_Event\x10\x00\x12\x1b\n\x17Kpi_Thr_Artifact_Reject\x10\x01*@\n\x0eKpiWindowdName\x12\x11\n\rKpi_Wdw_Event\x10\x00\x12\x1b\n\x17Kpi_Wdw_Artifact_Reject\x10\x01*N\n\x16OutfitterComponentType\x12\x16\n\x12OUTFIT_COMP_SENSOR\x10\x00\x12\x1c\n\x18OUTFIT_COMP_SPIKE_SORTER\x10\x01*}\n\x0eWorldNodeLabel\x12\x12\n\x0eWORLD_NODE_ORG\x10\x01\x12\x12\n\x0eWORLD_NODE_LAB\x10\x02\x12\x13\n\x0fWORLD_NODE_USER\x10\x03\x12\x18\n\x14WORLD_NODE_CAT_PROBE\x10\x04\x12\x14\n\x10WORLD_NODE_PROBE\x10\x05*\'\n\x0eWorldEdgeLabel\x12\x15\n\x11WORLD_EDGE_MEMBER\x10\x01*`\n\x12WorldEdgeDirection\x12\x18\n\x14WORLD_EDGE_DIR_RIGHT\x10\x01\x12\x17\n\x13WORLD_EDGE_DIR_LEFT\x10\x02\x12\x17\n\x13WORLD_EDGE_DIR_BOTH\x10\x03*\x9f\x01\n\x0cUserRoleType\x12\x0b\n\x07USER_PI\x10\x01\x12\x12\n\x0eUSER_SCIENTIST\x10\x02\x12\x11\n\rUSER_POST_DOC\x10\x03\x12\x15\n\x11USER_GRAD_STUDENT\x10\x04\x12\x13\n\x0fUSER_UG_STUDENT\x10\x05\x12\x10\n\x0cUSER_MANAGER\x10\x06\x12\r\n\tUSER_TECH\x10\x07\x12\x0e\n\nUSER_OTHER\x10\x08*G\n\rManageNodeCmd\x12\x10\n\x0cNODE_CMD_NEW\x10\x01\x12\x12\n\x0eNODE_CMD_MERGE\x10\x02\x12\x10\n\x0cNODE_CMD_DEL\x10\x03*\xe8\x01\n\rWorldQueryCmd\x12\x15\n\x11WQ_LIST_ALL_USERS\x10\x01\x12\x14\n\x10WQ_LIST_ALL_LABS\x10\x02\x12\x14\n\x10WQ_LIST_ALL_ORGS\x10\x03\x12\x1a\n\x16WQ_LIST_ALL_CAT_PROBES\x10\x04\x12\x16\n\x12WQ_LIST_ALL_PROBES\x10\x05\x12\x18\n\x14WQ_CAT_PROBE_BY_NAME\x10\x06\x12\x11\n\rWQ_USER_BY_ID\x10\x07\x12\x19\n\x15WQ_USER_AND_LAB_BY_ID\x10\x08\x12\x18\n\x14WQ2_LIST_ALL_DEVICES\x10\x1e*\xf0\x01\n\x11TransformNodeType\x12\x10\n\x0cNOTCH_FILTER\x10\x00\x12\x13\n\x0f\x42\x41NDPASS_FILTER\x10\x01\x12\x13\n\x0f\x42\x41NDSTOP_FILTER\x10\x02\x12\x13\n\x0fHIGHPASS_FILTER\x10\x03\x12\x12\n\x0eLOWPASS_FILTER\x10\x04\x12\x0e\n\nPAIRED_REF\x10\x05\x12\x0f\n\x0bVIRTUAL_REF\x10\x06\x12\x0b\n\x07\x43\x41R_REF\x10\x07\x12\x0e\n\nSLICE_TIME\x10\t\x12\x12\n\x0eSLICE_CHANNELS\x10\n\x12\n\n\x06SOURCE\x10\x0b\x12\x08\n\x04SINK\x10\x0c\x12\x0e\n\nDOWNSAMPLE\x10\r*\xa9\x04\n\x17SpikeSorterParamCommand\x12\x16\n\x12SORTER_SITE_ENABLE\x10\x00\x12\x18\n\x14SORTER_THR_LEVEL_POS\x10\x01\x12\x18\n\x14SORTER_THR_LEVEL_NEG\x10\x02\x12\x19\n\x15SORTER_THR_LEVEL_BOTH\x10\x03\x12\x1b\n\x17SORTER_THR_LEVEL_POS_SD\x10\x04\x12\x1b\n\x17SORTER_THR_LEVEL_NEG_SD\x10\x05\x12\x1c\n\x18SORTER_THR_LEVEL_BOTH_SD\x10\x06\x12\x14\n\x10SORTER_THR_CLEAR\x10\x07\x12\x12\n\x0eSORTER_THR_WDW\x10\x08\x12\x13\n\x0fSORTER_PEAK_WDW\x10\t\x12\x1d\n\x19SORTER_WEAK_THR_LEVEL_POS\x10\n\x12\x1d\n\x19SORTER_WEAK_THR_LEVEL_NEG\x10\x0b\x12\x1e\n\x1aSORTER_WEAK_THR_LEVEL_BOTH\x10\x0c\x12 \n\x1cSORTER_WEAK_THR_LEVEL_POS_SD\x10\r\x12 \n\x1cSORTER_WEAK_THR_LEVEL_NEG_SD\x10\x0e\x12!\n\x1dSORTER_WEAK_THR_LEVEL_BOTH_SD\x10\x0f\x12\x19\n\x15SORTER_WEAK_THR_CLEAR\x10\x10\x12\x11\n\rSORTER_SHADOW\x10\x11\x12\x1d\n\x19SORTER_CLUSTER_RESTRICTED\x10\x12*Z\n\x0bWrangleMode\x12*\n&WRANGLE_MODE_IMPORT_NNX_VEX_SPIKES_SIM\x10\x00\x12\x1f\n\x1bWRANGLE_MODE_MERGE_FIT_VIEW\x10\x01\x42\x15Z\x13internal/radix/grpc')

_RADIXFILETYPES = DESCRIPTOR.enum_types_by_name['RadixFileTypes']
RadixFileTypes = enum_type_wrapper.EnumTypeWrapper(_RADIXFILETYPES)
_SIGNALTYPE = DESCRIPTOR.enum_types_by_name['SignalType']
SignalType = enum_type_wrapper.EnumTypeWrapper(_SIGNALTYPE)
_PORT = DESCRIPTOR.enum_types_by_name['Port']
Port = enum_type_wrapper.EnumTypeWrapper(_PORT)
_WORKSPACEAPP = DESCRIPTOR.enum_types_by_name['WorkspaceApp']
WorkspaceApp = enum_type_wrapper.EnumTypeWrapper(_WORKSPACEAPP)
_WORKSPACECOMMANDS = DESCRIPTOR.enum_types_by_name['WorkspaceCommands']
WorkspaceCommands = enum_type_wrapper.EnumTypeWrapper(_WORKSPACECOMMANDS)
_GETWORKSPACECOMMANDS = DESCRIPTOR.enum_types_by_name['GetWorkspaceCommands']
GetWorkspaceCommands = enum_type_wrapper.EnumTypeWrapper(_GETWORKSPACECOMMANDS)
_RADIENSSERVERTYPE = DESCRIPTOR.enum_types_by_name['RadiensServerType']
RadiensServerType = enum_type_wrapper.EnumTypeWrapper(_RADIENSSERVERTYPE)
_GRPCSERVICETYPE = DESCRIPTOR.enum_types_by_name['GrpcServiceType']
GrpcServiceType = enum_type_wrapper.EnumTypeWrapper(_GRPCSERVICETYPE)
_DEVDATASETTYPE = DESCRIPTOR.enum_types_by_name['DevDatasetType']
DevDatasetType = enum_type_wrapper.EnumTypeWrapper(_DEVDATASETTYPE)
_DATASOURCESORT = DESCRIPTOR.enum_types_by_name['DataSourceSort']
DataSourceSort = enum_type_wrapper.EnumTypeWrapper(_DATASOURCESORT)
_SIGNALGROUPTYPE = DESCRIPTOR.enum_types_by_name['SignalGroupType']
SignalGroupType = enum_type_wrapper.EnumTypeWrapper(_SIGNALGROUPTYPE)
_DSPTYPE = DESCRIPTOR.enum_types_by_name['DSPType']
DSPType = enum_type_wrapper.EnumTypeWrapper(_DSPTYPE)
_FILTERSTAGE = DESCRIPTOR.enum_types_by_name['FilterStage']
FilterStage = enum_type_wrapper.EnumTypeWrapper(_FILTERSTAGE)
_FEATURELICENSE = DESCRIPTOR.enum_types_by_name['FeatureLicense']
FeatureLicense = enum_type_wrapper.EnumTypeWrapper(_FEATURELICENSE)
_KPIMETRICSMODE = DESCRIPTOR.enum_types_by_name['KpiMetricsMode']
KpiMetricsMode = enum_type_wrapper.EnumTypeWrapper(_KPIMETRICSMODE)
_KPIMETRICSENUM = DESCRIPTOR.enum_types_by_name['KpiMetricsEnum']
KpiMetricsEnum = enum_type_wrapper.EnumTypeWrapper(_KPIMETRICSENUM)
_KPIMETRICSSTATSENUM = DESCRIPTOR.enum_types_by_name['KpiMetricsStatsEnum']
KpiMetricsStatsEnum = enum_type_wrapper.EnumTypeWrapper(_KPIMETRICSSTATSENUM)
_KPIBUNDLEPACKETSSTATSENUM = DESCRIPTOR.enum_types_by_name['KpiBundlePacketsStatsEnum']
KpiBundlePacketsStatsEnum = enum_type_wrapper.EnumTypeWrapper(_KPIBUNDLEPACKETSSTATSENUM)
_KPIBUNDLENAME = DESCRIPTOR.enum_types_by_name['KpiBundleName']
KpiBundleName = enum_type_wrapper.EnumTypeWrapper(_KPIBUNDLENAME)
_TIMERANGESELMODE = DESCRIPTOR.enum_types_by_name['TimeRangeSelMode']
TimeRangeSelMode = enum_type_wrapper.EnumTypeWrapper(_TIMERANGESELMODE)
_KPITHRESHOLDNAME = DESCRIPTOR.enum_types_by_name['KpiThresholdName']
KpiThresholdName = enum_type_wrapper.EnumTypeWrapper(_KPITHRESHOLDNAME)
_KPIWINDOWDNAME = DESCRIPTOR.enum_types_by_name['KpiWindowdName']
KpiWindowdName = enum_type_wrapper.EnumTypeWrapper(_KPIWINDOWDNAME)
_OUTFITTERCOMPONENTTYPE = DESCRIPTOR.enum_types_by_name['OutfitterComponentType']
OutfitterComponentType = enum_type_wrapper.EnumTypeWrapper(_OUTFITTERCOMPONENTTYPE)
_WORLDNODELABEL = DESCRIPTOR.enum_types_by_name['WorldNodeLabel']
WorldNodeLabel = enum_type_wrapper.EnumTypeWrapper(_WORLDNODELABEL)
_WORLDEDGELABEL = DESCRIPTOR.enum_types_by_name['WorldEdgeLabel']
WorldEdgeLabel = enum_type_wrapper.EnumTypeWrapper(_WORLDEDGELABEL)
_WORLDEDGEDIRECTION = DESCRIPTOR.enum_types_by_name['WorldEdgeDirection']
WorldEdgeDirection = enum_type_wrapper.EnumTypeWrapper(_WORLDEDGEDIRECTION)
_USERROLETYPE = DESCRIPTOR.enum_types_by_name['UserRoleType']
UserRoleType = enum_type_wrapper.EnumTypeWrapper(_USERROLETYPE)
_MANAGENODECMD = DESCRIPTOR.enum_types_by_name['ManageNodeCmd']
ManageNodeCmd = enum_type_wrapper.EnumTypeWrapper(_MANAGENODECMD)
_WORLDQUERYCMD = DESCRIPTOR.enum_types_by_name['WorldQueryCmd']
WorldQueryCmd = enum_type_wrapper.EnumTypeWrapper(_WORLDQUERYCMD)
_TRANSFORMNODETYPE = DESCRIPTOR.enum_types_by_name['TransformNodeType']
TransformNodeType = enum_type_wrapper.EnumTypeWrapper(_TRANSFORMNODETYPE)
_SPIKESORTERPARAMCOMMAND = DESCRIPTOR.enum_types_by_name['SpikeSorterParamCommand']
SpikeSorterParamCommand = enum_type_wrapper.EnumTypeWrapper(_SPIKESORTERPARAMCOMMAND)
_WRANGLEMODE = DESCRIPTOR.enum_types_by_name['WrangleMode']
WrangleMode = enum_type_wrapper.EnumTypeWrapper(_WRANGLEMODE)
RHD = 0
XDAT = 1
CSV = 2
HDF5 = 3
NEX5 = 4
NWB = 5
BIOINTERFACE = 7
KILOSORT2 = 8
ANC = 9
SPKTRAIN_MU = 10
BIO_RADIENS_EXPORT_HDF5 = 11
BIO_RADIENS_EXPORT_MAT5 = 12
NSX = 13
PL2 = 14
TDT = 15
UNKNOWN_FILE_TYPE = 16
PRI = 0
AUX = 1
DIN = 2
DOUT = 3
A = 0
B = 1
C = 2
D = 3
E = 4
F = 5
G = 6
H = 7
Allego = 0
Curate = 1
Videre = 2
WSPACE_Save = 0
WSPACE_SaveAs = 1
WSPACE_Export = 2
WSPACE_Import = 3
WSPACE_Delete = 4
WSPACE_Switch = 7
WSPACE_SwitchToLastUsed = 8
GET_WSPACE_List = 1
GET_WSPACE_Current = 2
Allegoserver = 0
Radiensserver = 1
ALLEGO_CORE = 0
ALLEGO_PCACHE = 1
ALLEGO_KPI = 2
ALLEGO_NEURONS = 3
RADIENS_CORE = 4
RADIENS_SPIKE_SORTER = 5
RADIENS_DEV = 6
BASE = 0
TRAIN = 1
VALIDATION = 2
TEST = 3
DSOURCE_DATE = 0
DSOURCE_NAME = 1
DSOURCE_SIZE = 2
DSOURCE_TYPE = 3
PRIMARY_CACHE = 0
FILE = 3
LOWPASS = 0
HIGHPASS = 1
BANDPASS = 2
NOTCH = 3
BANDSTOP = 4
CAR = 5
VIRTUAL_REFERENCE = 6
PAIRED_REFERENCE = 7
STAGE_HARDWARE = 0
STAGE1 = 1
STAGE2 = 2
Feat_NoLicenseRequired = 0
Feat_Any = 1
Feat_Power9 = 2
Feat_RadixAPI = 3
Feat_Scope = 4
Feat_Electrodes = 5
Feat_HDSnapshot = 6
Feat_Impedance = 7
Feat_Monitor = 8
Feat_SignalMetrics = 9
Feat_SignalProcessing = 10
Feat_System = 11
Feat_SpikeGrid = 12
Feat_SpikeSorter = 13
Feat_Raster = 14
Feat_ThreeDModel = 15
Kpi_MetricsMode_Base = 0
Kpi_MetricsMode_Avg = 1
Kpi_MetricsMode_Stream = 2
KPI_NUM_PTS = 0
KPI_NUM_PTS_ISI = 1
KPI_DUR_SEC = 2
KPI_MEAN = 3
KPI_MIN = 4
KPI_MIN_ISI = 5
KPI_MAX = 6
KPI_MAX_ISI = 7
KPI_MAX_ABS = 8
KPI_MAX_ABS_ISI = 9
KPI_TIMESTAMP_MIN = 10
KPI_TIMESTAMP_MAX = 11
KPI_MAX_MIN_DIFF_ABS = 12
KPI_MAX_MIN_DIFF_ABS_ISI = 13
KPI_SD = 14
KPI_SD_ISI = 15
KPI_VAR = 16
KPI_VAR_ISI = 17
KPI_RMS = 18
KPI_RMS_ISI = 19
KPI_NOISE_UV = 20
KPI_SNR = 21
KPI_NUM_EVENTS = 22
KPI_EVENT_RATE = 23
KPI_EVENT_MAX = 24
KPI_EVENT_MIN = 25
KPI_EVENT_MAX_ABS = 26
KPI_EVENT_MAX_MIN_DIFF_ABS = 27
KPI_EVENT_TIMESTAMP_MIN = 28
KPI_EVENT_TIMESTAMP_MAX = 29
KPI_EVENT_TIMESTAMP_MAX_ABS = 30
KPI_EVENT_TIMESTAMP_MAX_MIN_DIFF_ABS = 31
KPI_MEAN_MAX = 32
KPI_MEAN_MIN = 33
KPI_MEAN_MAX_ABS = 34
KPI_EVENT_MEAN_MAX_MIN_DIFF_ABS = 35
KPI_BDL_METRICS_STATS_MEAN = 0
KPI_BDL_METRICS_STATS_MAX = 1
KPI_BDL_METRICS_STATS_MIN = 2
KPI_BDL_METRICS_SD = 3
KPI_BDL_NUM_SIGS = 0
KPI_BDL_DUR_SEC = 1
KPI_BDL_NUM_SIGS_W_EVENTS = 2
KPI_BDL_SIG_YIELD = 3
KPI_BDL_RMS_AVG = 4
KPI_BDL_SNR_AVG = 5
KPI_BDL_SIG_MAX = 6
KPI_BDL_SIG_MIN = 7
KPI_BDL_NOISE_UV_AVG = 8
KPI_BDL_NUM_EVENTS_TOTAL = 9
KPI_BDL_NUM_EVENTS_AVG = 10
KPI_BDL_EVENT_RATE_AVG = 11
Kpi_A = 0
Kpi_B = 1
Kpi_C = 2
Kpi_D = 3
Kpi_Aux0 = 4
Kpi_Aux1 = 5
Kpi_Datasource = 6
Kpi_E = 7
Kpi_F = 8
Kpi_G = 9
Kpi_H = 10
TRS_SUBSET = 0
TRS_TO_HEAD = 1
TRS_FROM_HEAD = 2
Kpi_Thr_Event = 0
Kpi_Thr_Artifact_Reject = 1
Kpi_Wdw_Event = 0
Kpi_Wdw_Artifact_Reject = 1
OUTFIT_COMP_SENSOR = 0
OUTFIT_COMP_SPIKE_SORTER = 1
WORLD_NODE_ORG = 1
WORLD_NODE_LAB = 2
WORLD_NODE_USER = 3
WORLD_NODE_CAT_PROBE = 4
WORLD_NODE_PROBE = 5
WORLD_EDGE_MEMBER = 1
WORLD_EDGE_DIR_RIGHT = 1
WORLD_EDGE_DIR_LEFT = 2
WORLD_EDGE_DIR_BOTH = 3
USER_PI = 1
USER_SCIENTIST = 2
USER_POST_DOC = 3
USER_GRAD_STUDENT = 4
USER_UG_STUDENT = 5
USER_MANAGER = 6
USER_TECH = 7
USER_OTHER = 8
NODE_CMD_NEW = 1
NODE_CMD_MERGE = 2
NODE_CMD_DEL = 3
WQ_LIST_ALL_USERS = 1
WQ_LIST_ALL_LABS = 2
WQ_LIST_ALL_ORGS = 3
WQ_LIST_ALL_CAT_PROBES = 4
WQ_LIST_ALL_PROBES = 5
WQ_CAT_PROBE_BY_NAME = 6
WQ_USER_BY_ID = 7
WQ_USER_AND_LAB_BY_ID = 8
WQ2_LIST_ALL_DEVICES = 30
NOTCH_FILTER = 0
BANDPASS_FILTER = 1
BANDSTOP_FILTER = 2
HIGHPASS_FILTER = 3
LOWPASS_FILTER = 4
PAIRED_REF = 5
VIRTUAL_REF = 6
CAR_REF = 7
SLICE_TIME = 9
SLICE_CHANNELS = 10
SOURCE = 11
SINK = 12
DOWNSAMPLE = 13
SORTER_SITE_ENABLE = 0
SORTER_THR_LEVEL_POS = 1
SORTER_THR_LEVEL_NEG = 2
SORTER_THR_LEVEL_BOTH = 3
SORTER_THR_LEVEL_POS_SD = 4
SORTER_THR_LEVEL_NEG_SD = 5
SORTER_THR_LEVEL_BOTH_SD = 6
SORTER_THR_CLEAR = 7
SORTER_THR_WDW = 8
SORTER_PEAK_WDW = 9
SORTER_WEAK_THR_LEVEL_POS = 10
SORTER_WEAK_THR_LEVEL_NEG = 11
SORTER_WEAK_THR_LEVEL_BOTH = 12
SORTER_WEAK_THR_LEVEL_POS_SD = 13
SORTER_WEAK_THR_LEVEL_NEG_SD = 14
SORTER_WEAK_THR_LEVEL_BOTH_SD = 15
SORTER_WEAK_THR_CLEAR = 16
SORTER_SHADOW = 17
SORTER_CLUSTER_RESTRICTED = 18
WRANGLE_MODE_IMPORT_NNX_VEX_SPIKES_SIM = 0
WRANGLE_MODE_MERGE_FIT_VIEW = 1


_RADIXENVIRONMENT = DESCRIPTOR.message_types_by_name['RadixEnvironment']
_STANDARDREQUEST = DESCRIPTOR.message_types_by_name['StandardRequest']
_STANDARDREPLY = DESCRIPTOR.message_types_by_name['StandardReply']
_WORKSPACEDESCRIPTOR = DESCRIPTOR.message_types_by_name['WorkspaceDescriptor']
_WORKSPACECONTROLREQUEST = DESCRIPTOR.message_types_by_name['WorkspaceControlRequest']
_GETWORKSPACEREQUEST = DESCRIPTOR.message_types_by_name['GetWorkspaceRequest']
_GETWORKSPACEREPLY = DESCRIPTOR.message_types_by_name['GetWorkspaceReply']
_GETWORKSPACEREPLY_WORKSPACEDESCENTRY = _GETWORKSPACEREPLY.nested_types_by_name['WorkspaceDescEntry']
_GETRADIENSSERVERSREQUEST = DESCRIPTOR.message_types_by_name['GetRadiensServersRequest']
_SERVERSPEC = DESCRIPTOR.message_types_by_name['ServerSpec']
_SERVERSPEC_GRPCSERVICE = _SERVERSPEC.nested_types_by_name['GrpcService']
_SERVERSPEC_SPAWNEDPROCESS = _SERVERSPEC.nested_types_by_name['SpawnedProcess']
_SERVERSPEC_SERVICEENTRY = _SERVERSPEC.nested_types_by_name['ServiceEntry']
_RADIENSSERVERSREPLY = DESCRIPTOR.message_types_by_name['RadiensServersReply']
_SIGNALGROUPIDREQUEST = DESCRIPTOR.message_types_by_name['SignalGroupIDRequest']
_SIGNALMAP = DESCRIPTOR.message_types_by_name['SignalMap']
_GPIOCHANNELCOUNT = DESCRIPTOR.message_types_by_name['GPIOChannelCount']
_PORTCHANNELCOUNT = DESCRIPTOR.message_types_by_name['PortChannelCount']
_SETPORTREQUEST = DESCRIPTOR.message_types_by_name['SetPortRequest']
_HDSNAPSHOTREQUEST = DESCRIPTOR.message_types_by_name['HDSnapshotRequest']
_HDSNAPSHOTREQUEST_SELECTEDSIGNALS = _HDSNAPSHOTREQUEST.nested_types_by_name['SelectedSignals']
_HDSNAPSHOTMETA = DESCRIPTOR.message_types_by_name['HDSnapshotMeta']
_HDSNAPSHOT = DESCRIPTOR.message_types_by_name['HDSnapshot']
_GETSIGNALSREQUEST = DESCRIPTOR.message_types_by_name['GetSignalsRequest']
_GETSIGNALSREQUEST_GETSIGSPARAMS = _GETSIGNALSREQUEST.nested_types_by_name['GetSigsParams']
_RAWSIGNALS = DESCRIPTOR.message_types_by_name['RawSignals']
_LISTSENSORSPECSREPLY = DESCRIPTOR.message_types_by_name['ListSensorSpecsReply']
_LISTSENSORSPECSREPLY_SPECWITHCHANNELCOUNT = _LISTSENSORSPECSREPLY.nested_types_by_name['SpecWithChannelCount']
_LISTDATASOURCESREQUEST = DESCRIPTOR.message_types_by_name['ListDataSourcesRequest']
_GETSIGNALGROUPIDSREPLY = DESCRIPTOR.message_types_by_name['GetSignalGroupIDsReply']
_DATASOURCE = DESCRIPTOR.message_types_by_name['DataSource']
_FILEDESCRIPTOR = DESCRIPTOR.message_types_by_name['FileDescriptor']
_TIMESPEC = DESCRIPTOR.message_types_by_name['TimeSpec']
_TIMESPEC_TIMERANGEL = _TIMESPEC.nested_types_by_name['TimeRangeL']
_TIMESPEC_TIMESTAMPRANGEL = _TIMESPEC.nested_types_by_name['TimestampRangeL']
_SIGNALSPEC = DESCRIPTOR.message_types_by_name['SignalSpec']
_SIGNALSPEC_SITENUML = _SIGNALSPEC.nested_types_by_name['SiteNumL']
_SIGNALSPEC_NTVCHANIDXL = _SIGNALSPEC.nested_types_by_name['NtvChanIdxL']
_CHANNELRECORD = DESCRIPTOR.message_types_by_name['ChannelRecord']
_XYCOORD = DESCRIPTOR.message_types_by_name['XYCoord']
_XYZCOORD = DESCRIPTOR.message_types_by_name['XYZCoord']
_SENSOR = DESCRIPTOR.message_types_by_name['Sensor']
_SENSOR_WIREFRAME = _SENSOR.nested_types_by_name['WireFrame']
_SENSORPORTSPEC = DESCRIPTOR.message_types_by_name['SensorPortSpec']
_SIGNALGROUPUNITS = DESCRIPTOR.message_types_by_name['SignalGroupUnits']
_SIGNALGROUPUNITS_UNITSENTRY = _SIGNALGROUPUNITS.nested_types_by_name['UnitsEntry']
_SIGNALGROUP = DESCRIPTOR.message_types_by_name['SignalGroup']
_CREATESIGNALGROUPREQUEST = DESCRIPTOR.message_types_by_name['CreateSignalGroupRequest']
_SUBOPSORT = DESCRIPTOR.message_types_by_name['SubOpSort']
_UPDATESIGNALGROUPREQUEST = DESCRIPTOR.message_types_by_name['UpdateSignalGroupRequest']
_LICENSESTATUS = DESCRIPTOR.message_types_by_name['LicenseStatus']
_SETDSPGROUPREQUEST = DESCRIPTOR.message_types_by_name['SetDSPGroupRequest']
_DSPPARAMS = DESCRIPTOR.message_types_by_name['DSPParams']
_DSPPARAMS_FREQSPECBAND = _DSPPARAMS.nested_types_by_name['FreqSpecBand']
_DSPGROUP = DESCRIPTOR.message_types_by_name['DSPGroup']
_SETSENSORREQUEST = DESCRIPTOR.message_types_by_name['SetSensorRequest']
_SENSORPOSITIONTCS = DESCRIPTOR.message_types_by_name['SensorPositionTcs']
_SETSENSORPOSITIONTCSREQUEST = DESCRIPTOR.message_types_by_name['SetSensorPositionTcsRequest']
_SITEPOSITIONTCS = DESCRIPTOR.message_types_by_name['SitePositionTcs']
_SETSITEPOSITIONSTCSREQUEST = DESCRIPTOR.message_types_by_name['SetSitePositionsTcsRequest']
_FEATURESTARTSTOPREQUEST = DESCRIPTOR.message_types_by_name['FeatureStartStopRequest']
_PRIVACYREPLY = DESCRIPTOR.message_types_by_name['PrivacyReply']
_SETPRIVACYREQUEST = DESCRIPTOR.message_types_by_name['SetPrivacyRequest']
_DENSEMATRIX = DESCRIPTOR.message_types_by_name['DenseMatrix']
_KPIMETRICID = DESCRIPTOR.message_types_by_name['KpiMetricID']
_TIMERANGE = DESCRIPTOR.message_types_by_name['TimeRange']
_BUNDLEREQ = DESCRIPTOR.message_types_by_name['BundleReq']
_KPIMETRICSREQ = DESCRIPTOR.message_types_by_name['KpiMetricsReq']
_KPIMETRICSDATA = DESCRIPTOR.message_types_by_name['KpiMetricsData']
_KPIMETRICSDATA_METRICSTATS = _KPIMETRICSDATA.nested_types_by_name['MetricStats']
_KPIBUNDLEPACKETMETRICS = DESCRIPTOR.message_types_by_name['KpiBundlePacketMetrics']
_KPIMETRICS = DESCRIPTOR.message_types_by_name['KpiMetrics']
_KPICONTROLREQUEST = DESCRIPTOR.message_types_by_name['KpiControlRequest']
_SETKPIUPDATEPERIODREQUEST = DESCRIPTOR.message_types_by_name['SetKpiUpdatePeriodRequest']
_SETKPITHRESHOLDREQUEST = DESCRIPTOR.message_types_by_name['SetKpiThresholdRequest']
_SETKPIEVENTDETECTREQUEST = DESCRIPTOR.message_types_by_name['SetKpiEventDetectRequest']
_SETKPIEVENTSHADOWREQUEST = DESCRIPTOR.message_types_by_name['SetKpiEventShadowRequest']
_SETKPIEVENTWINDOWREQUEST = DESCRIPTOR.message_types_by_name['SetKpiEventWindowRequest']
_GETKPISTATUSREQUEST = DESCRIPTOR.message_types_by_name['GetKpiStatusRequest']
_KPISTATUSREPLY = DESCRIPTOR.message_types_by_name['KpiStatusReply']
_SIGKPIPARAMRECORD = DESCRIPTOR.message_types_by_name['SigKpiParamRecord']
_ANNOTATEBUNDLE = DESCRIPTOR.message_types_by_name['AnnotateBundle']
_PROJECTMETADATA = DESCRIPTOR.message_types_by_name['ProjectMetadata']
_SENSOREXTENDEDMETADATA = DESCRIPTOR.message_types_by_name['SensorExtendedMetadata']
_GONUMMATRIXLIST = DESCRIPTOR.message_types_by_name['GonumMatrixList']
_RADIXMATRIXLIST = DESCRIPTOR.message_types_by_name['RadixMatrixList']
_RADIXMATRIX = DESCRIPTOR.message_types_by_name['RadixMatrix']
_RADIXSIGNALSLIST = DESCRIPTOR.message_types_by_name['RadixSignalsList']
_RADIXSIGNALS = DESCRIPTOR.message_types_by_name['RadixSignals']
_VECTORSTRING = DESCRIPTOR.message_types_by_name['VectorString']
_VECTORFLOAT64 = DESCRIPTOR.message_types_by_name['VectorFloat64']
_VECTORSLICEFLOAT64 = DESCRIPTOR.message_types_by_name['VectorSliceFloat64']
_LOGSYSKPISTATUSREPLY = DESCRIPTOR.message_types_by_name['LogsysKpiStatusReply']
_KPICACHE = DESCRIPTOR.message_types_by_name['KpiCache']
_LOGSYSKPITAILREPLY = DESCRIPTOR.message_types_by_name['LogsysKpiTailReply']
_KPIPORTINFO = DESCRIPTOR.message_types_by_name['KpiPortInfo']
_KPITAILROWS = DESCRIPTOR.message_types_by_name['KpiTailRows']
_WAREHOUSEHEALTHCHECKSPEC = DESCRIPTOR.message_types_by_name['WarehouseHealthcheckSpec']
_OUTFITTERGETDEVICEREQUEST = DESCRIPTOR.message_types_by_name['OutfitterGetDeviceRequest']
_SENSORCOMPREQUEST = DESCRIPTOR.message_types_by_name['SensorCompRequest']
_REGISTERSENSORCOMPREQUEST = DESCRIPTOR.message_types_by_name['RegisterSensorCompRequest']
_SAVESENSORCOMPINSTANCEREQUEST = DESCRIPTOR.message_types_by_name['SaveSensorCompInstanceRequest']
_PROBEDESC = DESCRIPTOR.message_types_by_name['ProbeDesc']
_HEADSTAGEDESC = DESCRIPTOR.message_types_by_name['HeadstageDesc']
_GETSENSORCOMPREPLY = DESCRIPTOR.message_types_by_name['GetSensorCompReply']
_PROBESPEC = DESCRIPTOR.message_types_by_name['ProbeSpec']
_HEADSTAGESPEC = DESCRIPTOR.message_types_by_name['HeadstageSpec']
_PROBEMODEL = DESCRIPTOR.message_types_by_name['ProbeModel']
_PROBEMODEL_PROBESITEDESC = _PROBEMODEL.nested_types_by_name['ProbeSiteDesc']
_PROBEMODEL_PROBEWIREFRAME = _PROBEMODEL.nested_types_by_name['ProbeWireFrame']
_PROBEMODEL_PROBEPTXY = _PROBEMODEL.nested_types_by_name['ProbePtXY']
_PROBEMETADATA = DESCRIPTOR.message_types_by_name['ProbeMetaData']
_HEADSTAGEMODEL = DESCRIPTOR.message_types_by_name['HeadstageModel']
_HEADSTAGEMODEL_HEADSTAGEROW = _HEADSTAGEMODEL.nested_types_by_name['HeadstageRow']
_HEADSTAGEMETADATA = DESCRIPTOR.message_types_by_name['HeadstageMetaData']
_USERPROFILE = DESCRIPTOR.message_types_by_name['UserProfile']
_GETCURRENTPROFILEREPLY = DESCRIPTOR.message_types_by_name['GetCurrentProfileReply']
_GETALLPROFILESREPLY = DESCRIPTOR.message_types_by_name['GetAllProfilesReply']
_SETCURRENTPROFILEREQUEST = DESCRIPTOR.message_types_by_name['SetCurrentProfileRequest']
_MANAGENODEORGPAYLOAD = DESCRIPTOR.message_types_by_name['ManageNodeOrgPayload']
_MANAGENODEORGREQUEST = DESCRIPTOR.message_types_by_name['ManageNodeOrgRequest']
_MANAGENODEORGREPLY = DESCRIPTOR.message_types_by_name['ManageNodeOrgReply']
_MANAGENODELABPAYLOAD = DESCRIPTOR.message_types_by_name['ManageNodeLabPayload']
_MANAGENODELABREQUEST = DESCRIPTOR.message_types_by_name['ManageNodeLabRequest']
_MANAGENODELABREPLY = DESCRIPTOR.message_types_by_name['ManageNodeLabReply']
_MANAGENODEUSERPAYLOAD = DESCRIPTOR.message_types_by_name['ManageNodeUserPayload']
_MANAGENODEUSERREQUEST = DESCRIPTOR.message_types_by_name['ManageNodeUserRequest']
_MANAGENODEUSERREPLY = DESCRIPTOR.message_types_by_name['ManageNodeUserReply']
_CATALOGPROBEPAYLOAD = DESCRIPTOR.message_types_by_name['CatalogProbePayload']
_PROBENODEREQUEST = DESCRIPTOR.message_types_by_name['ProbeNodeRequest']
_PROBENODEREPLY = DESCRIPTOR.message_types_by_name['ProbeNodeReply']
_PROBEPAYLOAD = DESCRIPTOR.message_types_by_name['ProbePayload']
_EDGEPAYLOAD = DESCRIPTOR.message_types_by_name['EdgePayload']
_EDGEPAYLOAD_GENERICNODE = _EDGEPAYLOAD.nested_types_by_name['GenericNode']
_WORLDEDGEREQUEST = DESCRIPTOR.message_types_by_name['WorldEdgeRequest']
_WORLDEDGEREPLY = DESCRIPTOR.message_types_by_name['WorldEdgeReply']
_QUERYWORLDREQUEST = DESCRIPTOR.message_types_by_name['QueryWorldRequest']
_QUERYWORLDREC = DESCRIPTOR.message_types_by_name['QueryWorldRec']
_QUERYWORLDREPLY = DESCRIPTOR.message_types_by_name['QueryWorldReply']
_HIGHLOWPASSTRANSFORMPARAMS = DESCRIPTOR.message_types_by_name['HighLowPassTransformParams']
_BANDTRANSFORMPARAMS = DESCRIPTOR.message_types_by_name['BandTransformParams']
_NOTCHTRANSFORMPARAMS = DESCRIPTOR.message_types_by_name['NotchTransformParams']
_CARTRANSFORMPARAMS = DESCRIPTOR.message_types_by_name['CARTransformParams']
_VIRTUALREFTRANSFORMPARAMS = DESCRIPTOR.message_types_by_name['VirtualRefTransformParams']
_PAIREDREFTRANSFORMPARAMS = DESCRIPTOR.message_types_by_name['PairedRefTransformParams']
_DATASOURCESINKTRANSFORMPARAMS = DESCRIPTOR.message_types_by_name['DataSourceSinkTransformParams']
_SLICETIMETRANSFORMPARAMS = DESCRIPTOR.message_types_by_name['SliceTimeTransformParams']
_SLICECHANNELSTRANSFORMPARAMS = DESCRIPTOR.message_types_by_name['SliceChannelsTransformParams']
_DOWNSAMPLETRANSFORMPARAMS = DESCRIPTOR.message_types_by_name['DownsampleTransformParams']
_POSITION = DESCRIPTOR.message_types_by_name['Position']
_TRANSFORMNODE = DESCRIPTOR.message_types_by_name['TransformNode']
_TRANSFORMEDGE = DESCRIPTOR.message_types_by_name['TransformEdge']
_PROTOCOL = DESCRIPTOR.message_types_by_name['Protocol']
_PROTOCOLREQUEST = DESCRIPTOR.message_types_by_name['ProtocolRequest']
_RENAMEPROTOCOLREQUEST = DESCRIPTOR.message_types_by_name['RenameProtocolRequest']
_GETALLPROTOCOLSREPLY = DESCRIPTOR.message_types_by_name['GetAllProtocolsReply']
_APPLYPROTOCOLPROGRESS = DESCRIPTOR.message_types_by_name['ApplyProtocolProgress']
_SPIKESORTERSETPARAMREQUEST = DESCRIPTOR.message_types_by_name['SpikeSorterSetParamRequest']
_SPIKESORTERPARAMCOMMANDRECORD = DESCRIPTOR.message_types_by_name['SpikeSorterParamCommandRecord']
_WRANGLEREQUEST = DESCRIPTOR.message_types_by_name['WrangleRequest']
_WRANGLESPEC = DESCRIPTOR.message_types_by_name['WrangleSpec']
_WRANGLEIMPORT = DESCRIPTOR.message_types_by_name['WrangleImport']
_WRANGLEIMPORTVEXSPIKESSIM = DESCRIPTOR.message_types_by_name['WrangleImportVexSpikesSim']
_WRANGLEFILEDESC = DESCRIPTOR.message_types_by_name['WrangleFileDesc']
_WRANGLEMERGE = DESCRIPTOR.message_types_by_name['WrangleMerge']
_WRANGLEMERGEVEXSPIKESVIEW = DESCRIPTOR.message_types_by_name['WrangleMergeVexSpikesView']
_WRANGLEMERGEVEXSPIKESVIEWSPEC = DESCRIPTOR.message_types_by_name['WrangleMergeVexSpikesViewSpec']
_DACSTREAMREQUEST = DESCRIPTOR.message_types_by_name['DACStreamRequest']
_EVENTVIEWERCONFIG = DESCRIPTOR.message_types_by_name['EventViewerConfig']
_EVENTVIEWERID = DESCRIPTOR.message_types_by_name['EventViewerID']
_GETEVENTVIEWEREVENTREQUEST = DESCRIPTOR.message_types_by_name['GetEventViewerEventRequest']
_EVENTVIEWEREVENTDESC = DESCRIPTOR.message_types_by_name['EventViewerEventDesc']
_EVENTVIEWEREVENT = DESCRIPTOR.message_types_by_name['EventViewerEvent']
_LISTEVENTVIEWEREVENTSREPLY = DESCRIPTOR.message_types_by_name['ListEventViewerEventsReply']
_LISTEVENTVIEWERSREPLY = DESCRIPTOR.message_types_by_name['ListEventViewersReply']
_SUBOPSORT_SORTFIELD = _SUBOPSORT.enum_types_by_name['SortField']
_UPDATESIGNALGROUPREQUEST_OPERATION = _UPDATESIGNALGROUPREQUEST.enum_types_by_name['Operation']
_UPDATESIGNALGROUPREQUEST_SUBOPERATION = _UPDATESIGNALGROUPREQUEST.enum_types_by_name['SubOperation']
RadixEnvironment = _reflection.GeneratedProtocolMessageType('RadixEnvironment', (_message.Message,), {
  'DESCRIPTOR' : _RADIXENVIRONMENT,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.RadixEnvironment)
  })
_sym_db.RegisterMessage(RadixEnvironment)

StandardRequest = _reflection.GeneratedProtocolMessageType('StandardRequest', (_message.Message,), {
  'DESCRIPTOR' : _STANDARDREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.StandardRequest)
  })
_sym_db.RegisterMessage(StandardRequest)

StandardReply = _reflection.GeneratedProtocolMessageType('StandardReply', (_message.Message,), {
  'DESCRIPTOR' : _STANDARDREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.StandardReply)
  })
_sym_db.RegisterMessage(StandardReply)

WorkspaceDescriptor = _reflection.GeneratedProtocolMessageType('WorkspaceDescriptor', (_message.Message,), {
  'DESCRIPTOR' : _WORKSPACEDESCRIPTOR,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.WorkspaceDescriptor)
  })
_sym_db.RegisterMessage(WorkspaceDescriptor)

WorkspaceControlRequest = _reflection.GeneratedProtocolMessageType('WorkspaceControlRequest', (_message.Message,), {
  'DESCRIPTOR' : _WORKSPACECONTROLREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.WorkspaceControlRequest)
  })
_sym_db.RegisterMessage(WorkspaceControlRequest)

GetWorkspaceRequest = _reflection.GeneratedProtocolMessageType('GetWorkspaceRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETWORKSPACEREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.GetWorkspaceRequest)
  })
_sym_db.RegisterMessage(GetWorkspaceRequest)

GetWorkspaceReply = _reflection.GeneratedProtocolMessageType('GetWorkspaceReply', (_message.Message,), {

  'WorkspaceDescEntry' : _reflection.GeneratedProtocolMessageType('WorkspaceDescEntry', (_message.Message,), {
    'DESCRIPTOR' : _GETWORKSPACEREPLY_WORKSPACEDESCENTRY,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.GetWorkspaceReply.WorkspaceDescEntry)
    })
  ,
  'DESCRIPTOR' : _GETWORKSPACEREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.GetWorkspaceReply)
  })
_sym_db.RegisterMessage(GetWorkspaceReply)
_sym_db.RegisterMessage(GetWorkspaceReply.WorkspaceDescEntry)

GetRadiensServersRequest = _reflection.GeneratedProtocolMessageType('GetRadiensServersRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETRADIENSSERVERSREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.GetRadiensServersRequest)
  })
_sym_db.RegisterMessage(GetRadiensServersRequest)

ServerSpec = _reflection.GeneratedProtocolMessageType('ServerSpec', (_message.Message,), {

  'GrpcService' : _reflection.GeneratedProtocolMessageType('GrpcService', (_message.Message,), {
    'DESCRIPTOR' : _SERVERSPEC_GRPCSERVICE,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.ServerSpec.GrpcService)
    })
  ,

  'SpawnedProcess' : _reflection.GeneratedProtocolMessageType('SpawnedProcess', (_message.Message,), {
    'DESCRIPTOR' : _SERVERSPEC_SPAWNEDPROCESS,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.ServerSpec.SpawnedProcess)
    })
  ,

  'ServiceEntry' : _reflection.GeneratedProtocolMessageType('ServiceEntry', (_message.Message,), {
    'DESCRIPTOR' : _SERVERSPEC_SERVICEENTRY,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.ServerSpec.ServiceEntry)
    })
  ,
  'DESCRIPTOR' : _SERVERSPEC,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ServerSpec)
  })
_sym_db.RegisterMessage(ServerSpec)
_sym_db.RegisterMessage(ServerSpec.GrpcService)
_sym_db.RegisterMessage(ServerSpec.SpawnedProcess)
_sym_db.RegisterMessage(ServerSpec.ServiceEntry)

RadiensServersReply = _reflection.GeneratedProtocolMessageType('RadiensServersReply', (_message.Message,), {
  'DESCRIPTOR' : _RADIENSSERVERSREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.RadiensServersReply)
  })
_sym_db.RegisterMessage(RadiensServersReply)

SignalGroupIDRequest = _reflection.GeneratedProtocolMessageType('SignalGroupIDRequest', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALGROUPIDREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SignalGroupIDRequest)
  })
_sym_db.RegisterMessage(SignalGroupIDRequest)

SignalMap = _reflection.GeneratedProtocolMessageType('SignalMap', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALMAP,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SignalMap)
  })
_sym_db.RegisterMessage(SignalMap)

GPIOChannelCount = _reflection.GeneratedProtocolMessageType('GPIOChannelCount', (_message.Message,), {
  'DESCRIPTOR' : _GPIOCHANNELCOUNT,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.GPIOChannelCount)
  })
_sym_db.RegisterMessage(GPIOChannelCount)

PortChannelCount = _reflection.GeneratedProtocolMessageType('PortChannelCount', (_message.Message,), {
  'DESCRIPTOR' : _PORTCHANNELCOUNT,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.PortChannelCount)
  })
_sym_db.RegisterMessage(PortChannelCount)

SetPortRequest = _reflection.GeneratedProtocolMessageType('SetPortRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETPORTREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetPortRequest)
  })
_sym_db.RegisterMessage(SetPortRequest)

HDSnapshotRequest = _reflection.GeneratedProtocolMessageType('HDSnapshotRequest', (_message.Message,), {

  'SelectedSignals' : _reflection.GeneratedProtocolMessageType('SelectedSignals', (_message.Message,), {
    'DESCRIPTOR' : _HDSNAPSHOTREQUEST_SELECTEDSIGNALS,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.HDSnapshotRequest.SelectedSignals)
    })
  ,
  'DESCRIPTOR' : _HDSNAPSHOTREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.HDSnapshotRequest)
  })
_sym_db.RegisterMessage(HDSnapshotRequest)
_sym_db.RegisterMessage(HDSnapshotRequest.SelectedSignals)

HDSnapshotMeta = _reflection.GeneratedProtocolMessageType('HDSnapshotMeta', (_message.Message,), {
  'DESCRIPTOR' : _HDSNAPSHOTMETA,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.HDSnapshotMeta)
  })
_sym_db.RegisterMessage(HDSnapshotMeta)

HDSnapshot = _reflection.GeneratedProtocolMessageType('HDSnapshot', (_message.Message,), {
  'DESCRIPTOR' : _HDSNAPSHOT,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.HDSnapshot)
  })
_sym_db.RegisterMessage(HDSnapshot)

GetSignalsRequest = _reflection.GeneratedProtocolMessageType('GetSignalsRequest', (_message.Message,), {

  'GetSigsParams' : _reflection.GeneratedProtocolMessageType('GetSigsParams', (_message.Message,), {
    'DESCRIPTOR' : _GETSIGNALSREQUEST_GETSIGSPARAMS,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.GetSignalsRequest.GetSigsParams)
    })
  ,
  'DESCRIPTOR' : _GETSIGNALSREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.GetSignalsRequest)
  })
_sym_db.RegisterMessage(GetSignalsRequest)
_sym_db.RegisterMessage(GetSignalsRequest.GetSigsParams)

RawSignals = _reflection.GeneratedProtocolMessageType('RawSignals', (_message.Message,), {
  'DESCRIPTOR' : _RAWSIGNALS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.RawSignals)
  })
_sym_db.RegisterMessage(RawSignals)

ListSensorSpecsReply = _reflection.GeneratedProtocolMessageType('ListSensorSpecsReply', (_message.Message,), {

  'SpecWithChannelCount' : _reflection.GeneratedProtocolMessageType('SpecWithChannelCount', (_message.Message,), {
    'DESCRIPTOR' : _LISTSENSORSPECSREPLY_SPECWITHCHANNELCOUNT,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.ListSensorSpecsReply.SpecWithChannelCount)
    })
  ,
  'DESCRIPTOR' : _LISTSENSORSPECSREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ListSensorSpecsReply)
  })
_sym_db.RegisterMessage(ListSensorSpecsReply)
_sym_db.RegisterMessage(ListSensorSpecsReply.SpecWithChannelCount)

ListDataSourcesRequest = _reflection.GeneratedProtocolMessageType('ListDataSourcesRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTDATASOURCESREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ListDataSourcesRequest)
  })
_sym_db.RegisterMessage(ListDataSourcesRequest)

GetSignalGroupIDsReply = _reflection.GeneratedProtocolMessageType('GetSignalGroupIDsReply', (_message.Message,), {
  'DESCRIPTOR' : _GETSIGNALGROUPIDSREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.GetSignalGroupIDsReply)
  })
_sym_db.RegisterMessage(GetSignalGroupIDsReply)

DataSource = _reflection.GeneratedProtocolMessageType('DataSource', (_message.Message,), {
  'DESCRIPTOR' : _DATASOURCE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.DataSource)
  })
_sym_db.RegisterMessage(DataSource)

FileDescriptor = _reflection.GeneratedProtocolMessageType('FileDescriptor', (_message.Message,), {
  'DESCRIPTOR' : _FILEDESCRIPTOR,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.FileDescriptor)
  })
_sym_db.RegisterMessage(FileDescriptor)

TimeSpec = _reflection.GeneratedProtocolMessageType('TimeSpec', (_message.Message,), {

  'TimeRangeL' : _reflection.GeneratedProtocolMessageType('TimeRangeL', (_message.Message,), {
    'DESCRIPTOR' : _TIMESPEC_TIMERANGEL,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.TimeSpec.TimeRangeL)
    })
  ,

  'TimestampRangeL' : _reflection.GeneratedProtocolMessageType('TimestampRangeL', (_message.Message,), {
    'DESCRIPTOR' : _TIMESPEC_TIMESTAMPRANGEL,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.TimeSpec.TimestampRangeL)
    })
  ,
  'DESCRIPTOR' : _TIMESPEC,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.TimeSpec)
  })
_sym_db.RegisterMessage(TimeSpec)
_sym_db.RegisterMessage(TimeSpec.TimeRangeL)
_sym_db.RegisterMessage(TimeSpec.TimestampRangeL)

SignalSpec = _reflection.GeneratedProtocolMessageType('SignalSpec', (_message.Message,), {

  'SiteNumL' : _reflection.GeneratedProtocolMessageType('SiteNumL', (_message.Message,), {
    'DESCRIPTOR' : _SIGNALSPEC_SITENUML,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.SignalSpec.SiteNumL)
    })
  ,

  'NtvChanIdxL' : _reflection.GeneratedProtocolMessageType('NtvChanIdxL', (_message.Message,), {
    'DESCRIPTOR' : _SIGNALSPEC_NTVCHANIDXL,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.SignalSpec.NtvChanIdxL)
    })
  ,
  'DESCRIPTOR' : _SIGNALSPEC,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SignalSpec)
  })
_sym_db.RegisterMessage(SignalSpec)
_sym_db.RegisterMessage(SignalSpec.SiteNumL)
_sym_db.RegisterMessage(SignalSpec.NtvChanIdxL)

ChannelRecord = _reflection.GeneratedProtocolMessageType('ChannelRecord', (_message.Message,), {
  'DESCRIPTOR' : _CHANNELRECORD,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ChannelRecord)
  })
_sym_db.RegisterMessage(ChannelRecord)

XYCoord = _reflection.GeneratedProtocolMessageType('XYCoord', (_message.Message,), {
  'DESCRIPTOR' : _XYCOORD,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.XYCoord)
  })
_sym_db.RegisterMessage(XYCoord)

XYZCoord = _reflection.GeneratedProtocolMessageType('XYZCoord', (_message.Message,), {
  'DESCRIPTOR' : _XYZCOORD,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.XYZCoord)
  })
_sym_db.RegisterMessage(XYZCoord)

Sensor = _reflection.GeneratedProtocolMessageType('Sensor', (_message.Message,), {

  'WireFrame' : _reflection.GeneratedProtocolMessageType('WireFrame', (_message.Message,), {
    'DESCRIPTOR' : _SENSOR_WIREFRAME,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.Sensor.WireFrame)
    })
  ,
  'DESCRIPTOR' : _SENSOR,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.Sensor)
  })
_sym_db.RegisterMessage(Sensor)
_sym_db.RegisterMessage(Sensor.WireFrame)

SensorPortSpec = _reflection.GeneratedProtocolMessageType('SensorPortSpec', (_message.Message,), {
  'DESCRIPTOR' : _SENSORPORTSPEC,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SensorPortSpec)
  })
_sym_db.RegisterMessage(SensorPortSpec)

SignalGroupUnits = _reflection.GeneratedProtocolMessageType('SignalGroupUnits', (_message.Message,), {

  'UnitsEntry' : _reflection.GeneratedProtocolMessageType('UnitsEntry', (_message.Message,), {
    'DESCRIPTOR' : _SIGNALGROUPUNITS_UNITSENTRY,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.SignalGroupUnits.UnitsEntry)
    })
  ,
  'DESCRIPTOR' : _SIGNALGROUPUNITS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SignalGroupUnits)
  })
_sym_db.RegisterMessage(SignalGroupUnits)
_sym_db.RegisterMessage(SignalGroupUnits.UnitsEntry)

SignalGroup = _reflection.GeneratedProtocolMessageType('SignalGroup', (_message.Message,), {
  'DESCRIPTOR' : _SIGNALGROUP,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SignalGroup)
  })
_sym_db.RegisterMessage(SignalGroup)

CreateSignalGroupRequest = _reflection.GeneratedProtocolMessageType('CreateSignalGroupRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATESIGNALGROUPREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.CreateSignalGroupRequest)
  })
_sym_db.RegisterMessage(CreateSignalGroupRequest)

SubOpSort = _reflection.GeneratedProtocolMessageType('SubOpSort', (_message.Message,), {
  'DESCRIPTOR' : _SUBOPSORT,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SubOpSort)
  })
_sym_db.RegisterMessage(SubOpSort)

UpdateSignalGroupRequest = _reflection.GeneratedProtocolMessageType('UpdateSignalGroupRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATESIGNALGROUPREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.UpdateSignalGroupRequest)
  })
_sym_db.RegisterMessage(UpdateSignalGroupRequest)

LicenseStatus = _reflection.GeneratedProtocolMessageType('LicenseStatus', (_message.Message,), {
  'DESCRIPTOR' : _LICENSESTATUS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.LicenseStatus)
  })
_sym_db.RegisterMessage(LicenseStatus)

SetDSPGroupRequest = _reflection.GeneratedProtocolMessageType('SetDSPGroupRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETDSPGROUPREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetDSPGroupRequest)
  })
_sym_db.RegisterMessage(SetDSPGroupRequest)

DSPParams = _reflection.GeneratedProtocolMessageType('DSPParams', (_message.Message,), {

  'FreqSpecBand' : _reflection.GeneratedProtocolMessageType('FreqSpecBand', (_message.Message,), {
    'DESCRIPTOR' : _DSPPARAMS_FREQSPECBAND,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.DSPParams.FreqSpecBand)
    })
  ,
  'DESCRIPTOR' : _DSPPARAMS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.DSPParams)
  })
_sym_db.RegisterMessage(DSPParams)
_sym_db.RegisterMessage(DSPParams.FreqSpecBand)

DSPGroup = _reflection.GeneratedProtocolMessageType('DSPGroup', (_message.Message,), {
  'DESCRIPTOR' : _DSPGROUP,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.DSPGroup)
  })
_sym_db.RegisterMessage(DSPGroup)

SetSensorRequest = _reflection.GeneratedProtocolMessageType('SetSensorRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETSENSORREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetSensorRequest)
  })
_sym_db.RegisterMessage(SetSensorRequest)

SensorPositionTcs = _reflection.GeneratedProtocolMessageType('SensorPositionTcs', (_message.Message,), {
  'DESCRIPTOR' : _SENSORPOSITIONTCS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SensorPositionTcs)
  })
_sym_db.RegisterMessage(SensorPositionTcs)

SetSensorPositionTcsRequest = _reflection.GeneratedProtocolMessageType('SetSensorPositionTcsRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETSENSORPOSITIONTCSREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetSensorPositionTcsRequest)
  })
_sym_db.RegisterMessage(SetSensorPositionTcsRequest)

SitePositionTcs = _reflection.GeneratedProtocolMessageType('SitePositionTcs', (_message.Message,), {
  'DESCRIPTOR' : _SITEPOSITIONTCS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SitePositionTcs)
  })
_sym_db.RegisterMessage(SitePositionTcs)

SetSitePositionsTcsRequest = _reflection.GeneratedProtocolMessageType('SetSitePositionsTcsRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETSITEPOSITIONSTCSREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetSitePositionsTcsRequest)
  })
_sym_db.RegisterMessage(SetSitePositionsTcsRequest)

FeatureStartStopRequest = _reflection.GeneratedProtocolMessageType('FeatureStartStopRequest', (_message.Message,), {
  'DESCRIPTOR' : _FEATURESTARTSTOPREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.FeatureStartStopRequest)
  })
_sym_db.RegisterMessage(FeatureStartStopRequest)

PrivacyReply = _reflection.GeneratedProtocolMessageType('PrivacyReply', (_message.Message,), {
  'DESCRIPTOR' : _PRIVACYREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.PrivacyReply)
  })
_sym_db.RegisterMessage(PrivacyReply)

SetPrivacyRequest = _reflection.GeneratedProtocolMessageType('SetPrivacyRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETPRIVACYREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetPrivacyRequest)
  })
_sym_db.RegisterMessage(SetPrivacyRequest)

DenseMatrix = _reflection.GeneratedProtocolMessageType('DenseMatrix', (_message.Message,), {
  'DESCRIPTOR' : _DENSEMATRIX,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.DenseMatrix)
  })
_sym_db.RegisterMessage(DenseMatrix)

KpiMetricID = _reflection.GeneratedProtocolMessageType('KpiMetricID', (_message.Message,), {
  'DESCRIPTOR' : _KPIMETRICID,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.KpiMetricID)
  })
_sym_db.RegisterMessage(KpiMetricID)

TimeRange = _reflection.GeneratedProtocolMessageType('TimeRange', (_message.Message,), {
  'DESCRIPTOR' : _TIMERANGE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.TimeRange)
  })
_sym_db.RegisterMessage(TimeRange)

BundleReq = _reflection.GeneratedProtocolMessageType('BundleReq', (_message.Message,), {
  'DESCRIPTOR' : _BUNDLEREQ,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.BundleReq)
  })
_sym_db.RegisterMessage(BundleReq)

KpiMetricsReq = _reflection.GeneratedProtocolMessageType('KpiMetricsReq', (_message.Message,), {
  'DESCRIPTOR' : _KPIMETRICSREQ,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.KpiMetricsReq)
  })
_sym_db.RegisterMessage(KpiMetricsReq)

KpiMetricsData = _reflection.GeneratedProtocolMessageType('KpiMetricsData', (_message.Message,), {

  'MetricStats' : _reflection.GeneratedProtocolMessageType('MetricStats', (_message.Message,), {
    'DESCRIPTOR' : _KPIMETRICSDATA_METRICSTATS,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.KpiMetricsData.MetricStats)
    })
  ,
  'DESCRIPTOR' : _KPIMETRICSDATA,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.KpiMetricsData)
  })
_sym_db.RegisterMessage(KpiMetricsData)
_sym_db.RegisterMessage(KpiMetricsData.MetricStats)

KpiBundlePacketMetrics = _reflection.GeneratedProtocolMessageType('KpiBundlePacketMetrics', (_message.Message,), {
  'DESCRIPTOR' : _KPIBUNDLEPACKETMETRICS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.KpiBundlePacketMetrics)
  })
_sym_db.RegisterMessage(KpiBundlePacketMetrics)

KpiMetrics = _reflection.GeneratedProtocolMessageType('KpiMetrics', (_message.Message,), {
  'DESCRIPTOR' : _KPIMETRICS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.KpiMetrics)
  })
_sym_db.RegisterMessage(KpiMetrics)

KpiControlRequest = _reflection.GeneratedProtocolMessageType('KpiControlRequest', (_message.Message,), {
  'DESCRIPTOR' : _KPICONTROLREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.KpiControlRequest)
  })
_sym_db.RegisterMessage(KpiControlRequest)

SetKpiUpdatePeriodRequest = _reflection.GeneratedProtocolMessageType('SetKpiUpdatePeriodRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETKPIUPDATEPERIODREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetKpiUpdatePeriodRequest)
  })
_sym_db.RegisterMessage(SetKpiUpdatePeriodRequest)

SetKpiThresholdRequest = _reflection.GeneratedProtocolMessageType('SetKpiThresholdRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETKPITHRESHOLDREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetKpiThresholdRequest)
  })
_sym_db.RegisterMessage(SetKpiThresholdRequest)

SetKpiEventDetectRequest = _reflection.GeneratedProtocolMessageType('SetKpiEventDetectRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETKPIEVENTDETECTREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetKpiEventDetectRequest)
  })
_sym_db.RegisterMessage(SetKpiEventDetectRequest)

SetKpiEventShadowRequest = _reflection.GeneratedProtocolMessageType('SetKpiEventShadowRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETKPIEVENTSHADOWREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetKpiEventShadowRequest)
  })
_sym_db.RegisterMessage(SetKpiEventShadowRequest)

SetKpiEventWindowRequest = _reflection.GeneratedProtocolMessageType('SetKpiEventWindowRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETKPIEVENTWINDOWREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetKpiEventWindowRequest)
  })
_sym_db.RegisterMessage(SetKpiEventWindowRequest)

GetKpiStatusRequest = _reflection.GeneratedProtocolMessageType('GetKpiStatusRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETKPISTATUSREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.GetKpiStatusRequest)
  })
_sym_db.RegisterMessage(GetKpiStatusRequest)

KpiStatusReply = _reflection.GeneratedProtocolMessageType('KpiStatusReply', (_message.Message,), {
  'DESCRIPTOR' : _KPISTATUSREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.KpiStatusReply)
  })
_sym_db.RegisterMessage(KpiStatusReply)

SigKpiParamRecord = _reflection.GeneratedProtocolMessageType('SigKpiParamRecord', (_message.Message,), {
  'DESCRIPTOR' : _SIGKPIPARAMRECORD,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SigKpiParamRecord)
  })
_sym_db.RegisterMessage(SigKpiParamRecord)

AnnotateBundle = _reflection.GeneratedProtocolMessageType('AnnotateBundle', (_message.Message,), {
  'DESCRIPTOR' : _ANNOTATEBUNDLE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.AnnotateBundle)
  })
_sym_db.RegisterMessage(AnnotateBundle)

ProjectMetadata = _reflection.GeneratedProtocolMessageType('ProjectMetadata', (_message.Message,), {
  'DESCRIPTOR' : _PROJECTMETADATA,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ProjectMetadata)
  })
_sym_db.RegisterMessage(ProjectMetadata)

SensorExtendedMetadata = _reflection.GeneratedProtocolMessageType('SensorExtendedMetadata', (_message.Message,), {
  'DESCRIPTOR' : _SENSOREXTENDEDMETADATA,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SensorExtendedMetadata)
  })
_sym_db.RegisterMessage(SensorExtendedMetadata)

GonumMatrixList = _reflection.GeneratedProtocolMessageType('GonumMatrixList', (_message.Message,), {
  'DESCRIPTOR' : _GONUMMATRIXLIST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.GonumMatrixList)
  })
_sym_db.RegisterMessage(GonumMatrixList)

RadixMatrixList = _reflection.GeneratedProtocolMessageType('RadixMatrixList', (_message.Message,), {
  'DESCRIPTOR' : _RADIXMATRIXLIST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.RadixMatrixList)
  })
_sym_db.RegisterMessage(RadixMatrixList)

RadixMatrix = _reflection.GeneratedProtocolMessageType('RadixMatrix', (_message.Message,), {
  'DESCRIPTOR' : _RADIXMATRIX,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.RadixMatrix)
  })
_sym_db.RegisterMessage(RadixMatrix)

RadixSignalsList = _reflection.GeneratedProtocolMessageType('RadixSignalsList', (_message.Message,), {
  'DESCRIPTOR' : _RADIXSIGNALSLIST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.RadixSignalsList)
  })
_sym_db.RegisterMessage(RadixSignalsList)

RadixSignals = _reflection.GeneratedProtocolMessageType('RadixSignals', (_message.Message,), {
  'DESCRIPTOR' : _RADIXSIGNALS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.RadixSignals)
  })
_sym_db.RegisterMessage(RadixSignals)

VectorString = _reflection.GeneratedProtocolMessageType('VectorString', (_message.Message,), {
  'DESCRIPTOR' : _VECTORSTRING,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.VectorString)
  })
_sym_db.RegisterMessage(VectorString)

VectorFloat64 = _reflection.GeneratedProtocolMessageType('VectorFloat64', (_message.Message,), {
  'DESCRIPTOR' : _VECTORFLOAT64,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.VectorFloat64)
  })
_sym_db.RegisterMessage(VectorFloat64)

VectorSliceFloat64 = _reflection.GeneratedProtocolMessageType('VectorSliceFloat64', (_message.Message,), {
  'DESCRIPTOR' : _VECTORSLICEFLOAT64,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.VectorSliceFloat64)
  })
_sym_db.RegisterMessage(VectorSliceFloat64)

LogsysKpiStatusReply = _reflection.GeneratedProtocolMessageType('LogsysKpiStatusReply', (_message.Message,), {
  'DESCRIPTOR' : _LOGSYSKPISTATUSREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.LogsysKpiStatusReply)
  })
_sym_db.RegisterMessage(LogsysKpiStatusReply)

KpiCache = _reflection.GeneratedProtocolMessageType('KpiCache', (_message.Message,), {
  'DESCRIPTOR' : _KPICACHE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.KpiCache)
  })
_sym_db.RegisterMessage(KpiCache)

LogsysKpiTailReply = _reflection.GeneratedProtocolMessageType('LogsysKpiTailReply', (_message.Message,), {
  'DESCRIPTOR' : _LOGSYSKPITAILREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.LogsysKpiTailReply)
  })
_sym_db.RegisterMessage(LogsysKpiTailReply)

KpiPortInfo = _reflection.GeneratedProtocolMessageType('KpiPortInfo', (_message.Message,), {
  'DESCRIPTOR' : _KPIPORTINFO,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.KpiPortInfo)
  })
_sym_db.RegisterMessage(KpiPortInfo)

KpiTailRows = _reflection.GeneratedProtocolMessageType('KpiTailRows', (_message.Message,), {
  'DESCRIPTOR' : _KPITAILROWS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.KpiTailRows)
  })
_sym_db.RegisterMessage(KpiTailRows)

WarehouseHealthcheckSpec = _reflection.GeneratedProtocolMessageType('WarehouseHealthcheckSpec', (_message.Message,), {
  'DESCRIPTOR' : _WAREHOUSEHEALTHCHECKSPEC,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.WarehouseHealthcheckSpec)
  })
_sym_db.RegisterMessage(WarehouseHealthcheckSpec)

OutfitterGetDeviceRequest = _reflection.GeneratedProtocolMessageType('OutfitterGetDeviceRequest', (_message.Message,), {
  'DESCRIPTOR' : _OUTFITTERGETDEVICEREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.OutfitterGetDeviceRequest)
  })
_sym_db.RegisterMessage(OutfitterGetDeviceRequest)

SensorCompRequest = _reflection.GeneratedProtocolMessageType('SensorCompRequest', (_message.Message,), {
  'DESCRIPTOR' : _SENSORCOMPREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SensorCompRequest)
  })
_sym_db.RegisterMessage(SensorCompRequest)

RegisterSensorCompRequest = _reflection.GeneratedProtocolMessageType('RegisterSensorCompRequest', (_message.Message,), {
  'DESCRIPTOR' : _REGISTERSENSORCOMPREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.RegisterSensorCompRequest)
  })
_sym_db.RegisterMessage(RegisterSensorCompRequest)

SaveSensorCompInstanceRequest = _reflection.GeneratedProtocolMessageType('SaveSensorCompInstanceRequest', (_message.Message,), {
  'DESCRIPTOR' : _SAVESENSORCOMPINSTANCEREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SaveSensorCompInstanceRequest)
  })
_sym_db.RegisterMessage(SaveSensorCompInstanceRequest)

ProbeDesc = _reflection.GeneratedProtocolMessageType('ProbeDesc', (_message.Message,), {
  'DESCRIPTOR' : _PROBEDESC,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ProbeDesc)
  })
_sym_db.RegisterMessage(ProbeDesc)

HeadstageDesc = _reflection.GeneratedProtocolMessageType('HeadstageDesc', (_message.Message,), {
  'DESCRIPTOR' : _HEADSTAGEDESC,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.HeadstageDesc)
  })
_sym_db.RegisterMessage(HeadstageDesc)

GetSensorCompReply = _reflection.GeneratedProtocolMessageType('GetSensorCompReply', (_message.Message,), {
  'DESCRIPTOR' : _GETSENSORCOMPREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.GetSensorCompReply)
  })
_sym_db.RegisterMessage(GetSensorCompReply)

ProbeSpec = _reflection.GeneratedProtocolMessageType('ProbeSpec', (_message.Message,), {
  'DESCRIPTOR' : _PROBESPEC,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ProbeSpec)
  })
_sym_db.RegisterMessage(ProbeSpec)

HeadstageSpec = _reflection.GeneratedProtocolMessageType('HeadstageSpec', (_message.Message,), {
  'DESCRIPTOR' : _HEADSTAGESPEC,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.HeadstageSpec)
  })
_sym_db.RegisterMessage(HeadstageSpec)

ProbeModel = _reflection.GeneratedProtocolMessageType('ProbeModel', (_message.Message,), {

  'ProbeSiteDesc' : _reflection.GeneratedProtocolMessageType('ProbeSiteDesc', (_message.Message,), {
    'DESCRIPTOR' : _PROBEMODEL_PROBESITEDESC,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.ProbeModel.ProbeSiteDesc)
    })
  ,

  'ProbeWireFrame' : _reflection.GeneratedProtocolMessageType('ProbeWireFrame', (_message.Message,), {
    'DESCRIPTOR' : _PROBEMODEL_PROBEWIREFRAME,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.ProbeModel.ProbeWireFrame)
    })
  ,

  'ProbePtXY' : _reflection.GeneratedProtocolMessageType('ProbePtXY', (_message.Message,), {
    'DESCRIPTOR' : _PROBEMODEL_PROBEPTXY,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.ProbeModel.ProbePtXY)
    })
  ,
  'DESCRIPTOR' : _PROBEMODEL,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ProbeModel)
  })
_sym_db.RegisterMessage(ProbeModel)
_sym_db.RegisterMessage(ProbeModel.ProbeSiteDesc)
_sym_db.RegisterMessage(ProbeModel.ProbeWireFrame)
_sym_db.RegisterMessage(ProbeModel.ProbePtXY)

ProbeMetaData = _reflection.GeneratedProtocolMessageType('ProbeMetaData', (_message.Message,), {
  'DESCRIPTOR' : _PROBEMETADATA,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ProbeMetaData)
  })
_sym_db.RegisterMessage(ProbeMetaData)

HeadstageModel = _reflection.GeneratedProtocolMessageType('HeadstageModel', (_message.Message,), {

  'HeadstageRow' : _reflection.GeneratedProtocolMessageType('HeadstageRow', (_message.Message,), {
    'DESCRIPTOR' : _HEADSTAGEMODEL_HEADSTAGEROW,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.HeadstageModel.HeadstageRow)
    })
  ,
  'DESCRIPTOR' : _HEADSTAGEMODEL,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.HeadstageModel)
  })
_sym_db.RegisterMessage(HeadstageModel)
_sym_db.RegisterMessage(HeadstageModel.HeadstageRow)

HeadstageMetaData = _reflection.GeneratedProtocolMessageType('HeadstageMetaData', (_message.Message,), {
  'DESCRIPTOR' : _HEADSTAGEMETADATA,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.HeadstageMetaData)
  })
_sym_db.RegisterMessage(HeadstageMetaData)

UserProfile = _reflection.GeneratedProtocolMessageType('UserProfile', (_message.Message,), {
  'DESCRIPTOR' : _USERPROFILE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.UserProfile)
  })
_sym_db.RegisterMessage(UserProfile)

GetCurrentProfileReply = _reflection.GeneratedProtocolMessageType('GetCurrentProfileReply', (_message.Message,), {
  'DESCRIPTOR' : _GETCURRENTPROFILEREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.GetCurrentProfileReply)
  })
_sym_db.RegisterMessage(GetCurrentProfileReply)

GetAllProfilesReply = _reflection.GeneratedProtocolMessageType('GetAllProfilesReply', (_message.Message,), {
  'DESCRIPTOR' : _GETALLPROFILESREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.GetAllProfilesReply)
  })
_sym_db.RegisterMessage(GetAllProfilesReply)

SetCurrentProfileRequest = _reflection.GeneratedProtocolMessageType('SetCurrentProfileRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETCURRENTPROFILEREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SetCurrentProfileRequest)
  })
_sym_db.RegisterMessage(SetCurrentProfileRequest)

ManageNodeOrgPayload = _reflection.GeneratedProtocolMessageType('ManageNodeOrgPayload', (_message.Message,), {
  'DESCRIPTOR' : _MANAGENODEORGPAYLOAD,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ManageNodeOrgPayload)
  })
_sym_db.RegisterMessage(ManageNodeOrgPayload)

ManageNodeOrgRequest = _reflection.GeneratedProtocolMessageType('ManageNodeOrgRequest', (_message.Message,), {
  'DESCRIPTOR' : _MANAGENODEORGREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ManageNodeOrgRequest)
  })
_sym_db.RegisterMessage(ManageNodeOrgRequest)

ManageNodeOrgReply = _reflection.GeneratedProtocolMessageType('ManageNodeOrgReply', (_message.Message,), {
  'DESCRIPTOR' : _MANAGENODEORGREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ManageNodeOrgReply)
  })
_sym_db.RegisterMessage(ManageNodeOrgReply)

ManageNodeLabPayload = _reflection.GeneratedProtocolMessageType('ManageNodeLabPayload', (_message.Message,), {
  'DESCRIPTOR' : _MANAGENODELABPAYLOAD,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ManageNodeLabPayload)
  })
_sym_db.RegisterMessage(ManageNodeLabPayload)

ManageNodeLabRequest = _reflection.GeneratedProtocolMessageType('ManageNodeLabRequest', (_message.Message,), {
  'DESCRIPTOR' : _MANAGENODELABREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ManageNodeLabRequest)
  })
_sym_db.RegisterMessage(ManageNodeLabRequest)

ManageNodeLabReply = _reflection.GeneratedProtocolMessageType('ManageNodeLabReply', (_message.Message,), {
  'DESCRIPTOR' : _MANAGENODELABREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ManageNodeLabReply)
  })
_sym_db.RegisterMessage(ManageNodeLabReply)

ManageNodeUserPayload = _reflection.GeneratedProtocolMessageType('ManageNodeUserPayload', (_message.Message,), {
  'DESCRIPTOR' : _MANAGENODEUSERPAYLOAD,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ManageNodeUserPayload)
  })
_sym_db.RegisterMessage(ManageNodeUserPayload)

ManageNodeUserRequest = _reflection.GeneratedProtocolMessageType('ManageNodeUserRequest', (_message.Message,), {
  'DESCRIPTOR' : _MANAGENODEUSERREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ManageNodeUserRequest)
  })
_sym_db.RegisterMessage(ManageNodeUserRequest)

ManageNodeUserReply = _reflection.GeneratedProtocolMessageType('ManageNodeUserReply', (_message.Message,), {
  'DESCRIPTOR' : _MANAGENODEUSERREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ManageNodeUserReply)
  })
_sym_db.RegisterMessage(ManageNodeUserReply)

CatalogProbePayload = _reflection.GeneratedProtocolMessageType('CatalogProbePayload', (_message.Message,), {
  'DESCRIPTOR' : _CATALOGPROBEPAYLOAD,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.CatalogProbePayload)
  })
_sym_db.RegisterMessage(CatalogProbePayload)

ProbeNodeRequest = _reflection.GeneratedProtocolMessageType('ProbeNodeRequest', (_message.Message,), {
  'DESCRIPTOR' : _PROBENODEREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ProbeNodeRequest)
  })
_sym_db.RegisterMessage(ProbeNodeRequest)

ProbeNodeReply = _reflection.GeneratedProtocolMessageType('ProbeNodeReply', (_message.Message,), {
  'DESCRIPTOR' : _PROBENODEREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ProbeNodeReply)
  })
_sym_db.RegisterMessage(ProbeNodeReply)

ProbePayload = _reflection.GeneratedProtocolMessageType('ProbePayload', (_message.Message,), {
  'DESCRIPTOR' : _PROBEPAYLOAD,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ProbePayload)
  })
_sym_db.RegisterMessage(ProbePayload)

EdgePayload = _reflection.GeneratedProtocolMessageType('EdgePayload', (_message.Message,), {

  'GenericNode' : _reflection.GeneratedProtocolMessageType('GenericNode', (_message.Message,), {
    'DESCRIPTOR' : _EDGEPAYLOAD_GENERICNODE,
    '__module__' : 'common_pb2'
    # @@protoc_insertion_point(class_scope:allego.EdgePayload.GenericNode)
    })
  ,
  'DESCRIPTOR' : _EDGEPAYLOAD,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.EdgePayload)
  })
_sym_db.RegisterMessage(EdgePayload)
_sym_db.RegisterMessage(EdgePayload.GenericNode)

WorldEdgeRequest = _reflection.GeneratedProtocolMessageType('WorldEdgeRequest', (_message.Message,), {
  'DESCRIPTOR' : _WORLDEDGEREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.WorldEdgeRequest)
  })
_sym_db.RegisterMessage(WorldEdgeRequest)

WorldEdgeReply = _reflection.GeneratedProtocolMessageType('WorldEdgeReply', (_message.Message,), {
  'DESCRIPTOR' : _WORLDEDGEREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.WorldEdgeReply)
  })
_sym_db.RegisterMessage(WorldEdgeReply)

QueryWorldRequest = _reflection.GeneratedProtocolMessageType('QueryWorldRequest', (_message.Message,), {
  'DESCRIPTOR' : _QUERYWORLDREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.QueryWorldRequest)
  })
_sym_db.RegisterMessage(QueryWorldRequest)

QueryWorldRec = _reflection.GeneratedProtocolMessageType('QueryWorldRec', (_message.Message,), {
  'DESCRIPTOR' : _QUERYWORLDREC,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.QueryWorldRec)
  })
_sym_db.RegisterMessage(QueryWorldRec)

QueryWorldReply = _reflection.GeneratedProtocolMessageType('QueryWorldReply', (_message.Message,), {
  'DESCRIPTOR' : _QUERYWORLDREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.QueryWorldReply)
  })
_sym_db.RegisterMessage(QueryWorldReply)

HighLowPassTransformParams = _reflection.GeneratedProtocolMessageType('HighLowPassTransformParams', (_message.Message,), {
  'DESCRIPTOR' : _HIGHLOWPASSTRANSFORMPARAMS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.HighLowPassTransformParams)
  })
_sym_db.RegisterMessage(HighLowPassTransformParams)

BandTransformParams = _reflection.GeneratedProtocolMessageType('BandTransformParams', (_message.Message,), {
  'DESCRIPTOR' : _BANDTRANSFORMPARAMS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.BandTransformParams)
  })
_sym_db.RegisterMessage(BandTransformParams)

NotchTransformParams = _reflection.GeneratedProtocolMessageType('NotchTransformParams', (_message.Message,), {
  'DESCRIPTOR' : _NOTCHTRANSFORMPARAMS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.NotchTransformParams)
  })
_sym_db.RegisterMessage(NotchTransformParams)

CARTransformParams = _reflection.GeneratedProtocolMessageType('CARTransformParams', (_message.Message,), {
  'DESCRIPTOR' : _CARTRANSFORMPARAMS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.CARTransformParams)
  })
_sym_db.RegisterMessage(CARTransformParams)

VirtualRefTransformParams = _reflection.GeneratedProtocolMessageType('VirtualRefTransformParams', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALREFTRANSFORMPARAMS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.VirtualRefTransformParams)
  })
_sym_db.RegisterMessage(VirtualRefTransformParams)

PairedRefTransformParams = _reflection.GeneratedProtocolMessageType('PairedRefTransformParams', (_message.Message,), {
  'DESCRIPTOR' : _PAIREDREFTRANSFORMPARAMS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.PairedRefTransformParams)
  })
_sym_db.RegisterMessage(PairedRefTransformParams)

DataSourceSinkTransformParams = _reflection.GeneratedProtocolMessageType('DataSourceSinkTransformParams', (_message.Message,), {
  'DESCRIPTOR' : _DATASOURCESINKTRANSFORMPARAMS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.DataSourceSinkTransformParams)
  })
_sym_db.RegisterMessage(DataSourceSinkTransformParams)

SliceTimeTransformParams = _reflection.GeneratedProtocolMessageType('SliceTimeTransformParams', (_message.Message,), {
  'DESCRIPTOR' : _SLICETIMETRANSFORMPARAMS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SliceTimeTransformParams)
  })
_sym_db.RegisterMessage(SliceTimeTransformParams)

SliceChannelsTransformParams = _reflection.GeneratedProtocolMessageType('SliceChannelsTransformParams', (_message.Message,), {
  'DESCRIPTOR' : _SLICECHANNELSTRANSFORMPARAMS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SliceChannelsTransformParams)
  })
_sym_db.RegisterMessage(SliceChannelsTransformParams)

DownsampleTransformParams = _reflection.GeneratedProtocolMessageType('DownsampleTransformParams', (_message.Message,), {
  'DESCRIPTOR' : _DOWNSAMPLETRANSFORMPARAMS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.DownsampleTransformParams)
  })
_sym_db.RegisterMessage(DownsampleTransformParams)

Position = _reflection.GeneratedProtocolMessageType('Position', (_message.Message,), {
  'DESCRIPTOR' : _POSITION,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.Position)
  })
_sym_db.RegisterMessage(Position)

TransformNode = _reflection.GeneratedProtocolMessageType('TransformNode', (_message.Message,), {
  'DESCRIPTOR' : _TRANSFORMNODE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.TransformNode)
  })
_sym_db.RegisterMessage(TransformNode)

TransformEdge = _reflection.GeneratedProtocolMessageType('TransformEdge', (_message.Message,), {
  'DESCRIPTOR' : _TRANSFORMEDGE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.TransformEdge)
  })
_sym_db.RegisterMessage(TransformEdge)

Protocol = _reflection.GeneratedProtocolMessageType('Protocol', (_message.Message,), {
  'DESCRIPTOR' : _PROTOCOL,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.Protocol)
  })
_sym_db.RegisterMessage(Protocol)

ProtocolRequest = _reflection.GeneratedProtocolMessageType('ProtocolRequest', (_message.Message,), {
  'DESCRIPTOR' : _PROTOCOLREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ProtocolRequest)
  })
_sym_db.RegisterMessage(ProtocolRequest)

RenameProtocolRequest = _reflection.GeneratedProtocolMessageType('RenameProtocolRequest', (_message.Message,), {
  'DESCRIPTOR' : _RENAMEPROTOCOLREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.RenameProtocolRequest)
  })
_sym_db.RegisterMessage(RenameProtocolRequest)

GetAllProtocolsReply = _reflection.GeneratedProtocolMessageType('GetAllProtocolsReply', (_message.Message,), {
  'DESCRIPTOR' : _GETALLPROTOCOLSREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.GetAllProtocolsReply)
  })
_sym_db.RegisterMessage(GetAllProtocolsReply)

ApplyProtocolProgress = _reflection.GeneratedProtocolMessageType('ApplyProtocolProgress', (_message.Message,), {
  'DESCRIPTOR' : _APPLYPROTOCOLPROGRESS,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ApplyProtocolProgress)
  })
_sym_db.RegisterMessage(ApplyProtocolProgress)

SpikeSorterSetParamRequest = _reflection.GeneratedProtocolMessageType('SpikeSorterSetParamRequest', (_message.Message,), {
  'DESCRIPTOR' : _SPIKESORTERSETPARAMREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SpikeSorterSetParamRequest)
  })
_sym_db.RegisterMessage(SpikeSorterSetParamRequest)

SpikeSorterParamCommandRecord = _reflection.GeneratedProtocolMessageType('SpikeSorterParamCommandRecord', (_message.Message,), {
  'DESCRIPTOR' : _SPIKESORTERPARAMCOMMANDRECORD,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.SpikeSorterParamCommandRecord)
  })
_sym_db.RegisterMessage(SpikeSorterParamCommandRecord)

WrangleRequest = _reflection.GeneratedProtocolMessageType('WrangleRequest', (_message.Message,), {
  'DESCRIPTOR' : _WRANGLEREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.WrangleRequest)
  })
_sym_db.RegisterMessage(WrangleRequest)

WrangleSpec = _reflection.GeneratedProtocolMessageType('WrangleSpec', (_message.Message,), {
  'DESCRIPTOR' : _WRANGLESPEC,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.WrangleSpec)
  })
_sym_db.RegisterMessage(WrangleSpec)

WrangleImport = _reflection.GeneratedProtocolMessageType('WrangleImport', (_message.Message,), {
  'DESCRIPTOR' : _WRANGLEIMPORT,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.WrangleImport)
  })
_sym_db.RegisterMessage(WrangleImport)

WrangleImportVexSpikesSim = _reflection.GeneratedProtocolMessageType('WrangleImportVexSpikesSim', (_message.Message,), {
  'DESCRIPTOR' : _WRANGLEIMPORTVEXSPIKESSIM,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.WrangleImportVexSpikesSim)
  })
_sym_db.RegisterMessage(WrangleImportVexSpikesSim)

WrangleFileDesc = _reflection.GeneratedProtocolMessageType('WrangleFileDesc', (_message.Message,), {
  'DESCRIPTOR' : _WRANGLEFILEDESC,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.WrangleFileDesc)
  })
_sym_db.RegisterMessage(WrangleFileDesc)

WrangleMerge = _reflection.GeneratedProtocolMessageType('WrangleMerge', (_message.Message,), {
  'DESCRIPTOR' : _WRANGLEMERGE,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.WrangleMerge)
  })
_sym_db.RegisterMessage(WrangleMerge)

WrangleMergeVexSpikesView = _reflection.GeneratedProtocolMessageType('WrangleMergeVexSpikesView', (_message.Message,), {
  'DESCRIPTOR' : _WRANGLEMERGEVEXSPIKESVIEW,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.WrangleMergeVexSpikesView)
  })
_sym_db.RegisterMessage(WrangleMergeVexSpikesView)

WrangleMergeVexSpikesViewSpec = _reflection.GeneratedProtocolMessageType('WrangleMergeVexSpikesViewSpec', (_message.Message,), {
  'DESCRIPTOR' : _WRANGLEMERGEVEXSPIKESVIEWSPEC,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.WrangleMergeVexSpikesViewSpec)
  })
_sym_db.RegisterMessage(WrangleMergeVexSpikesViewSpec)

DACStreamRequest = _reflection.GeneratedProtocolMessageType('DACStreamRequest', (_message.Message,), {
  'DESCRIPTOR' : _DACSTREAMREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.DACStreamRequest)
  })
_sym_db.RegisterMessage(DACStreamRequest)

EventViewerConfig = _reflection.GeneratedProtocolMessageType('EventViewerConfig', (_message.Message,), {
  'DESCRIPTOR' : _EVENTVIEWERCONFIG,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.EventViewerConfig)
  })
_sym_db.RegisterMessage(EventViewerConfig)

EventViewerID = _reflection.GeneratedProtocolMessageType('EventViewerID', (_message.Message,), {
  'DESCRIPTOR' : _EVENTVIEWERID,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.EventViewerID)
  })
_sym_db.RegisterMessage(EventViewerID)

GetEventViewerEventRequest = _reflection.GeneratedProtocolMessageType('GetEventViewerEventRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETEVENTVIEWEREVENTREQUEST,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.GetEventViewerEventRequest)
  })
_sym_db.RegisterMessage(GetEventViewerEventRequest)

EventViewerEventDesc = _reflection.GeneratedProtocolMessageType('EventViewerEventDesc', (_message.Message,), {
  'DESCRIPTOR' : _EVENTVIEWEREVENTDESC,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.EventViewerEventDesc)
  })
_sym_db.RegisterMessage(EventViewerEventDesc)

EventViewerEvent = _reflection.GeneratedProtocolMessageType('EventViewerEvent', (_message.Message,), {
  'DESCRIPTOR' : _EVENTVIEWEREVENT,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.EventViewerEvent)
  })
_sym_db.RegisterMessage(EventViewerEvent)

ListEventViewerEventsReply = _reflection.GeneratedProtocolMessageType('ListEventViewerEventsReply', (_message.Message,), {
  'DESCRIPTOR' : _LISTEVENTVIEWEREVENTSREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ListEventViewerEventsReply)
  })
_sym_db.RegisterMessage(ListEventViewerEventsReply)

ListEventViewersReply = _reflection.GeneratedProtocolMessageType('ListEventViewersReply', (_message.Message,), {
  'DESCRIPTOR' : _LISTEVENTVIEWERSREPLY,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:allego.ListEventViewersReply)
  })
_sym_db.RegisterMessage(ListEventViewersReply)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\023internal/radix/grpc'
  _GETWORKSPACEREPLY_WORKSPACEDESCENTRY._options = None
  _GETWORKSPACEREPLY_WORKSPACEDESCENTRY._serialized_options = b'8\001'
  _SERVERSPEC_SERVICEENTRY._options = None
  _SERVERSPEC_SERVICEENTRY._serialized_options = b'8\001'
  _SIGNALGROUPUNITS_UNITSENTRY._options = None
  _SIGNALGROUPUNITS_UNITSENTRY._serialized_options = b'8\001'
  _UPDATESIGNALGROUPREQUEST.fields_by_name['ntvChanIdx']._options = None
  _UPDATESIGNALGROUPREQUEST.fields_by_name['ntvChanIdx']._serialized_options = b'\020\001'
  _SETKPITHRESHOLDREQUEST.fields_by_name['ntvChanIdx']._options = None
  _SETKPITHRESHOLDREQUEST.fields_by_name['ntvChanIdx']._serialized_options = b'\020\001'
  _SETKPIEVENTDETECTREQUEST.fields_by_name['ntvChanIdx']._options = None
  _SETKPIEVENTDETECTREQUEST.fields_by_name['ntvChanIdx']._serialized_options = b'\020\001'
  _SETKPIEVENTSHADOWREQUEST.fields_by_name['ntvChanIdx']._options = None
  _SETKPIEVENTSHADOWREQUEST.fields_by_name['ntvChanIdx']._serialized_options = b'\020\001'
  _SETKPIEVENTWINDOWREQUEST.fields_by_name['ntvChanIdx']._options = None
  _SETKPIEVENTWINDOWREQUEST.fields_by_name['ntvChanIdx']._serialized_options = b'\020\001'
  _RADIXFILETYPES._serialized_start=21268
  _RADIXFILETYPES._serialized_end=21508
  _SIGNALTYPE._serialized_start=21510
  _SIGNALTYPE._serialized_end=21559
  _PORT._serialized_start=21561
  _PORT._serialized_end=21623
  _WORKSPACEAPP._serialized_start=21625
  _WORKSPACEAPP._serialized_end=21675
  _WORKSPACECOMMANDS._serialized_start=21678
  _WORKSPACECOMMANDS._serialized_end=21838
  _GETWORKSPACECOMMANDS._serialized_start=21840
  _GETWORKSPACECOMMANDS._serialized_end=21907
  _RADIENSSERVERTYPE._serialized_start=21909
  _RADIENSSERVERTYPE._serialized_end=21965
  _GRPCSERVICETYPE._serialized_start=21968
  _GRPCSERVICETYPE._serialized_end=22118
  _DEVDATASETTYPE._serialized_start=22120
  _DEVDATASETTYPE._serialized_end=22183
  _DATASOURCESORT._serialized_start=22185
  _DATASOURCESORT._serialized_end=22273
  _SIGNALGROUPTYPE._serialized_start=22275
  _SIGNALGROUPTYPE._serialized_end=22321
  _DSPTYPE._serialized_start=22324
  _DSPTYPE._serialized_end=22453
  _FILTERSTAGE._serialized_start=22455
  _FILTERSTAGE._serialized_end=22512
  _FEATURELICENSE._serialized_start=22515
  _FEATURELICENSE._serialized_end=22854
  _KPIMETRICSMODE._serialized_start=22856
  _KPIMETRICSMODE._serialized_end=22951
  _KPIMETRICSENUM._serialized_start=22954
  _KPIMETRICSENUM._serialized_end=23719
  _KPIMETRICSSTATSENUM._serialized_start=23722
  _KPIMETRICSSTATSENUM._serialized_end=23861
  _KPIBUNDLEPACKETSSTATSENUM._serialized_start=23864
  _KPIBUNDLEPACKETSSTATSENUM._serialized_end=24184
  _KPIBUNDLENAME._serialized_start=24187
  _KPIBUNDLENAME._serialized_end=24338
  _TIMERANGESELMODE._serialized_start=24340
  _TIMERANGESELMODE._serialized_end=24410
  _KPITHRESHOLDNAME._serialized_start=24412
  _KPITHRESHOLDNAME._serialized_end=24478
  _KPIWINDOWDNAME._serialized_start=24480
  _KPIWINDOWDNAME._serialized_end=24544
  _OUTFITTERCOMPONENTTYPE._serialized_start=24546
  _OUTFITTERCOMPONENTTYPE._serialized_end=24624
  _WORLDNODELABEL._serialized_start=24626
  _WORLDNODELABEL._serialized_end=24751
  _WORLDEDGELABEL._serialized_start=24753
  _WORLDEDGELABEL._serialized_end=24792
  _WORLDEDGEDIRECTION._serialized_start=24794
  _WORLDEDGEDIRECTION._serialized_end=24890
  _USERROLETYPE._serialized_start=24893
  _USERROLETYPE._serialized_end=25052
  _MANAGENODECMD._serialized_start=25054
  _MANAGENODECMD._serialized_end=25125
  _WORLDQUERYCMD._serialized_start=25128
  _WORLDQUERYCMD._serialized_end=25360
  _TRANSFORMNODETYPE._serialized_start=25363
  _TRANSFORMNODETYPE._serialized_end=25603
  _SPIKESORTERPARAMCOMMAND._serialized_start=25606
  _SPIKESORTERPARAMCOMMAND._serialized_end=26159
  _WRANGLEMODE._serialized_start=26161
  _WRANGLEMODE._serialized_end=26251
  _RADIXENVIRONMENT._serialized_start=24
  _RADIXENVIRONMENT._serialized_end=81
  _STANDARDREQUEST._serialized_start=83
  _STANDARDREQUEST._serialized_end=100
  _STANDARDREPLY._serialized_start=102
  _STANDARDREPLY._serialized_end=133
  _WORKSPACEDESCRIPTOR._serialized_start=136
  _WORKSPACEDESCRIPTOR._serialized_end=322
  _WORKSPACECONTROLREQUEST._serialized_start=325
  _WORKSPACECONTROLREQUEST._serialized_end=509
  _GETWORKSPACEREQUEST._serialized_start=512
  _GETWORKSPACEREQUEST._serialized_end=723
  _GETWORKSPACEREPLY._serialized_start=726
  _GETWORKSPACEREPLY._serialized_end=897
  _GETWORKSPACEREPLY_WORKSPACEDESCENTRY._serialized_start=816
  _GETWORKSPACEREPLY_WORKSPACEDESCENTRY._serialized_end=897
  _GETRADIENSSERVERSREQUEST._serialized_start=899
  _GETRADIENSSERVERSREQUEST._serialized_end=995
  _SERVERSPEC._serialized_start=998
  _SERVERSPEC._serialized_end=1277
  _SERVERSPEC_GRPCSERVICE._serialized_start=1139
  _SERVERSPEC_GRPCSERVICE._serialized_end=1166
  _SERVERSPEC_SPAWNEDPROCESS._serialized_start=1168
  _SERVERSPEC_SPAWNEDPROCESS._serialized_end=1197
  _SERVERSPEC_SERVICEENTRY._serialized_start=1199
  _SERVERSPEC_SERVICEENTRY._serialized_end=1277
  _RADIENSSERVERSREPLY._serialized_start=1279
  _RADIENSSERVERSREPLY._serialized_end=1385
  _SIGNALGROUPIDREQUEST._serialized_start=1387
  _SIGNALGROUPIDREQUEST._serialized_end=1432
  _SIGNALMAP._serialized_start=1435
  _SIGNALMAP._serialized_end=1631
  _GPIOCHANNELCOUNT._serialized_start=1633
  _GPIOCHANNELCOUNT._serialized_end=1694
  _PORTCHANNELCOUNT._serialized_start=1696
  _PORTCHANNELCOUNT._serialized_end=1764
  _SETPORTREQUEST._serialized_start=1766
  _SETPORTREQUEST._serialized_end=1847
  _HDSNAPSHOTREQUEST._serialized_start=1850
  _HDSNAPSHOTREQUEST._serialized_end=2204
  _HDSNAPSHOTREQUEST_SELECTEDSIGNALS._serialized_start=2166
  _HDSNAPSHOTREQUEST_SELECTEDSIGNALS._serialized_end=2204
  _HDSNAPSHOTMETA._serialized_start=2206
  _HDSNAPSHOTMETA._serialized_end=2299
  _HDSNAPSHOT._serialized_start=2302
  _HDSNAPSHOT._serialized_end=2589
  _GETSIGNALSREQUEST._serialized_start=2592
  _GETSIGNALSREQUEST._serialized_end=2871
  _GETSIGNALSREQUEST_GETSIGSPARAMS._serialized_start=2694
  _GETSIGNALSREQUEST_GETSIGSPARAMS._serialized_end=2871
  _RAWSIGNALS._serialized_start=2873
  _RAWSIGNALS._serialized_end=2933
  _LISTSENSORSPECSREPLY._serialized_start=2936
  _LISTSENSORSPECSREPLY._serialized_end=3197
  _LISTSENSORSPECSREPLY_SPECWITHCHANNELCOUNT._serialized_start=3139
  _LISTSENSORSPECSREPLY_SPECWITHCHANNELCOUNT._serialized_end=3197
  _LISTDATASOURCESREQUEST._serialized_start=3199
  _LISTDATASOURCESREQUEST._serialized_end=3282
  _GETSIGNALGROUPIDSREPLY._serialized_start=3284
  _GETSIGNALGROUPIDSREPLY._serialized_end=3332
  _DATASOURCE._serialized_start=3335
  _DATASOURCE._serialized_end=3510
  _FILEDESCRIPTOR._serialized_start=3512
  _FILEDESCRIPTOR._serialized_end=3623
  _TIMESPEC._serialized_start=3626
  _TIMESPEC._serialized_end=3834
  _TIMESPEC_TIMERANGEL._serialized_start=3748
  _TIMESPEC_TIMERANGEL._serialized_end=3779
  _TIMESPEC_TIMESTAMPRANGEL._serialized_start=3781
  _TIMESPEC_TIMESTAMPRANGEL._serialized_end=3822
  _SIGNALSPEC._serialized_start=3837
  _SIGNALSPEC._serialized_end=4027
  _SIGNALSPEC_SITENUML._serialized_start=3953
  _SIGNALSPEC_SITENUML._serialized_end=3980
  _SIGNALSPEC_NTVCHANIDXL._serialized_start=3982
  _SIGNALSPEC_NTVCHANIDXL._serialized_end=4015
  _CHANNELRECORD._serialized_start=4030
  _CHANNELRECORD._serialized_end=4791
  _XYCOORD._serialized_start=4793
  _XYCOORD._serialized_end=4824
  _XYZCOORD._serialized_start=4826
  _XYZCOORD._serialized_end=4869
  _SENSOR._serialized_start=4872
  _SENSOR._serialized_end=5194
  _SENSOR_WIREFRAME._serialized_start=5085
  _SENSOR_WIREFRAME._serialized_end=5194
  _SENSORPORTSPEC._serialized_start=5197
  _SENSORPORTSPEC._serialized_end=5477
  _SIGNALGROUPUNITS._serialized_start=5479
  _SIGNALGROUPUNITS._serialized_end=5595
  _SIGNALGROUPUNITS_UNITSENTRY._serialized_start=5551
  _SIGNALGROUPUNITS_UNITSENTRY._serialized_end=5595
  _SIGNALGROUP._serialized_start=5598
  _SIGNALGROUP._serialized_end=5833
  _CREATESIGNALGROUPREQUEST._serialized_start=5836
  _CREATESIGNALGROUPREQUEST._serialized_end=5971
  _SUBOPSORT._serialized_start=5973
  _SUBOPSORT._serialized_end=6088
  _SUBOPSORT_SORTFIELD._serialized_start=6029
  _SUBOPSORT_SORTFIELD._serialized_end=6088
  _UPDATESIGNALGROUPREQUEST._serialized_start=6091
  _UPDATESIGNALGROUPREQUEST._serialized_end=6493
  _UPDATESIGNALGROUPREQUEST_OPERATION._serialized_start=6374
  _UPDATESIGNALGROUPREQUEST_OPERATION._serialized_end=6440
  _UPDATESIGNALGROUPREQUEST_SUBOPERATION._serialized_start=6442
  _UPDATESIGNALGROUPREQUEST_SUBOPERATION._serialized_end=6477
  _LICENSESTATUS._serialized_start=6495
  _LICENSESTATUS._serialized_end=6510
  _SETDSPGROUPREQUEST._serialized_start=6512
  _SETDSPGROUPREQUEST._serialized_end=6629
  _DSPPARAMS._serialized_start=6632
  _DSPPARAMS._serialized_end=7002
  _DSPPARAMS_FREQSPECBAND._serialized_start=6941
  _DSPPARAMS_FREQSPECBAND._serialized_end=6990
  _DSPGROUP._serialized_start=7005
  _DSPGROUP._serialized_end=7138
  _SETSENSORREQUEST._serialized_start=7140
  _SETSENSORREQUEST._serialized_end=7247
  _SENSORPOSITIONTCS._serialized_start=7249
  _SENSORPOSITIONTCS._serialized_end=7358
  _SETSENSORPOSITIONTCSREQUEST._serialized_start=7360
  _SETSENSORPOSITIONTCSREQUEST._serialized_end=7485
  _SITEPOSITIONTCS._serialized_start=7487
  _SITEPOSITIONTCS._serialized_end=7557
  _SETSITEPOSITIONSTCSREQUEST._serialized_start=7559
  _SETSITEPOSITIONSTCSREQUEST._serialized_end=7686
  _FEATURESTARTSTOPREQUEST._serialized_start=7688
  _FEATURESTARTSTOPREQUEST._serialized_end=7777
  _PRIVACYREPLY._serialized_start=7779
  _PRIVACYREPLY._serialized_end=7812
  _SETPRIVACYREQUEST._serialized_start=7814
  _SETPRIVACYREQUEST._serialized_end=7852
  _DENSEMATRIX._serialized_start=7854
  _DENSEMATRIX._serialized_end=7909
  _KPIMETRICID._serialized_start=7911
  _KPIMETRICID._serialized_end=8000
  _TIMERANGE._serialized_start=8002
  _TIMERANGE._serialized_end=8089
  _BUNDLEREQ._serialized_start=8092
  _BUNDLEREQ._serialized_end=8248
  _KPIMETRICSREQ._serialized_start=8250
  _KPIMETRICSREQ._serialized_end=8363
  _KPIMETRICSDATA._serialized_start=8366
  _KPIMETRICSDATA._serialized_end=8753
  _KPIMETRICSDATA_METRICSTATS._serialized_start=8688
  _KPIMETRICSDATA_METRICSTATS._serialized_end=8753
  _KPIBUNDLEPACKETMETRICS._serialized_start=8755
  _KPIBUNDLEPACKETMETRICS._serialized_end=8874
  _KPIMETRICS._serialized_start=8876
  _KPIMETRICS._serialized_end=8959
  _KPICONTROLREQUEST._serialized_start=8961
  _KPICONTROLREQUEST._serialized_end=9062
  _SETKPIUPDATEPERIODREQUEST._serialized_start=9064
  _SETKPIUPDATEPERIODREQUEST._serialized_end=9173
  _SETKPITHRESHOLDREQUEST._serialized_start=9176
  _SETKPITHRESHOLDREQUEST._serialized_end=9479
  _SETKPIEVENTDETECTREQUEST._serialized_start=9482
  _SETKPIEVENTDETECTREQUEST._serialized_end=9694
  _SETKPIEVENTSHADOWREQUEST._serialized_start=9697
  _SETKPIEVENTSHADOWREQUEST._serialized_end=9864
  _SETKPIEVENTWINDOWREQUEST._serialized_start=9867
  _SETKPIEVENTWINDOWREQUEST._serialized_end=10051
  _GETKPISTATUSREQUEST._serialized_start=10053
  _GETKPISTATUSREQUEST._serialized_end=10134
  _KPISTATUSREPLY._serialized_start=10137
  _KPISTATUSREPLY._serialized_end=10437
  _SIGKPIPARAMRECORD._serialized_start=10440
  _SIGKPIPARAMRECORD._serialized_end=10798
  _ANNOTATEBUNDLE._serialized_start=10800
  _ANNOTATEBUNDLE._serialized_end=10874
  _PROJECTMETADATA._serialized_start=10876
  _PROJECTMETADATA._serialized_end=10969
  _SENSOREXTENDEDMETADATA._serialized_start=10971
  _SENSOREXTENDEDMETADATA._serialized_end=11022
  _GONUMMATRIXLIST._serialized_start=11024
  _GONUMMATRIXLIST._serialized_end=11061
  _RADIXMATRIXLIST._serialized_start=11063
  _RADIXMATRIXLIST._serialized_end=11117
  _RADIXMATRIX._serialized_start=11119
  _RADIXMATRIX._serialized_end=11161
  _RADIXSIGNALSLIST._serialized_start=11163
  _RADIXSIGNALSLIST._serialized_end=11219
  _RADIXSIGNALS._serialized_start=11222
  _RADIXSIGNALS._serialized_end=11391
  _VECTORSTRING._serialized_start=11393
  _VECTORSTRING._serialized_end=11418
  _VECTORFLOAT64._serialized_start=11420
  _VECTORFLOAT64._serialized_end=11446
  _VECTORSLICEFLOAT64._serialized_start=11448
  _VECTORSLICEFLOAT64._serialized_end=11519
  _LOGSYSKPISTATUSREPLY._serialized_start=11522
  _LOGSYSKPISTATUSREPLY._serialized_end=11872
  _KPICACHE._serialized_start=11875
  _KPICACHE._serialized_end=12255
  _LOGSYSKPITAILREPLY._serialized_start=12258
  _LOGSYSKPITAILREPLY._serialized_end=12636
  _KPIPORTINFO._serialized_start=12638
  _KPIPORTINFO._serialized_end=12689
  _KPITAILROWS._serialized_start=12692
  _KPITAILROWS._serialized_end=13064
  _WAREHOUSEHEALTHCHECKSPEC._serialized_start=13066
  _WAREHOUSEHEALTHCHECKSPEC._serialized_end=13108
  _OUTFITTERGETDEVICEREQUEST._serialized_start=13110
  _OUTFITTERGETDEVICEREQUEST._serialized_end=13150
  _SENSORCOMPREQUEST._serialized_start=13153
  _SENSORCOMPREQUEST._serialized_end=13311
  _REGISTERSENSORCOMPREQUEST._serialized_start=13313
  _REGISTERSENSORCOMPREQUEST._serialized_end=13435
  _SAVESENSORCOMPINSTANCEREQUEST._serialized_start=13438
  _SAVESENSORCOMPINSTANCEREQUEST._serialized_end=13584
  _PROBEDESC._serialized_start=13586
  _PROBEDESC._serialized_end=13624
  _HEADSTAGEDESC._serialized_start=13626
  _HEADSTAGEDESC._serialized_end=13668
  _GETSENSORCOMPREPLY._serialized_start=13670
  _GETSENSORCOMPREPLY._serialized_end=13766
  _PROBESPEC._serialized_start=13768
  _PROBESPEC._serialized_end=13888
  _HEADSTAGESPEC._serialized_start=13891
  _HEADSTAGESPEC._serialized_end=14027
  _PROBEMODEL._serialized_start=14030
  _PROBEMODEL._serialized_end=14620
  _PROBEMODEL_PROBESITEDESC._serialized_start=14267
  _PROBEMODEL_PROBESITEDESC._serialized_end=14489
  _PROBEMODEL_PROBEWIREFRAME._serialized_start=14491
  _PROBEMODEL_PROBEWIREFRAME._serialized_end=14585
  _PROBEMODEL_PROBEPTXY._serialized_start=14587
  _PROBEMODEL_PROBEPTXY._serialized_end=14620
  _PROBEMETADATA._serialized_start=14622
  _PROBEMETADATA._serialized_end=14717
  _HEADSTAGEMODEL._serialized_start=14720
  _HEADSTAGEMODEL._serialized_end=14852
  _HEADSTAGEMODEL_HEADSTAGEROW._serialized_start=14801
  _HEADSTAGEMODEL_HEADSTAGEROW._serialized_end=14852
  _HEADSTAGEMETADATA._serialized_start=14854
  _HEADSTAGEMETADATA._serialized_end=14873
  _USERPROFILE._serialized_start=14875
  _USERPROFILE._serialized_end=14928
  _GETCURRENTPROFILEREPLY._serialized_start=14930
  _GETCURRENTPROFILEREPLY._serialized_end=14996
  _GETALLPROFILESREPLY._serialized_start=14998
  _GETALLPROFILESREPLY._serialized_end=15062
  _SETCURRENTPROFILEREQUEST._serialized_start=15064
  _SETCURRENTPROFILEREQUEST._serialized_end=15109
  _MANAGENODEORGPAYLOAD._serialized_start=15112
  _MANAGENODEORGPAYLOAD._serialized_end=15248
  _MANAGENODEORGREQUEST._serialized_start=15250
  _MANAGENODEORGREQUEST._serialized_end=15355
  _MANAGENODEORGREPLY._serialized_start=15357
  _MANAGENODEORGREPLY._serialized_end=15440
  _MANAGENODELABPAYLOAD._serialized_start=15443
  _MANAGENODELABPAYLOAD._serialized_end=15605
  _MANAGENODELABREQUEST._serialized_start=15607
  _MANAGENODELABREQUEST._serialized_end=15712
  _MANAGENODELABREPLY._serialized_start=15714
  _MANAGENODELABREPLY._serialized_end=15797
  _MANAGENODEUSERPAYLOAD._serialized_start=15800
  _MANAGENODEUSERPAYLOAD._serialized_end=15953
  _MANAGENODEUSERREQUEST._serialized_start=15955
  _MANAGENODEUSERREQUEST._serialized_end=16062
  _MANAGENODEUSERREPLY._serialized_start=16064
  _MANAGENODEUSERREPLY._serialized_end=16149
  _CATALOGPROBEPAYLOAD._serialized_start=16151
  _CATALOGPROBEPAYLOAD._serialized_end=16205
  _PROBENODEREQUEST._serialized_start=16207
  _PROBENODEREQUEST._serialized_end=16300
  _PROBENODEREPLY._serialized_start=16302
  _PROBENODEREPLY._serialized_end=16357
  _PROBEPAYLOAD._serialized_start=16359
  _PROBEPAYLOAD._serialized_end=16406
  _EDGEPAYLOAD._serialized_start=16409
  _EDGEPAYLOAD._serialized_end=16702
  _EDGEPAYLOAD_GENERICNODE._serialized_start=16612
  _EDGEPAYLOAD_GENERICNODE._serialized_end=16702
  _WORLDEDGEREQUEST._serialized_start=16704
  _WORLDEDGEREQUEST._serialized_end=16760
  _WORLDEDGEREPLY._serialized_start=16762
  _WORLDEDGEREPLY._serialized_end=16778
  _QUERYWORLDREQUEST._serialized_start=16780
  _QUERYWORLDREQUEST._serialized_end=16849
  _QUERYWORLDREC._serialized_start=16852
  _QUERYWORLDREC._serialized_end=17082
  _QUERYWORLDREPLY._serialized_start=17084
  _QUERYWORLDREPLY._serialized_end=17141
  _HIGHLOWPASSTRANSFORMPARAMS._serialized_start=17143
  _HIGHLOWPASSTRANSFORMPARAMS._serialized_end=17190
  _BANDTRANSFORMPARAMS._serialized_start=17192
  _BANDTRANSFORMPARAMS._serialized_end=17258
  _NOTCHTRANSFORMPARAMS._serialized_start=17260
  _NOTCHTRANSFORMPARAMS._serialized_end=17330
  _CARTRANSFORMPARAMS._serialized_start=17332
  _CARTRANSFORMPARAMS._serialized_end=17352
  _VIRTUALREFTRANSFORMPARAMS._serialized_start=17354
  _VIRTUALREFTRANSFORMPARAMS._serialized_end=17404
  _PAIREDREFTRANSFORMPARAMS._serialized_start=17406
  _PAIREDREFTRANSFORMPARAMS._serialized_end=17481
  _DATASOURCESINKTRANSFORMPARAMS._serialized_start=17483
  _DATASOURCESINKTRANSFORMPARAMS._serialized_end=17588
  _SLICETIMETRANSFORMPARAMS._serialized_start=17590
  _SLICETIMETRANSFORMPARAMS._serialized_end=17652
  _SLICECHANNELSTRANSFORMPARAMS._serialized_start=17654
  _SLICECHANNELSTRANSFORMPARAMS._serialized_end=17705
  _DOWNSAMPLETRANSFORMPARAMS._serialized_start=17707
  _DOWNSAMPLETRANSFORMPARAMS._serialized_end=17756
  _POSITION._serialized_start=17758
  _POSITION._serialized_end=17790
  _TRANSFORMNODE._serialized_start=17793
  _TRANSFORMNODE._serialized_end=18522
  _TRANSFORMEDGE._serialized_start=18524
  _TRANSFORMEDGE._serialized_end=18583
  _PROTOCOL._serialized_start=18585
  _PROTOCOL._serialized_end=18701
  _PROTOCOLREQUEST._serialized_start=18703
  _PROTOCOLREQUEST._serialized_end=18740
  _RENAMEPROTOCOLREQUEST._serialized_start=18742
  _RENAMEPROTOCOLREQUEST._serialized_end=18808
  _GETALLPROTOCOLSREPLY._serialized_start=18810
  _GETALLPROTOCOLSREPLY._serialized_end=18869
  _APPLYPROTOCOLPROGRESS._serialized_start=18871
  _APPLYPROTOCOLPROGRESS._serialized_end=18950
  _SPIKESORTERSETPARAMREQUEST._serialized_start=18953
  _SPIKESORTERSETPARAMREQUEST._serialized_end=19125
  _SPIKESORTERPARAMCOMMANDRECORD._serialized_start=19128
  _SPIKESORTERPARAMCOMMANDRECORD._serialized_end=19423
  _WRANGLEREQUEST._serialized_start=19425
  _WRANGLEREQUEST._serialized_end=19511
  _WRANGLESPEC._serialized_start=19513
  _WRANGLESPEC._serialized_end=19602
  _WRANGLEIMPORT._serialized_start=19604
  _WRANGLEIMPORT._serialized_end=19676
  _WRANGLEIMPORTVEXSPIKESSIM._serialized_start=19678
  _WRANGLEIMPORTVEXSPIKESSIM._serialized_end=19781
  _WRANGLEFILEDESC._serialized_start=19783
  _WRANGLEFILEDESC._serialized_end=19850
  _WRANGLEMERGE._serialized_start=19852
  _WRANGLEMERGE._serialized_end=19924
  _WRANGLEMERGEVEXSPIKESVIEW._serialized_start=19927
  _WRANGLEMERGEVEXSPIKESVIEW._serialized_end=20230
  _WRANGLEMERGEVEXSPIKESVIEWSPEC._serialized_start=20233
  _WRANGLEMERGEVEXSPIKESVIEWSPEC._serialized_end=20425
  _DACSTREAMREQUEST._serialized_start=20427
  _DACSTREAMREQUEST._serialized_end=20501
  _EVENTVIEWERCONFIG._serialized_start=20504
  _EVENTVIEWERCONFIG._serialized_end=20726
  _EVENTVIEWERID._serialized_start=20728
  _EVENTVIEWERID._serialized_end=20789
  _GETEVENTVIEWEREVENTREQUEST._serialized_start=20791
  _GETEVENTVIEWEREVENTREQUEST._serialized_end=20859
  _EVENTVIEWEREVENTDESC._serialized_start=20861
  _EVENTVIEWEREVENTDESC._serialized_end=20950
  _EVENTVIEWEREVENT._serialized_start=20953
  _EVENTVIEWEREVENT._serialized_end=21096
  _LISTEVENTVIEWEREVENTSREPLY._serialized_start=21098
  _LISTEVENTVIEWEREVENTSREPLY._serialized_end=21195
  _LISTEVENTVIEWERSREPLY._serialized_start=21197
  _LISTEVENTVIEWERSREPLY._serialized_end=21265
# @@protoc_insertion_point(module_scope)
