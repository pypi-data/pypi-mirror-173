Metadata-Version: 2.1
Name: pyplatypus
Version: 0.1.0rc2
Summary: Set of tools for Computer Vision handling the object detection and image
Home-page: https://github.com/maju116/pyplatypus
Author: MichaÅ‚ Maj, Jakub Borkowski
Author-email: michalmaj116@gmail.com, jakub.borkowski@chionis.co
License: UNKNOWN
Project-URL: Bug Tracker, https://github.com/maju116/pyplatypus/issues
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: tensorflow (==2.9.1)
Requires-Dist: albumentations (==1.1.0)
Requires-Dist: Keras-Preprocessing (==1.1.2)
Requires-Dist: scikit-image (==0.19.1)
Requires-Dist: scikit-learn (==1.0.2)
Requires-Dist: scipy (==1.8.1)
Requires-Dist: tensorflow-estimator (==2.9.0)
Requires-Dist: pandas (==1.3.1)
Requires-Dist: numpy (==1.22.4)
Requires-Dist: tensorboard (==2.9.0)
Requires-Dist: PyYAML (==6.0)
Requires-Dist: pydicom (==2.2.0)
Requires-Dist: pydantic (==1.9.1)

# PyPlatypus

## Instalation

To install `pyplatypus` use command:

```commandline
pip install pyplatypus
```

See documentation at: [GitHub Pages](https://maju116.github.io/pyplatypus/).

## Development

To build and deploy your updated docs, use:
`mkodcs build`
Which will create site/ directory in the project folder. Then type in:
`mkdocs gh-deploy`
to automatically push the docs to GitHub Pages.

To build the package locally just move to its main directory run:
`pip install --use-feature=in-tree-build .`

Then it may be imported as any other package installed with the use of pip.

If you wish to create the source distribution (in the .egg format):
`python setup.py sdist`

To build a wheel run:
`python setup.py bdist_wheel --universal`

Important!
Before uploading the source distribution to PyPI test it using the TestPyPI using:
`twine upload --repository-url https://test.pypi.org/legacy/ source/package.tar.gz`

To upload all the distributions from a certain folder, for instance if you created
wheels aside from the archive source distribution, use this line:
`twine upload --repository-url https://test.pypi.org/legacy/ folder/*`

Then try installing from TestPyPI:
`pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple pyplatypus`

Only after testing it there should you proceed with the release:
`twine upload dist/*`

And then install your package!
`pip install pyplatypus`

Note!
Pip dependencies will be installed during the package build but there is one conda dependency that
needs to be installed by hand if you are planning to play around with the GPU.
`conda install -c conda-forge tensorflow==2.9.1`

We are working on creating the deployment script for this :)



